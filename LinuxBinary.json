[
    {
        "folder_name": "CVE-2024-47673",
        "files": [
            {
                "filename": "ops.iwl_mvm_stop_device.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "mov     ebx, eax",
                    "7": "lea     edi, [eax+880h]",
                    "8": "lock and byte ptr [eax+5Ch], 0BFh",
                    "9": "xor     edx, edx",
                    "10": "call    iwl_mvm_pause_tcm",
                    "11": "mov     eax, edi",
                    "12": "call    iwl_fw_dbg_stop_sync",
                    "13": "mov     esi, [ebx+4]",
                    "14": "call    __cond_resched",
                    "15": "mov     eax, [esi]",
                    "16": "mov     edx, [eax+10h]",
                    "17": "mov     eax, esi",
                    "18": "call    __x86_indirect_thunk_edx",
                    "19": "mov     eax, edi",
                    "20": "mov     dword ptr [esi+14h], 0",
                    "21": "call    iwl_free_fw_paging",
                    "22": "mov     byte ptr [ebx+0BF0h], 0FFh",
                    "23": "pop     ebx",
                    "24": "pop     esi",
                    "25": "pop     edi",
                    "26": "pop     ebp",
                    "27": "retn"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x20+var_s0]!",
                    "3": "ADD             X1, X0, #0xB0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#var_s10]",
                    "6": "MOV             X19, X0",
                    "7": "ADD             X20, X0, #0xE88",
                    "8": "MOV             X0, #6",
                    "9": "BL              clear_bit",
                    "10": "MOV             W1, #0",
                    "11": "MOV             X0, X19",
                    "12": "BL              iwl_mvm_pause_tcm",
                    "13": "MOV             X0, X20",
                    "14": "BL              iwl_fw_dbg_stop_sync",
                    "15": "LDR             X19, [X19,#8]",
                    "16": "BL              __cond_resched",
                    "17": "LDR             X0, [X19]",
                    "18": "LDR             X1, [X0,#0x20]",
                    "19": "MOV             X0, X19",
                    "20": "BLR             X1",
                    "21": "STR             WZR, [X19,#0x28]",
                    "22": "MOV             X0, X20",
                    "23": "BL              iwl_free_fw_paging",
                    "24": "MOV             W0, #0xFFFFFFFF",
                    "25": "STRB            W0, [X20,#0x630]",
                    "26": "LDP             X19, X20, [SP,#var_s10]",
                    "27": "LDP             X29, X30, [SP+var_s0],#0x20",
                    "28": "AUTIASP",
                    "29": "RET"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    rbx",
                    "4": "mov     rbx, rdi",
                    "5": "lea     r14, [rdi+0E88h]",
                    "6": "lock and byte ptr [rdi+0B0h], 0BFh",
                    "7": "xor     esi, esi",
                    "8": "call    iwl_mvm_pause_tcm; PIC mode",
                    "9": "mov     rdi, r14",
                    "10": "call    iwl_fw_dbg_stop_sync; PIC mode",
                    "11": "mov     r15, [rbx+8]",
                    "12": "call    __cond_resched; PIC mode",
                    "13": "mov     rax, [r15]",
                    "14": "mov     r11, [rax+20h]",
                    "15": "mov     rdi, r15",
                    "16": "call    __x86_indirect_thunk_r11; PIC mode",
                    "17": "mov     dword ptr [r15+28h], 0",
                    "18": "mov     rdi, r14",
                    "19": "call    iwl_free_fw_paging; PIC mode",
                    "20": "mov     byte ptr [rbx+14B8h], 0FFh",
                    "21": "pop     rbx",
                    "22": "pop     r14",
                    "23": "pop     r15",
                    "24": "retn"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "lea     r12, [rdi+0E88h]",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "lock and byte ptr [rdi+0B0h], 0BFh",
                    "7": "xor     esi, esi",
                    "8": "call    iwl_mvm_pause_tcm; PIC mode",
                    "9": "mov     rdi, r12",
                    "10": "call    iwl_fw_dbg_stop_sync; PIC mode",
                    "11": "mov     rbp, [rbx+8]",
                    "12": "call    __cond_resched; PIC mode",
                    "13": "mov     rax, [rbp+0]",
                    "14": "mov     rdi, rbp",
                    "15": "mov     rax, [rax+20h]",
                    "16": "call    __x86_indirect_thunk_rax; PIC mode",
                    "17": "mov     dword ptr [rbp+28h], 0",
                    "18": "mov     rdi, r12",
                    "19": "call    iwl_free_fw_paging; PIC mode",
                    "20": "mov     byte ptr [rbx+14B8h], 0FFh",
                    "21": "pop     rbx",
                    "22": "pop     rbp",
                    "23": "pop     r12",
                    "24": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r12",
                    "2": "lea     r12, [rdi+0E88h]",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "lock and byte ptr [rdi+0B0h], 0BFh",
                    "7": "xor     esi, esi",
                    "8": "call    iwl_mvm_pause_tcm; PIC mode",
                    "9": "mov     rdi, r12",
                    "10": "call    iwl_fw_dbg_stop_sync; PIC mode",
                    "11": "mov     rbp, [rbx+8]",
                    "12": "call    __cond_resched; PIC mode",
                    "13": "mov     rax, [rbp+0]",
                    "14": "mov     rdi, rbp",
                    "15": "mov     rax, [rax+20h]",
                    "16": "call    __x86_indirect_thunk_rax; PIC mode",
                    "17": "mov     dword ptr [rbp+28h], 0",
                    "18": "mov     rdi, r12",
                    "19": "call    iwl_free_fw_paging; PIC mode",
                    "20": "mov     byte ptr [rbx+14B8h], 0FFh",
                    "21": "pop     rbx",
                    "22": "pop     rbp",
                    "23": "pop     r12",
                    "24": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "mov     ebx, eax",
                    "7": "lea     edi, [eax+880h]",
                    "8": "lock and byte ptr [eax+5Ch], 0BFh",
                    "9": "mov     eax, edi",
                    "10": "call    iwl_fw_dbg_stop_sync",
                    "11": "mov     esi, [ebx+4]",
                    "12": "call    __cond_resched",
                    "13": "mov     eax, [esi]",
                    "14": "mov     edx, [eax+10h]",
                    "15": "mov     eax, esi",
                    "16": "call    __x86_indirect_thunk_edx",
                    "17": "mov     eax, edi",
                    "18": "mov     dword ptr [esi+14h], 0",
                    "19": "call    iwl_free_fw_paging",
                    "20": "mov     byte ptr [ebx+0BF0h], 0FFh",
                    "21": "pop     ebx",
                    "22": "pop     esi",
                    "23": "pop     edi",
                    "24": "pop     ebp",
                    "25": "retn"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x20+var_s0]!",
                    "3": "ADD             X1, X0, #0xB0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#var_s10]",
                    "6": "MOV             X19, X0",
                    "7": "ADD             X20, X0, #0xE88",
                    "8": "MOV             X0, #6",
                    "9": "BL              clear_bit",
                    "10": "MOV             X0, X20",
                    "11": "BL              iwl_fw_dbg_stop_sync",
                    "12": "LDR             X19, [X19,#8]",
                    "13": "BL              __cond_resched",
                    "14": "LDR             X0, [X19]",
                    "15": "LDR             X1, [X0,#0x20]",
                    "16": "MOV             X0, X19",
                    "17": "BLR             X1",
                    "18": "STR             WZR, [X19,#0x28]",
                    "19": "MOV             X0, X20",
                    "20": "BL              iwl_free_fw_paging",
                    "21": "MOV             W0, #0xFFFFFFFF",
                    "22": "STRB            W0, [X20,#0x630]",
                    "23": "LDP             X19, X20, [SP,#var_s10]",
                    "24": "LDP             X29, X30, [SP+var_s0],#0x20",
                    "25": "AUTIASP",
                    "26": "RET"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    rbx",
                    "4": "mov     r15, rdi",
                    "5": "lea     r14, [rdi+0E88h]",
                    "6": "lock and byte ptr [rdi+0B0h], 0BFh",
                    "7": "mov     rdi, r14",
                    "8": "call    iwl_fw_dbg_stop_sync; PIC mode",
                    "9": "mov     rbx, [r15+8]",
                    "10": "call    __cond_resched; PIC mode",
                    "11": "mov     rax, [rbx]",
                    "12": "mov     r11, [rax+20h]",
                    "13": "mov     rdi, rbx",
                    "14": "call    __x86_indirect_thunk_r11; PIC mode",
                    "15": "mov     dword ptr [rbx+28h], 0",
                    "16": "mov     rdi, r14",
                    "17": "call    iwl_free_fw_paging; PIC mode",
                    "18": "mov     byte ptr [r15+14B8h], 0FFh",
                    "19": "pop     rbx",
                    "20": "pop     r14",
                    "21": "pop     r15",
                    "22": "retn"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "lea     r12, [rdi+0E88h]",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "lock and byte ptr [rdi+0B0h], 0BFh",
                    "7": "mov     rdi, r12",
                    "8": "call    iwl_fw_dbg_stop_sync; PIC mode",
                    "9": "mov     rbp, [rbx+8]",
                    "10": "call    __cond_resched; PIC mode",
                    "11": "mov     rax, [rbp+0]",
                    "12": "mov     rdi, rbp",
                    "13": "mov     rax, [rax+20h]",
                    "14": "call    __x86_indirect_thunk_rax; PIC mode",
                    "15": "mov     dword ptr [rbp+28h], 0",
                    "16": "mov     rdi, r12",
                    "17": "call    iwl_free_fw_paging; PIC mode",
                    "18": "mov     byte ptr [rbx+14B8h], 0FFh",
                    "19": "pop     rbx",
                    "20": "pop     rbp",
                    "21": "pop     r12",
                    "22": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "ops.iwl_mvm_stop_device.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r12",
                    "2": "lea     r12, [rdi+0E88h]",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "lock and byte ptr [rdi+0B0h], 0BFh",
                    "7": "mov     rdi, r12",
                    "8": "call    iwl_fw_dbg_stop_sync; PIC mode",
                    "9": "mov     rbp, [rbx+8]",
                    "10": "call    __cond_resched; PIC mode",
                    "11": "mov     rax, [rbp+0]",
                    "12": "mov     rdi, rbp",
                    "13": "mov     rax, [rax+20h]",
                    "14": "call    __x86_indirect_thunk_rax; PIC mode",
                    "15": "mov     dword ptr [rbp+28h], 0",
                    "16": "mov     rdi, r12",
                    "17": "call    iwl_free_fw_paging; PIC mode",
                    "18": "mov     byte ptr [rbx+14B8h], 0FFh",
                    "19": "pop     rbx",
                    "20": "pop     rbp",
                    "21": "pop     r12",
                    "22": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47677",
        "files": [
            {
                "filename": "nls.exfat_create_upcase_table.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "mov     edi, eax",
                    "5": "push    esi",
                    "6": "push    ebx",
                    "7": "sub     esp, 54h",
                    "8": "mov     [ebp+var_44], eax",
                    "9": "mov     eax, fs:__stack_chk_guard",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "xor     eax, eax",
                    "12": "movzx   eax, byte ptr [edi+0Ch]",
                    "13": "mov     [ebp+var_14], 1",
                    "14": "mov     byte ptr [ebp+var_28], al",
                    "15": "mov     eax, [edi+1FCh]",
                    "16": "lea     edi, [ebp+var_20]",
                    "17": "mov     [ebp+var_48], eax",
                    "18": "mov     edx, [eax+38h]",
                    "19": "mov     [ebp+var_1C], edx",
                    "20": "cmp     edx, 0FFFFFFFFh",
                    "21": "jz      INSTR235",
                    "22": "mov     eax, [ebp+var_48]",
                    "23": "xor     esi, esi",
                    "24": "mov     eax, [eax+3Ch]",
                    "25": "test    eax, eax",
                    "26": "jz      short INSTR49",
                    "27": "mov     eax, [ebp+var_44]",
                    "28": "lea     edx, [ebp+var_1C]",
                    "29": "mov     ecx, esi",
                    "30": "mov     [esp], edi",
                    "31": "call    exfat_get_dentry",
                    "32": "test    eax, eax",
                    "33": "mov     ebx, eax",
                    "34": "jz      INSTR270",
                    "35": "call    exfat_get_entry_type",
                    "36": "test    eax, eax",
                    "37": "jz      INSTR274",
                    "38": "cmp     eax, 102h",
                    "39": "jz      short INSTR56",
                    "40": "mov     eax, [ebp+var_20]",
                    "41": "test    eax, eax",
                    "42": "jz      short INSTR44",
                    "43": "call    __brelse",
                    "44": "mov     eax, [ebp+var_48]",
                    "45": "inc     esi",
                    "46": "cmp     [eax+3Ch], esi",
                    "47": "ja      short INSTR27",
                    "48": "mov     edx, [ebp+var_1C]",
                    "49": "mov     eax, [ebp+var_44]",
                    "50": "lea     ecx, [ebp+var_1C]",
                    "51": "call    exfat_ent_get",
                    "52": "test    eax, eax",
                    "53": "jnz     INSTR270",
                    "54": "mov     edx, [ebp+var_1C]",
                    "55": "jmp     short INSTR20",
                    "56": "mov     edi, [ebp+var_48]",
                    "57": "xor     edx, edx",
                    "58": "xor     esi, esi",
                    "59": "mov     eax, [ebx+14h]",
                    "60": "mov     ecx, [edi+18h]",
                    "61": "sub     eax, 2",
                    "62": "shld    edx, eax, cl",
                    "63": "shl     eax, cl",
                    "64": "test    cl, 20h",
                    "65": "movzx   ecx, byte ptr [ebp+var_28]",
                    "66": "cmovnz  edx, eax",
                    "67": "cmovnz  eax, esi",
                    "68": "mov     esi, [ebx+18h]",
                    "69": "add     eax, [edi+2Ch]",
                    "70": "adc     edx, [edi+30h]",
                    "71": "mov     [ebp+var_30], eax",
                    "72": "mov     edi, [ebx+1Ch]",
                    "73": "add     esi, 0FFFFFFFFh",
                    "74": "mov     eax, esi",
                    "75": "mov     [ebp+var_2C], edx",
                    "76": "adc     edi, 0FFFFFFFFh",
                    "77": "shrd    eax, edi, cl",
                    "78": "mov     edx, edi",
                    "79": "shr     edx, cl",
                    "80": "xor     edi, edi",
                    "81": "test    cl, 20h",
                    "82": "mov     ecx, 0FFFFFFFFh",
                    "83": "cmovnz  eax, edx",
                    "84": "cmovnz  edx, edi",
                    "85": "mov     esi, eax",
                    "86": "mov     edi, edx",
                    "87": "add     esi, 1",
                    "88": "mov     edx, 0DC0h",
                    "89": "mov     [ebp+var_28], esi",
                    "90": "adc     edi, 0",
                    "91": "mov     eax, 20000h",
                    "92": "mov     [ebp+var_24], edi",
                    "93": "mov     edi, [ebx+4]",
                    "94": "mov     [ebp+var_4C], edi",
                    "95": "mov     edi, [ebp+var_44]",
                    "96": "mov     ebx, [edi+1FCh]",
                    "97": "mov     edi, [edi+10h]",
                    "98": "call    kvmalloc_node_noprof",
                    "99": "mov     [ebp+var_40], eax",
                    "100": "test    eax, eax",
                    "101": "jz      INSTR228",
                    "102": "mov     [ebx+58h], eax",
                    "103": "mov     eax, [ebp+var_30]",
                    "104": "mov     ebx, [ebp+var_28]",
                    "105": "mov     edx, [ebp+var_2C]",
                    "106": "mov     esi, [ebp+var_24]",
                    "107": "add     ebx, eax",
                    "108": "mov     [ebp+var_3C], ebx",
                    "109": "adc     esi, edx",
                    "110": "cmp     eax, ebx",
                    "111": "mov     [ebp+var_38], esi",
                    "112": "mov     eax, edx",
                    "113": "sbb     eax, esi",
                    "114": "jnb     INSTR216",
                    "115": "mov     [ebp+var_34], 0",
                    "116": "xor     ebx, ebx",
                    "117": "xor     esi, esi",
                    "118": "lea     esi, [esi+0]",
                    "119": "xchg    ax, ax",
                    "120": "mov     ecx, [ebp+var_44]",
                    "121": "mov     edx, 8",
                    "122": "mov     eax, [ecx+74h]",
                    "123": "mov     [esp+4], edx",
                    "124": "mov     edx, [ecx+10h]",
                    "125": "mov     ecx, [ebp+var_2C]",
                    "126": "mov     [esp], edx",
                    "127": "mov     edx, [ebp+var_30]",
                    "128": "call    __bread_gfp",
                    "129": "mov     [ebp+var_28], eax",
                    "130": "test    eax, eax",
                    "131": "jz      INSTR205",
                    "132": "add     [ebp+var_30], 1",
                    "133": "mov     eax, [ebp+var_28]",
                    "134": "adc     [ebp+var_2C], 0",
                    "135": "xor     edx, edx",
                    "136": "test    edi, edi",
                    "137": "mov     eax, [eax+18h]",
                    "138": "jnz     short INSTR145",
                    "139": "jmp     short INSTR163",
                    "140": "add     esi, ecx",
                    "141": "xor     ebx, ebx",
                    "142": "add     edx, 2",
                    "143": "cmp     edi, edx",
                    "144": "jbe     short INSTR163",
                    "145": "cmp     esi, 0FFFFh",
                    "146": "ja      short INSTR163",
                    "147": "test    bl, bl",
                    "148": "movzx   ecx, word ptr [eax+edx]",
                    "149": "jnz     short INSTR140",
                    "150": "cmp     ecx, esi",
                    "151": "jz      INSTR201",
                    "152": "cmp     ecx, 0FFFFh",
                    "153": "jz      INSTR203",
                    "154": "mov     eax, [ebp+var_40]",
                    "155": "add     edx, 2",
                    "156": "mov     [eax+esi*2], cx",
                    "157": "mov     eax, [ebp+var_28]",
                    "158": "inc     esi",
                    "159": "cmp     edi, edx",
                    "160": "mov     eax, [eax+18h]",
                    "161": "ja      short INSTR145",
                    "162": "lea     esi, [esi+0]",
                    "163": "mov     dword ptr [esp], 2",
                    "164": "mov     ecx, [ebp+var_34]",
                    "165": "call    exfat_calc_chksum32",
                    "166": "mov     [ebp+var_34], eax",
                    "167": "mov     eax, [ebp+var_28]",
                    "168": "call    __brelse",
                    "169": "mov     eax, [ebp+var_30]",
                    "170": "mov     ecx, [ebp+var_3C]",
                    "171": "mov     edx, [ebp+var_2C]",
                    "172": "cmp     eax, ecx",
                    "173": "mov     eax, edx",
                    "174": "sbb     eax, [ebp+var_38]",
                    "175": "jb      INSTR120",
                    "176": "cmp     esi, 0FFFEh",
                    "177": "jbe     INSTR218",
                    "178": "mov     edi, [ebp+var_34]",
                    "179": "cmp     [ebp+var_4C], edi",
                    "180": "jnz     INSTR218",
                    "181": "xor     ebx, ebx",
                    "182": "mov     eax, [ebp+var_20]",
                    "183": "test    eax, eax",
                    "184": "jz      short INSTR191",
                    "185": "call    __brelse",
                    "186": "lea     ecx, [ebx+5]",
                    "187": "mov     eax, 21h ; '!'",
                    "188": "shr     eax, cl",
                    "189": "test    al, 1",
                    "190": "jz      INSTR232",
                    "191": "mov     eax, [ebp+var_10]",
                    "192": "sub     eax, fs:__stack_chk_guard",
                    "193": "jnz     INSTR279",
                    "194": "add     esp, 54h",
                    "195": "mov     eax, ebx",
                    "196": "pop     ebx",
                    "197": "pop     esi",
                    "198": "pop     edi",
                    "199": "pop     ebp",
                    "200": "retn",
                    "201": "inc     esi",
                    "202": "jmp     INSTR142",
                    "203": "mov     bl, 1",
                    "204": "jmp     INSTR142",
                    "205": "mov     dword ptr [esp], offset unk_8000B3C",
                    "206": "mov     eax, [ebp+var_30]",
                    "207": "mov     ebx, 0FFFFFFFBh",
                    "208": "mov     edx, [ebp+var_2C]",
                    "209": "mov     [esp+8], eax",
                    "210": "mov     eax, [ebp+var_44]",
                    "211": "mov     [esp+0Ch], edx",
                    "212": "add     eax, 21Ch",
                    "213": "mov     [esp+4], eax",
                    "214": "call    _printk",
                    "215": "jmp     INSTR182",
                    "216": "mov     [ebp+var_34], 0",
                    "217": "xor     esi, esi",
                    "218": "mov     [esp+8], esi",
                    "219": "mov     eax, [ebp+var_4C]",
                    "220": "mov     dword ptr [esp], offset unk_8000B6C",
                    "221": "mov     [esp+10h], eax",
                    "222": "mov     eax, [ebp+var_34]",
                    "223": "mov     [esp+0Ch], eax",
                    "224": "mov     eax, [ebp+var_44]",
                    "225": "add     eax, 21Ch",
                    "226": "mov     [esp+4], eax",
                    "227": "call    _printk",
                    "228": "mov     eax, [ebp+var_20]",
                    "229": "test    eax, eax",
                    "230": "jz      short INSTR232",
                    "231": "call    __brelse",
                    "232": "mov     eax, [ebp+var_48]",
                    "233": "mov     eax, [eax+58h]",
                    "234": "call    kvfree",
                    "235": "mov     eax, [ebp+var_44]",
                    "236": "mov     ecx, 0FFFFFFFFh",
                    "237": "mov     edx, 0DC0h",
                    "238": "mov     ebx, [eax+1FCh]",
                    "239": "mov     eax, 20000h",
                    "240": "call    kvmalloc_node_noprof",
                    "241": "test    eax, eax",
                    "242": "mov     esi, eax",
                    "243": "jz      INSTR281",
                    "244": "mov     [ebx+58h], eax",
                    "245": "xor     ecx, ecx",
                    "246": "xor     ebx, ebx",
                    "247": "xor     eax, eax",
                    "248": "xor     edx, edx",
                    "249": "jmp     short INSTR258",
                    "250": "add     ecx, ebx",
                    "251": "xor     eax, eax",
                    "252": "inc     edx",
                    "253": "cmp     ecx, 0FFFFh",
                    "254": "ja      short INSTR267",
                    "255": "cmp     edx, 0B65h",
                    "256": "jg      short INSTR267",
                    "257": "movzx   ebx, ds:uni_def_upcase[edx+edx]",
                    "258": "test    al, al",
                    "259": "jnz     short INSTR250",
                    "260": "cmp     ebx, ecx",
                    "261": "jz      short INSTR265",
                    "262": "cmp     ebx, 0FFFFh",
                    "263": "jz      short INSTR272",
                    "264": "mov     [esi+ecx*2], bx",
                    "265": "inc     ecx",
                    "266": "jmp     short INSTR252",
                    "267": "xor     ebx, ebx",
                    "268": "cmp     ecx, 0FFFEh",
                    "269": "ja      INSTR191",
                    "270": "mov     ebx, 0FFFFFFFBh",
                    "271": "jmp     INSTR191",
                    "272": "mov     al, 1",
                    "273": "jmp     short INSTR252",
                    "274": "mov     eax, [ebp+var_20]",
                    "275": "test    eax, eax",
                    "276": "jz      INSTR48",
                    "277": "call    __brelse",
                    "278": "jmp     INSTR48",
                    "279": "lea     esi, [esi+0]",
                    "280": "call    __stack_chk_fail",
                    "281": "mov     ebx, 0FFFFFFF4h",
                    "282": "jmp     INSTR191"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_90]!",
                    "3": "MRS             X1, SP_EL0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X21, X22, [SP,#0x90+var_70]",
                    "6": "MOV             X21, X0",
                    "7": "ADD             X0, X1, #0x550",
                    "8": "STP             X19, X20, [SP,#0x90+var_80]",
                    "9": "STP             X23, X24, [SP,#0x90+var_60]",
                    "10": "LDR             X24, [X21,#0x368]",
                    "11": "LDR             X1, [X0]",
                    "12": "STR             X1, [SP,#0x90+var_8]",
                    "13": "MOV             X1, #0",
                    "14": "LDRB            W22, [X21,#0x14]",
                    "15": "MOV             W0, #1",
                    "16": "STRB            W0, [SP,#0x90+var_C]",
                    "17": "LDR             W1, [X24,#0x3C]",
                    "18": "STR             W1, [SP,#0x90+var_14]",
                    "19": "CMN             W1, #1",
                    "20": "B.EQ            loc_928",
                    "21": "LDR             W0, [X24,#0x40]",
                    "22": "MOV             W20, #0",
                    "23": "CBZ             W0, loc_70C",
                    "24": "ADD             X3, SP, #0x90+var_20",
                    "25": "MOV             W2, W20",
                    "26": "ADD             X1, SP, #0x90+var_14",
                    "27": "MOV             X0, X21",
                    "28": "BL              exfat_get_dentry",
                    "29": "MOV             X19, X0",
                    "30": "CBZ             X0, loc_9BC",
                    "31": "BL              exfat_get_entry_type",
                    "32": "CBZ             W0, loc_9CC",
                    "33": "CMP             W0, #0x102",
                    "34": "B.EQ            loc_724",
                    "35": "LDR             X0, [SP,#0x90+var_20]",
                    "36": "CBZ             X0, loc_6F8",
                    "37": "BL              __brelse",
                    "38": "LDR             W0, [X24,#0x40]",
                    "39": "ADD             W20, W20, #1",
                    "40": "CMP             W0, W20",
                    "41": "B.HI            loc_6C0",
                    "42": "LDR             W1, [SP,#0x90+var_14]",
                    "43": "ADD             X2, SP, #0x90+var_14",
                    "44": "MOV             X0, X21",
                    "45": "BL              exfat_ent_get",
                    "46": "CBNZ            W0, loc_9BC",
                    "47": "LDR             W1, [SP,#0x90+var_14]",
                    "48": "B               loc_6AC",
                    "49": "STP             X25, X26, [SP,#0x90+var_50]",
                    "50": "MOV             W2, #0xFFFFFFFF",
                    "51": "MOV             W1, #0xDC0",
                    "52": "STP             X27, X28, [SP,#0x90+var_40]",
                    "53": "MOV             X0, #0x20000",
                    "54": "LDR             W5, [X19,#0x14]",
                    "55": "LDR             W4, [X24,#0x18]",
                    "56": "LDR             X3, [X24,#0x30]",
                    "57": "SUB             W5, W5, #2",
                    "58": "LDR             X23, [X19,#0x18]",
                    "59": "LSL             X5, X5, X4",
                    "60": "ADD             X25, X5, X3",
                    "61": "LDR             W3, [X19,#4]",
                    "62": "SUB             X23, X23, #1",
                    "63": "LDR             W28, [X21,#0x18]",
                    "64": "STR             W3, [SP,#0x90+var_24]",
                    "65": "LSR             X23, X23, X22",
                    "66": "ADD             X23, X23, #1",
                    "67": "LDR             X19, [X21,#0x368]",
                    "68": "BL              kvmalloc_node_noprof",
                    "69": "MOV             X22, X0",
                    "70": "CBZ             X0, loc_90C",
                    "71": "ADD             X0, X23, X25",
                    "72": "STR             X0, [SP,#0x90+var_30]",
                    "73": "STR             X22, [X19,#0x68]",
                    "74": "CMP             X25, X0",
                    "75": "B.CS            loc_8E8",
                    "76": "MOV             W26, #0",
                    "77": "MOV             W19, #0",
                    "78": "MOV             W20, #0",
                    "79": "MOV             W27, #0xFFFF",
                    "80": "LDR             W2, [X21,#0x18]",
                    "81": "MOV             X1, X25",
                    "82": "LDR             X0, [X21,#0xC8]",
                    "83": "MOV             W3, #8",
                    "84": "BL              __bread_gfp",
                    "85": "MOV             X23, X0",
                    "86": "CBZ             X0, loc_8CC",
                    "87": "CMP             W28, #0",
                    "88": "ADD             X25, X25, #1",
                    "89": "CCMP            W19, W27, #2, NE",
                    "90": "MOV             W1, #0",
                    "91": "LDR             X0, [X0,#0x28]",
                    "92": "B.LS            loc_7F0",
                    "93": "B               loc_828",
                    "94": "ADD             W19, W19, W3",
                    "95": "MOV             W26, #0",
                    "96": "ADD             W1, W1, #2",
                    "97": "CMP             W28, W1",
                    "98": "CCMP            W19, W27, #2, HI",
                    "99": "B.HI            loc_828",
                    "100": "LDRH            W3, [X0,W1,UXTW]",
                    "101": "CBNZ            W26, loc_7D8",
                    "102": "CMP             W19, W3",
                    "103": "B.EQ            loc_8BC",
                    "104": "CMP             W3, W27",
                    "105": "B.EQ            loc_8C4",
                    "106": "ADD             W1, W1, #2",
                    "107": "STRH            W3, [X22,W19,UXTW#1]",
                    "108": "CMP             W28, W1",
                    "109": "ADD             W19, W19, #1",
                    "110": "CCMP            W19, W27, #2, HI",
                    "111": "LDR             X0, [X23,#0x28]",
                    "112": "B.LS            loc_7F0",
                    "113": "NOP",
                    "114": "MOV             W2, W20",
                    "115": "MOV             W3, #2",
                    "116": "BL              exfat_calc_chksum32",
                    "117": "MOV             W20, W0",
                    "118": "MOV             X0, X23",
                    "119": "BL              __brelse",
                    "120": "LDR             X0, [SP,#0x90+var_30]",
                    "121": "CMP             X0, X25",
                    "122": "B.HI            loc_7A0",
                    "123": "MOV             W0, #0xFFFE",
                    "124": "CMP             W19, W0",
                    "125": "LDR             W0, [SP,#0x90+var_24]",
                    "126": "MOV             W22, #0",
                    "127": "CCMP            W0, W20, #0, HI",
                    "128": "B.NE            loc_8F0",
                    "129": "LDR             X0, [SP,#0x90+var_20]",
                    "130": "CBZ             X0, loc_880",
                    "131": "BL              __brelse",
                    "132": "ADD             W1, W22, #5",
                    "133": "MOV             X0, #0x21 ; '!'",
                    "134": "LSR             X0, X0, X1",
                    "135": "TBZ             W0, #0, loc_918",
                    "136": "LDP             X25, X26, [SP,#0x90+var_50]",
                    "137": "LDP             X27, X28, [SP,#0x90+var_40]",
                    "138": "MRS             X0, SP_EL0",
                    "139": "LDR             X2, [SP,#0x90+var_8]",
                    "140": "LDR             X1, [X0,#0x550]",
                    "141": "SUBS            X2, X2, X1",
                    "142": "MOV             X1, #0",
                    "143": "B.NE            loc_9DC",
                    "144": "MOV             W0, W22",
                    "145": "LDP             X19, X20, [SP,#0x90+var_80]",
                    "146": "LDP             X21, X22, [SP,#0x90+var_70]",
                    "147": "LDP             X23, X24, [SP,#0x90+var_60]",
                    "148": "LDP             X29, X30, [SP+0x90+var_90],#0x90",
                    "149": "AUTIASP",
                    "150": "RET",
                    "151": "ADD             W19, W19, #1",
                    "152": "B               loc_7E0",
                    "153": "MOV             W26, #1",
                    "154": "B               loc_7E0",
                    "155": "MOV             X2, X25",
                    "156": "ADD             X1, X21, #0x398",
                    "157": "ADRP            X0, #unk_A60@PAGE",
                    "158": "MOV             W22, #0xFFFFFFFB",
                    "159": "ADD             X0, X0, #unk_A60@PAGEOFF",
                    "160": "BL              _printk",
                    "161": "B               loc_864",
                    "162": "MOV             W19, #0",
                    "163": "MOV             W20, #0",
                    "164": "LDR             W4, [SP,#0x90+var_24]",
                    "165": "ADRP            X0, #unk_A90@PAGE",
                    "166": "MOV             W3, W20",
                    "167": "MOV             W2, W19",
                    "168": "ADD             X1, X21, #0x398",
                    "169": "ADD             X0, X0, #unk_A90@PAGEOFF",
                    "170": "BL              _printk",
                    "171": "LDR             X0, [SP,#0x90+var_20]",
                    "172": "CBZ             X0, loc_918",
                    "173": "BL              __brelse",
                    "174": "LDR             X0, [X24,#0x68]",
                    "175": "BL              kvfree",
                    "176": "LDP             X25, X26, [SP,#0x90+var_50]",
                    "177": "LDP             X27, X28, [SP,#0x90+var_40]",
                    "178": "MOV             W2, #0xFFFFFFFF",
                    "179": "MOV             W1, #0xDC0",
                    "180": "MOV             X0, #0x20000",
                    "181": "LDR             X19, [X21,#0x368]",
                    "182": "BL              kvmalloc_node_noprof",
                    "183": "MOV             X6, X0",
                    "184": "CBZ             X0, loc_9E8",
                    "185": "STR             X6, [X19,#0x68]",
                    "186": "ADRP            X5, #uni_def_upcase@PAGE",
                    "187": "MOV             X0, #1",
                    "188": "ADD             X5, X5, #uni_def_upcase@PAGEOFF",
                    "189": "MOV             W2, #0",
                    "190": "MOV             W1, #0",
                    "191": "MOV             W3, #0",
                    "192": "MOV             W4, #0xFFFF",
                    "193": "CBZ             W3, loc_988",
                    "194": "ADD             W1, W1, W2",
                    "195": "MOV             W3, #0",
                    "196": "CMP             W0, #0xB65",
                    "197": "CCMP            W1, W4, #2, LE",
                    "198": "B.HI            loc_9AC",
                    "199": "LDRH            W2, [X5,X0,LSL#1]",
                    "200": "ADD             X0, X0, #1",
                    "201": "CBNZ            W3, loc_968",
                    "202": "CMP             W2, W1",
                    "203": "B.EQ            loc_99C",
                    "204": "CMP             W2, W4",
                    "205": "B.EQ            loc_9C4",
                    "206": "STRH            W2, [X6,W1,UXTW#1]",
                    "207": "ADD             W1, W1, #1",
                    "208": "CMP             W0, #0xB65",
                    "209": "CCMP            W1, W4, #2, LE",
                    "210": "B.LS            loc_97C",
                    "211": "MOV             W0, #0xFFFE",
                    "212": "MOV             W22, #0",
                    "213": "CMP             W1, W0",
                    "214": "B.HI            loc_888",
                    "215": "MOV             W22, #0xFFFFFFFB",
                    "216": "B               loc_888",
                    "217": "MOV             W3, #1",
                    "218": "B               loc_970",
                    "219": "LDR             X0, [SP,#0x90+var_20]",
                    "220": "CBZ             X0, loc_708",
                    "221": "BL              __brelse",
                    "222": "B               loc_708",
                    "223": "STP             X25, X26, [SP,#0x90+var_50]",
                    "224": "STP             X27, X28, [SP,#0x90+var_40]",
                    "225": "BL              __stack_chk_fail",
                    "226": "MOV             W22, #0xFFFFFFF4",
                    "227": "B               loc_888"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 48h",
                    "8": "mov     r15, rdi",
                    "9": "mov     rax, gs:28h",
                    "10": "mov     [rsp+78h+var_38], rax",
                    "11": "movzx   eax, byte ptr [rdi+14h]",
                    "12": "mov     [rsp+78h+var_60], rax",
                    "13": "mov     rbp, [rdi+368h]",
                    "14": "mov     eax, [rbp+3Ch]",
                    "15": "mov     [rsp+78h+var_48], eax",
                    "16": "mov     [rsp+78h+var_40], 1",
                    "17": "cmp     eax, 0FFFFFFFFh",
                    "18": "jz      INSTR166",
                    "19": "lea     r13, [rsp+78h+var_48]",
                    "20": "lea     r12, [rsp+78h+var_50]",
                    "21": "cmp     dword ptr [rbp+40h], 0",
                    "22": "jz      short INSTR51",
                    "23": "xor     ebx, ebx",
                    "24": "jmp     short INSTR28",
                    "25": "add     ebx, 1",
                    "26": "cmp     ebx, [rbp+40h]",
                    "27": "jnb     short INSTR51",
                    "28": "mov     rdi, r15",
                    "29": "mov     rsi, r13",
                    "30": "mov     edx, ebx",
                    "31": "mov     rcx, r12",
                    "32": "call    exfat_get_dentry; PIC mode",
                    "33": "test    rax, rax",
                    "34": "jz      short INSTR60",
                    "35": "mov     r14, rax",
                    "36": "mov     rdi, rax",
                    "37": "call    exfat_get_entry_type; PIC mode",
                    "38": "cmp     eax, 102h",
                    "39": "jz      short INSTR62",
                    "40": "test    eax, eax",
                    "41": "jz      short INSTR47",
                    "42": "mov     rdi, [rsp+78h+var_50]",
                    "43": "test    rdi, rdi",
                    "44": "jz      short INSTR25",
                    "45": "call    __brelse; PIC mode",
                    "46": "jmp     short INSTR25",
                    "47": "mov     rdi, [rsp+78h+var_50]",
                    "48": "test    rdi, rdi",
                    "49": "jz      short INSTR51",
                    "50": "call    __brelse; PIC mode",
                    "51": "mov     esi, [rsp+78h+var_48]",
                    "52": "mov     rdi, r15",
                    "53": "mov     rdx, r13",
                    "54": "call    exfat_ent_get; PIC mode",
                    "55": "test    eax, eax",
                    "56": "jnz     short INSTR60",
                    "57": "cmp     [rsp+78h+var_48], 0FFFFFFFFh",
                    "58": "jnz     short INSTR21",
                    "59": "jmp     INSTR166",
                    "60": "mov     r14d, 0FFFFFFFBh",
                    "61": "jmp     INSTR211",
                    "62": "mov     eax, [r14+4]",
                    "63": "mov     [rsp+78h+var_74], eax",
                    "64": "mov     r13d, [r14+14h]",
                    "65": "mov     rbx, [r14+18h]",
                    "66": "add     r13d, 0FFFFFFFEh",
                    "67": "mov     cl, [rbp+18h]",
                    "68": "shl     r13, cl",
                    "69": "mov     [rsp+78h+var_68], rbp",
                    "70": "add     r13, [rbp+30h]",
                    "71": "mov     rbp, [r15+368h]",
                    "72": "mov     [rsp+78h+var_70], r15",
                    "73": "mov     r15d, [r15+18h]",
                    "74": "mov     edi, 20000h",
                    "75": "mov     esi, 0DC0h",
                    "76": "mov     edx, 0FFFFFFFFh",
                    "77": "call    kvmalloc_node_noprof; PIC mode",
                    "78": "test    rax, rax",
                    "79": "jz      INSTR153",
                    "80": "add     rbx, 0FFFFFFFFFFFFFFFFh",
                    "81": "mov     rcx, [rsp+78h+var_60]",
                    "82": "shr     rbx, cl",
                    "83": "mov     [rbp+68h], rax",
                    "84": "lea     rcx, [rbx+r13]",
                    "85": "add     rcx, 1",
                    "86": "mov     [rsp+78h+var_60], rcx",
                    "87": "cmp     r13, rcx",
                    "88": "jnb     INSTR223",
                    "89": "mov     [rsp+78h+var_58], rax",
                    "90": "xor     ebx, ebx",
                    "91": "xor     ebp, ebp",
                    "92": "xor     r12d, r12d",
                    "93": "jmp     short INSTR103",
                    "94": "mov     rdi, [r14+28h]",
                    "95": "mov     edx, ebp",
                    "96": "mov     ecx, 2",
                    "97": "call    exfat_calc_chksum32; PIC mode",
                    "98": "mov     ebp, eax",
                    "99": "mov     rdi, r14",
                    "100": "call    __brelse; PIC mode",
                    "101": "cmp     r13, [rsp+78h+var_60]",
                    "102": "jz      INSTR144",
                    "103": "mov     rax, [rsp+78h+var_70]",
                    "104": "mov     rdi, [rax+0C8h]",
                    "105": "mov     edx, [rax+18h]",
                    "106": "mov     rsi, r13",
                    "107": "mov     ecx, 8",
                    "108": "call    __bread_gfp; PIC mode",
                    "109": "test    rax, rax",
                    "110": "jz      INSTR228",
                    "111": "mov     r14, rax",
                    "112": "add     r13, 1",
                    "113": "xor     esi, esi",
                    "114": "test    r15d, r15d",
                    "115": "jz      short INSTR94",
                    "116": "cmp     ebx, 0FFFFh",
                    "117": "mov     rdx, [rsp+78h+var_58]",
                    "118": "ja      short INSTR94",
                    "119": "xor     esi, esi",
                    "120": "mov     rax, [r14+28h]",
                    "121": "mov     ecx, esi",
                    "122": "movzx   eax, word ptr [rax+rcx]",
                    "123": "movzx   ecx, ax",
                    "124": "test    r12b, r12b",
                    "125": "jnz     short INSTR134",
                    "126": "cmp     ebx, ecx",
                    "127": "jz      short INSTR132",
                    "128": "cmp     ax, 0FFFFh",
                    "129": "jz      short INSTR142",
                    "130": "mov     ecx, ebx",
                    "131": "mov     [rdx+rcx*2], ax",
                    "132": "add     ebx, 1",
                    "133": "jmp     short INSTR135",
                    "134": "add     ebx, ecx",
                    "135": "xor     r12d, r12d",
                    "136": "add     esi, 2",
                    "137": "cmp     esi, r15d",
                    "138": "jnb     INSTR94",
                    "139": "cmp     ebx, 10000h",
                    "140": "jb      short INSTR120",
                    "141": "jmp     INSTR94",
                    "142": "mov     r12b, 1",
                    "143": "jmp     short INSTR136",
                    "144": "cmp     ebx, 0FFFFh",
                    "145": "mov     r12, [rsp+78h+var_68]",
                    "146": "jb      INSTR235",
                    "147": "xor     r14d, r14d",
                    "148": "mov     r8d, [rsp+78h+var_74]",
                    "149": "cmp     ebp, r8d",
                    "150": "mov     r15, [rsp+78h+var_70]",
                    "151": "jz      short INSTR156",
                    "152": "jmp     INSTR237",
                    "153": "mov     r14d, 0FFFFFFF4h",
                    "154": "mov     r15, [rsp+78h+var_70]",
                    "155": "mov     r12, [rsp+78h+var_68]",
                    "156": "mov     rdi, [rsp+78h+var_50]",
                    "157": "test    rdi, rdi",
                    "158": "jz      short INSTR160",
                    "159": "call    __brelse; PIC mode",
                    "160": "cmp     r14d, 0FFFFFFFBh",
                    "161": "jz      INSTR211",
                    "162": "test    r14d, r14d",
                    "163": "jz      INSTR211",
                    "164": "mov     rdi, [r12+68h]",
                    "165": "call    kvfree; PIC mode",
                    "166": "mov     rbx, [r15+368h]",
                    "167": "mov     edi, 20000h",
                    "168": "mov     esi, 0DC0h",
                    "169": "mov     edx, 0FFFFFFFFh",
                    "170": "call    kvmalloc_node_noprof; PIC mode",
                    "171": "test    rax, rax",
                    "172": "jz      short INSTR210",
                    "173": "mov     [rbx+68h], rax",
                    "174": "xor     esi, esi",
                    "175": "mov     rcx, offset uni_def_upcase",
                    "176": "xor     edi, edi",
                    "177": "xor     r8d, r8d",
                    "178": "jmp     short INSTR190",
                    "179": "mov     edi, r8d",
                    "180": "mov     [rax+rdi*2], bp",
                    "181": "add     r8d, 1",
                    "182": "xor     edi, edi",
                    "183": "cmp     r8d, 0FFFFh",
                    "184": "ja      short INSTR204",
                    "185": "lea     rdx, [rsi+1]",
                    "186": "add     rcx, 2",
                    "187": "cmp     rsi, 0B65h",
                    "188": "mov     rsi, rdx",
                    "189": "jnb     short INSTR204",
                    "190": "movzx   ebp, word ptr [rcx]",
                    "191": "movzx   ebx, bp",
                    "192": "test    dil, dil",
                    "193": "jnz     short INSTR202",
                    "194": "cmp     r8d, ebx",
                    "195": "jz      short INSTR181",
                    "196": "cmp     bp, 0FFFFh",
                    "197": "jnz     short INSTR179",
                    "198": "mov     dil, 1",
                    "199": "cmp     r8d, 0FFFFh",
                    "200": "jbe     short INSTR185",
                    "201": "jmp     short INSTR204",
                    "202": "add     r8d, ebx",
                    "203": "jmp     short INSTR182",
                    "204": "xor     eax, eax",
                    "205": "cmp     r8d, 0FFFFh",
                    "206": "setnb   al",
                    "207": "lea     r14d, [rax+rax*4]",
                    "208": "add     r14d, 0FFFFFFFBh",
                    "209": "jmp     short INSTR211",
                    "210": "mov     r14d, 0FFFFFFF4h",
                    "211": "mov     rax, gs:28h",
                    "212": "cmp     rax, [rsp+78h+var_38]",
                    "213": "jnz     short INSTR244",
                    "214": "mov     eax, r14d",
                    "215": "add     rsp, 48h",
                    "216": "pop     rbx",
                    "217": "pop     r12",
                    "218": "pop     r13",
                    "219": "pop     r14",
                    "220": "pop     r15",
                    "221": "pop     rbp",
                    "222": "retn",
                    "223": "xor     ebx, ebx",
                    "224": "xor     ebp, ebp",
                    "225": "mov     r15, [rsp+78h+var_70]",
                    "226": "mov     r12, [rsp+78h+var_68]",
                    "227": "jmp     short INSTR236",
                    "228": "mov     r15, [rsp+78h+var_70]",
                    "229": "lea     rsi, [r15+398h]",
                    "230": "mov     rdi, offset unk_9FB",
                    "231": "mov     rdx, r13",
                    "232": "call    _printk; PIC mode",
                    "233": "mov     r14d, 0FFFFFFFBh",
                    "234": "jmp     INSTR155",
                    "235": "mov     r15, [rsp+78h+var_70]",
                    "236": "mov     r8d, [rsp+78h+var_74]",
                    "237": "lea     rsi, [r15+398h]",
                    "238": "mov     rdi, offset unk_A2B",
                    "239": "mov     edx, ebx",
                    "240": "mov     ecx, ebp",
                    "241": "call    _printk; PIC mode",
                    "242": "mov     r14d, 0FFFFFFEAh",
                    "243": "jmp     INSTR156",
                    "244": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rbx, rdi",
                    "8": "sub     rsp, 48h",
                    "9": "movzx   r12d, byte ptr [rdi+14h]",
                    "10": "mov     rax, gs:28h",
                    "11": "mov     [rsp+78h+var_38], rax",
                    "12": "xor     eax, eax",
                    "13": "mov     rax, [rdi+368h]",
                    "14": "mov     [rsp+78h+var_3C], 1",
                    "15": "mov     esi, [rax+3Ch]",
                    "16": "mov     [rsp+78h+var_60], rax",
                    "17": "mov     [rsp+78h+var_44], esi",
                    "18": "cmp     esi, 0FFFFFFFFh",
                    "19": "jz      INSTR183",
                    "20": "mov     rax, [rsp+78h+var_60]",
                    "21": "xor     r13d, r13d",
                    "22": "mov     eax, [rax+40h]",
                    "23": "test    eax, eax",
                    "24": "jz      short INSTR48",
                    "25": "lea     rcx, [rsp+78h+var_50]",
                    "26": "mov     edx, r13d",
                    "27": "lea     rsi, [rsp+78h+var_44]",
                    "28": "mov     rdi, rbx",
                    "29": "call    exfat_get_dentry; PIC mode",
                    "30": "mov     rbp, rax",
                    "31": "test    rax, rax",
                    "32": "jz      INSTR218",
                    "33": "mov     rdi, rax",
                    "34": "call    exfat_get_entry_type; PIC mode",
                    "35": "test    eax, eax",
                    "36": "jz      INSTR222",
                    "37": "cmp     eax, 102h",
                    "38": "jz      short INSTR55",
                    "39": "mov     rdi, [rsp+78h+var_50]",
                    "40": "test    rdi, rdi",
                    "41": "jz      short INSTR43",
                    "42": "call    __brelse; PIC mode",
                    "43": "mov     rax, [rsp+78h+var_60]",
                    "44": "add     r13d, 1",
                    "45": "cmp     [rax+40h], r13d",
                    "46": "ja      short INSTR25",
                    "47": "mov     esi, [rsp+78h+var_44]",
                    "48": "lea     rdx, [rsp+78h+var_44]",
                    "49": "mov     rdi, rbx",
                    "50": "call    exfat_ent_get; PIC mode",
                    "51": "test    eax, eax",
                    "52": "jnz     INSTR218",
                    "53": "mov     esi, [rsp+78h+var_44]",
                    "54": "jmp     INSTR18",
                    "55": "mov     eax, [rbp+14h]",
                    "56": "mov     edx, 0FFFFFFFFh",
                    "57": "mov     esi, 0DC0h",
                    "58": "mov     edi, 20000h",
                    "59": "lea     r11d, [rax-2]",
                    "60": "mov     rax, [rsp+78h+var_60]",
                    "61": "mov     ecx, [rax+18h]",
                    "62": "shl     r11, cl",
                    "63": "add     r11, [rax+30h]",
                    "64": "mov     rax, [rbp+18h]",
                    "65": "mov     ecx, r12d",
                    "66": "mov     r15, r11",
                    "67": "mov     r12, [rbx+368h]",
                    "68": "lea     r14, [rax-1]",
                    "69": "mov     eax, [rbp+4]",
                    "70": "mov     ebp, [rbx+18h]",
                    "71": "shr     r14, cl",
                    "72": "mov     [rsp+78h+var_54], eax",
                    "73": "add     r14, 1",
                    "74": "call    kvmalloc_node_noprof; PIC mode",
                    "75": "mov     [rsp+78h+var_70], rax",
                    "76": "test    rax, rax",
                    "77": "jz      INSTR176",
                    "78": "mov     [r12+68h], rax",
                    "79": "lea     rax, [r14+r15]",
                    "80": "mov     [rsp+78h+var_68], rax",
                    "81": "cmp     r15, rax",
                    "82": "jnb     INSTR168",
                    "83": "xor     r14d, r14d",
                    "84": "xor     r12d, r12d",
                    "85": "xor     r13d, r13d",
                    "86": "mov     rdi, [rbx+0C8h]",
                    "87": "mov     edx, [rbx+18h]",
                    "88": "mov     ecx, 8",
                    "89": "mov     rsi, r15",
                    "90": "call    __bread_gfp; PIC mode",
                    "91": "mov     r10, rax",
                    "92": "test    rax, rax",
                    "93": "jz      INSTR162",
                    "94": "mov     rdi, [rax+28h]",
                    "95": "add     r15, 1",
                    "96": "xor     esi, esi",
                    "97": "test    ebp, ebp",
                    "98": "jnz     short INSTR105",
                    "99": "jmp     short INSTR124",
                    "100": "add     r12d, edx",
                    "101": "xor     r14d, r14d",
                    "102": "add     esi, 2",
                    "103": "cmp     ebp, esi",
                    "104": "jbe     short INSTR124",
                    "105": "cmp     r12d, 0FFFFh",
                    "106": "ja      short INSTR124",
                    "107": "mov     eax, esi",
                    "108": "movzx   edx, word ptr [rdi+rax]",
                    "109": "mov     eax, edx",
                    "110": "test    r14b, r14b",
                    "111": "jnz     short INSTR100",
                    "112": "cmp     r12d, edx",
                    "113": "jz      INSTR158",
                    "114": "cmp     dx, 0FFFFh",
                    "115": "jz      INSTR160",
                    "116": "mov     rcx, [rsp+78h+var_70]",
                    "117": "mov     edx, r12d",
                    "118": "add     esi, 2",
                    "119": "add     r12d, 1",
                    "120": "mov     [rcx+rdx*2], ax",
                    "121": "mov     rdi, [r10+28h]",
                    "122": "cmp     ebp, esi",
                    "123": "ja      short INSTR105",
                    "124": "mov     edx, r13d",
                    "125": "mov     ecx, 2",
                    "126": "mov     [rsp+78h+var_78], r10",
                    "127": "call    exfat_calc_chksum32; PIC mode",
                    "128": "mov     rdi, [rsp+78h+var_78]",
                    "129": "mov     r13d, eax",
                    "130": "call    __brelse; PIC mode",
                    "131": "cmp     [rsp+78h+var_68], r15",
                    "132": "ja      INSTR86",
                    "133": "cmp     r12d, 0FFFEh",
                    "134": "jbe     INSTR170",
                    "135": "cmp     [rsp+78h+var_54], r13d",
                    "136": "jnz     INSTR170",
                    "137": "xor     r12d, r12d",
                    "138": "mov     rdi, [rsp+78h+var_50]",
                    "139": "test    rdi, rdi",
                    "140": "jz      short INSTR146",
                    "141": "call    __brelse; PIC mode",
                    "142": "lea     eax, [r12+5]",
                    "143": "mov     edx, 21h ; '!'",
                    "144": "bt      rdx, rax",
                    "145": "jnb     INSTR180",
                    "146": "mov     rax, [rsp+78h+var_38]",
                    "147": "sub     rax, gs:28h",
                    "148": "jnz     INSTR227",
                    "149": "add     rsp, 48h",
                    "150": "mov     eax, r12d",
                    "151": "pop     rbx",
                    "152": "pop     rbp",
                    "153": "pop     r12",
                    "154": "pop     r13",
                    "155": "pop     r14",
                    "156": "pop     r15",
                    "157": "jmp     __x86_return_thunk; PIC mode",
                    "158": "add     r12d, 1",
                    "159": "jmp     INSTR102",
                    "160": "mov     r14d, 1",
                    "161": "jmp     INSTR102",
                    "162": "lea     rsi, [rbx+398h]",
                    "163": "mov     rdx, r15",
                    "164": "mov     rdi, offset unk_AA0",
                    "165": "mov     r12d, 0FFFFFFFBh",
                    "166": "call    _printk; PIC mode",
                    "167": "jmp     short INSTR138",
                    "168": "xor     r12d, r12d",
                    "169": "xor     r13d, r13d",
                    "170": "mov     r8d, [rsp+78h+var_54]",
                    "171": "lea     rsi, [rbx+398h]",
                    "172": "mov     ecx, r13d",
                    "173": "mov     edx, r12d",
                    "174": "mov     rdi, offset unk_AD0",
                    "175": "call    _printk; PIC mode",
                    "176": "mov     rdi, [rsp+78h+var_50]",
                    "177": "test    rdi, rdi",
                    "178": "jz      short INSTR180",
                    "179": "call    __brelse; PIC mode",
                    "180": "mov     rax, [rsp+78h+var_60]",
                    "181": "mov     rdi, [rax+68h]",
                    "182": "call    kvfree; PIC mode",
                    "183": "mov     edx, 0FFFFFFFFh",
                    "184": "mov     esi, 0DC0h",
                    "185": "mov     edi, 20000h",
                    "186": "mov     rbx, [rbx+368h]",
                    "187": "call    kvmalloc_node_noprof; PIC mode",
                    "188": "test    rax, rax",
                    "189": "jz      INSTR228",
                    "190": "mov     [rbx+68h], rax",
                    "191": "mov     edx, 1",
                    "192": "xor     esi, esi",
                    "193": "xor     ecx, ecx",
                    "194": "xor     r8d, r8d",
                    "195": "jmp     short INSTR204",
                    "196": "add     ecx, edi",
                    "197": "xor     r8d, r8d",
                    "198": "cmp     ecx, 0FFFFh",
                    "199": "ja      short INSTR215",
                    "200": "cmp     edx, 0B65h",
                    "201": "jg      short INSTR215",
                    "202": "movzx   esi, ds:uni_def_upcase[rdx+rdx]",
                    "203": "add     rdx, 1",
                    "204": "movzx   edi, si",
                    "205": "test    r8b, r8b",
                    "206": "jnz     short INSTR196",
                    "207": "cmp     edi, ecx",
                    "208": "jz      short INSTR213",
                    "209": "cmp     si, 0FFFFh",
                    "210": "jz      short INSTR220",
                    "211": "mov     edi, ecx",
                    "212": "mov     [rax+rdi*2], si",
                    "213": "add     ecx, 1",
                    "214": "jmp     short INSTR198",
                    "215": "xor     r12d, r12d",
                    "216": "cmp     ecx, 0FFFEh",
                    "217": "ja      INSTR146",
                    "218": "mov     r12d, 0FFFFFFFBh",
                    "219": "jmp     INSTR146",
                    "220": "mov     r8d, 1",
                    "221": "jmp     short INSTR198",
                    "222": "mov     rdi, [rsp+78h+var_50]",
                    "223": "test    rdi, rdi",
                    "224": "jz      INSTR47",
                    "225": "call    __brelse; PIC mode",
                    "226": "jmp     INSTR47",
                    "227": "call    __stack_chk_fail; PIC mode",
                    "228": "mov     r12d, 0FFFFFFF4h",
                    "229": "jmp     INSTR146"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rbx, rdi",
                    "9": "sub     rsp, 40h",
                    "10": "mov     rbp, [rdi+368h]",
                    "11": "mov     r15b, [rdi+14h]",
                    "12": "mov     rax, gs:28h",
                    "13": "mov     [rsp+70h+var_38], rax",
                    "14": "xor     eax, eax",
                    "15": "mov     [rsp+70h+var_3C], 1",
                    "16": "mov     eax, [rbp+3Ch]",
                    "17": "mov     [rsp+70h+var_44], eax",
                    "18": "cmp     [rsp+70h+var_44], 0FFFFFFFFh",
                    "19": "jz      INSTR158",
                    "20": "xor     r12d, r12d",
                    "21": "cmp     [rbp+40h], r12d",
                    "22": "jbe     INSTR151",
                    "23": "lea     rcx, [rsp+70h+var_50]",
                    "24": "mov     edx, r12d",
                    "25": "lea     rsi, [rsp+70h+var_44]",
                    "26": "mov     rdi, rbx",
                    "27": "call    exfat_get_dentry; PIC mode",
                    "28": "mov     r14, rax",
                    "29": "test    rax, rax",
                    "30": "jz      INSTR198",
                    "31": "mov     rdi, rax",
                    "32": "call    exfat_get_entry_type; PIC mode",
                    "33": "test    eax, eax",
                    "34": "jnz     short INSTR38",
                    "35": "mov     rdi, [rsp+70h+var_50]",
                    "36": "call    brelse",
                    "37": "jmp     INSTR151",
                    "38": "cmp     eax, 102h",
                    "39": "jz      short INSTR44",
                    "40": "mov     rdi, [rsp+70h+var_50]",
                    "41": "inc     r12d",
                    "42": "call    brelse",
                    "43": "jmp     short INSTR21",
                    "44": "mov     eax, [r14+14h]",
                    "45": "mov     ecx, [rbp+18h]",
                    "46": "or      edx, 0FFFFFFFFh",
                    "47": "mov     esi, 0DC0h",
                    "48": "mov     edi, 20000h",
                    "49": "lea     r13d, [rax-2]",
                    "50": "mov     rax, [r14+18h]",
                    "51": "shl     r13, cl",
                    "52": "mov     ecx, r15d",
                    "53": "add     r13, [rbp+30h]",
                    "54": "mov     r15, [rbx+368h]",
                    "55": "lea     r12, [rax-1]",
                    "56": "mov     eax, [r14+4]",
                    "57": "shr     r12, cl",
                    "58": "mov     [rsp+70h+var_6C], eax",
                    "59": "mov     eax, [rbx+18h]",
                    "60": "inc     r12",
                    "61": "mov     [rsp+70h+var_60], eax",
                    "62": "call    kvmalloc_node_noprof; PIC mode",
                    "63": "mov     r14, rax",
                    "64": "mov     eax, 0FFFFFFF4h",
                    "65": "test    r14, r14",
                    "66": "jz      INSTR139",
                    "67": "lea     rax, [r12+r13]",
                    "68": "mov     [r15+68h], r14",
                    "69": "xor     r11d, r11d",
                    "70": "xor     r15d, r15d",
                    "71": "mov     [rsp+70h+var_68], rax",
                    "72": "xor     r12d, r12d",
                    "73": "cmp     [rsp+70h+var_68], r13",
                    "74": "jbe     INSTR127",
                    "75": "mov     edx, [rbx+18h]",
                    "76": "mov     ecx, 8",
                    "77": "mov     rsi, r13",
                    "78": "mov     [rsp+70h+var_59], r11b",
                    "79": "mov     rdi, [rbx+0C8h]",
                    "80": "call    __bread_gfp; PIC mode",
                    "81": "mov     r11b, [rsp+70h+var_59]",
                    "82": "test    rax, rax",
                    "83": "mov     r10, rax",
                    "84": "jnz     short INSTR91",
                    "85": "lea     rsi, [rbx+398h]",
                    "86": "mov     rdx, r13",
                    "87": "mov     rdi, offset unk_986",
                    "88": "call    _printk; PIC mode",
                    "89": "mov     eax, 0FFFFFFFBh",
                    "90": "jmp     INSTR139",
                    "91": "inc     r13",
                    "92": "xor     esi, esi",
                    "93": "mov     rdi, [r10+28h]",
                    "94": "cmp     [rsp+70h+var_60], esi",
                    "95": "jbe     short INSTR117",
                    "96": "cmp     r12d, 0FFFFh",
                    "97": "ja      short INSTR117",
                    "98": "mov     eax, esi",
                    "99": "movzx   edx, word ptr [rdi+rax]",
                    "100": "mov     eax, edx",
                    "101": "test    r11b, r11b",
                    "102": "jz      short INSTR106",
                    "103": "add     r12d, edx",
                    "104": "xor     r11d, r11d",
                    "105": "jmp     short INSTR115",
                    "106": "cmp     edx, r12d",
                    "107": "jz      short INSTR112",
                    "108": "cmp     dx, 0FFFFh",
                    "109": "jz      short INSTR114",
                    "110": "mov     edx, r12d",
                    "111": "mov     [r14+rdx*2], ax",
                    "112": "inc     r12d",
                    "113": "jmp     short INSTR115",
                    "114": "mov     r11b, 1",
                    "115": "add     esi, 2",
                    "116": "jmp     short INSTR93",
                    "117": "mov     edx, r15d",
                    "118": "mov     ecx, 2",
                    "119": "mov     [rsp+70h+var_59], r11b",
                    "120": "mov     [rsp+70h+var_58], r10",
                    "121": "call    exfat_calc_chksum32; PIC mode",
                    "122": "mov     rdi, [rsp+70h+var_58]",
                    "123": "mov     r15d, eax",
                    "124": "call    brelse",
                    "125": "mov     r11b, [rsp+70h+var_59]",
                    "126": "jmp     INSTR73",
                    "127": "cmp     r12d, 0FFFEh",
                    "128": "jbe     short INSTR132",
                    "129": "xor     eax, eax",
                    "130": "cmp     [rsp+70h+var_6C], r15d",
                    "131": "jz      short INSTR139",
                    "132": "mov     r8d, [rsp+70h+var_6C]",
                    "133": "lea     rsi, [rbx+398h]",
                    "134": "mov     ecx, r15d",
                    "135": "mov     edx, r12d",
                    "136": "mov     rdi, offset unk_9B6",
                    "137": "call    _printk; PIC mode",
                    "138": "mov     eax, 0FFFFFFEAh",
                    "139": "mov     rdi, [rsp+70h+var_50]",
                    "140": "mov     [rsp+70h+var_6C], eax",
                    "141": "call    brelse",
                    "142": "mov     eax, [rsp+70h+var_6C]",
                    "143": "mov     edx, 420000h",
                    "144": "lea     ecx, [rax+16h]",
                    "145": "shr     rdx, cl",
                    "146": "and     dl, 1",
                    "147": "jnz     INSTR199",
                    "148": "mov     rdi, rbp",
                    "149": "call    exfat_free_upcase_table; PIC mode",
                    "150": "jmp     short INSTR158",
                    "151": "mov     esi, [rsp+70h+var_44]",
                    "152": "lea     rdx, [rsp+70h+var_44]",
                    "153": "mov     rdi, rbx",
                    "154": "call    exfat_ent_get; PIC mode",
                    "155": "test    eax, eax",
                    "156": "jz      INSTR18",
                    "157": "jmp     INSTR198",
                    "158": "or      edx, 0FFFFFFFFh",
                    "159": "mov     esi, 0DC0h",
                    "160": "mov     edi, 20000h",
                    "161": "mov     rbx, [rbx+368h]",
                    "162": "call    kvmalloc_node_noprof; PIC mode",
                    "163": "mov     rcx, rax",
                    "164": "mov     eax, 0FFFFFFF4h",
                    "165": "test    rcx, rcx",
                    "166": "jz      short INSTR199",
                    "167": "mov     [rbx+68h], rcx",
                    "168": "mov     eax, 1",
                    "169": "xor     edx, edx",
                    "170": "xor     esi, esi",
                    "171": "mov     r9, offset unk_A5E",
                    "172": "movzx   r8d, word ptr [r9+rax*2]",
                    "173": "mov     edi, r8d",
                    "174": "test    sil, sil",
                    "175": "jz      short INSTR179",
                    "176": "add     edx, r8d",
                    "177": "xor     esi, esi",
                    "178": "jmp     short INSTR188",
                    "179": "cmp     r8d, edx",
                    "180": "jz      short INSTR185",
                    "181": "cmp     r8w, 0FFFFh",
                    "182": "jz      short INSTR187",
                    "183": "mov     r8d, edx",
                    "184": "mov     [rcx+r8*2], di",
                    "185": "inc     edx",
                    "186": "jmp     short INSTR188",
                    "187": "mov     sil, 1",
                    "188": "cmp     edx, 0FFFFh",
                    "189": "setbe   r8b",
                    "190": "cmp     eax, 0B65h",
                    "191": "setle   dil",
                    "192": "inc     rax",
                    "193": "test    r8b, dil",
                    "194": "jnz     short INSTR172",
                    "195": "xor     eax, eax",
                    "196": "cmp     edx, 0FFFEh",
                    "197": "ja      short INSTR199",
                    "198": "mov     eax, 0FFFFFFFBh",
                    "199": "mov     rdx, [rsp+70h+var_38]",
                    "200": "sub     rdx, gs:28h",
                    "201": "jz      short INSTR203",
                    "202": "call    __stack_chk_fail; PIC mode",
                    "203": "add     rsp, 40h",
                    "204": "pop     rbx",
                    "205": "pop     rbp",
                    "206": "pop     r12",
                    "207": "pop     r13",
                    "208": "pop     r14",
                    "209": "pop     r15",
                    "210": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "mov     edi, eax",
                    "5": "push    esi",
                    "6": "push    ebx",
                    "7": "sub     esp, 50h",
                    "8": "mov     [ebp+var_44], eax",
                    "9": "mov     esi, [edi+1FCh]",
                    "10": "mov     eax, fs:__stack_chk_guard",
                    "11": "mov     [ebp+var_10], eax",
                    "12": "xor     eax, eax",
                    "13": "movzx   eax, byte ptr [edi+0Ch]",
                    "14": "mov     [ebp+var_14], 1",
                    "15": "mov     edx, [esi+38h]",
                    "16": "mov     byte ptr [ebp+var_28], al",
                    "17": "mov     [ebp+var_1C], edx",
                    "18": "cmp     edx, 0FFFFFFFFh",
                    "19": "jz      INSTR190",
                    "20": "mov     eax, [esi+3Ch]",
                    "21": "xor     edi, edi",
                    "22": "test    eax, eax",
                    "23": "jz      short INSTR46",
                    "24": "lea     eax, [ebp+var_20]",
                    "25": "mov     ecx, edi",
                    "26": "mov     [esp], eax",
                    "27": "mov     eax, [ebp+var_44]",
                    "28": "lea     edx, [ebp+var_1C]",
                    "29": "call    exfat_get_dentry",
                    "30": "test    eax, eax",
                    "31": "mov     ebx, eax",
                    "32": "jz      INSTR254",
                    "33": "call    exfat_get_entry_type",
                    "34": "test    eax, eax",
                    "35": "jz      INSTR256",
                    "36": "cmp     eax, 102h",
                    "37": "jz      short INSTR53",
                    "38": "mov     eax, [ebp+var_20]",
                    "39": "test    eax, eax",
                    "40": "jz      short INSTR42",
                    "41": "call    __brelse",
                    "42": "inc     edi",
                    "43": "cmp     [esi+3Ch], edi",
                    "44": "ja      short INSTR24",
                    "45": "mov     edx, [ebp+var_1C]",
                    "46": "mov     eax, [ebp+var_44]",
                    "47": "lea     ecx, [ebp+var_1C]",
                    "48": "call    exfat_ent_get",
                    "49": "test    eax, eax",
                    "50": "jnz     INSTR254",
                    "51": "mov     edx, [ebp+var_1C]",
                    "52": "jmp     short INSTR18",
                    "53": "mov     eax, [ebx+14h]",
                    "54": "xor     edx, edx",
                    "55": "xor     edi, edi",
                    "56": "mov     ecx, [esi+18h]",
                    "57": "sub     eax, 2",
                    "58": "shld    edx, eax, cl",
                    "59": "shl     eax, cl",
                    "60": "test    cl, 20h",
                    "61": "movzx   ecx, byte ptr [ebp+var_28]",
                    "62": "cmovnz  edx, eax",
                    "63": "cmovnz  eax, edi",
                    "64": "mov     edi, [ebx+1Ch]",
                    "65": "add     eax, [esi+2Ch]",
                    "66": "adc     edx, [esi+30h]",
                    "67": "mov     [ebp+var_30], eax",
                    "68": "mov     esi, [ebx+18h]",
                    "69": "mov     [ebp+var_2C], edx",
                    "70": "add     esi, 0FFFFFFFFh",
                    "71": "adc     edi, 0FFFFFFFFh",
                    "72": "mov     eax, esi",
                    "73": "mov     edx, edi",
                    "74": "xor     esi, esi",
                    "75": "shrd    eax, edi, cl",
                    "76": "shr     edx, cl",
                    "77": "test    cl, 20h",
                    "78": "cmovnz  eax, edx",
                    "79": "cmovnz  edx, esi",
                    "80": "mov     esi, eax",
                    "81": "mov     edi, edx",
                    "82": "add     esi, 1",
                    "83": "mov     ecx, 0FFFFFFFFh",
                    "84": "adc     edi, 0",
                    "85": "mov     edx, 0DC0h",
                    "86": "mov     [ebp+var_24], edi",
                    "87": "mov     edi, [ebx+4]",
                    "88": "mov     eax, 20000h",
                    "89": "mov     [ebp+var_28], esi",
                    "90": "mov     [ebp+var_48], edi",
                    "91": "mov     edi, [ebp+var_44]",
                    "92": "mov     ebx, [edi+1FCh]",
                    "93": "mov     edi, [edi+10h]",
                    "94": "call    kvmalloc_node_noprof",
                    "95": "mov     [ebp+var_40], eax",
                    "96": "test    eax, eax",
                    "97": "jz      INSTR273",
                    "98": "mov     [ebx+58h], eax",
                    "99": "mov     eax, [ebp+var_30]",
                    "100": "mov     ebx, [ebp+var_28]",
                    "101": "mov     edx, [ebp+var_2C]",
                    "102": "mov     esi, [ebp+var_24]",
                    "103": "add     ebx, eax",
                    "104": "mov     [ebp+var_3C], ebx",
                    "105": "adc     esi, edx",
                    "106": "cmp     eax, ebx",
                    "107": "mov     [ebp+var_38], esi",
                    "108": "mov     eax, edx",
                    "109": "sbb     eax, esi",
                    "110": "jnb     INSTR261",
                    "111": "mov     [ebp+var_34], 0",
                    "112": "xor     ebx, ebx",
                    "113": "xor     esi, esi",
                    "114": "lea     esi, [esi+0]",
                    "115": "mov     ecx, [ebp+var_44]",
                    "116": "mov     edx, 8",
                    "117": "mov     eax, [ecx+74h]",
                    "118": "mov     [esp+4], edx",
                    "119": "mov     edx, [ecx+10h]",
                    "120": "mov     ecx, [ebp+var_2C]",
                    "121": "mov     [esp], edx",
                    "122": "mov     edx, [ebp+var_30]",
                    "123": "call    __bread_gfp",
                    "124": "mov     [ebp+var_28], eax",
                    "125": "test    eax, eax",
                    "126": "jz      INSTR241",
                    "127": "add     [ebp+var_30], 1",
                    "128": "mov     eax, [ebp+var_28]",
                    "129": "adc     [ebp+var_2C], 0",
                    "130": "xor     edx, edx",
                    "131": "cmp     esi, 0FFFFh",
                    "132": "mov     eax, [eax+18h]",
                    "133": "ja      short INSTR162",
                    "134": "test    edi, edi",
                    "135": "jnz     short INSTR144",
                    "136": "jmp     short INSTR162",
                    "137": "add     esi, ecx",
                    "138": "xor     ebx, ebx",
                    "139": "add     edx, 2",
                    "140": "cmp     edi, edx",
                    "141": "jbe     short INSTR162",
                    "142": "cmp     esi, 0FFFFh",
                    "143": "ja      short INSTR162",
                    "144": "test    bl, bl",
                    "145": "movzx   ecx, word ptr [eax+edx]",
                    "146": "jnz     short INSTR137",
                    "147": "cmp     ecx, esi",
                    "148": "jz      INSTR237",
                    "149": "cmp     ecx, 0FFFFh",
                    "150": "jz      INSTR239",
                    "151": "mov     eax, [ebp+var_40]",
                    "152": "add     edx, 2",
                    "153": "mov     [eax+esi*2], cx",
                    "154": "mov     eax, [ebp+var_28]",
                    "155": "inc     esi",
                    "156": "cmp     edi, edx",
                    "157": "mov     eax, [eax+18h]",
                    "158": "ja      short INSTR142",
                    "159": "lea     esi, [esi+0]",
                    "160": "lea     esi, [esi+0]",
                    "161": "nop",
                    "162": "mov     dword ptr [esp], 2",
                    "163": "mov     ecx, [ebp+var_34]",
                    "164": "call    exfat_calc_chksum32",
                    "165": "mov     [ebp+var_34], eax",
                    "166": "mov     eax, [ebp+var_28]",
                    "167": "call    __brelse",
                    "168": "mov     eax, [ebp+var_30]",
                    "169": "mov     ecx, [ebp+var_3C]",
                    "170": "mov     edx, [ebp+var_2C]",
                    "171": "cmp     eax, ecx",
                    "172": "mov     eax, edx",
                    "173": "sbb     eax, [ebp+var_38]",
                    "174": "jb      INSTR115",
                    "175": "cmp     esi, 0FFFEh",
                    "176": "jbe     INSTR263",
                    "177": "mov     edi, [ebp+var_34]",
                    "178": "cmp     [ebp+var_48], edi",
                    "179": "jnz     INSTR263",
                    "180": "xor     ebx, ebx",
                    "181": "mov     eax, [ebp+var_20]",
                    "182": "test    eax, eax",
                    "183": "jz      INSTR227",
                    "184": "call    __brelse",
                    "185": "lea     ecx, [ebx+5]",
                    "186": "mov     eax, 21h ; '!'",
                    "187": "shr     eax, cl",
                    "188": "test    al, 1",
                    "189": "jnz     short INSTR227",
                    "190": "mov     eax, [ebp+var_44]",
                    "191": "mov     ecx, 0FFFFFFFFh",
                    "192": "mov     edx, 0DC0h",
                    "193": "mov     ebx, [eax+1FCh]",
                    "194": "mov     eax, 20000h",
                    "195": "call    kvmalloc_node_noprof",
                    "196": "test    eax, eax",
                    "197": "mov     esi, eax",
                    "198": "jz      INSTR280",
                    "199": "mov     [ebx+58h], eax",
                    "200": "xor     ecx, ecx",
                    "201": "xor     ebx, ebx",
                    "202": "xor     eax, eax",
                    "203": "xor     edx, edx",
                    "204": "jmp     short INSTR213",
                    "205": "add     ecx, ebx",
                    "206": "xor     eax, eax",
                    "207": "inc     edx",
                    "208": "cmp     ecx, 0FFFFh",
                    "209": "ja      short INSTR224",
                    "210": "cmp     edx, 0B65h",
                    "211": "jg      short INSTR224",
                    "212": "movzx   ebx, ds:uni_def_upcase[edx+edx]",
                    "213": "test    al, al",
                    "214": "jnz     short INSTR205",
                    "215": "cmp     ecx, ebx",
                    "216": "jz      short INSTR220",
                    "217": "cmp     ebx, 0FFFFh",
                    "218": "jz      short INSTR252",
                    "219": "mov     [esi+ecx*2], bx",
                    "220": "inc     ecx",
                    "221": "inc     edx",
                    "222": "cmp     ecx, 0FFFFh",
                    "223": "jbe     short INSTR210",
                    "224": "xor     ebx, ebx",
                    "225": "cmp     ecx, 0FFFEh",
                    "226": "jbe     short INSTR254",
                    "227": "mov     eax, [ebp+var_10]",
                    "228": "sub     eax, fs:__stack_chk_guard",
                    "229": "jnz     INSTR279",
                    "230": "add     esp, 50h",
                    "231": "mov     eax, ebx",
                    "232": "pop     ebx",
                    "233": "pop     esi",
                    "234": "pop     edi",
                    "235": "pop     ebp",
                    "236": "retn",
                    "237": "inc     esi",
                    "238": "jmp     INSTR139",
                    "239": "mov     bl, 1",
                    "240": "jmp     INSTR139",
                    "241": "mov     dword ptr [esp], offset unk_8000B44",
                    "242": "mov     eax, [ebp+var_30]",
                    "243": "mov     ebx, 0FFFFFFFBh",
                    "244": "mov     edx, [ebp+var_2C]",
                    "245": "mov     [esp+8], eax",
                    "246": "mov     eax, [ebp+var_44]",
                    "247": "mov     [esp+0Ch], edx",
                    "248": "add     eax, 21Ch",
                    "249": "mov     [esp+4], eax",
                    "250": "call    _printk",
                    "251": "jmp     INSTR181",
                    "252": "mov     al, 1",
                    "253": "jmp     INSTR207",
                    "254": "mov     ebx, 0FFFFFFFBh",
                    "255": "jmp     short INSTR227",
                    "256": "mov     eax, [ebp+var_20]",
                    "257": "test    eax, eax",
                    "258": "jz      INSTR45",
                    "259": "call    __brelse",
                    "260": "jmp     INSTR45",
                    "261": "mov     [ebp+var_34], 0",
                    "262": "xor     esi, esi",
                    "263": "mov     [esp+8], esi",
                    "264": "mov     eax, [ebp+var_48]",
                    "265": "mov     dword ptr [esp], offset unk_8000B74",
                    "266": "mov     [esp+10h], eax",
                    "267": "mov     eax, [ebp+var_34]",
                    "268": "mov     [esp+0Ch], eax",
                    "269": "mov     eax, [ebp+var_44]",
                    "270": "add     eax, 21Ch",
                    "271": "mov     [esp+4], eax",
                    "272": "call    _printk",
                    "273": "mov     eax, [ebp+var_20]",
                    "274": "test    eax, eax",
                    "275": "jz      INSTR190",
                    "276": "call    __brelse",
                    "277": "lea     esi, [esi+0]",
                    "278": "jmp     INSTR190",
                    "279": "call    __stack_chk_fail",
                    "280": "mov     ebx, 0FFFFFFF4h",
                    "281": "nop",
                    "282": "jmp     INSTR227"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_90]!",
                    "3": "MRS             X1, SP_EL0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X21, X22, [SP,#0x90+var_70]",
                    "6": "MOV             X22, X0",
                    "7": "ADD             X0, X1, #0x550",
                    "8": "STP             X19, X20, [SP,#0x90+var_80]",
                    "9": "STP             X23, X24, [SP,#0x90+var_60]",
                    "10": "LDR             X23, [X22,#0x368]",
                    "11": "LDR             X1, [X0]",
                    "12": "STR             X1, [SP,#0x90+var_8]",
                    "13": "MOV             X1, #0",
                    "14": "LDRB            W21, [X22,#0x14]",
                    "15": "MOV             W0, #1",
                    "16": "STRB            W0, [SP,#0x90+var_C]",
                    "17": "LDR             W1, [X23,#0x3C]",
                    "18": "STR             W1, [SP,#0x90+var_14]",
                    "19": "CMN             W1, #1",
                    "20": "B.EQ            loc_884",
                    "21": "LDR             W0, [X23,#0x40]",
                    "22": "MOV             W20, #0",
                    "23": "CBZ             W0, loc_70C",
                    "24": "ADD             X3, SP, #0x90+var_20",
                    "25": "MOV             W2, W20",
                    "26": "ADD             X1, SP, #0x90+var_14",
                    "27": "MOV             X0, X22",
                    "28": "BL              exfat_get_dentry",
                    "29": "MOV             X19, X0",
                    "30": "CBZ             X0, loc_98C",
                    "31": "BL              exfat_get_entry_type",
                    "32": "CBZ             W0, loc_994",
                    "33": "CMP             W0, #0x102",
                    "34": "B.EQ            loc_724",
                    "35": "LDR             X0, [SP,#0x90+var_20]",
                    "36": "CBZ             X0, loc_6F8",
                    "37": "BL              __brelse",
                    "38": "LDR             W0, [X23,#0x40]",
                    "39": "ADD             W20, W20, #1",
                    "40": "CMP             W0, W20",
                    "41": "B.HI            loc_6C0",
                    "42": "LDR             W1, [SP,#0x90+var_14]",
                    "43": "ADD             X2, SP, #0x90+var_14",
                    "44": "MOV             X0, X22",
                    "45": "BL              exfat_ent_get",
                    "46": "CBNZ            W0, loc_98C",
                    "47": "LDR             W1, [SP,#0x90+var_14]",
                    "48": "B               loc_6AC",
                    "49": "STP             X25, X26, [SP,#0x90+var_50]",
                    "50": "MOV             W2, #0xFFFFFFFF",
                    "51": "MOV             W1, #0xDC0",
                    "52": "STP             X27, X28, [SP,#0x90+var_40]",
                    "53": "MOV             X0, #0x20000",
                    "54": "LDR             W4, [X19,#0x14]",
                    "55": "LDR             W5, [X23,#0x18]",
                    "56": "LDR             X3, [X23,#0x30]",
                    "57": "SUB             W4, W4, #2",
                    "58": "LDR             X24, [X19,#0x18]",
                    "59": "LSL             X4, X4, X5",
                    "60": "ADD             X25, X4, X3",
                    "61": "LDR             W3, [X19,#4]",
                    "62": "SUB             X24, X24, #1",
                    "63": "LDR             W27, [X22,#0x18]",
                    "64": "STR             W3, [SP,#0x90+var_24]",
                    "65": "LSR             X24, X24, X21",
                    "66": "ADD             X24, X24, #1",
                    "67": "LDR             X19, [X22,#0x368]",
                    "68": "BL              kvmalloc_node_noprof",
                    "69": "MOV             X23, X0",
                    "70": "CBZ             X0, loc_9C8",
                    "71": "ADD             X24, X24, X25",
                    "72": "STR             X0, [X19,#0x68]",
                    "73": "CMP             X25, X24",
                    "74": "B.CS            loc_9A4",
                    "75": "MOV             W20, #0",
                    "76": "MOV             W19, #0",
                    "77": "MOV             W21, #0",
                    "78": "MOV             W26, #0xFFFF",
                    "79": "NOP",
                    "80": "LDR             W2, [X22,#0x18]",
                    "81": "MOV             X1, X25",
                    "82": "LDR             X0, [X22,#0xC8]",
                    "83": "MOV             W3, #8",
                    "84": "BL              __bread_gfp",
                    "85": "MOV             X28, X0",
                    "86": "CBZ             X0, loc_958",
                    "87": "CMP             W27, #0",
                    "88": "ADD             X25, X25, #1",
                    "89": "CCMP            W19, W26, #2, NE",
                    "90": "MOV             W1, #0",
                    "91": "LDR             X0, [X0,#0x28]",
                    "92": "B.LS            loc_7F0",
                    "93": "B               loc_828",
                    "94": "ADD             W19, W19, W3",
                    "95": "MOV             W20, #0",
                    "96": "ADD             W1, W1, #2",
                    "97": "CMP             W27, W1",
                    "98": "CCMP            W19, W26, #2, HI",
                    "99": "B.HI            loc_828",
                    "100": "LDRH            W3, [X0,W1,UXTW]",
                    "101": "CBNZ            W20, loc_7D8",
                    "102": "CMP             W19, W3",
                    "103": "B.EQ            loc_948",
                    "104": "CMP             W3, W26",
                    "105": "B.EQ            loc_950",
                    "106": "ADD             W1, W1, #2",
                    "107": "STRH            W3, [X23,W19,UXTW#1]",
                    "108": "CMP             W27, W1",
                    "109": "ADD             W19, W19, #1",
                    "110": "CCMP            W19, W26, #2, HI",
                    "111": "LDR             X0, [X28,#0x28]",
                    "112": "B.LS            loc_7F0",
                    "113": "NOP",
                    "114": "MOV             W2, W21",
                    "115": "MOV             W3, #2",
                    "116": "BL              exfat_calc_chksum32",
                    "117": "MOV             W21, W0",
                    "118": "MOV             X0, X28",
                    "119": "BL              __brelse",
                    "120": "CMP             X24, X25",
                    "121": "B.HI            loc_7A0",
                    "122": "MOV             W0, #0xFFFE",
                    "123": "CMP             W19, W0",
                    "124": "LDR             W0, [SP,#0x90+var_24]",
                    "125": "MOV             W20, #0",
                    "126": "CCMP            W0, W21, #0, HI",
                    "127": "B.NE            loc_9AC",
                    "128": "LDR             X0, [SP,#0x90+var_20]",
                    "129": "CBZ             X0, loc_978",
                    "130": "BL              __brelse",
                    "131": "ADD             W1, W20, #5",
                    "132": "MOV             X0, #0x21 ; '!'",
                    "133": "LDP             X25, X26, [SP,#0x90+var_50]",
                    "134": "LSR             X0, X0, X1",
                    "135": "LDP             X27, X28, [SP,#0x90+var_40]",
                    "136": "TBNZ            W0, #0, loc_914",
                    "137": "MOV             W2, #0xFFFFFFFF",
                    "138": "MOV             W1, #0xDC0",
                    "139": "MOV             X0, #0x20000",
                    "140": "LDR             X19, [X22,#0x368]",
                    "141": "BL              kvmalloc_node_noprof",
                    "142": "CBZ             X0, loc_9EC",
                    "143": "STR             X0, [X19,#0x68]",
                    "144": "ADRP            X6, #uni_def_upcase@PAGE",
                    "145": "MOV             X1, #1",
                    "146": "ADD             X6, X6, #uni_def_upcase@PAGEOFF",
                    "147": "MOV             W3, #0",
                    "148": "MOV             W2, #0",
                    "149": "MOV             W4, #0",
                    "150": "MOV             W5, #0xFFFF",
                    "151": "CBZ             W4, loc_8E0",
                    "152": "ADD             W2, W2, W3",
                    "153": "MOV             W4, #0",
                    "154": "CMP             W1, #0xB65",
                    "155": "CCMP            W2, W5, #2, LE",
                    "156": "B.HI            loc_904",
                    "157": "LDRH            W3, [X6,X1,LSL#1]",
                    "158": "ADD             X1, X1, #1",
                    "159": "CBNZ            W4, loc_8C0",
                    "160": "CMP             W2, W3",
                    "161": "B.EQ            loc_8F4",
                    "162": "CMP             W3, W5",
                    "163": "B.EQ            loc_984",
                    "164": "STRH            W3, [X0,W2,UXTW#1]",
                    "165": "ADD             W2, W2, #1",
                    "166": "CMP             W1, #0xB65",
                    "167": "CCMP            W2, W5, #2, LE",
                    "168": "B.LS            loc_8D4",
                    "169": "MOV             W0, #0xFFFE",
                    "170": "MOV             W20, #0",
                    "171": "CMP             W2, W0",
                    "172": "B.LS            loc_98C",
                    "173": "MRS             X0, SP_EL0",
                    "174": "LDR             X2, [SP,#0x90+var_8]",
                    "175": "LDR             X1, [X0,#0x550]",
                    "176": "SUBS            X2, X2, X1",
                    "177": "MOV             X1, #0",
                    "178": "B.NE            loc_9E0",
                    "179": "MOV             W0, W20",
                    "180": "LDP             X19, X20, [SP,#0x90+var_80]",
                    "181": "LDP             X21, X22, [SP,#0x90+var_70]",
                    "182": "LDP             X23, X24, [SP,#0x90+var_60]",
                    "183": "LDP             X29, X30, [SP+0x90+var_90],#0x90",
                    "184": "AUTIASP",
                    "185": "RET",
                    "186": "ADD             W19, W19, #1",
                    "187": "B               loc_7E0",
                    "188": "MOV             W20, #1",
                    "189": "B               loc_7E0",
                    "190": "MOV             X2, X25",
                    "191": "ADD             X1, X22, #0x398",
                    "192": "ADRL            X0, unk_A68",
                    "193": "BL              _printk",
                    "194": "MOV             W20, #0xFFFFFFFB",
                    "195": "LDR             X0, [SP,#0x90+var_20]",
                    "196": "CBNZ            X0, loc_868",
                    "197": "LDP             X25, X26, [SP,#0x90+var_50]",
                    "198": "LDP             X27, X28, [SP,#0x90+var_40]",
                    "199": "B               loc_914",
                    "200": "MOV             W4, #1",
                    "201": "B               loc_8C8",
                    "202": "MOV             W20, #0xFFFFFFFB",
                    "203": "B               loc_914",
                    "204": "LDR             X0, [SP,#0x90+var_20]",
                    "205": "CBZ             X0, loc_708",
                    "206": "BL              __brelse",
                    "207": "B               loc_708",
                    "208": "MOV             W21, #0",
                    "209": "MOV             W19, #0",
                    "210": "LDR             W4, [SP,#0x90+var_24]",
                    "211": "ADRP            X0, #unk_A98@PAGE",
                    "212": "MOV             W3, W21",
                    "213": "MOV             W2, W19",
                    "214": "ADD             X1, X22, #0x398",
                    "215": "ADD             X0, X0, #unk_A98@PAGEOFF",
                    "216": "BL              _printk",
                    "217": "LDR             X0, [SP,#0x90+var_20]",
                    "218": "CBZ             X0, loc_9D4",
                    "219": "BL              __brelse",
                    "220": "LDP             X25, X26, [SP,#0x90+var_50]",
                    "221": "LDP             X27, X28, [SP,#0x90+var_40]",
                    "222": "B               loc_884",
                    "223": "STP             X25, X26, [SP,#0x90+var_50]",
                    "224": "STP             X27, X28, [SP,#0x90+var_40]",
                    "225": "BL              __stack_chk_fail",
                    "226": "MOV             W20, #0xFFFFFFF4",
                    "227": "B               loc_914"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 40h",
                    "8": "mov     r13, rdi",
                    "9": "mov     rax, gs:28h",
                    "10": "mov     [rsp+70h+var_38], rax",
                    "11": "movzx   eax, byte ptr [rdi+14h]",
                    "12": "mov     [rsp+70h+var_60], rax",
                    "13": "mov     rbp, [rdi+368h]",
                    "14": "mov     eax, [rbp+3Ch]",
                    "15": "mov     [rsp+70h+var_48], eax",
                    "16": "mov     [rsp+70h+var_40], 1",
                    "17": "cmp     eax, 0FFFFFFFFh",
                    "18": "jz      INSTR162",
                    "19": "lea     r15, [rsp+70h+var_48]",
                    "20": "lea     r12, [rsp+70h+var_50]",
                    "21": "cmp     dword ptr [rbp+40h], 0",
                    "22": "jz      short INSTR51",
                    "23": "xor     ebx, ebx",
                    "24": "jmp     short INSTR28",
                    "25": "add     ebx, 1",
                    "26": "cmp     ebx, [rbp+40h]",
                    "27": "jnb     short INSTR51",
                    "28": "mov     rdi, r13",
                    "29": "mov     rsi, r15",
                    "30": "mov     edx, ebx",
                    "31": "mov     rcx, r12",
                    "32": "call    exfat_get_dentry; PIC mode",
                    "33": "test    rax, rax",
                    "34": "jz      short INSTR60",
                    "35": "mov     r14, rax",
                    "36": "mov     rdi, rax",
                    "37": "call    exfat_get_entry_type; PIC mode",
                    "38": "cmp     eax, 102h",
                    "39": "jz      short INSTR62",
                    "40": "test    eax, eax",
                    "41": "jz      short INSTR47",
                    "42": "mov     rdi, [rsp+70h+var_50]",
                    "43": "test    rdi, rdi",
                    "44": "jz      short INSTR25",
                    "45": "call    __brelse; PIC mode",
                    "46": "jmp     short INSTR25",
                    "47": "mov     rdi, [rsp+70h+var_50]",
                    "48": "test    rdi, rdi",
                    "49": "jz      short INSTR51",
                    "50": "call    __brelse; PIC mode",
                    "51": "mov     esi, [rsp+70h+var_48]",
                    "52": "mov     rdi, r13",
                    "53": "mov     rdx, r15",
                    "54": "call    exfat_ent_get; PIC mode",
                    "55": "test    eax, eax",
                    "56": "jnz     short INSTR60",
                    "57": "cmp     [rsp+70h+var_48], 0FFFFFFFFh",
                    "58": "jnz     short INSTR21",
                    "59": "jmp     INSTR162",
                    "60": "mov     r14d, 0FFFFFFFBh",
                    "61": "jmp     INSTR207",
                    "62": "mov     r12d, [r14+4]",
                    "63": "mov     rax, r13",
                    "64": "mov     r13d, [r14+14h]",
                    "65": "mov     rbx, [r14+18h]",
                    "66": "add     r13d, 0FFFFFFFEh",
                    "67": "mov     cl, [rbp+18h]",
                    "68": "shl     r13, cl",
                    "69": "add     r13, [rbp+30h]",
                    "70": "mov     rbp, [rax+368h]",
                    "71": "mov     [rsp+70h+var_70], rax",
                    "72": "mov     r15d, [rax+18h]",
                    "73": "mov     edi, 20000h",
                    "74": "mov     esi, 0DC0h",
                    "75": "mov     edx, 0FFFFFFFFh",
                    "76": "call    kvmalloc_node_noprof; PIC mode",
                    "77": "test    rax, rax",
                    "78": "jz      INSTR152",
                    "79": "add     rbx, 0FFFFFFFFFFFFFFFFh",
                    "80": "mov     rcx, [rsp+70h+var_60]",
                    "81": "shr     rbx, cl",
                    "82": "mov     [rbp+68h], rax",
                    "83": "lea     rcx, [rbx+r13]",
                    "84": "add     rcx, 1",
                    "85": "mov     [rsp+70h+var_60], rcx",
                    "86": "cmp     r13, rcx",
                    "87": "jnb     INSTR219",
                    "88": "mov     [rsp+70h+var_58], rax",
                    "89": "mov     [rsp+70h+var_64], r12d",
                    "90": "xor     ebx, ebx",
                    "91": "xor     ebp, ebp",
                    "92": "xor     r12d, r12d",
                    "93": "jmp     short INSTR103",
                    "94": "mov     rdi, [r14+28h]",
                    "95": "mov     edx, ebp",
                    "96": "mov     ecx, 2",
                    "97": "call    exfat_calc_chksum32; PIC mode",
                    "98": "mov     ebp, eax",
                    "99": "mov     rdi, r14",
                    "100": "call    __brelse; PIC mode",
                    "101": "cmp     r13, [rsp+70h+var_60]",
                    "102": "jz      INSTR144",
                    "103": "mov     rax, [rsp+70h+var_70]",
                    "104": "mov     rdi, [rax+0C8h]",
                    "105": "mov     edx, [rax+18h]",
                    "106": "mov     rsi, r13",
                    "107": "mov     ecx, 8",
                    "108": "call    __bread_gfp; PIC mode",
                    "109": "test    rax, rax",
                    "110": "jz      INSTR223",
                    "111": "mov     r14, rax",
                    "112": "add     r13, 1",
                    "113": "xor     esi, esi",
                    "114": "test    r15d, r15d",
                    "115": "jz      short INSTR94",
                    "116": "cmp     ebx, 0FFFFh",
                    "117": "mov     rdx, [rsp+70h+var_58]",
                    "118": "ja      short INSTR94",
                    "119": "xor     esi, esi",
                    "120": "mov     rax, [r14+28h]",
                    "121": "mov     ecx, esi",
                    "122": "movzx   eax, word ptr [rax+rcx]",
                    "123": "movzx   ecx, ax",
                    "124": "test    r12b, r12b",
                    "125": "jnz     short INSTR134",
                    "126": "cmp     ebx, ecx",
                    "127": "jz      short INSTR132",
                    "128": "cmp     ax, 0FFFFh",
                    "129": "jz      short INSTR142",
                    "130": "mov     ecx, ebx",
                    "131": "mov     [rdx+rcx*2], ax",
                    "132": "add     ebx, 1",
                    "133": "jmp     short INSTR135",
                    "134": "add     ebx, ecx",
                    "135": "xor     r12d, r12d",
                    "136": "add     esi, 2",
                    "137": "cmp     esi, r15d",
                    "138": "jnb     INSTR94",
                    "139": "cmp     ebx, 10000h",
                    "140": "jb      short INSTR120",
                    "141": "jmp     INSTR94",
                    "142": "mov     r12b, 1",
                    "143": "jmp     short INSTR136",
                    "144": "cmp     ebx, 0FFFFh",
                    "145": "jb      INSTR231",
                    "146": "xor     r14d, r14d",
                    "147": "mov     r12d, [rsp+70h+var_64]",
                    "148": "cmp     ebp, r12d",
                    "149": "mov     r13, [rsp+70h+var_70]",
                    "150": "jz      short INSTR154",
                    "151": "jmp     INSTR233",
                    "152": "mov     r14d, 0FFFFFFF4h",
                    "153": "mov     r13, [rsp+70h+var_70]",
                    "154": "mov     rdi, [rsp+70h+var_50]",
                    "155": "test    rdi, rdi",
                    "156": "jz      short INSTR158",
                    "157": "call    __brelse; PIC mode",
                    "158": "cmp     r14d, 0FFFFFFFBh",
                    "159": "jz      INSTR207",
                    "160": "test    r14d, r14d",
                    "161": "jz      INSTR207",
                    "162": "mov     rbx, [r13+368h]",
                    "163": "mov     edi, 20000h",
                    "164": "mov     esi, 0DC0h",
                    "165": "mov     edx, 0FFFFFFFFh",
                    "166": "call    kvmalloc_node_noprof; PIC mode",
                    "167": "test    rax, rax",
                    "168": "jz      short INSTR206",
                    "169": "mov     [rbx+68h], rax",
                    "170": "xor     esi, esi",
                    "171": "mov     rcx, offset uni_def_upcase",
                    "172": "xor     edi, edi",
                    "173": "xor     r8d, r8d",
                    "174": "jmp     short INSTR186",
                    "175": "mov     edi, r8d",
                    "176": "mov     [rax+rdi*2], bp",
                    "177": "add     r8d, 1",
                    "178": "xor     edi, edi",
                    "179": "cmp     r8d, 0FFFFh",
                    "180": "ja      short INSTR200",
                    "181": "lea     rdx, [rsi+1]",
                    "182": "add     rcx, 2",
                    "183": "cmp     rsi, 0B65h",
                    "184": "mov     rsi, rdx",
                    "185": "jnb     short INSTR200",
                    "186": "movzx   ebp, word ptr [rcx]",
                    "187": "movzx   ebx, bp",
                    "188": "test    dil, dil",
                    "189": "jnz     short INSTR198",
                    "190": "cmp     r8d, ebx",
                    "191": "jz      short INSTR177",
                    "192": "cmp     bp, 0FFFFh",
                    "193": "jnz     short INSTR175",
                    "194": "mov     dil, 1",
                    "195": "cmp     r8d, 0FFFFh",
                    "196": "jbe     short INSTR181",
                    "197": "jmp     short INSTR200",
                    "198": "add     r8d, ebx",
                    "199": "jmp     short INSTR178",
                    "200": "xor     eax, eax",
                    "201": "cmp     r8d, 0FFFFh",
                    "202": "setnb   al",
                    "203": "lea     r14d, [rax+rax*4]",
                    "204": "add     r14d, 0FFFFFFFBh",
                    "205": "jmp     short INSTR207",
                    "206": "mov     r14d, 0FFFFFFF4h",
                    "207": "mov     rax, gs:28h",
                    "208": "cmp     rax, [rsp+70h+var_38]",
                    "209": "jnz     short INSTR241",
                    "210": "mov     eax, r14d",
                    "211": "add     rsp, 40h",
                    "212": "pop     rbx",
                    "213": "pop     r12",
                    "214": "pop     r13",
                    "215": "pop     r14",
                    "216": "pop     r15",
                    "217": "pop     rbp",
                    "218": "retn",
                    "219": "xor     ebx, ebx",
                    "220": "xor     ebp, ebp",
                    "221": "mov     r13, [rsp+70h+var_70]",
                    "222": "jmp     short INSTR233",
                    "223": "mov     rax, [rsp+70h+var_70]",
                    "224": "lea     rsi, [rax+398h]",
                    "225": "mov     rdi, offset unk_9DB",
                    "226": "mov     rdx, r13",
                    "227": "mov     r13, rax",
                    "228": "call    _printk; PIC mode",
                    "229": "mov     r14d, 0FFFFFFFBh",
                    "230": "jmp     INSTR154",
                    "231": "mov     r13, [rsp+70h+var_70]",
                    "232": "mov     r12d, [rsp+70h+var_64]",
                    "233": "lea     rsi, [r13+398h]",
                    "234": "mov     rdi, offset unk_A0B",
                    "235": "mov     edx, ebx",
                    "236": "mov     ecx, ebp",
                    "237": "mov     r8d, r12d",
                    "238": "call    _printk; PIC mode",
                    "239": "mov     r14d, 0FFFFFFEAh",
                    "240": "jmp     INSTR154",
                    "241": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rbx, rdi",
                    "8": "sub     rsp, 40h",
                    "9": "mov     r14, [rdi+368h]",
                    "10": "movzx   r13d, byte ptr [rdi+14h]",
                    "11": "mov     rax, gs:28h",
                    "12": "mov     [rsp+70h+var_38], rax",
                    "13": "xor     eax, eax",
                    "14": "mov     [rsp+70h+var_3C], 1",
                    "15": "mov     esi, [r14+3Ch]",
                    "16": "mov     [rsp+70h+var_44], esi",
                    "17": "cmp     esi, 0FFFFFFFFh",
                    "18": "jz      INSTR144",
                    "19": "mov     eax, [r14+40h]",
                    "20": "xor     r12d, r12d",
                    "21": "test    eax, eax",
                    "22": "jz      short INSTR45",
                    "23": "lea     rcx, [rsp+70h+var_50]",
                    "24": "mov     edx, r12d",
                    "25": "lea     rsi, [rsp+70h+var_44]",
                    "26": "mov     rdi, rbx",
                    "27": "call    exfat_get_dentry; PIC mode",
                    "28": "mov     rbp, rax",
                    "29": "test    rax, rax",
                    "30": "jz      INSTR204",
                    "31": "mov     rdi, rax",
                    "32": "call    exfat_get_entry_type; PIC mode",
                    "33": "test    eax, eax",
                    "34": "jz      INSTR206",
                    "35": "cmp     eax, 102h",
                    "36": "jz      short INSTR52",
                    "37": "mov     rdi, [rsp+70h+var_50]",
                    "38": "test    rdi, rdi",
                    "39": "jz      short INSTR41",
                    "40": "call    __brelse; PIC mode",
                    "41": "add     r12d, 1",
                    "42": "cmp     [r14+40h], r12d",
                    "43": "ja      short INSTR23",
                    "44": "mov     esi, [rsp+70h+var_44]",
                    "45": "lea     rdx, [rsp+70h+var_44]",
                    "46": "mov     rdi, rbx",
                    "47": "call    exfat_ent_get; PIC mode",
                    "48": "test    eax, eax",
                    "49": "jnz     INSTR204",
                    "50": "mov     esi, [rsp+70h+var_44]",
                    "51": "jmp     INSTR17",
                    "52": "mov     eax, [rbp+14h]",
                    "53": "mov     ecx, [r14+18h]",
                    "54": "mov     edx, 0FFFFFFFFh",
                    "55": "mov     esi, 0DC0h",
                    "56": "mov     edi, 20000h",
                    "57": "mov     r12, [rbx+368h]",
                    "58": "lea     r11d, [rax-2]",
                    "59": "mov     rax, [rbp+18h]",
                    "60": "shl     r11, cl",
                    "61": "add     r11, [r14+30h]",
                    "62": "mov     ecx, r13d",
                    "63": "lea     r14, [rax-1]",
                    "64": "mov     eax, [rbp+4]",
                    "65": "mov     r15, r11",
                    "66": "mov     ebp, [rbx+18h]",
                    "67": "shr     r14, cl",
                    "68": "mov     [rsp+70h+var_54], eax",
                    "69": "add     r14, 1",
                    "70": "call    kvmalloc_node_noprof; PIC mode",
                    "71": "mov     [rsp+70h+var_68], rax",
                    "72": "test    rax, rax",
                    "73": "jz      INSTR219",
                    "74": "mov     [r12+68h], rax",
                    "75": "lea     rax, [r14+r15]",
                    "76": "mov     [rsp+70h+var_60], rax",
                    "77": "cmp     r15, rax",
                    "78": "jnb     INSTR211",
                    "79": "xor     r14d, r14d",
                    "80": "xor     r12d, r12d",
                    "81": "xor     r13d, r13d",
                    "82": "mov     rdi, [rbx+0C8h]",
                    "83": "mov     edx, [rbx+18h]",
                    "84": "mov     ecx, 8",
                    "85": "mov     rsi, r15",
                    "86": "call    __bread_gfp; PIC mode",
                    "87": "mov     r10, rax",
                    "88": "test    rax, rax",
                    "89": "jz      INSTR196",
                    "90": "mov     rdi, [rax+28h]",
                    "91": "add     r15, 1",
                    "92": "xor     esi, esi",
                    "93": "cmp     r12d, 0FFFFh",
                    "94": "ja      short INSTR122",
                    "95": "test    ebp, ebp",
                    "96": "jnz     short INSTR105",
                    "97": "jmp     short INSTR122",
                    "98": "add     r12d, edx",
                    "99": "xor     r14d, r14d",
                    "100": "add     esi, 2",
                    "101": "cmp     ebp, esi",
                    "102": "jbe     short INSTR122",
                    "103": "cmp     r12d, 0FFFFh",
                    "104": "ja      short INSTR122",
                    "105": "mov     eax, esi",
                    "106": "movzx   edx, word ptr [rdi+rax]",
                    "107": "mov     eax, edx",
                    "108": "test    r14b, r14b",
                    "109": "jnz     short INSTR98",
                    "110": "cmp     r12d, edx",
                    "111": "jz      INSTR192",
                    "112": "cmp     dx, 0FFFFh",
                    "113": "jz      INSTR194",
                    "114": "mov     rcx, [rsp+70h+var_68]",
                    "115": "mov     edx, r12d",
                    "116": "add     esi, 2",
                    "117": "add     r12d, 1",
                    "118": "mov     [rcx+rdx*2], ax",
                    "119": "mov     rdi, [r10+28h]",
                    "120": "cmp     ebp, esi",
                    "121": "ja      short INSTR103",
                    "122": "mov     edx, r13d",
                    "123": "mov     ecx, 2",
                    "124": "mov     [rsp+70h+var_70], r10",
                    "125": "call    exfat_calc_chksum32; PIC mode",
                    "126": "mov     rdi, [rsp+70h+var_70]",
                    "127": "mov     r13d, eax",
                    "128": "call    __brelse; PIC mode",
                    "129": "cmp     [rsp+70h+var_60], r15",
                    "130": "ja      INSTR82",
                    "131": "cmp     r12d, 0FFFEh",
                    "132": "jbe     INSTR213",
                    "133": "cmp     [rsp+70h+var_54], r13d",
                    "134": "jnz     INSTR213",
                    "135": "xor     r12d, r12d",
                    "136": "mov     rdi, [rsp+70h+var_50]",
                    "137": "test    rdi, rdi",
                    "138": "jz      INSTR180",
                    "139": "call    __brelse; PIC mode",
                    "140": "lea     eax, [r12+5]",
                    "141": "mov     edx, 21h ; '!'",
                    "142": "bt      rdx, rax",
                    "143": "jb      INSTR180",
                    "144": "mov     edx, 0FFFFFFFFh",
                    "145": "mov     esi, 0DC0h",
                    "146": "mov     edi, 20000h",
                    "147": "mov     rbx, [rbx+368h]",
                    "148": "call    kvmalloc_node_noprof; PIC mode",
                    "149": "test    rax, rax",
                    "150": "jz      INSTR225",
                    "151": "mov     [rbx+68h], rax",
                    "152": "mov     edx, 1",
                    "153": "xor     esi, esi",
                    "154": "xor     ecx, ecx",
                    "155": "xor     r8d, r8d",
                    "156": "jmp     short INSTR165",
                    "157": "add     ecx, edi",
                    "158": "xor     r8d, r8d",
                    "159": "cmp     ecx, 0FFFFh",
                    "160": "ja      short INSTR177",
                    "161": "cmp     edx, 0B65h",
                    "162": "jg      short INSTR177",
                    "163": "movzx   esi, ds:uni_def_upcase[rdx+rdx]",
                    "164": "add     rdx, 1",
                    "165": "movzx   edi, si",
                    "166": "test    r8b, r8b",
                    "167": "jnz     short INSTR157",
                    "168": "cmp     ecx, edi",
                    "169": "jz      short INSTR174",
                    "170": "cmp     si, 0FFFFh",
                    "171": "jz      short INSTR202",
                    "172": "mov     edi, ecx",
                    "173": "mov     [rax+rdi*2], si",
                    "174": "add     ecx, 1",
                    "175": "cmp     ecx, 0FFFFh",
                    "176": "jbe     short INSTR161",
                    "177": "xor     r12d, r12d",
                    "178": "cmp     ecx, 0FFFEh",
                    "179": "jbe     short INSTR204",
                    "180": "mov     rax, [rsp+70h+var_38]",
                    "181": "sub     rax, gs:28h",
                    "182": "jnz     INSTR224",
                    "183": "add     rsp, 40h",
                    "184": "mov     eax, r12d",
                    "185": "pop     rbx",
                    "186": "pop     rbp",
                    "187": "pop     r12",
                    "188": "pop     r13",
                    "189": "pop     r14",
                    "190": "pop     r15",
                    "191": "jmp     __x86_return_thunk; PIC mode",
                    "192": "add     r12d, 1",
                    "193": "jmp     INSTR100",
                    "194": "mov     r14d, 1",
                    "195": "jmp     INSTR100",
                    "196": "lea     rsi, [rbx+398h]",
                    "197": "mov     rdx, r15",
                    "198": "mov     rdi, offset unk_A90",
                    "199": "mov     r12d, 0FFFFFFFBh",
                    "200": "call    _printk; PIC mode",
                    "201": "jmp     INSTR136",
                    "202": "mov     r8d, 1",
                    "203": "jmp     INSTR159",
                    "204": "mov     r12d, 0FFFFFFFBh",
                    "205": "jmp     short INSTR180",
                    "206": "mov     rdi, [rsp+70h+var_50]",
                    "207": "test    rdi, rdi",
                    "208": "jz      INSTR44",
                    "209": "call    __brelse; PIC mode",
                    "210": "jmp     INSTR44",
                    "211": "xor     r13d, r13d",
                    "212": "xor     r12d, r12d",
                    "213": "mov     r8d, [rsp+70h+var_54]",
                    "214": "lea     rsi, [rbx+398h]",
                    "215": "mov     ecx, r13d",
                    "216": "mov     edx, r12d",
                    "217": "mov     rdi, offset unk_AC0",
                    "218": "call    _printk; PIC mode",
                    "219": "mov     rdi, [rsp+70h+var_50]",
                    "220": "test    rdi, rdi",
                    "221": "jz      INSTR144",
                    "222": "call    __brelse; PIC mode",
                    "223": "jmp     INSTR144",
                    "224": "call    __stack_chk_fail; PIC mode",
                    "225": "mov     r12d, 0FFFFFFF4h",
                    "226": "jmp     INSTR180"
                }
            },
            {
                "filename": "nls.exfat_create_upcase_table.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rbx, rdi",
                    "9": "sub     rsp, 38h",
                    "10": "mov     r12, [rdi+368h]",
                    "11": "mov     r14b, [rdi+14h]",
                    "12": "mov     rax, gs:28h",
                    "13": "mov     [rsp+68h+var_38], rax",
                    "14": "xor     eax, eax",
                    "15": "mov     [rsp+68h+var_3C], 1",
                    "16": "mov     eax, [r12+3Ch]",
                    "17": "mov     [rsp+68h+var_44], eax",
                    "18": "cmp     [rsp+68h+var_44], 0FFFFFFFFh",
                    "19": "jnz     short INSTR34",
                    "20": "or      edx, 0FFFFFFFFh",
                    "21": "mov     esi, 0DC0h",
                    "22": "mov     edi, 20000h",
                    "23": "mov     rbx, [rbx+368h]",
                    "24": "call    kvmalloc_node_noprof; PIC mode",
                    "25": "mov     r15d, 0FFFFFFF4h",
                    "26": "test    rax, rax",
                    "27": "jz      INSTR192",
                    "28": "mov     [rbx+68h], rax",
                    "29": "mov     ecx, 1",
                    "30": "xor     edx, edx",
                    "31": "xor     esi, esi",
                    "32": "mov     r9, offset unk_A5E",
                    "33": "jmp     INSTR174",
                    "34": "xor     r13d, r13d",
                    "35": "cmp     r13d, [r12+40h]",
                    "36": "jnb     INSTR157",
                    "37": "lea     rcx, [rsp+68h+var_50]",
                    "38": "mov     edx, r13d",
                    "39": "lea     rsi, [rsp+68h+var_44]",
                    "40": "mov     rdi, rbx",
                    "41": "call    exfat_get_dentry; PIC mode",
                    "42": "mov     rbp, rax",
                    "43": "test    rax, rax",
                    "44": "jz      INSTR191",
                    "45": "mov     rdi, rax",
                    "46": "call    exfat_get_entry_type; PIC mode",
                    "47": "test    eax, eax",
                    "48": "jnz     short INSTR52",
                    "49": "mov     rdi, [rsp+68h+var_50]",
                    "50": "call    brelse",
                    "51": "jmp     INSTR157",
                    "52": "cmp     eax, 102h",
                    "53": "jz      short INSTR58",
                    "54": "mov     rdi, [rsp+68h+var_50]",
                    "55": "inc     r13d",
                    "56": "call    brelse",
                    "57": "jmp     short INSTR35",
                    "58": "mov     eax, [rbp+14h]",
                    "59": "mov     ecx, [r12+18h]",
                    "60": "or      edx, 0FFFFFFFFh",
                    "61": "mov     esi, 0DC0h",
                    "62": "mov     edi, 20000h",
                    "63": "mov     r15d, 0FFFFFFF4h",
                    "64": "lea     r13d, [rax-2]",
                    "65": "mov     rax, [rbp+18h]",
                    "66": "shl     r13, cl",
                    "67": "add     r13, [r12+30h]",
                    "68": "mov     ecx, r14d",
                    "69": "mov     r14, [rbx+368h]",
                    "70": "lea     r12, [rax-1]",
                    "71": "mov     eax, [rbp+4]",
                    "72": "shr     r12, cl",
                    "73": "mov     [rsp+68h+var_68], eax",
                    "74": "mov     eax, [rbx+18h]",
                    "75": "inc     r12",
                    "76": "mov     [rsp+68h+var_64], eax",
                    "77": "call    kvmalloc_node_noprof; PIC mode",
                    "78": "mov     rbp, rax",
                    "79": "test    rax, rax",
                    "80": "jz      INSTR149",
                    "81": "mov     [r14+68h], rax",
                    "82": "lea     rax, [r12+r13]",
                    "83": "xor     r15d, r15d",
                    "84": "xor     r14d, r14d",
                    "85": "mov     [rsp+68h+var_60], rax",
                    "86": "xor     r12d, r12d",
                    "87": "cmp     [rsp+68h+var_60], r13",
                    "88": "jbe     INSTR137",
                    "89": "mov     rdi, [rbx+0C8h]",
                    "90": "mov     edx, [rbx+18h]",
                    "91": "mov     ecx, 8",
                    "92": "mov     rsi, r13",
                    "93": "call    __bread_gfp; PIC mode",
                    "94": "mov     r10, rax",
                    "95": "test    rax, rax",
                    "96": "jnz     short INSTR103",
                    "97": "lea     rsi, [rbx+398h]",
                    "98": "mov     rdx, r13",
                    "99": "mov     rdi, offset unk_976",
                    "100": "mov     r15d, 0FFFFFFFBh",
                    "101": "call    _printk; PIC mode",
                    "102": "jmp     INSTR149",
                    "103": "inc     r13",
                    "104": "xor     esi, esi",
                    "105": "mov     rdi, [r10+28h]",
                    "106": "cmp     [rsp+68h+var_64], esi",
                    "107": "jbe     short INSTR129",
                    "108": "cmp     r12d, 0FFFFh",
                    "109": "ja      short INSTR129",
                    "110": "mov     eax, esi",
                    "111": "movzx   edx, word ptr [rdi+rax]",
                    "112": "mov     eax, edx",
                    "113": "test    r15b, r15b",
                    "114": "jz      short INSTR118",
                    "115": "add     r12d, edx",
                    "116": "xor     r15d, r15d",
                    "117": "jmp     short INSTR127",
                    "118": "cmp     edx, r12d",
                    "119": "jz      short INSTR124",
                    "120": "cmp     dx, 0FFFFh",
                    "121": "jz      short INSTR126",
                    "122": "mov     edx, r12d",
                    "123": "mov     [rbp+rdx*2+0], ax",
                    "124": "inc     r12d",
                    "125": "jmp     short INSTR127",
                    "126": "mov     r15b, 1",
                    "127": "add     esi, 2",
                    "128": "jmp     short INSTR105",
                    "129": "mov     edx, r14d",
                    "130": "mov     ecx, 2",
                    "131": "mov     [rsp+68h+var_58], r10",
                    "132": "call    exfat_calc_chksum32; PIC mode",
                    "133": "mov     rdi, [rsp+68h+var_58]",
                    "134": "mov     r14d, eax",
                    "135": "call    brelse",
                    "136": "jmp     INSTR87",
                    "137": "cmp     r12d, 0FFFEh",
                    "138": "jbe     short INSTR142",
                    "139": "xor     r15d, r15d",
                    "140": "cmp     [rsp+68h+var_68], r14d",
                    "141": "jz      short INSTR149",
                    "142": "mov     r8d, [rsp+68h+var_68]",
                    "143": "mov     ecx, r14d",
                    "144": "mov     edx, r12d",
                    "145": "mov     r15d, 0FFFFFFEAh",
                    "146": "lea     rsi, [rbx+398h]",
                    "147": "mov     rdi, offset unk_9A6",
                    "148": "call    _printk; PIC mode",
                    "149": "mov     rdi, [rsp+68h+var_50]",
                    "150": "call    brelse",
                    "151": "lea     ecx, [r15+16h]",
                    "152": "mov     eax, 420000h",
                    "153": "shr     rax, cl",
                    "154": "test    al, 1",
                    "155": "jnz     short INSTR192",
                    "156": "jmp     INSTR20",
                    "157": "mov     esi, [rsp+68h+var_44]",
                    "158": "lea     rdx, [rsp+68h+var_44]",
                    "159": "mov     rdi, rbx",
                    "160": "call    exfat_ent_get; PIC mode",
                    "161": "test    eax, eax",
                    "162": "jz      INSTR18",
                    "163": "jmp     short INSTR191",
                    "164": "cmp     r8d, edx",
                    "165": "jnz     short INSTR181",
                    "166": "inc     edx",
                    "167": "cmp     edx, 0FFFFh",
                    "168": "setbe   r8b",
                    "169": "cmp     ecx, 0B65h",
                    "170": "setle   dil",
                    "171": "inc     rcx",
                    "172": "test    r8b, dil",
                    "173": "jz      short INSTR188",
                    "174": "movzx   r8d, word ptr [r9+rcx*2]",
                    "175": "mov     edi, r8d",
                    "176": "test    sil, sil",
                    "177": "jz      short INSTR164",
                    "178": "add     edx, r8d",
                    "179": "xor     esi, esi",
                    "180": "jmp     short INSTR167",
                    "181": "cmp     r8w, 0FFFFh",
                    "182": "jz      short INSTR186",
                    "183": "mov     r8d, edx",
                    "184": "mov     [rax+r8*2], di",
                    "185": "jmp     short INSTR166",
                    "186": "mov     sil, 1",
                    "187": "jmp     short INSTR167",
                    "188": "xor     r15d, r15d",
                    "189": "cmp     edx, 0FFFEh",
                    "190": "ja      short INSTR192",
                    "191": "mov     r15d, 0FFFFFFFBh",
                    "192": "mov     rax, [rsp+68h+var_38]",
                    "193": "sub     rax, gs:28h",
                    "194": "jz      short INSTR196",
                    "195": "call    __stack_chk_fail; PIC mode",
                    "196": "add     rsp, 38h",
                    "197": "mov     eax, r15d",
                    "198": "pop     rbx",
                    "199": "pop     rbp",
                    "200": "pop     r12",
                    "201": "pop     r13",
                    "202": "pop     r14",
                    "203": "pop     r15",
                    "204": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47685",
        "files": [
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, ecx",
                    "6": "push    ebx",
                    "7": "mov     ebx, eax",
                    "8": "sub     esp, 0Ch",
                    "9": "mov     eax, [eax+0A8h]",
                    "10": "mov     edx, [ebx+0A4h]",
                    "11": "sub     eax, edx",
                    "12": "mov     edx, 14h",
                    "13": "mov     [ebx+96h], ax",
                    "14": "mov     eax, ebx",
                    "15": "call    skb_put",
                    "16": "mov     dword ptr [eax+0Ch], 0",
                    "17": "mov     edi, eax",
                    "18": "mov     dword ptr [eax], 0",
                    "19": "mov     dword ptr [eax+4], 0",
                    "20": "mov     dword ptr [eax+8], 0",
                    "21": "mov     dword ptr [eax+10h], 0",
                    "22": "mov     byte ptr [eax+0Ch], 50h ; 'P'",
                    "23": "movzx   eax, word ptr [esi+2]",
                    "24": "mov     [edi], ax",
                    "25": "movzx   eax, word ptr [esi]",
                    "26": "mov     [edi+2], ax",
                    "27": "movzx   eax, byte ptr [esi+0Dh]",
                    "28": "mov     dl, al",
                    "29": "and     dl, 10h",
                    "30": "jz      INSTR74",
                    "31": "mov     eax, [esi+8]",
                    "32": "mov     [edi+4], eax",
                    "33": "movzx   eax, byte ptr [edi+0Dh]",
                    "34": "or      al, 4",
                    "35": "mov     edx, 14h",
                    "36": "mov     [edi+0Dh], al",
                    "37": "xor     eax, eax",
                    "38": "mov     esi, 6000000h",
                    "39": "mov     [esp+4], edx",
                    "40": "mov     [esp], edi",
                    "41": "mov     [esp+8], eax",
                    "42": "call    csum_partial",
                    "43": "mov     ecx, [ebx+0A4h]",
                    "44": "movzx   edx, word ptr [ebx+98h]",
                    "45": "mov     ebx, 14000000h",
                    "46": "add     edx, ecx",
                    "47": "lea     ecx, [edx+8]",
                    "48": "add     edx, 18h",
                    "49": "add     eax, [ecx]",
                    "50": "adc     eax, [ecx+4]",
                    "51": "adc     eax, [ecx+8]",
                    "52": "adc     eax, [ecx+0Ch]",
                    "53": "adc     eax, [edx]",
                    "54": "adc     eax, [edx+4]",
                    "55": "adc     eax, [edx+8]",
                    "56": "adc     eax, [edx+0Ch]",
                    "57": "adc     eax, ebx",
                    "58": "adc     eax, esi",
                    "59": "adc     eax, 0",
                    "60": "mov     edx, eax",
                    "61": "and     eax, 0FFFF0000h",
                    "62": "shl     edx, 10h",
                    "63": "add     eax, edx",
                    "64": "adc     eax, 0FFFFh",
                    "65": "not     eax",
                    "66": "shr     eax, 10h",
                    "67": "mov     [edi+10h], ax",
                    "68": "add     esp, 0Ch",
                    "69": "pop     ebx",
                    "70": "pop     esi",
                    "71": "pop     edi",
                    "72": "pop     ebp",
                    "73": "retn",
                    "74": "mov     dl, al",
                    "75": "and     al, 1",
                    "76": "mov     ecx, [esi+4]",
                    "77": "shr     dl, 1",
                    "78": "movzx   eax, al",
                    "79": "and     dl, 1",
                    "80": "movzx   edx, dl",
                    "81": "add     edx, eax",
                    "82": "mov     eax, [ebp+arg_0]",
                    "83": "bswap   ecx",
                    "84": "add     edx, eax",
                    "85": "movzx   eax, byte ptr [esi+0Ch]",
                    "86": "shr     al, 4",
                    "87": "movzx   eax, al",
                    "88": "shl     eax, 2",
                    "89": "sub     edx, eax",
                    "90": "movzx   eax, byte ptr [edi+0Dh]",
                    "91": "add     edx, ecx",
                    "92": "bswap   edx",
                    "93": "mov     [edi+8], edx",
                    "94": "or      al, 10h",
                    "95": "mov     [edi+0Dh], al",
                    "96": "jmp     INSTR34"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x30+var_s0]!",
                    "3": "MOV             W1, #0x14",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#var_s10]",
                    "6": "MOV             X20, X0",
                    "7": "STP             X21, X22, [SP,#var_s20]",
                    "8": "MOV             X21, X2",
                    "9": "MOV             W22, W3",
                    "10": "LDP             X3, X2, [X0,#0xC0]",
                    "11": "SUB             X2, X2, X3",
                    "12": "STRH            W2, [X0,#0xB2]",
                    "13": "BL              skb_put",
                    "14": "MOV             X19, X0",
                    "15": "MOV             W1, #5",
                    "16": "MOV             W0, #0",
                    "17": "BFI             W0, W1, #4, #4",
                    "18": "STP             XZR, XZR, [X19]",
                    "19": "STRH            W0, [X19,#0xC]",
                    "20": "STR             WZR, [X19,#0x10]",
                    "21": "LDRH            W1, [X21,#2]",
                    "22": "STRH            W1, [X19]",
                    "23": "LDRH            W1, [X21]",
                    "24": "STRH            W1, [X19,#2]",
                    "25": "LDRH            W1, [X21,#0xC]",
                    "26": "TBZ             W1, #0xC, loc_44C",
                    "27": "LDR             W0, [X21,#8]",
                    "28": "STR             W0, [X19,#4]",
                    "29": "LDRH            W3, [X19,#0xC]",
                    "30": "MOV             X0, X19",
                    "31": "MOV             W2, #0",
                    "32": "MOV             W1, #0x14",
                    "33": "ORR             W3, W3, #0x400",
                    "34": "STRH            W3, [X19,#0xC]",
                    "35": "LDRH            W4, [X20,#0xB4]",
                    "36": "LDR             X3, [X20,#0xC0]",
                    "37": "ADD             X20, X3, X4",
                    "38": "BL              csum_partial",
                    "39": "MOV             W4, W0",
                    "40": "ADD             X1, X20, #0x18",
                    "41": "ADD             X0, X20, #8",
                    "42": "MOV             W3, #6",
                    "43": "MOV             W2, #0x14",
                    "44": "BL              csum_ipv6_magic",
                    "45": "STRH            W0, [X19,#0x10]",
                    "46": "LDP             X19, X20, [SP,#var_s10]",
                    "47": "LDP             X21, X22, [SP,#var_s20]",
                    "48": "LDP             X29, X30, [SP+var_s0],#0x30",
                    "49": "AUTIASP",
                    "50": "RET",
                    "51": "LDR             X1, [X21,#8]",
                    "52": "ORR             W0, W0, #0x1000",
                    "53": "LDR             W2, [X21,#4]",
                    "54": "STRH            W0, [X19,#0xC]",
                    "55": "UBFX            X3, X1, #0x24, #4 ; '$'",
                    "56": "UBFX            X0, X1, #0x29, #1 ; ')'",
                    "57": "UBFX            X1, X1, #0x28, #1 ; '('",
                    "58": "REV             W2, W2",
                    "59": "SUB             W3, W22, W3,LSL#2",
                    "60": "ADD             W0, W0, W1",
                    "61": "ADD             W0, W0, W3",
                    "62": "ADD             W0, W0, W2",
                    "63": "REV             W0, W0",
                    "64": "STR             W0, [X19,#8]",
                    "65": "B               loc_3F4"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    rbx",
                    "5": "mov     r15d, ecx",
                    "6": "mov     rbp, rdx",
                    "7": "mov     r14, rdi",
                    "8": "mov     eax, [rdi+0C8h]",
                    "9": "sub     eax, [rdi+0C0h]",
                    "10": "mov     [rdi+0B2h], ax",
                    "11": "mov     esi, 14h",
                    "12": "call    skb_put; PIC mode",
                    "13": "mov     rbx, rax",
                    "14": "mov     qword ptr [rax+8], 0",
                    "15": "mov     qword ptr [rax], 0",
                    "16": "mov     dword ptr [rax+10h], 0",
                    "17": "mov     word ptr [rax+0Ch], 50h ; 'P'",
                    "18": "movzx   eax, word ptr [rbp+2]",
                    "19": "mov     [rbx], ax",
                    "20": "movzx   eax, word ptr [rbp+0]",
                    "21": "mov     [rbx+2], ax",
                    "22": "movzx   ecx, word ptr [rbp+0Ch]",
                    "23": "test    ecx, 1000h",
                    "24": "jnz     short INSTR43",
                    "25": "mov     edx, [rbp+4]",
                    "26": "bswap   edx",
                    "27": "mov     eax, ecx",
                    "28": "shr     eax, 9",
                    "29": "and     eax, 1",
                    "30": "mov     esi, ecx",
                    "31": "shr     esi, 8",
                    "32": "and     esi, 1",
                    "33": "shr     ecx, 2",
                    "34": "and     ecx, 3Ch",
                    "35": "add     eax, r15d",
                    "36": "add     eax, esi",
                    "37": "sub     eax, ecx",
                    "38": "add     eax, edx",
                    "39": "bswap   eax",
                    "40": "mov     cx, 1450h",
                    "41": "mov     edx, 8",
                    "42": "jmp     short INSTR46",
                    "43": "mov     eax, [rbp+8]",
                    "44": "mov     cx, 450h",
                    "45": "mov     edx, 4",
                    "46": "mov     [rbx+rdx], eax",
                    "47": "mov     [rbx+0Ch], cx",
                    "48": "mov     rax, [r14+0C0h]",
                    "49": "movzx   ecx, word ptr [r14+0B4h]",
                    "50": "lea     rbp, [rax+rcx]",
                    "51": "add     rbp, 8",
                    "52": "lea     r14, [rax+rcx]",
                    "53": "add     r14, 18h",
                    "54": "mov     rdi, rbx",
                    "55": "mov     esi, 14h",
                    "56": "xor     edx, edx",
                    "57": "call    csum_partial; PIC mode",
                    "58": "mov     rdi, rbp",
                    "59": "mov     rsi, r14",
                    "60": "mov     edx, 14h",
                    "61": "mov     ecx, 6",
                    "62": "mov     r8d, eax",
                    "63": "call    csum_ipv6_magic; PIC mode",
                    "64": "mov     [rbx+10h], ax",
                    "65": "pop     rbx",
                    "66": "pop     r14",
                    "67": "pop     r15",
                    "68": "pop     rbp",
                    "69": "retn"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r13",
                    "2": "mov     esi, 14h",
                    "3": "mov     r13d, ecx",
                    "4": "push    r12",
                    "5": "mov     r12, rdx",
                    "6": "push    rbp",
                    "7": "mov     rbp, rdi",
                    "8": "push    rbx",
                    "9": "mov     rax, [rdi+0C8h]",
                    "10": "sub     rax, [rdi+0C0h]",
                    "11": "mov     [rdi+0B2h], ax",
                    "12": "call    skb_put; PIC mode",
                    "13": "mov     qword ptr [rax+8], 0",
                    "14": "mov     rbx, rax",
                    "15": "mov     qword ptr [rax], 0",
                    "16": "mov     dword ptr [rax+10h], 0",
                    "17": "mov     byte ptr [rax+0Ch], 50h ; 'P'",
                    "18": "movzx   eax, word ptr [r12+2]",
                    "19": "mov     [rbx], ax",
                    "20": "movzx   eax, word ptr [r12]",
                    "21": "mov     [rbx+2], ax",
                    "22": "movzx   edx, byte ptr [r12+0Dh]",
                    "23": "test    dl, 10h",
                    "24": "jz      short INSTR48",
                    "25": "mov     eax, [r12+8]",
                    "26": "mov     [rbx+4], eax",
                    "27": "movzx   eax, byte ptr [rbx+0Dh]",
                    "28": "or      eax, 4",
                    "29": "mov     rdi, rbx",
                    "30": "xor     edx, edx",
                    "31": "mov     esi, 14h",
                    "32": "mov     [rbx+0Dh], al",
                    "33": "call    csum_partial; PIC mode",
                    "34": "mov     ecx, 6",
                    "35": "mov     edx, 14h",
                    "36": "movzx   edi, word ptr [rbp+0B4h]",
                    "37": "add     rdi, [rbp+0C0h]",
                    "38": "mov     r8d, eax",
                    "39": "lea     rsi, [rdi+18h]",
                    "40": "add     rdi, 8",
                    "41": "call    csum_ipv6_magic; PIC mode",
                    "42": "mov     [rbx+10h], ax",
                    "43": "pop     rbx",
                    "44": "pop     rbp",
                    "45": "pop     r12",
                    "46": "pop     r13",
                    "47": "jmp     __x86_return_thunk; PIC mode",
                    "48": "mov     eax, edx",
                    "49": "and     edx, 1",
                    "50": "mov     ecx, [r12+4]",
                    "51": "shr     al, 1",
                    "52": "and     eax, 1",
                    "53": "bswap   ecx",
                    "54": "add     eax, edx",
                    "55": "movzx   edx, byte ptr [r12+0Ch]",
                    "56": "add     eax, r13d",
                    "57": "shr     dl, 4",
                    "58": "movzx   edx, dl",
                    "59": "shl     edx, 2",
                    "60": "sub     eax, edx",
                    "61": "add     eax, ecx",
                    "62": "bswap   eax",
                    "63": "mov     [rbx+8], eax",
                    "64": "movzx   eax, byte ptr [rbx+0Dh]",
                    "65": "or      eax, 10h",
                    "66": "mov     [rbx+0Dh], al",
                    "67": "jmp     INSTR28"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r13",
                    "2": "mov     esi, 14h",
                    "3": "mov     r13, rdx",
                    "4": "push    r12",
                    "5": "mov     r12d, ecx",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rax, [rdi+0C8h]",
                    "9": "mov     rbx, rdi",
                    "10": "sub     rax, [rdi+0C0h]",
                    "11": "mov     [rdi+0B2h], ax",
                    "12": "call    skb_put; PIC mode",
                    "13": "mov     ecx, 5",
                    "14": "mov     rbp, rax",
                    "15": "xor     eax, eax",
                    "16": "mov     rdi, rbp",
                    "17": "rep stosd",
                    "18": "mov     byte ptr [rbp+0Ch], 50h ; 'P'",
                    "19": "mov     ax, [r13+2]",
                    "20": "mov     [rbp+0], ax",
                    "21": "mov     eax, [r13+0]",
                    "22": "mov     [rbp+2], ax",
                    "23": "mov     dl, [r13+0Dh]",
                    "24": "test    dl, 10h",
                    "25": "jz      short INSTR29",
                    "26": "mov     eax, [r13+8]",
                    "27": "mov     [rbp+4], eax",
                    "28": "jmp     short INSTR46",
                    "29": "mov     eax, edx",
                    "30": "and     edx, 1",
                    "31": "mov     ecx, [r13+4]",
                    "32": "shr     al, 1",
                    "33": "and     eax, 1",
                    "34": "bswap   ecx",
                    "35": "add     eax, edx",
                    "36": "mov     dl, [r13+0Ch]",
                    "37": "or      byte ptr [rbp+0Dh], 10h",
                    "38": "add     eax, r12d",
                    "39": "shr     dl, 4",
                    "40": "movzx   edx, dl",
                    "41": "shl     edx, 2",
                    "42": "sub     eax, edx",
                    "43": "add     eax, ecx",
                    "44": "bswap   eax",
                    "45": "mov     [rbp+8], eax",
                    "46": "or      byte ptr [rbp+0Dh], 4",
                    "47": "mov     rdi, rbp",
                    "48": "xor     edx, edx",
                    "49": "mov     esi, 14h",
                    "50": "call    csum_partial; PIC mode",
                    "51": "mov     ecx, 6",
                    "52": "mov     edx, 14h",
                    "53": "movzx   edi, word ptr [rbx+0B4h]",
                    "54": "add     rdi, [rbx+0C0h]",
                    "55": "mov     r8d, eax",
                    "56": "lea     rsi, [rdi+18h]",
                    "57": "add     rdi, 8",
                    "58": "call    csum_ipv6_magic; PIC mode",
                    "59": "mov     [rbp+10h], ax",
                    "60": "pop     rbx",
                    "61": "pop     rbp",
                    "62": "pop     r12",
                    "63": "pop     r13",
                    "64": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, ecx",
                    "6": "push    ebx",
                    "7": "mov     ebx, eax",
                    "8": "sub     esp, 0Ch",
                    "9": "mov     eax, [eax+0A8h]",
                    "10": "mov     edx, [ebx+0A4h]",
                    "11": "sub     eax, edx",
                    "12": "mov     edx, 14h",
                    "13": "mov     [ebx+96h], ax",
                    "14": "mov     eax, ebx",
                    "15": "call    skb_put",
                    "16": "mov     edi, eax",
                    "17": "movzx   eax, byte ptr [eax+0Ch]",
                    "18": "and     al, 0Fh",
                    "19": "or      al, 50h",
                    "20": "mov     [edi+0Ch], al",
                    "21": "movzx   eax, word ptr [esi+2]",
                    "22": "mov     [edi], ax",
                    "23": "movzx   eax, word ptr [esi]",
                    "24": "mov     [edi+2], ax",
                    "25": "movzx   eax, byte ptr [esi+0Dh]",
                    "26": "mov     dl, al",
                    "27": "and     dl, 10h",
                    "28": "jz      INSTR78",
                    "29": "mov     eax, [esi+8]",
                    "30": "xor     edx, edx",
                    "31": "mov     dword ptr [edi+8], 0",
                    "32": "mov     [edi+4], eax",
                    "33": "mov     byte ptr [edi+0Dh], 4",
                    "34": "shl     edx, 0Ch",
                    "35": "mov     esi, 6000000h",
                    "36": "mov     dword ptr [edi+10h], 0",
                    "37": "mov     eax, [edi+0Ch]",
                    "38": "and     eax, 0EFFFh",
                    "39": "or      eax, edx",
                    "40": "mov     edx, 14h",
                    "41": "mov     [edi+0Ch], eax",
                    "42": "xor     eax, eax",
                    "43": "mov     [esp+4], edx",
                    "44": "mov     [esp], edi",
                    "45": "mov     [esp+8], eax",
                    "46": "call    csum_partial",
                    "47": "mov     ecx, [ebx+0A4h]",
                    "48": "movzx   edx, word ptr [ebx+98h]",
                    "49": "mov     ebx, 14000000h",
                    "50": "add     edx, ecx",
                    "51": "lea     ecx, [edx+8]",
                    "52": "add     edx, 18h",
                    "53": "add     eax, [ecx]",
                    "54": "adc     eax, [ecx+4]",
                    "55": "adc     eax, [ecx+8]",
                    "56": "adc     eax, [ecx+0Ch]",
                    "57": "adc     eax, [edx]",
                    "58": "adc     eax, [edx+4]",
                    "59": "adc     eax, [edx+8]",
                    "60": "adc     eax, [edx+0Ch]",
                    "61": "adc     eax, ebx",
                    "62": "adc     eax, esi",
                    "63": "adc     eax, 0",
                    "64": "mov     edx, eax",
                    "65": "and     eax, 0FFFF0000h",
                    "66": "shl     edx, 10h",
                    "67": "add     eax, edx",
                    "68": "adc     eax, 0FFFFh",
                    "69": "not     eax",
                    "70": "shr     eax, 10h",
                    "71": "mov     [edi+10h], ax",
                    "72": "add     esp, 0Ch",
                    "73": "pop     ebx",
                    "74": "pop     esi",
                    "75": "pop     edi",
                    "76": "pop     ebp",
                    "77": "retn",
                    "78": "mov     dl, al",
                    "79": "and     al, 1",
                    "80": "mov     ecx, [esi+4]",
                    "81": "shr     dl, 1",
                    "82": "movzx   eax, al",
                    "83": "and     dl, 1",
                    "84": "movzx   edx, dl",
                    "85": "add     edx, eax",
                    "86": "mov     eax, [ebp+arg_0]",
                    "87": "bswap   ecx",
                    "88": "add     edx, eax",
                    "89": "movzx   eax, byte ptr [esi+0Ch]",
                    "90": "mov     dword ptr [edi+4], 0",
                    "91": "shr     al, 4",
                    "92": "movzx   eax, al",
                    "93": "shl     eax, 2",
                    "94": "sub     edx, eax",
                    "95": "add     edx, ecx",
                    "96": "bswap   edx",
                    "97": "mov     [edi+8], edx",
                    "98": "mov     edx, 1",
                    "99": "jmp     INSTR33"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x30+var_s0]!",
                    "3": "MOV             W1, #0x14",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#var_s10]",
                    "6": "MOV             X20, X0",
                    "7": "STP             X21, X22, [SP,#var_s20]",
                    "8": "MOV             X21, X2",
                    "9": "MOV             W22, W3",
                    "10": "LDP             X3, X2, [X0,#0xC0]",
                    "11": "SUB             X2, X2, X3",
                    "12": "STRH            W2, [X0,#0xB2]",
                    "13": "BL              skb_put",
                    "14": "MOV             X19, X0",
                    "15": "LDRH            W0, [X0,#0xC]",
                    "16": "MOV             W1, #5",
                    "17": "BFI             W0, W1, #4, #4",
                    "18": "STRH            W0, [X19,#0xC]",
                    "19": "LDRH            W0, [X21,#2]",
                    "20": "STRH            W0, [X19]",
                    "21": "LDRH            W0, [X21]",
                    "22": "STRH            W0, [X19,#2]",
                    "23": "LDRH            W0, [X21,#0xC]",
                    "24": "TBZ             W0, #0xC, loc_164",
                    "25": "LDR             W0, [X21,#8]",
                    "26": "MOV             W4, #0",
                    "27": "STP             W0, WZR, [X19,#4]",
                    "28": "MOV             W0, #4",
                    "29": "STRB            W0, [X19,#0xD]",
                    "30": "MOV             W5, #0xEFFF",
                    "31": "MOV             X0, X19",
                    "32": "LDR             W3, [X19,#0xC]",
                    "33": "MOV             W2, #0",
                    "34": "MOV             W1, #0x14",
                    "35": "AND             W3, W3, W5",
                    "36": "ORR             W3, W3, W4,LSL#12",
                    "37": "STP             W3, WZR, [X19,#0xC]",
                    "38": "LDRH            W4, [X20,#0xB4]",
                    "39": "LDR             X3, [X20,#0xC0]",
                    "40": "ADD             X20, X3, X4",
                    "41": "BL              csum_partial",
                    "42": "MOV             W4, W0",
                    "43": "ADD             X1, X20, #0x18",
                    "44": "ADD             X0, X20, #8",
                    "45": "MOV             W3, #6",
                    "46": "MOV             W2, #0x14",
                    "47": "BL              csum_ipv6_magic",
                    "48": "STRH            W0, [X19,#0x10]",
                    "49": "LDP             X19, X20, [SP,#var_s10]",
                    "50": "LDP             X21, X22, [SP,#var_s20]",
                    "51": "LDP             X29, X30, [SP+var_s0],#0x30",
                    "52": "AUTIASP",
                    "53": "RET",
                    "54": "LDR             X1, [X21,#8]",
                    "55": "MOV             W4, #1",
                    "56": "LDR             W2, [X21,#4]",
                    "57": "UBFX            X3, X1, #0x24, #4 ; '$'",
                    "58": "UBFX            X0, X1, #0x29, #1 ; ')'",
                    "59": "UBFX            X1, X1, #0x28, #1 ; '('",
                    "60": "REV             W2, W2",
                    "61": "SUB             W3, W22, W3,LSL#2",
                    "62": "ADD             W0, W0, W1",
                    "63": "ADD             W0, W0, W3",
                    "64": "ADD             W0, W0, W2",
                    "65": "REV             W0, W0",
                    "66": "STP             WZR, W0, [X19,#4]",
                    "67": "B               loc_FC"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    rbx",
                    "5": "mov     r15d, ecx",
                    "6": "mov     rbp, rdx",
                    "7": "mov     r14, rdi",
                    "8": "mov     eax, [rdi+0C8h]",
                    "9": "sub     eax, [rdi+0C0h]",
                    "10": "mov     [rdi+0B2h], ax",
                    "11": "mov     esi, 14h",
                    "12": "call    skb_put; PIC mode",
                    "13": "mov     rbx, rax",
                    "14": "mov     eax, 0FFFFFF0Fh",
                    "15": "and     eax, [rbx+0Ch]",
                    "16": "or      eax, 50h",
                    "17": "mov     [rbx+0Ch], ax",
                    "18": "movzx   eax, word ptr [rbp+2]",
                    "19": "mov     [rbx], ax",
                    "20": "movzx   eax, word ptr [rbp+0]",
                    "21": "mov     [rbx+2], ax",
                    "22": "movzx   ecx, word ptr [rbp+0Ch]",
                    "23": "test    ecx, 1000h",
                    "24": "jnz     short INSTR44",
                    "25": "mov     edx, [rbp+4]",
                    "26": "bswap   edx",
                    "27": "mov     eax, ecx",
                    "28": "shr     eax, 9",
                    "29": "and     eax, 1",
                    "30": "mov     esi, ecx",
                    "31": "shr     esi, 8",
                    "32": "and     esi, 1",
                    "33": "shr     ecx, 2",
                    "34": "and     ecx, 3Ch",
                    "35": "add     eax, r15d",
                    "36": "add     eax, esi",
                    "37": "sub     eax, ecx",
                    "38": "add     eax, edx",
                    "39": "bswap   eax",
                    "40": "mov     cx, 1400h",
                    "41": "mov     edx, 4",
                    "42": "mov     esi, 8",
                    "43": "jmp     short INSTR48",
                    "44": "mov     eax, [rbp+8]",
                    "45": "mov     cx, 400h",
                    "46": "mov     edx, 8",
                    "47": "mov     esi, 4",
                    "48": "mov     [rbx+rsi], eax",
                    "49": "mov     dword ptr [rbx+rdx], 0",
                    "50": "mov     byte ptr [rbx+0Dh], 0",
                    "51": "mov     eax, 0FFFFEBFFh",
                    "52": "and     eax, [rbx+0Ch]",
                    "53": "movzx   ecx, cx",
                    "54": "or      ecx, eax",
                    "55": "mov     [rbx+0Ch], cx",
                    "56": "mov     dword ptr [rbx+0Eh], 0",
                    "57": "mov     word ptr [rbx+12h], 0",
                    "58": "mov     rax, [r14+0C0h]",
                    "59": "movzx   ecx, word ptr [r14+0B4h]",
                    "60": "lea     rbp, [rax+rcx+8]",
                    "61": "lea     r14, [rax+rcx]",
                    "62": "add     r14, 18h",
                    "63": "mov     rdi, rbx",
                    "64": "mov     esi, 14h",
                    "65": "xor     edx, edx",
                    "66": "call    csum_partial; PIC mode",
                    "67": "mov     rdi, rbp",
                    "68": "mov     rsi, r14",
                    "69": "mov     edx, 14h",
                    "70": "mov     ecx, 6",
                    "71": "mov     r8d, eax",
                    "72": "call    csum_ipv6_magic; PIC mode",
                    "73": "mov     [rbx+10h], ax",
                    "74": "pop     rbx",
                    "75": "pop     r14",
                    "76": "pop     r15",
                    "77": "pop     rbp",
                    "78": "retn"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r13",
                    "2": "mov     esi, 14h",
                    "3": "mov     r13d, ecx",
                    "4": "push    r12",
                    "5": "mov     r12, rdx",
                    "6": "push    rbp",
                    "7": "mov     rbp, rdi",
                    "8": "push    rbx",
                    "9": "mov     rax, [rdi+0C8h]",
                    "10": "sub     rax, [rdi+0C0h]",
                    "11": "mov     [rdi+0B2h], ax",
                    "12": "call    skb_put; PIC mode",
                    "13": "mov     rbx, rax",
                    "14": "movzx   eax, byte ptr [rax+0Ch]",
                    "15": "and     eax, 0Fh",
                    "16": "or      eax, 50h",
                    "17": "mov     [rbx+0Ch], al",
                    "18": "movzx   eax, word ptr [r12+2]",
                    "19": "mov     [rbx], ax",
                    "20": "movzx   eax, word ptr [r12]",
                    "21": "mov     [rbx+2], ax",
                    "22": "movzx   edx, byte ptr [r12+0Dh]",
                    "23": "test    dl, 10h",
                    "24": "jz      short INSTR54",
                    "25": "mov     eax, [r12+8]",
                    "26": "mov     dword ptr [rbx+8], 0",
                    "27": "xor     edx, edx",
                    "28": "mov     [rbx+4], eax",
                    "29": "mov     byte ptr [rbx+0Dh], 4",
                    "30": "mov     eax, [rbx+0Ch]",
                    "31": "shl     edx, 0Ch",
                    "32": "mov     rdi, rbx",
                    "33": "mov     dword ptr [rbx+10h], 0",
                    "34": "mov     esi, 14h",
                    "35": "and     eax, 0EFFFh",
                    "36": "or      eax, edx",
                    "37": "xor     edx, edx",
                    "38": "mov     [rbx+0Ch], eax",
                    "39": "call    csum_partial; PIC mode",
                    "40": "mov     ecx, 6",
                    "41": "mov     edx, 14h",
                    "42": "movzx   edi, word ptr [rbp+0B4h]",
                    "43": "add     rdi, [rbp+0C0h]",
                    "44": "mov     r8d, eax",
                    "45": "lea     rsi, [rdi+18h]",
                    "46": "add     rdi, 8",
                    "47": "call    csum_ipv6_magic; PIC mode",
                    "48": "mov     [rbx+10h], ax",
                    "49": "pop     rbx",
                    "50": "pop     rbp",
                    "51": "pop     r12",
                    "52": "pop     r13",
                    "53": "jmp     __x86_return_thunk; PIC mode",
                    "54": "mov     eax, edx",
                    "55": "and     edx, 1",
                    "56": "mov     ecx, [r12+4]",
                    "57": "shr     al, 1",
                    "58": "and     eax, 1",
                    "59": "bswap   ecx",
                    "60": "add     eax, edx",
                    "61": "movzx   edx, byte ptr [r12+0Ch]",
                    "62": "mov     dword ptr [rbx+4], 0",
                    "63": "add     eax, r13d",
                    "64": "shr     dl, 4",
                    "65": "movzx   edx, dl",
                    "66": "shl     edx, 2",
                    "67": "sub     eax, edx",
                    "68": "mov     edx, 1",
                    "69": "add     eax, ecx",
                    "70": "bswap   eax",
                    "71": "mov     [rbx+8], eax",
                    "72": "jmp     INSTR29"
                }
            },
            {
                "filename": "nf_reject_ipv6.nf_reject_ip6_tcphdr_put.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r13",
                    "2": "mov     esi, 14h",
                    "3": "mov     r13, rdx",
                    "4": "push    r12",
                    "5": "mov     r12d, ecx",
                    "6": "push    rbp",
                    "7": "mov     rbp, rdi",
                    "8": "push    rbx",
                    "9": "mov     rax, [rdi+0C8h]",
                    "10": "sub     rax, [rdi+0C0h]",
                    "11": "mov     [rdi+0B2h], ax",
                    "12": "call    skb_put; PIC mode",
                    "13": "mov     rbx, rax",
                    "14": "mov     al, [rax+0Ch]",
                    "15": "and     eax, 0Fh",
                    "16": "or      eax, 50h",
                    "17": "mov     [rbx+0Ch], al",
                    "18": "mov     ax, [r13+2]",
                    "19": "mov     [rbx], ax",
                    "20": "mov     eax, [r13+0]",
                    "21": "mov     [rbx+2], ax",
                    "22": "mov     dl, [r13+0Dh]",
                    "23": "test    dl, 10h",
                    "24": "jz      short INSTR30",
                    "25": "mov     eax, [r13+8]",
                    "26": "xor     edx, edx",
                    "27": "mov     dword ptr [rbx+8], 0",
                    "28": "mov     [rbx+4], eax",
                    "29": "jmp     short INSTR48",
                    "30": "mov     eax, edx",
                    "31": "and     edx, 1",
                    "32": "mov     ecx, [r13+4]",
                    "33": "shr     al, 1",
                    "34": "and     eax, 1",
                    "35": "bswap   ecx",
                    "36": "add     eax, edx",
                    "37": "mov     dl, [r13+0Ch]",
                    "38": "mov     dword ptr [rbx+4], 0",
                    "39": "add     eax, r12d",
                    "40": "shr     dl, 4",
                    "41": "movzx   edx, dl",
                    "42": "shl     edx, 2",
                    "43": "sub     eax, edx",
                    "44": "mov     edx, 1",
                    "45": "add     eax, ecx",
                    "46": "bswap   eax",
                    "47": "mov     [rbx+8], eax",
                    "48": "mov     byte ptr [rbx+0Dh], 4",
                    "49": "mov     eax, [rbx+0Ch]",
                    "50": "shl     edx, 0Ch",
                    "51": "mov     rdi, rbx",
                    "52": "mov     dword ptr [rbx+10h], 0",
                    "53": "mov     esi, 14h",
                    "54": "and     eax, 0EFFFh",
                    "55": "or      eax, edx",
                    "56": "xor     edx, edx",
                    "57": "mov     [rbx+0Ch], eax",
                    "58": "call    csum_partial; PIC mode",
                    "59": "mov     ecx, 6",
                    "60": "mov     edx, 14h",
                    "61": "movzx   edi, word ptr [rbp+0B4h]",
                    "62": "add     rdi, [rbp+0C0h]",
                    "63": "mov     r8d, eax",
                    "64": "lea     rsi, [rdi+18h]",
                    "65": "add     rdi, 8",
                    "66": "call    csum_ipv6_magic; PIC mode",
                    "67": "mov     [rbx+10h], ax",
                    "68": "pop     rbx",
                    "69": "pop     rbp",
                    "70": "pop     r12",
                    "71": "pop     r13",
                    "72": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47688",
        "files": [
            {
                "filename": "module.module_add_driver.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "test    edx, edx",
                    "2": "jz      INSTR75",
                    "3": "push    ebp",
                    "4": "mov     ebp, esp",
                    "5": "sub     esp, 20h",
                    "6": "mov     [ebp-8], esi",
                    "7": "test    eax, eax",
                    "8": "mov     esi, edx",
                    "9": "mov     [ebp-0Ch], ebx",
                    "10": "mov     [ebp-4], edi",
                    "11": "jz      INSTR54",
                    "12": "add     eax, 48h ; 'H'",
                    "13": "mov     ebx, eax",
                    "14": "jz      INSTR57",
                    "15": "mov     eax, [esi+48h]",
                    "16": "mov     ecx, offset aModule; \"module\"",
                    "17": "mov     edx, ebx",
                    "18": "call    sysfs_create_link",
                    "19": "test    eax, eax",
                    "20": "mov     ecx, eax",
                    "21": "jnz     INSTR58",
                    "22": "mov     eax, [esi]",
                    "23": "mov     edx, offset aSS; \"%s:%s\"",
                    "24": "mov     [esp+24h+var_18], eax",
                    "25": "mov     eax, [esi+4]",
                    "26": "mov     eax, [eax]",
                    "27": "mov     [esp+24h+var_20], edx",
                    "28": "mov     [esp+24h+var_24], 0CC0h",
                    "29": "mov     [esp+24h+var_1C], eax",
                    "30": "call    kasprintf",
                    "31": "test    eax, eax",
                    "32": "mov     edi, eax",
                    "33": "jz      INSTR104",
                    "34": "mov     eax, offset drivers_dir_mutex_0",
                    "35": "call    mutex_lock",
                    "36": "mov     eax, [ebx+28h]",
                    "37": "test    eax, eax",
                    "38": "jz      INSTR77",
                    "39": "mov     eax, offset drivers_dir_mutex_0",
                    "40": "call    mutex_unlock",
                    "41": "mov     eax, [ebx+28h]",
                    "42": "test    eax, eax",
                    "43": "jz      INSTR82",
                    "44": "mov     edx, [esi+48h]",
                    "45": "mov     ecx, edi",
                    "46": "call    sysfs_create_link",
                    "47": "mov     [ebp-10h], eax",
                    "48": "test    eax, eax",
                    "49": "jnz     INSTR99",
                    "50": "mov     eax, edi",
                    "51": "call    kfree",
                    "52": "mov     ecx, [ebp-10h]",
                    "53": "jmp     short INSTR58",
                    "54": "mov     edx, [edx+0Ch]",
                    "55": "test    edx, edx",
                    "56": "jnz     short INSTR65",
                    "57": "xor     ecx, ecx",
                    "58": "mov     ebx, [ebp-0Ch]",
                    "59": "mov     eax, ecx",
                    "60": "mov     esi, [ebp-8]",
                    "61": "mov     edi, [ebp-4]",
                    "62": "mov     esp, ebp",
                    "63": "pop     ebp",
                    "64": "retn",
                    "65": "mov     eax, ds:module_kset",
                    "66": "call    kset_find_obj",
                    "67": "test    eax, eax",
                    "68": "mov     ebx, eax",
                    "69": "jz      short INSTR57",
                    "70": "mov     eax, [esi+48h]",
                    "71": "mov     [eax+48h], ebx",
                    "72": "mov     eax, ebx",
                    "73": "call    kobject_put",
                    "74": "jmp     INSTR15",
                    "75": "xor     eax, eax",
                    "76": "retn",
                    "77": "mov     edx, ebx",
                    "78": "mov     eax, offset aDrivers; \"drivers\"",
                    "79": "call    kobject_create_and_add",
                    "80": "mov     [ebx+28h], eax",
                    "81": "jmp     INSTR39",
                    "82": "mov     ecx, 0FFFFFFEAh",
                    "83": "mov     [ebp-10h], ecx",
                    "84": "mov     eax, edi",
                    "85": "call    kfree",
                    "86": "mov     ecx, [ebp-10h]",
                    "87": "mov     [ebp-10h], ecx",
                    "88": "mov     eax, [esi+48h]",
                    "89": "mov     edx, offset aModule; \"module\"",
                    "90": "call    sysfs_remove_link",
                    "91": "mov     ecx, [ebp-10h]",
                    "92": "mov     ebx, [ebp-0Ch]",
                    "93": "mov     esi, [ebp-8]",
                    "94": "mov     edi, [ebp-4]",
                    "95": "mov     esp, ebp",
                    "96": "pop     ebp",
                    "97": "mov     eax, ecx",
                    "98": "retn",
                    "99": "mov     eax, [ebx+28h]",
                    "100": "mov     edx, edi",
                    "101": "call    sysfs_remove_link",
                    "102": "mov     ecx, [ebp-10h]",
                    "103": "jmp     short INSTR83",
                    "104": "mov     ecx, 0FFFFFFF4h",
                    "105": "jmp     short INSTR87"
                }
            },
            {
                "filename": "module.module_add_driver.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_40]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X21, X22, [SP,#0x40+var_20]",
                    "5": "CBZ             X1, loc_C8",
                    "6": "STP             X19, X20, [SP,#0x40+var_30]",
                    "7": "MOV             X19, X1",
                    "8": "CBZ             X0, loc_BC",
                    "9": "ADDS            X20, X0, #0x50 ; 'P'",
                    "10": "B.EQ            loc_C4",
                    "11": "LDR             X0, [X19,#0x88]",
                    "12": "ADRL            X22, aModule; \"module\"",
                    "13": "MOV             X1, X20",
                    "14": "MOV             X2, X22",
                    "15": "BL              sysfs_create_link",
                    "16": "MOV             W21, W0",
                    "17": "CBNZ            W0, loc_E0",
                    "18": "STR             X23, [SP,#0x40+var_10]",
                    "19": "ADRL            X1, aSS; \"%s:%s\"",
                    "20": "LDP             X3, X0, [X19]",
                    "21": "LDR             X2, [X0]",
                    "22": "MOV             W0, #0xCC0",
                    "23": "BL              kasprintf",
                    "24": "MOV             X23, X0",
                    "25": "CBZ             X0, loc_178",
                    "26": "ADRL            X21, drivers_dir_mutex.0",
                    "27": "MOV             X0, X21",
                    "28": "BL              mutex_lock",
                    "29": "LDR             X0, [X20,#0x48]",
                    "30": "CBZ             X0, loc_11C",
                    "31": "MOV             X0, X21",
                    "32": "BL              mutex_unlock",
                    "33": "LDR             X0, [X20,#0x48]",
                    "34": "CBZ             X0, loc_134",
                    "35": "LDR             X1, [X19,#0x88]",
                    "36": "MOV             X2, X23",
                    "37": "BL              sysfs_create_link",
                    "38": "MOV             W21, W0",
                    "39": "CBNZ            W0, loc_168",
                    "40": "MOV             X0, X23",
                    "41": "BL              kfree",
                    "42": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "43": "LDR             X23, [SP,#0x40+var_10]",
                    "44": "B               loc_CC",
                    "45": "LDR             X1, [X1,#0x18]",
                    "46": "CBNZ            X1, loc_F8",
                    "47": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "48": "MOV             W21, #0",
                    "49": "MOV             W0, W21",
                    "50": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "51": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "52": "AUTIASP",
                    "53": "RET",
                    "54": "MOV             W0, W21",
                    "55": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "56": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "57": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "58": "AUTIASP",
                    "59": "RET",
                    "60": "ADRP            X0, #module_kset@PAGE",
                    "61": "LDR             X0, [X0,#module_kset@PAGEOFF]",
                    "62": "BL              kset_find_obj",
                    "63": "MOV             X20, X0",
                    "64": "CBZ             X0, loc_C4",
                    "65": "LDR             X1, [X19,#0x88]",
                    "66": "STR             X0, [X1,#0x88]",
                    "67": "BL              kobject_put",
                    "68": "B               loc_28",
                    "69": "MOV             X1, X20",
                    "70": "ADRL            X0, aDrivers; \"drivers\"",
                    "71": "BL              kobject_create_and_add",
                    "72": "STR             X0, [X20,#0x48]",
                    "73": "B               loc_84",
                    "74": "MOV             W21, #0xFFFFFFEA",
                    "75": "MOV             X0, X23",
                    "76": "BL              kfree",
                    "77": "LDR             X0, [X19,#0x88]",
                    "78": "MOV             X1, X22",
                    "79": "BL              sysfs_remove_link",
                    "80": "MOV             W0, W21",
                    "81": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "82": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "83": "LDR             X23, [SP,#0x40+var_10]",
                    "84": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "85": "AUTIASP",
                    "86": "RET",
                    "87": "LDR             X0, [X20,#0x48]",
                    "88": "MOV             X1, X23",
                    "89": "BL              sysfs_remove_link",
                    "90": "B               loc_138",
                    "91": "MOV             W21, #0xFFFFFFF4",
                    "92": "B               loc_140"
                }
            },
            {
                "filename": "module.module_add_driver.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "endbr64",
                    "2": "push    rbp",
                    "3": "push    r15",
                    "4": "push    r14",
                    "5": "push    rbx",
                    "6": "xor     ebp, ebp",
                    "7": "test    rsi, rsi",
                    "8": "jz      INSTR78",
                    "9": "mov     r14, rsi",
                    "10": "mov     rbx, rdi",
                    "11": "test    rdi, rdi",
                    "12": "jz      INSTR55",
                    "13": "add     rbx, 50h ; 'P'",
                    "14": "test    rbx, rbx",
                    "15": "jz      INSTR78",
                    "16": "mov     rdi, [r14+88h]",
                    "17": "mov     rsi, rbx",
                    "18": "mov     rdx, offset aModule; \"module\"",
                    "19": "call    sysfs_create_link; PIC mode",
                    "20": "mov     ebp, eax",
                    "21": "test    eax, eax",
                    "22": "jnz     INSTR78",
                    "23": "mov     rcx, [r14]",
                    "24": "mov     rax, [r14+8]",
                    "25": "mov     rdx, [rax]",
                    "26": "mov     edi, 0CC0h",
                    "27": "mov     rsi, offset aSS; \"%s:%s\"",
                    "28": "call    kasprintf; PIC mode",
                    "29": "test    rax, rax",
                    "30": "jz      INSTR70",
                    "31": "mov     r15, rax",
                    "32": "mov     rdi, offset module_create_drivers_dir_drivers_dir_mutex",
                    "33": "call    mutex_lock; PIC mode",
                    "34": "cmp     qword ptr [rbx+48h], 0",
                    "35": "jnz     short INSTR40",
                    "36": "mov     rdi, offset aDrivers; \"drivers\"",
                    "37": "mov     rsi, rbx",
                    "38": "call    kobject_create_and_add; PIC mode",
                    "39": "mov     [rbx+48h], rax",
                    "40": "mov     rdi, offset module_create_drivers_dir_drivers_dir_mutex",
                    "41": "call    mutex_unlock; PIC mode",
                    "42": "mov     rdi, [rbx+48h]",
                    "43": "test    rdi, rdi",
                    "44": "jz      short INSTR72",
                    "45": "mov     rsi, [r14+88h]",
                    "46": "mov     rdx, r15",
                    "47": "call    sysfs_create_link; PIC mode",
                    "48": "test    eax, eax",
                    "49": "jz      short INSTR84",
                    "50": "mov     ebp, eax",
                    "51": "mov     rdi, [rbx+48h]",
                    "52": "mov     rsi, r15",
                    "53": "call    sysfs_remove_link; PIC mode",
                    "54": "jmp     short INSTR73",
                    "55": "mov     rsi, [r14+18h]",
                    "56": "test    rsi, rsi",
                    "57": "jz      short INSTR78",
                    "58": "mov     rdi, cs:module_kset",
                    "59": "call    kset_find_obj; PIC mode",
                    "60": "test    rax, rax",
                    "61": "jz      short INSTR78",
                    "62": "mov     rbx, rax",
                    "63": "mov     rax, [r14+88h]",
                    "64": "mov     [rax+88h], rbx",
                    "65": "mov     rdi, rbx",
                    "66": "call    kobject_put; PIC mode",
                    "67": "test    rbx, rbx",
                    "68": "jnz     INSTR16",
                    "69": "jmp     short INSTR78",
                    "70": "mov     ebp, 0FFFFFFF4h",
                    "71": "jmp     short INSTR75",
                    "72": "mov     ebp, 0FFFFFFEAh",
                    "73": "mov     rdi, r15",
                    "74": "call    kfree; PIC mode",
                    "75": "mov     rdi, [r14+88h]",
                    "76": "mov     rsi, offset aModule; \"module\"",
                    "77": "call    sysfs_remove_link; PIC mode",
                    "78": "mov     eax, ebp",
                    "79": "pop     rbx",
                    "80": "pop     r14",
                    "81": "pop     r15",
                    "82": "pop     rbp",
                    "83": "retn",
                    "84": "mov     rdi, r15",
                    "85": "call    kfree; PIC mode",
                    "86": "xor     ebp, ebp",
                    "87": "jmp     short INSTR78"
                }
            },
            {
                "filename": "module.module_add_driver.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r13",
                    "2": "push    r12",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "test    rsi, rsi",
                    "6": "jz      INSTR50",
                    "7": "mov     rbx, rsi",
                    "8": "test    rdi, rdi",
                    "9": "jz      INSTR47",
                    "10": "add     rdi, 50h ; 'P'",
                    "11": "mov     rbp, rdi",
                    "12": "jz      INSTR50",
                    "13": "mov     rdi, [rbx+88h]",
                    "14": "mov     rdx, offset aModule; \"module\"",
                    "15": "mov     rsi, rbp",
                    "16": "call    sysfs_create_link; PIC mode",
                    "17": "mov     r12d, eax",
                    "18": "test    eax, eax",
                    "19": "jnz     INSTR51",
                    "20": "mov     rax, [rbx+8]",
                    "21": "mov     rcx, [rbx]",
                    "22": "mov     edi, 0CC0h",
                    "23": "mov     rsi, offset aSS; \"%s:%s\"",
                    "24": "mov     rdx, [rax]",
                    "25": "call    kasprintf; PIC mode",
                    "26": "mov     r13, rax",
                    "27": "test    rax, rax",
                    "28": "jz      INSTR88",
                    "29": "mov     rdi, offset drivers_dir_mutex_0",
                    "30": "call    mutex_lock; PIC mode",
                    "31": "cmp     qword ptr [rbp+48h], 0",
                    "32": "jz      INSTR67",
                    "33": "mov     rdi, offset drivers_dir_mutex_0",
                    "34": "call    mutex_unlock; PIC mode",
                    "35": "mov     rdi, [rbp+48h]",
                    "36": "test    rdi, rdi",
                    "37": "jz      INSTR72",
                    "38": "mov     rsi, [rbx+88h]",
                    "39": "mov     rdx, r13",
                    "40": "call    sysfs_create_link; PIC mode",
                    "41": "mov     r12d, eax",
                    "42": "test    eax, eax",
                    "43": "jnz     INSTR84",
                    "44": "mov     rdi, r13",
                    "45": "call    kfree; PIC mode",
                    "46": "jmp     short INSTR51",
                    "47": "mov     rsi, [rsi+18h]",
                    "48": "test    rsi, rsi",
                    "49": "jnz     short INSTR57",
                    "50": "xor     r12d, r12d",
                    "51": "pop     rbx",
                    "52": "mov     eax, r12d",
                    "53": "pop     rbp",
                    "54": "pop     r12",
                    "55": "pop     r13",
                    "56": "jmp     __x86_return_thunk; PIC mode",
                    "57": "mov     rdi, cs:module_kset",
                    "58": "call    kset_find_obj; PIC mode",
                    "59": "mov     rbp, rax",
                    "60": "test    rax, rax",
                    "61": "jz      short INSTR50",
                    "62": "mov     rax, [rbx+88h]",
                    "63": "mov     rdi, rbp",
                    "64": "mov     [rax+88h], rbp",
                    "65": "call    kobject_put; PIC mode",
                    "66": "jmp     INSTR13",
                    "67": "mov     rsi, rbp",
                    "68": "mov     rdi, offset aDrivers; \"drivers\"",
                    "69": "call    kobject_create_and_add; PIC mode",
                    "70": "mov     [rbp+48h], rax",
                    "71": "jmp     INSTR33",
                    "72": "mov     r12d, 0FFFFFFEAh",
                    "73": "mov     rdi, r13",
                    "74": "call    kfree; PIC mode",
                    "75": "mov     rdi, [rbx+88h]",
                    "76": "mov     rsi, offset aModule; \"module\"",
                    "77": "call    sysfs_remove_link; PIC mode",
                    "78": "mov     eax, r12d",
                    "79": "pop     rbx",
                    "80": "pop     rbp",
                    "81": "pop     r12",
                    "82": "pop     r13",
                    "83": "jmp     __x86_return_thunk; PIC mode",
                    "84": "mov     rdi, [rbp+48h]",
                    "85": "mov     rsi, r13",
                    "86": "call    sysfs_remove_link; PIC mode",
                    "87": "jmp     short INSTR73",
                    "88": "mov     r12d, 0FFFFFFF4h",
                    "89": "jmp     short INSTR75"
                }
            },
            {
                "filename": "module.module_add_driver.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r13",
                    "2": "push    r12",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "test    rsi, rsi",
                    "6": "jnz     short INSTR9",
                    "7": "xor     r12d, r12d",
                    "8": "jmp     INSTR78",
                    "9": "mov     rbx, rdi",
                    "10": "mov     rbp, rsi",
                    "11": "test    rdi, rdi",
                    "12": "jz      short INSTR16",
                    "13": "add     rbx, 50h ; 'P'",
                    "14": "jnz     short INSTR28",
                    "15": "jmp     short INSTR7",
                    "16": "mov     rsi, [rsi+18h]",
                    "17": "test    rsi, rsi",
                    "18": "jz      short INSTR7",
                    "19": "mov     rdi, cs:module_kset",
                    "20": "call    kset_find_obj; PIC mode",
                    "21": "mov     rbx, rax",
                    "22": "test    rax, rax",
                    "23": "jz      short INSTR7",
                    "24": "mov     rax, [rbp+88h]",
                    "25": "mov     rdi, rbx",
                    "26": "mov     [rax+88h], rbx",
                    "27": "call    kobject_put; PIC mode",
                    "28": "mov     rdi, [rbp+88h]",
                    "29": "mov     rdx, offset aModule; \"module\"",
                    "30": "mov     rsi, rbx",
                    "31": "call    sysfs_create_link; PIC mode",
                    "32": "mov     r12d, eax",
                    "33": "test    eax, eax",
                    "34": "jnz     INSTR78",
                    "35": "mov     rax, [rbp+8]",
                    "36": "mov     rcx, [rbp+0]",
                    "37": "mov     edi, 0CC0h",
                    "38": "mov     rsi, offset aSS; \"%s:%s\"",
                    "39": "mov     rdx, [rax]",
                    "40": "call    kasprintf; PIC mode",
                    "41": "mov     r13, rax",
                    "42": "test    rax, rax",
                    "43": "jz      short INSTR74",
                    "44": "mov     rdi, offset drivers_dir_mutex_0",
                    "45": "call    mutex_lock; PIC mode",
                    "46": "cmp     qword ptr [rbx+48h], 0",
                    "47": "jnz     short INSTR52",
                    "48": "mov     rsi, rbx",
                    "49": "mov     rdi, offset aDrivers; \"drivers\"",
                    "50": "call    kobject_create_and_add; PIC mode",
                    "51": "mov     [rbx+48h], rax",
                    "52": "mov     rdi, offset drivers_dir_mutex_0",
                    "53": "call    mutex_unlock; PIC mode",
                    "54": "mov     rdi, [rbx+48h]",
                    "55": "test    rdi, rdi",
                    "56": "jz      short INSTR70",
                    "57": "mov     rsi, [rbp+88h]",
                    "58": "mov     rdx, r13",
                    "59": "call    sysfs_create_link; PIC mode",
                    "60": "mov     r12d, eax",
                    "61": "test    eax, eax",
                    "62": "jz      short INSTR67",
                    "63": "mov     rdi, [rbx+48h]",
                    "64": "mov     rsi, r13",
                    "65": "call    sysfs_remove_link; PIC mode",
                    "66": "jmp     short INSTR71",
                    "67": "mov     rdi, r13",
                    "68": "call    kfree; PIC mode",
                    "69": "jmp     short INSTR78",
                    "70": "mov     r12d, 0FFFFFFEAh",
                    "71": "mov     rdi, r13",
                    "72": "call    kfree; PIC mode",
                    "73": "jmp     short INSTR75",
                    "74": "mov     r12d, 0FFFFFFF4h",
                    "75": "mov     rdi, [rbp+88h]",
                    "76": "mov     rsi, offset aModule; \"module\"",
                    "77": "call    sysfs_remove_link; PIC mode",
                    "78": "pop     rbx",
                    "79": "mov     eax, r12d",
                    "80": "pop     rbp",
                    "81": "pop     r12",
                    "82": "pop     r13",
                    "83": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "module.module_add_driver.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "test    edx, edx",
                    "2": "jz      INSTR94",
                    "3": "push    ebp",
                    "4": "mov     ebp, esp",
                    "5": "sub     esp, 20h",
                    "6": "mov     [ebp-8], esi",
                    "7": "test    eax, eax",
                    "8": "mov     esi, edx",
                    "9": "mov     [ebp-0Ch], ebx",
                    "10": "mov     [ebp-4], edi",
                    "11": "jz      INSTR55",
                    "12": "add     eax, 48h ; 'H'",
                    "13": "mov     ebx, eax",
                    "14": "jz      INSTR58",
                    "15": "mov     eax, [esi+48h]",
                    "16": "mov     ecx, offset aModule; \"module\"",
                    "17": "mov     edx, ebx",
                    "18": "call    sysfs_create_link",
                    "19": "test    eax, eax",
                    "20": "mov     ecx, eax",
                    "21": "jnz     INSTR59",
                    "22": "mov     eax, [esi]",
                    "23": "mov     edx, offset aSS; \"%s:%s\"",
                    "24": "mov     [esp+24h+var_18], eax",
                    "25": "mov     eax, [esi+4]",
                    "26": "mov     eax, [eax]",
                    "27": "mov     [esp+24h+var_20], edx",
                    "28": "mov     [esp+24h+var_24], 0CC0h",
                    "29": "mov     [esp+24h+var_1C], eax",
                    "30": "call    kasprintf",
                    "31": "test    eax, eax",
                    "32": "mov     edi, eax",
                    "33": "jz      INSTR101",
                    "34": "mov     eax, offset drivers_dir_mutex_0",
                    "35": "call    mutex_lock",
                    "36": "mov     eax, [ebx+28h]",
                    "37": "test    eax, eax",
                    "38": "jz      INSTR96",
                    "39": "mov     eax, offset drivers_dir_mutex_0",
                    "40": "call    mutex_unlock",
                    "41": "mov     eax, [ebx+28h]",
                    "42": "test    eax, eax",
                    "43": "jz      short INSTR76",
                    "44": "mov     edx, [esi+48h]",
                    "45": "mov     ecx, edi",
                    "46": "call    sysfs_create_link",
                    "47": "test    eax, eax",
                    "48": "mov     ecx, eax",
                    "49": "jnz     short INSTR77",
                    "50": "mov     [ebp-10h], eax",
                    "51": "mov     eax, edi",
                    "52": "call    kfree",
                    "53": "mov     ecx, [ebp-10h]",
                    "54": "jmp     short INSTR59",
                    "55": "mov     edx, [edx+0Ch]",
                    "56": "test    edx, edx",
                    "57": "jnz     short INSTR66",
                    "58": "xor     ecx, ecx",
                    "59": "mov     ebx, [ebp-0Ch]",
                    "60": "mov     eax, ecx",
                    "61": "mov     esi, [ebp-8]",
                    "62": "mov     edi, [ebp-4]",
                    "63": "mov     esp, ebp",
                    "64": "pop     ebp",
                    "65": "retn",
                    "66": "mov     eax, ds:module_kset",
                    "67": "call    kset_find_obj",
                    "68": "test    eax, eax",
                    "69": "mov     ebx, eax",
                    "70": "jz      short INSTR58",
                    "71": "mov     eax, [esi+48h]",
                    "72": "mov     [eax+48h], ebx",
                    "73": "mov     eax, ebx",
                    "74": "call    kobject_put",
                    "75": "jmp     INSTR15",
                    "76": "mov     ecx, 0FFFFFFEAh",
                    "77": "mov     [ebp-10h], ecx",
                    "78": "mov     eax, [esi+48h]",
                    "79": "mov     edx, offset aModule; \"module\"",
                    "80": "call    sysfs_remove_link",
                    "81": "mov     eax, [ebx+28h]",
                    "82": "mov     edx, edi",
                    "83": "call    sysfs_remove_link",
                    "84": "mov     eax, edi",
                    "85": "call    kfree",
                    "86": "mov     ecx, [ebp-10h]",
                    "87": "mov     ebx, [ebp-0Ch]",
                    "88": "mov     esi, [ebp-8]",
                    "89": "mov     edi, [ebp-4]",
                    "90": "mov     esp, ebp",
                    "91": "pop     ebp",
                    "92": "mov     eax, ecx",
                    "93": "retn",
                    "94": "xor     eax, eax",
                    "95": "retn",
                    "96": "mov     edx, ebx",
                    "97": "mov     eax, offset aDrivers; \"drivers\"",
                    "98": "call    kobject_create_and_add",
                    "99": "mov     [ebx+28h], eax",
                    "100": "jmp     INSTR39",
                    "101": "mov     ecx, 0FFFFFFF4h",
                    "102": "jmp     short INSTR77"
                }
            },
            {
                "filename": "module.module_add_driver.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_40]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X21, X22, [SP,#0x40+var_20]",
                    "5": "CBZ             X1, loc_F0",
                    "6": "STP             X19, X20, [SP,#0x40+var_30]",
                    "7": "MOV             X19, X1",
                    "8": "CBZ             X0, loc_E4",
                    "9": "ADDS            X20, X0, #0x50 ; 'P'",
                    "10": "B.EQ            loc_EC",
                    "11": "LDR             X0, [X19,#0x88]",
                    "12": "ADRL            X22, aModule; \"module\"",
                    "13": "MOV             X1, X20",
                    "14": "MOV             X2, X22",
                    "15": "BL              sysfs_create_link",
                    "16": "MOV             W21, W0",
                    "17": "CBNZ            W0, loc_108",
                    "18": "STR             X23, [SP,#0x40+var_10]",
                    "19": "ADRL            X1, aSS; \"%s:%s\"",
                    "20": "LDP             X3, X0, [X19]",
                    "21": "LDR             X2, [X0]",
                    "22": "MOV             W0, #0xCC0",
                    "23": "BL              kasprintf",
                    "24": "MOV             X23, X0",
                    "25": "CBZ             X0, loc_164",
                    "26": "ADRL            X21, drivers_dir_mutex.0",
                    "27": "MOV             X0, X21",
                    "28": "BL              mutex_lock",
                    "29": "LDR             X0, [X20,#0x48]",
                    "30": "CBZ             X0, loc_144",
                    "31": "MOV             X0, X21",
                    "32": "BL              mutex_unlock",
                    "33": "LDR             X0, [X20,#0x48]",
                    "34": "CBZ             X0, loc_15C",
                    "35": "LDR             X1, [X19,#0x88]",
                    "36": "MOV             X2, X23",
                    "37": "BL              sysfs_create_link",
                    "38": "MOV             W21, W0",
                    "39": "CBZ             W0, loc_C0",
                    "40": "LDR             X0, [X19,#0x88]",
                    "41": "MOV             X1, X22",
                    "42": "BL              sysfs_remove_link",
                    "43": "LDR             X0, [X20,#0x48]",
                    "44": "MOV             X1, X23",
                    "45": "BL              sysfs_remove_link",
                    "46": "MOV             X0, X23",
                    "47": "BL              kfree",
                    "48": "MOV             W0, W21",
                    "49": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "50": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "51": "LDR             X23, [SP,#0x40+var_10]",
                    "52": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "53": "AUTIASP",
                    "54": "RET",
                    "55": "LDR             X1, [X1,#0x18]",
                    "56": "CBNZ            X1, loc_120",
                    "57": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "58": "MOV             W21, #0",
                    "59": "MOV             W0, W21",
                    "60": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "61": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "62": "AUTIASP",
                    "63": "RET",
                    "64": "MOV             W0, W21",
                    "65": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "66": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "67": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "68": "AUTIASP",
                    "69": "RET",
                    "70": "ADRP            X0, #module_kset@PAGE",
                    "71": "LDR             X0, [X0,#module_kset@PAGEOFF]",
                    "72": "BL              kset_find_obj",
                    "73": "MOV             X20, X0",
                    "74": "CBZ             X0, loc_EC",
                    "75": "LDR             X1, [X19,#0x88]",
                    "76": "STR             X0, [X1,#0x88]",
                    "77": "BL              kobject_put",
                    "78": "B               loc_28",
                    "79": "MOV             X1, X20",
                    "80": "ADRL            X0, aDrivers; \"drivers\"",
                    "81": "BL              kobject_create_and_add",
                    "82": "STR             X0, [X20,#0x48]",
                    "83": "B               loc_84",
                    "84": "MOV             W21, #0xFFFFFFEA",
                    "85": "B               loc_A8",
                    "86": "MOV             W21, #0xFFFFFFF4",
                    "87": "B               loc_A8"
                }
            },
            {
                "filename": "module.module_add_driver.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "endbr64",
                    "2": "push    rbp",
                    "3": "push    r15",
                    "4": "push    r14",
                    "5": "push    rbx",
                    "6": "xor     ebp, ebp",
                    "7": "test    rsi, rsi",
                    "8": "jz      INSTR81",
                    "9": "mov     r14, rsi",
                    "10": "mov     rbx, rdi",
                    "11": "test    rdi, rdi",
                    "12": "jz      INSTR55",
                    "13": "add     rbx, 50h ; 'P'",
                    "14": "test    rbx, rbx",
                    "15": "jz      INSTR81",
                    "16": "mov     rdi, [r14+88h]",
                    "17": "mov     rsi, rbx",
                    "18": "mov     rdx, offset aModule; \"module\"",
                    "19": "call    sysfs_create_link; PIC mode",
                    "20": "mov     ebp, eax",
                    "21": "test    eax, eax",
                    "22": "jnz     INSTR81",
                    "23": "mov     rcx, [r14]",
                    "24": "mov     rax, [r14+8]",
                    "25": "mov     rdx, [rax]",
                    "26": "mov     edi, 0CC0h",
                    "27": "mov     rsi, offset aSS; \"%s:%s\"",
                    "28": "call    kasprintf; PIC mode",
                    "29": "mov     r15, rax",
                    "30": "test    rax, rax",
                    "31": "jz      INSTR70",
                    "32": "mov     rdi, offset module_create_drivers_dir_drivers_dir_mutex",
                    "33": "call    mutex_lock; PIC mode",
                    "34": "cmp     qword ptr [rbx+48h], 0",
                    "35": "jnz     short INSTR40",
                    "36": "mov     rdi, offset aDrivers; \"drivers\"",
                    "37": "mov     rsi, rbx",
                    "38": "call    kobject_create_and_add; PIC mode",
                    "39": "mov     [rbx+48h], rax",
                    "40": "mov     rdi, offset module_create_drivers_dir_drivers_dir_mutex",
                    "41": "call    mutex_unlock; PIC mode",
                    "42": "mov     rdi, [rbx+48h]",
                    "43": "test    rdi, rdi",
                    "44": "jz      short INSTR72",
                    "45": "mov     rsi, [r14+88h]",
                    "46": "mov     rdx, r15",
                    "47": "call    sysfs_create_link; PIC mode",
                    "48": "mov     ebp, eax",
                    "49": "test    eax, eax",
                    "50": "jnz     short INSTR73",
                    "51": "mov     rdi, r15",
                    "52": "call    kfree; PIC mode",
                    "53": "xor     ebp, ebp",
                    "54": "jmp     short INSTR81",
                    "55": "mov     rsi, [r14+18h]",
                    "56": "test    rsi, rsi",
                    "57": "jz      short INSTR81",
                    "58": "mov     rdi, cs:module_kset",
                    "59": "call    kset_find_obj; PIC mode",
                    "60": "test    rax, rax",
                    "61": "jz      short INSTR81",
                    "62": "mov     rbx, rax",
                    "63": "mov     rax, [r14+88h]",
                    "64": "mov     [rax+88h], rbx",
                    "65": "mov     rdi, rbx",
                    "66": "call    kobject_put; PIC mode",
                    "67": "test    rbx, rbx",
                    "68": "jnz     INSTR16",
                    "69": "jmp     short INSTR81",
                    "70": "mov     ebp, 0FFFFFFF4h",
                    "71": "jmp     short INSTR73",
                    "72": "mov     ebp, 0FFFFFFEAh",
                    "73": "mov     rdi, [r14+88h]",
                    "74": "mov     rsi, offset aModule; \"module\"",
                    "75": "call    sysfs_remove_link; PIC mode",
                    "76": "mov     rdi, [rbx+48h]",
                    "77": "mov     rsi, r15",
                    "78": "call    sysfs_remove_link; PIC mode",
                    "79": "mov     rdi, r15",
                    "80": "call    kfree; PIC mode",
                    "81": "mov     eax, ebp",
                    "82": "pop     rbx",
                    "83": "pop     r14",
                    "84": "pop     r15",
                    "85": "pop     rbp",
                    "86": "retn"
                }
            },
            {
                "filename": "module.module_add_driver.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "test    rsi, rsi",
                    "2": "jz      INSTR82",
                    "3": "push    r12",
                    "4": "push    rbp",
                    "5": "push    rbx",
                    "6": "mov     rbx, rsi",
                    "7": "sub     rsp, 8",
                    "8": "test    rdi, rdi",
                    "9": "jz      INSTR47",
                    "10": "add     rdi, 50h ; 'P'",
                    "11": "mov     rbp, rdi",
                    "12": "jz      INSTR50",
                    "13": "mov     rdi, [rbx+88h]",
                    "14": "mov     rdx, offset aModule; \"module\"",
                    "15": "mov     rsi, rbp",
                    "16": "call    sysfs_create_link; PIC mode",
                    "17": "test    eax, eax",
                    "18": "jnz     INSTR51",
                    "19": "mov     rax, [rbx+8]",
                    "20": "mov     rcx, [rbx]",
                    "21": "mov     edi, 0CC0h",
                    "22": "mov     rsi, offset aSS; \"%s:%s\"",
                    "23": "mov     rdx, [rax]",
                    "24": "call    kasprintf; PIC mode",
                    "25": "mov     r12, rax",
                    "26": "test    rax, rax",
                    "27": "jz      INSTR89",
                    "28": "mov     rdi, offset drivers_dir_mutex_0",
                    "29": "call    mutex_lock; PIC mode",
                    "30": "cmp     qword ptr [rbp+48h], 0",
                    "31": "jz      INSTR84",
                    "32": "mov     rdi, offset drivers_dir_mutex_0",
                    "33": "call    mutex_unlock; PIC mode",
                    "34": "mov     rdi, [rbp+48h]",
                    "35": "test    rdi, rdi",
                    "36": "jz      short INSTR66",
                    "37": "mov     rsi, [rbx+88h]",
                    "38": "mov     rdx, r12",
                    "39": "call    sysfs_create_link; PIC mode",
                    "40": "test    eax, eax",
                    "41": "jnz     short INSTR67",
                    "42": "mov     rdi, r12",
                    "43": "mov     [rsp+20h+var_1C], eax",
                    "44": "call    kfree; PIC mode",
                    "45": "mov     eax, [rsp+20h+var_1C]",
                    "46": "jmp     short INSTR51",
                    "47": "mov     rsi, [rsi+18h]",
                    "48": "test    rsi, rsi",
                    "49": "jnz     short INSTR56",
                    "50": "xor     eax, eax",
                    "51": "add     rsp, 8",
                    "52": "pop     rbx",
                    "53": "pop     rbp",
                    "54": "pop     r12",
                    "55": "jmp     __x86_return_thunk; PIC mode",
                    "56": "mov     rdi, cs:module_kset",
                    "57": "call    kset_find_obj; PIC mode",
                    "58": "mov     rbp, rax",
                    "59": "test    rax, rax",
                    "60": "jz      short INSTR50",
                    "61": "mov     rax, [rbx+88h]",
                    "62": "mov     rdi, rbp",
                    "63": "mov     [rax+88h], rbp",
                    "64": "call    kobject_put; PIC mode",
                    "65": "jmp     INSTR13",
                    "66": "mov     eax, 0FFFFFFEAh",
                    "67": "mov     rdi, [rbx+88h]",
                    "68": "mov     rsi, offset aModule; \"module\"",
                    "69": "mov     [rsp+20h+var_1C], eax",
                    "70": "call    sysfs_remove_link; PIC mode",
                    "71": "mov     rdi, [rbp+48h]",
                    "72": "mov     rsi, r12",
                    "73": "call    sysfs_remove_link; PIC mode",
                    "74": "mov     rdi, r12",
                    "75": "call    kfree; PIC mode",
                    "76": "mov     eax, [rsp+20h+var_1C]",
                    "77": "add     rsp, 8",
                    "78": "pop     rbx",
                    "79": "pop     rbp",
                    "80": "pop     r12",
                    "81": "jmp     __x86_return_thunk; PIC mode",
                    "82": "xor     eax, eax",
                    "83": "jmp     __x86_return_thunk; PIC mode",
                    "84": "mov     rsi, rbp",
                    "85": "mov     rdi, offset aDrivers; \"drivers\"",
                    "86": "call    kobject_create_and_add; PIC mode",
                    "87": "mov     [rbp+48h], rax",
                    "88": "jmp     INSTR32",
                    "89": "mov     eax, 0FFFFFFF4h",
                    "90": "jmp     short INSTR67"
                }
            },
            {
                "filename": "module.module_add_driver.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r13",
                    "2": "push    r12",
                    "3": "push    rbp",
                    "4": "push    rbx",
                    "5": "test    rsi, rsi",
                    "6": "jnz     short INSTR9",
                    "7": "xor     r12d, r12d",
                    "8": "jmp     INSTR75",
                    "9": "mov     rbx, rdi",
                    "10": "mov     rbp, rsi",
                    "11": "test    rdi, rdi",
                    "12": "jz      short INSTR16",
                    "13": "add     rbx, 50h ; 'P'",
                    "14": "jnz     short INSTR28",
                    "15": "jmp     short INSTR7",
                    "16": "mov     rsi, [rsi+18h]",
                    "17": "test    rsi, rsi",
                    "18": "jz      short INSTR7",
                    "19": "mov     rdi, cs:module_kset",
                    "20": "call    kset_find_obj; PIC mode",
                    "21": "mov     rbx, rax",
                    "22": "test    rax, rax",
                    "23": "jz      short INSTR7",
                    "24": "mov     rax, [rbp+88h]",
                    "25": "mov     rdi, rbx",
                    "26": "mov     [rax+88h], rbx",
                    "27": "call    kobject_put; PIC mode",
                    "28": "mov     rdi, [rbp+88h]",
                    "29": "mov     rdx, offset aModule; \"module\"",
                    "30": "mov     rsi, rbx",
                    "31": "call    sysfs_create_link; PIC mode",
                    "32": "mov     r12d, eax",
                    "33": "test    eax, eax",
                    "34": "jnz     INSTR75",
                    "35": "mov     rax, [rbp+8]",
                    "36": "mov     rcx, [rbp+0]",
                    "37": "mov     edi, 0CC0h",
                    "38": "mov     rsi, offset aSS; \"%s:%s\"",
                    "39": "mov     rdx, [rax]",
                    "40": "call    kasprintf; PIC mode",
                    "41": "mov     r13, rax",
                    "42": "test    rax, rax",
                    "43": "jz      short INSTR64",
                    "44": "mov     rdi, offset drivers_dir_mutex_0",
                    "45": "call    mutex_lock; PIC mode",
                    "46": "cmp     qword ptr [rbx+48h], 0",
                    "47": "jnz     short INSTR52",
                    "48": "mov     rsi, rbx",
                    "49": "mov     rdi, offset aDrivers; \"drivers\"",
                    "50": "call    kobject_create_and_add; PIC mode",
                    "51": "mov     [rbx+48h], rax",
                    "52": "mov     rdi, offset drivers_dir_mutex_0",
                    "53": "call    mutex_unlock; PIC mode",
                    "54": "mov     rdi, [rbx+48h]",
                    "55": "test    rdi, rdi",
                    "56": "jz      short INSTR66",
                    "57": "mov     rsi, [rbp+88h]",
                    "58": "mov     rdx, r13",
                    "59": "call    sysfs_create_link; PIC mode",
                    "60": "mov     r12d, eax",
                    "61": "test    eax, eax",
                    "62": "jnz     short INSTR67",
                    "63": "jmp     short INSTR73",
                    "64": "mov     r12d, 0FFFFFFF4h",
                    "65": "jmp     short INSTR67",
                    "66": "mov     r12d, 0FFFFFFEAh",
                    "67": "mov     rdi, [rbp+88h]",
                    "68": "mov     rsi, offset aModule; \"module\"",
                    "69": "call    sysfs_remove_link; PIC mode",
                    "70": "mov     rdi, [rbx+48h]",
                    "71": "mov     rsi, r13",
                    "72": "call    sysfs_remove_link; PIC mode",
                    "73": "mov     rdi, r13",
                    "74": "call    kfree; PIC mode",
                    "75": "pop     rbx",
                    "76": "mov     eax, r12d",
                    "77": "pop     rbp",
                    "78": "pop     r12",
                    "79": "pop     r13",
                    "80": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47689",
        "files": [
            {
                "filename": "super.f2fs_handle_critical_error.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, eax",
                    "6": "push    ebx",
                    "7": "movzx   ebx, dl",
                    "8": "sub     esp, 20h",
                    "9": "test    bl, bl",
                    "10": "mov     [ebp+var_15], cl",
                    "11": "mov     eax, [eax]",
                    "12": "mov     [ebp+var_10], 0",
                    "13": "mov     [ebp+var_14], eax",
                    "14": "jz      short INSTR19",
                    "15": "xor     eax, eax",
                    "16": "cmp     dword ptr [esi+434h], 1",
                    "17": "setz    al",
                    "18": "mov     [ebp+var_10], eax",
                    "19": "lea     edi, [esi+90h]",
                    "20": "mov     eax, edi",
                    "21": "call    _raw_spin_lock_irqsave",
                    "22": "mov     edx, eax",
                    "23": "mov     eax, [esi+88h]",
                    "24": "or      dword ptr [eax+84h], 8",
                    "25": "mov     eax, edi",
                    "26": "call    _raw_spin_unlock_irqrestore",
                    "27": "mov     edx, [esi+748h]",
                    "28": "cmp     edx, 1",
                    "29": "jle     short INSTR54",
                    "30": "mov     [ebp+var_1C], edx",
                    "31": "mov     eax, [esi+74Ch]",
                    "32": "xor     edi, edi",
                    "33": "mov     edx, [eax]",
                    "34": "cmp     byte ptr [edx+20h], 0",
                    "35": "jz      INSTR109",
                    "36": "cmp     dword ptr [esi+434h], 2",
                    "37": "jz      INSTR121",
                    "38": "test    bl, bl",
                    "39": "jnz     INSTR89",
                    "40": "lock or byte ptr [esi+28h], 40h",
                    "41": "mov     [esp+0Ch], ebx",
                    "42": "mov     ecx, offset unk_801E268",
                    "43": "xor     ebx, ebx",
                    "44": "mov     [esp+4], ebx",
                    "45": "mov     [esp], esi",
                    "46": "mov     [esp+8], ecx",
                    "47": "call    f2fs_printk",
                    "48": "add     esp, 20h",
                    "49": "pop     ebx",
                    "50": "pop     esi",
                    "51": "pop     edi",
                    "52": "pop     ebp",
                    "53": "retn",
                    "54": "mov     eax, [esi]",
                    "55": "mov     eax, [eax+74h]",
                    "56": "cmp     byte ptr [eax+20h], 0",
                    "57": "jnz     short INSTR36",
                    "58": "mov     eax, [eax+10h]",
                    "59": "mov     edx, [eax+3Ch]",
                    "60": "cmp     byte ptr [edx+20h], 0",
                    "61": "jnz     short INSTR36",
                    "62": "mov     eax, [eax+0D8h]",
                    "63": "test    al, 2",
                    "64": "jnz     short INSTR36",
                    "65": "lea     ecx, [esi+7B8h]",
                    "66": "movzx   edi, bl",
                    "67": "mov     [ebp+var_1C], ecx",
                    "68": "mov     eax, ecx",
                    "69": "call    _raw_spin_lock_irqsave",
                    "70": "mov     ecx, [ebp+var_1C]",
                    "71": "mov     edx, eax",
                    "72": "movzx   eax, byte ptr [esi+edi+798h]",
                    "73": "cmp     al, 0FFh",
                    "74": "jz      short INSTR77",
                    "75": "inc     al",
                    "76": "mov     [esi+edi+798h], al",
                    "77": "mov     eax, ecx",
                    "78": "call    _raw_spin_unlock_irqrestore",
                    "79": "test    bl, bl",
                    "80": "jz      INSTR135",
                    "81": "cmp     [ebp+var_15], 0",
                    "82": "jz      INSTR135",
                    "83": "mov     edx, ds:system_wq",
                    "84": "lea     ecx, [esi+778h]",
                    "85": "mov     eax, 8",
                    "86": "call    queue_work_on",
                    "87": "cmp     dword ptr [esi+434h], 2",
                    "88": "jz      INSTR123",
                    "89": "mov     edi, [ebp+var_10]",
                    "90": "test    edi, edi",
                    "91": "jnz     INSTR41",
                    "92": "mov     eax, [ebp+var_14]",
                    "93": "test    byte ptr [eax+30h], 1",
                    "94": "jnz     INSTR41",
                    "95": "test    bl, bl",
                    "96": "jz      INSTR41",
                    "97": "mov     [esp], esi",
                    "98": "mov     eax, offset unk_801E290",
                    "99": "xor     edx, edx",
                    "100": "mov     [esp+8], eax",
                    "101": "mov     [esp+4], edx",
                    "102": "call    f2fs_printk",
                    "103": "add     esp, 20h",
                    "104": "pop     ebx",
                    "105": "pop     esi",
                    "106": "pop     edi",
                    "107": "pop     ebp",
                    "108": "retn",
                    "109": "mov     edx, [edx+10h]",
                    "110": "mov     ecx, [edx+3Ch]",
                    "111": "cmp     byte ptr [ecx+20h], 0",
                    "112": "jnz     INSTR36",
                    "113": "mov     edx, [edx+0D8h]",
                    "114": "test    dl, 2",
                    "115": "jnz     INSTR36",
                    "116": "inc     edi",
                    "117": "add     eax, 50h ; 'P'",
                    "118": "cmp     [ebp+var_1C], edi",
                    "119": "jnz     INSTR33",
                    "120": "jmp     INSTR65",
                    "121": "test    bl, bl",
                    "122": "jz      INSTR40",
                    "123": "mov     eax, ds:system_state",
                    "124": "sub     eax, 4",
                    "125": "cmp     eax, 2",
                    "126": "jbe     INSTR89",
                    "127": "mov     eax, [esi+28h]",
                    "128": "test    al, 40h",
                    "129": "jnz     INSTR89",
                    "130": "mov     dword ptr [esp], offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "131": "mov     eax, [ebp+var_14]",
                    "132": "add     eax, 214h",
                    "133": "mov     [esp+4], eax",
                    "134": "call    panic",
                    "135": "mov     eax, esi",
                    "136": "call    f2fs_record_stop_reason",
                    "137": "jmp     INSTR36"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x40+var_s0]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#var_s10]",
                    "5": "MOV             X19, X0",
                    "6": "ANDS            W20, W1, #0xFF",
                    "7": "STP             X21, X22, [SP,#var_s20]",
                    "8": "MOV             W21, #0",
                    "9": "STP             X23, X24, [SP,#var_s30]",
                    "10": "AND             W23, W2, #0xFF",
                    "11": "LDR             X22, [X0]",
                    "12": "B.EQ            loc_12510",
                    "13": "LDR             W0, [X0,#0x680]",
                    "14": "CMP             W0, #1",
                    "15": "CSET            W21, EQ",
                    "16": "ADD             X24, X19, #0xFC",
                    "17": "MOV             X0, X24",
                    "18": "BL              _raw_spin_lock_irqsave",
                    "19": "LDR             X3, [X19,#0xF0]",
                    "20": "MOV             X1, X0",
                    "21": "MOV             X0, X24",
                    "22": "LDR             W2, [X3,#0x84]",
                    "23": "ORR             W2, W2, #8",
                    "24": "STR             W2, [X3,#0x84]",
                    "25": "BL              _raw_spin_unlock_irqrestore",
                    "26": "LDR             W0, [X19,#0xA74]",
                    "27": "CMP             W0, #1",
                    "28": "B.LE            loc_12630",
                    "29": "LDR             X1, [X19,#0xA78]",
                    "30": "SUB             W0, W0, #1",
                    "31": "MOV             W3, #0x58 ; 'X'",
                    "32": "ADD             X2, X1, #0x58 ; 'X'",
                    "33": "UMADDL          X0, W0, W3, X2",
                    "34": "LDR             X2, [X1]",
                    "35": "LDRB            W3, [X2,#0x30]",
                    "36": "CBZ             W3, loc_12604",
                    "37": "LDR             W0, [X19,#0x680]",
                    "38": "CMP             W0, #2",
                    "39": "B.EQ            loc_125EC",
                    "40": "CBZ             W20, loc_125F0",
                    "41": "CBNZ            W21, loc_12590",
                    "42": "LDR             X1, [X22,#0x50]",
                    "43": "CMP             W20, #0",
                    "44": "CSET            W0, EQ",
                    "45": "AND             W1, W1, #1",
                    "46": "ORR             W0, W0, W1",
                    "47": "CBZ             W0, loc_125C0",
                    "48": "MOV             W3, W20",
                    "49": "MOV             X0, X19",
                    "50": "MOV             W1, #0",
                    "51": "ADRL            X2, unk_21218",
                    "52": "BL              f2fs_printk",
                    "53": "LDP             X19, X20, [SP,#var_s10]",
                    "54": "LDP             X21, X22, [SP,#var_s20]",
                    "55": "LDP             X23, X24, [SP,#var_s30]",
                    "56": "LDP             X29, X30, [SP+var_s0],#0x40",
                    "57": "AUTIASP",
                    "58": "RET",
                    "59": "MOV             X0, X19",
                    "60": "MOV             W1, #0",
                    "61": "ADRL            X2, unk_21240",
                    "62": "BL              f2fs_printk",
                    "63": "LDP             X19, X20, [SP,#var_s10]",
                    "64": "LDP             X21, X22, [SP,#var_s20]",
                    "65": "LDP             X23, X24, [SP,#var_s30]",
                    "66": "LDP             X29, X30, [SP+var_s0],#0x40",
                    "67": "AUTIASP",
                    "68": "RET",
                    "69": "CBNZ            W20, loc_126B8",
                    "70": "B               loc_126E8",
                    "71": "ADD             X1, X19, #0x48 ; 'H'",
                    "72": "MOV             X0, #0x40 ; '@'",
                    "73": "STSET           X0, [X1]",
                    "74": "B               loc_12590",
                    "75": "LDR             X2, [X2,#0x10]",
                    "76": "LDR             X3, [X2,#0x40]",
                    "77": "LDRB            W3, [X3,#0x30]",
                    "78": "CBNZ            W3, loc_12564",
                    "79": "LDR             X2, [X2,#0x160]",
                    "80": "TST             W2, #2",
                    "81": "B.NE            loc_12564",
                    "82": "ADD             X1, X1, #0x58 ; 'X'",
                    "83": "CMP             X0, X1",
                    "84": "B.NE            loc_12558",
                    "85": "B               loc_1265C",
                    "86": "LDR             X0, [X19]",
                    "87": "LDR             X0, [X0,#0xC8]",
                    "88": "LDRB            W1, [X0,#0x30]",
                    "89": "CBNZ            W1, loc_12564",
                    "90": "LDR             X0, [X0,#0x10]",
                    "91": "LDR             X1, [X0,#0x40]",
                    "92": "LDRB            W1, [X1,#0x30]",
                    "93": "CBNZ            W1, loc_12564",
                    "94": "LDR             X0, [X0,#0x160]",
                    "95": "TST             W0, #2",
                    "96": "B.NE            loc_12564",
                    "97": "ADD             X24, X19, #0xB08",
                    "98": "MOV             X0, X24",
                    "99": "BL              _raw_spin_lock_irqsave",
                    "100": "ADD             X2, X19, W20,SXTW",
                    "101": "MOV             X1, X0",
                    "102": "LDRB            W0, [X2,#0xAE8]",
                    "103": "CMP             W0, #0xFF",
                    "104": "B.EQ            loc_12684",
                    "105": "ADD             W0, W0, #1",
                    "106": "STRB            W0, [X2,#0xAE8]",
                    "107": "MOV             X0, X24",
                    "108": "BL              _raw_spin_unlock_irqrestore",
                    "109": "CMP             W20, #0",
                    "110": "CCMP            W23, #0, #4, NE",
                    "111": "B.EQ            loc_12704",
                    "112": "ADRP            X1, #system_wq@PAGE",
                    "113": "ADD             X2, X19, #0xAB8",
                    "114": "MOV             W0, #8",
                    "115": "LDR             X1, [X1,#system_wq@PAGEOFF]",
                    "116": "BL              queue_work_on",
                    "117": "LDR             W0, [X19,#0x680]",
                    "118": "CMP             W0, #2",
                    "119": "B.NE            loc_12574",
                    "120": "ADRP            X0, #system_state@PAGE",
                    "121": "LDR             W0, [X0,#system_state@PAGEOFF]",
                    "122": "SUB             W0, W0, #4",
                    "123": "CMP             W0, #2",
                    "124": "B.LS            loc_12574",
                    "125": "LDR             X0, [X19,#0x48]",
                    "126": "TST             W0, #0x40",
                    "127": "B.NE            loc_12574",
                    "128": "ADRP            X0, #aF2fsFsDeviceSP@PAGE; \"F2FS-fs (device %s): panic forced after\"...",
                    "129": "ADD             X1, X22, #0x390",
                    "130": "ADD             X0, X0, #aF2fsFsDeviceSP@PAGEOFF; \"F2FS-fs (device %s): panic forced after\"...",
                    "131": "BL              panic",
                    "132": "ADD             X2, X19, #0x48 ; 'H'",
                    "133": "PRFM            #0x11, [X2]",
                    "134": "LDXR            X0, [X2]",
                    "135": "ORR             X0, X0, #0x40 ; '@'",
                    "136": "STXR            W1, X0, [X2]",
                    "137": "CBNZ            W1, loc_126F0",
                    "138": "B               loc_12590",
                    "139": "MOV             X0, X19",
                    "140": "BL              f2fs_record_stop_reason",
                    "141": "B               loc_12564"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r15d, edx",
                    "8": "mov     r13d, esi",
                    "9": "mov     rbx, rdi",
                    "10": "test    esi, esi",
                    "11": "jz      short INSTR15",
                    "12": "cmp     dword ptr [rbx+680h], 1",
                    "13": "setz    r14b",
                    "14": "jmp     short INSTR16",
                    "15": "xor     r14d, r14d",
                    "16": "mov     r12, [rbx]",
                    "17": "lea     rbp, [rbx+0FCh]",
                    "18": "mov     rdi, rbp",
                    "19": "call    _raw_spin_lock_irqsave; PIC mode",
                    "20": "mov     rcx, [rbx+0F0h]",
                    "21": "or      dword ptr [rcx+84h], 8",
                    "22": "mov     rdi, rbp",
                    "23": "mov     rsi, rax",
                    "24": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "25": "mov     ecx, [rbx+0A74h]",
                    "26": "cmp     ecx, 2",
                    "27": "jl      short INSTR44",
                    "28": "mov     rax, [rbx+0A78h]",
                    "29": "imul    rcx, 58h ; 'X'",
                    "30": "xor     edx, edx",
                    "31": "mov     rsi, [rax+rdx]",
                    "32": "cmp     byte ptr [rsi+30h], 0",
                    "33": "jnz     INSTR79",
                    "34": "mov     rsi, [rsi+10h]",
                    "35": "mov     rdi, [rsi+40h]",
                    "36": "cmp     byte ptr [rdi+30h], 0",
                    "37": "jnz     INSTR79",
                    "38": "test    qword ptr [rsi+160h], 2",
                    "39": "jnz     INSTR79",
                    "40": "add     rdx, 58h ; 'X'",
                    "41": "cmp     rcx, rdx",
                    "42": "jnz     short INSTR31",
                    "43": "jmp     short INSTR54",
                    "44": "mov     rax, [rbx]",
                    "45": "mov     rax, [rax+0C8h]",
                    "46": "cmp     byte ptr [rax+30h], 0",
                    "47": "jnz     INSTR79",
                    "48": "mov     rax, [rax+10h]",
                    "49": "mov     rcx, [rax+40h]",
                    "50": "cmp     byte ptr [rcx+30h], 0",
                    "51": "jnz     short INSTR79",
                    "52": "test    qword ptr [rax+160h], 2",
                    "53": "jnz     short INSTR79",
                    "54": "mov     rbp, r12",
                    "55": "lea     r12, [rbx+0B08h]",
                    "56": "mov     rdi, r12",
                    "57": "call    _raw_spin_lock_irqsave; PIC mode",
                    "58": "movzx   ecx, r13b",
                    "59": "mov     dl, [rbx+rcx+0AE8h]",
                    "60": "cmp     dl, 0FFh",
                    "61": "jz      short INSTR64",
                    "62": "add     dl, 1",
                    "63": "mov     [rbx+rcx+0AE8h], dl",
                    "64": "mov     rdi, r12",
                    "65": "mov     rsi, rax",
                    "66": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "67": "test    r13b, r13b",
                    "68": "jz      short INSTR76",
                    "69": "test    r15b, r15b",
                    "70": "jz      short INSTR76",
                    "71": "lea     rdx, [rbx+0AB8h]",
                    "72": "mov     rsi, cs:system_wq",
                    "73": "mov     edi, 40h ; '@'",
                    "74": "call    queue_work_on; PIC mode",
                    "75": "jmp     short INSTR78",
                    "76": "mov     rdi, rbx",
                    "77": "call    f2fs_record_stop_reason",
                    "78": "mov     r12, rbp",
                    "79": "test    r13b, r13b",
                    "80": "jz      short INSTR89",
                    "81": "cmp     dword ptr [rbx+680h], 2",
                    "82": "jnz     short INSTR89",
                    "83": "mov     eax, cs:system_state",
                    "84": "add     eax, 0FFFFFFFCh",
                    "85": "cmp     eax, 3",
                    "86": "jb      short INSTR89",
                    "87": "test    qword ptr [rbx+48h], 40h",
                    "88": "jz      short INSTR124",
                    "89": "test    r13b, r13b",
                    "90": "jz      short INSTR94",
                    "91": "test    r14b, r14b",
                    "92": "jz      short INSTR97",
                    "93": "jmp     short INSTR113",
                    "94": "lock or byte ptr [rbx+48h], 40h",
                    "95": "test    r14b, r14b",
                    "96": "jnz     short INSTR113",
                    "97": "test    r13b, r13b",
                    "98": "jz      short INSTR113",
                    "99": "mov     rax, [r12+50h]",
                    "100": "and     eax, 1",
                    "101": "test    rax, rax",
                    "102": "jnz     short INSTR113",
                    "103": "mov     rdi, rbx",
                    "104": "xor     esi, esi",
                    "105": "mov     rdx, offset unk_1FCCE",
                    "106": "pop     rbx",
                    "107": "pop     r12",
                    "108": "pop     r13",
                    "109": "pop     r14",
                    "110": "pop     r15",
                    "111": "pop     rbp",
                    "112": "jmp     f2fs_printk; PIC mode",
                    "113": "mov     rdi, rbx",
                    "114": "xor     esi, esi",
                    "115": "mov     rdx, offset unk_1FCA7",
                    "116": "mov     ecx, r13d",
                    "117": "pop     rbx",
                    "118": "pop     r12",
                    "119": "pop     r13",
                    "120": "pop     r14",
                    "121": "pop     r15",
                    "122": "pop     rbp",
                    "123": "jmp     f2fs_printk; PIC mode",
                    "124": "add     r12, 390h",
                    "125": "mov     rdi, offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "126": "mov     rsi, r12",
                    "127": "call    panic; PIC mode"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "xor     r13d, r13d",
                    "5": "push    r12",
                    "6": "mov     r12d, edx",
                    "7": "push    rbp",
                    "8": "mov     rbp, rdi",
                    "9": "push    rbx",
                    "10": "mov     ebx, esi",
                    "11": "sub     rsp, 8",
                    "12": "mov     r14, [rdi]",
                    "13": "test    sil, sil",
                    "14": "jz      short INSTR18",
                    "15": "xor     r13d, r13d",
                    "16": "cmp     dword ptr [rdi+680h], 1",
                    "17": "setz    r13b",
                    "18": "lea     r15, [rbp+0FCh]",
                    "19": "mov     rdi, r15",
                    "20": "call    _raw_spin_lock_irqsave; PIC mode",
                    "21": "mov     rdi, r15",
                    "22": "mov     rsi, rax",
                    "23": "mov     rax, [rbp+0F0h]",
                    "24": "or      dword ptr [rax+84h], 8",
                    "25": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "26": "mov     edx, [rbp+0A74h]",
                    "27": "cmp     edx, 1",
                    "28": "jle     short INSTR54",
                    "29": "sub     edx, 1",
                    "30": "mov     rax, [rbp+0A78h]",
                    "31": "lea     rcx, [rdx+rdx*4]",
                    "32": "lea     rdx, [rdx+rcx*2]",
                    "33": "lea     rcx, [rax+rdx*8+58h]",
                    "34": "mov     rdx, [rax]",
                    "35": "cmp     byte ptr [rdx+30h], 0",
                    "36": "jz      INSTR105",
                    "37": "cmp     dword ptr [rbp+680h], 2",
                    "38": "jz      INSTR116",
                    "39": "test    bl, bl",
                    "40": "jnz     INSTR88",
                    "41": "lock or byte ptr [rbp+48h], 40h",
                    "42": "add     rsp, 8",
                    "43": "movzx   ecx, bl",
                    "44": "mov     rdi, rbp",
                    "45": "xor     esi, esi",
                    "46": "pop     rbx",
                    "47": "mov     rdx, offset unk_227A0",
                    "48": "pop     rbp",
                    "49": "pop     r12",
                    "50": "pop     r13",
                    "51": "pop     r14",
                    "52": "pop     r15",
                    "53": "jmp     f2fs_printk",
                    "54": "mov     rax, [rbp+0]",
                    "55": "mov     rax, [rax+0C8h]",
                    "56": "cmp     byte ptr [rax+30h], 0",
                    "57": "jnz     short INSTR37",
                    "58": "mov     rax, [rax+10h]",
                    "59": "mov     rdx, [rax+40h]",
                    "60": "cmp     byte ptr [rdx+30h], 0",
                    "61": "jnz     short INSTR37",
                    "62": "mov     rax, [rax+160h]",
                    "63": "test    al, 2",
                    "64": "jnz     short INSTR37",
                    "65": "lea     rdi, [rbp+0B08h]",
                    "66": "movzx   r15d, bl",
                    "67": "mov     [rsp+38h+var_38], rdi",
                    "68": "call    _raw_spin_lock_irqsave; PIC mode",
                    "69": "movsxd  rdx, r15d",
                    "70": "mov     rdi, [rsp+38h+var_38]",
                    "71": "mov     rsi, rax",
                    "72": "movzx   eax, byte ptr [rbp+rdx+0AE8h]",
                    "73": "cmp     al, 0FFh",
                    "74": "jz      short INSTR77",
                    "75": "add     eax, 1",
                    "76": "mov     [rbp+rdx+0AE8h], al",
                    "77": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "78": "test    bl, bl",
                    "79": "jz      INSTR128",
                    "80": "test    r12b, r12b",
                    "81": "jz      INSTR128",
                    "82": "mov     rsi, cs:system_wq",
                    "83": "lea     rdx, [rbp+0AB8h]",
                    "84": "mov     edi, 40h ; '@'",
                    "85": "call    queue_work_on; PIC mode",
                    "86": "cmp     dword ptr [rbp+680h], 2",
                    "87": "jz      short INSTR118",
                    "88": "test    r13d, r13d",
                    "89": "jnz     INSTR42",
                    "90": "test    byte ptr [r14+50h], 1",
                    "91": "jnz     INSTR42",
                    "92": "test    bl, bl",
                    "93": "jz      INSTR42",
                    "94": "add     rsp, 8",
                    "95": "mov     rdi, rbp",
                    "96": "mov     rdx, offset unk_227C8",
                    "97": "xor     esi, esi",
                    "98": "pop     rbx",
                    "99": "pop     rbp",
                    "100": "pop     r12",
                    "101": "pop     r13",
                    "102": "pop     r14",
                    "103": "pop     r15",
                    "104": "jmp     f2fs_printk",
                    "105": "mov     rdx, [rdx+10h]",
                    "106": "mov     rsi, [rdx+40h]",
                    "107": "cmp     byte ptr [rsi+30h], 0",
                    "108": "jnz     INSTR37",
                    "109": "mov     rdx, [rdx+160h]",
                    "110": "and     edx, 2",
                    "111": "jnz     INSTR37",
                    "112": "add     rax, 58h ; 'X'",
                    "113": "cmp     rcx, rax",
                    "114": "jnz     INSTR34",
                    "115": "jmp     INSTR65",
                    "116": "test    bl, bl",
                    "117": "jz      INSTR41",
                    "118": "mov     eax, cs:system_state",
                    "119": "sub     eax, 4",
                    "120": "cmp     eax, 2",
                    "121": "jbe     INSTR88",
                    "122": "mov     rax, [rbp+48h]",
                    "123": "test    al, 40h",
                    "124": "jnz     INSTR88",
                    "125": "lea     rsi, [r14+390h]",
                    "126": "mov     rdi, offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "127": "call    panic; PIC mode",
                    "128": "mov     rdi, rbp",
                    "129": "call    f2fs_record_stop_reason",
                    "130": "jmp     INSTR37"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "xor     r14d, r14d",
                    "5": "push    r13",
                    "6": "mov     r13d, edx",
                    "7": "push    r12",
                    "8": "push    rbp",
                    "9": "mov     rbp, rdi",
                    "10": "push    rbx",
                    "11": "mov     ebx, esi",
                    "12": "push    r9",
                    "13": "mov     r12, [rdi]",
                    "14": "test    sil, sil",
                    "15": "jz      short INSTR19",
                    "16": "xor     r14d, r14d",
                    "17": "cmp     dword ptr [rdi+680h], 1",
                    "18": "setz    r14b",
                    "19": "lea     r15, [rbp+0FCh]",
                    "20": "mov     rdi, r15",
                    "21": "call    _raw_spin_lock_irqsave; PIC mode",
                    "22": "mov     rdi, r15",
                    "23": "mov     rsi, rax",
                    "24": "mov     rax, [rbp+0F0h]",
                    "25": "or      dword ptr [rax+84h], 8",
                    "26": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "27": "mov     rdi, rbp",
                    "28": "call    f2fs_hw_is_readonly",
                    "29": "test    al, al",
                    "30": "jnz     short INSTR55",
                    "31": "lea     rdi, [rbp+0B08h]",
                    "32": "movzx   r15d, bl",
                    "33": "mov     [rsp+38h+var_38], rdi",
                    "34": "call    _raw_spin_lock_irqsave; PIC mode",
                    "35": "movsxd  rdx, r15d",
                    "36": "mov     rdi, [rsp+38h+var_38]",
                    "37": "mov     cl, [rbp+rdx+0AE8h]",
                    "38": "mov     rsi, rax",
                    "39": "cmp     cl, 0FFh",
                    "40": "jz      short INSTR43",
                    "41": "inc     ecx",
                    "42": "mov     [rbp+rdx+0AE8h], cl",
                    "43": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "44": "test    bl, bl",
                    "45": "jz      short INSTR53",
                    "46": "test    r13b, r13b",
                    "47": "jz      short INSTR53",
                    "48": "mov     rsi, cs:system_wq",
                    "49": "lea     rdx, [rbp+0AB8h]",
                    "50": "mov     edi, 8",
                    "51": "call    queue_work_on; PIC mode",
                    "52": "jmp     short INSTR55",
                    "53": "mov     rdi, rbp",
                    "54": "call    f2fs_record_stop_reason",
                    "55": "cmp     dword ptr [rbp+680h], 2",
                    "56": "jnz     short INSTR74",
                    "57": "test    bl, bl",
                    "58": "jz      short INSTR76",
                    "59": "mov     eax, cs:system_state",
                    "60": "sub     eax, 4",
                    "61": "cmp     eax, 2",
                    "62": "ja      short INSTR66",
                    "63": "test    r14d, r14d",
                    "64": "jz      short INSTR80",
                    "65": "jmp     short INSTR84",
                    "66": "mov     esi, 6",
                    "67": "mov     rdi, rbp",
                    "68": "call    is_sbi_flag_set",
                    "69": "test    al, al",
                    "70": "jnz     short INSTR63",
                    "71": "lea     rsi, [r12+390h]",
                    "72": "mov     rdi, offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "73": "call    panic; PIC mode",
                    "74": "test    bl, bl",
                    "75": "jnz     short INSTR63",
                    "76": "mov     esi, 6",
                    "77": "mov     rdi, rbp",
                    "78": "call    set_sbi_flag",
                    "79": "jmp     short INSTR84",
                    "80": "test    bl, bl",
                    "81": "jz      short INSTR84",
                    "82": "test    byte ptr [r12+50h], 1",
                    "83": "jz      short INSTR96",
                    "84": "pop     r8",
                    "85": "movzx   ecx, bl",
                    "86": "mov     rdi, rbp",
                    "87": "pop     rbx",
                    "88": "mov     rdx, offset unk_2083F",
                    "89": "pop     rbp",
                    "90": "xor     esi, esi",
                    "91": "pop     r12",
                    "92": "pop     r13",
                    "93": "pop     r14",
                    "94": "pop     r15",
                    "95": "jmp     f2fs_printk",
                    "96": "pop     rax",
                    "97": "mov     rdi, rbp",
                    "98": "pop     rbx",
                    "99": "mov     rdx, offset unk_20866",
                    "100": "pop     rbp",
                    "101": "xor     esi, esi",
                    "102": "pop     r12",
                    "103": "pop     r13",
                    "104": "pop     r14",
                    "105": "pop     r15",
                    "106": "jmp     f2fs_printk"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, eax",
                    "6": "push    ebx",
                    "7": "movzx   ebx, dl",
                    "8": "sub     esp, 20h",
                    "9": "test    bl, bl",
                    "10": "mov     [ebp+var_15], cl",
                    "11": "mov     eax, [eax]",
                    "12": "mov     [ebp+var_10], 0",
                    "13": "mov     [ebp+var_14], eax",
                    "14": "jz      short INSTR19",
                    "15": "xor     eax, eax",
                    "16": "cmp     dword ptr [esi+434h], 1",
                    "17": "setz    al",
                    "18": "mov     [ebp+var_10], eax",
                    "19": "lea     edi, [esi+90h]",
                    "20": "mov     eax, edi",
                    "21": "call    _raw_spin_lock_irqsave",
                    "22": "mov     edx, eax",
                    "23": "mov     eax, [esi+88h]",
                    "24": "or      dword ptr [eax+84h], 8",
                    "25": "mov     eax, edi",
                    "26": "call    _raw_spin_unlock_irqrestore",
                    "27": "mov     edx, [esi+748h]",
                    "28": "cmp     edx, 1",
                    "29": "jle     short INSTR54",
                    "30": "mov     [ebp+var_1C], edx",
                    "31": "mov     eax, [esi+74Ch]",
                    "32": "xor     edi, edi",
                    "33": "mov     edx, [eax]",
                    "34": "cmp     byte ptr [edx+20h], 0",
                    "35": "jz      INSTR111",
                    "36": "cmp     dword ptr [esi+434h], 2",
                    "37": "jz      INSTR123",
                    "38": "test    bl, bl",
                    "39": "jnz     INSTR89",
                    "40": "lock or byte ptr [esi+28h], 40h",
                    "41": "mov     [esp+0Ch], ebx",
                    "42": "mov     ecx, offset unk_801E268",
                    "43": "xor     ebx, ebx",
                    "44": "mov     [esp+4], ebx",
                    "45": "mov     [esp], esi",
                    "46": "mov     [esp+8], ecx",
                    "47": "call    f2fs_printk",
                    "48": "add     esp, 20h",
                    "49": "pop     ebx",
                    "50": "pop     esi",
                    "51": "pop     edi",
                    "52": "pop     ebp",
                    "53": "retn",
                    "54": "mov     eax, [esi]",
                    "55": "mov     eax, [eax+74h]",
                    "56": "cmp     byte ptr [eax+20h], 0",
                    "57": "jnz     short INSTR36",
                    "58": "mov     eax, [eax+10h]",
                    "59": "mov     edx, [eax+3Ch]",
                    "60": "cmp     byte ptr [edx+20h], 0",
                    "61": "jnz     short INSTR36",
                    "62": "mov     eax, [eax+0D8h]",
                    "63": "test    al, 2",
                    "64": "jnz     short INSTR36",
                    "65": "lea     ecx, [esi+7B8h]",
                    "66": "movzx   edi, bl",
                    "67": "mov     [ebp+var_1C], ecx",
                    "68": "mov     eax, ecx",
                    "69": "call    _raw_spin_lock_irqsave",
                    "70": "mov     ecx, [ebp+var_1C]",
                    "71": "mov     edx, eax",
                    "72": "movzx   eax, byte ptr [esi+edi+798h]",
                    "73": "cmp     al, 0FFh",
                    "74": "jz      short INSTR77",
                    "75": "inc     al",
                    "76": "mov     [esi+edi+798h], al",
                    "77": "mov     eax, ecx",
                    "78": "call    _raw_spin_unlock_irqrestore",
                    "79": "test    bl, bl",
                    "80": "jz      INSTR137",
                    "81": "cmp     [ebp+var_15], 0",
                    "82": "jz      INSTR137",
                    "83": "mov     edx, ds:system_wq",
                    "84": "lea     ecx, [esi+778h]",
                    "85": "mov     eax, 8",
                    "86": "call    queue_work_on",
                    "87": "cmp     dword ptr [esi+434h], 2",
                    "88": "jz      INSTR125",
                    "89": "mov     edi, [ebp+var_10]",
                    "90": "test    edi, edi",
                    "91": "jnz     INSTR41",
                    "92": "mov     eax, [ebp+var_14]",
                    "93": "test    byte ptr [eax+30h], 1",
                    "94": "jnz     INSTR41",
                    "95": "test    bl, bl",
                    "96": "jz      INSTR41",
                    "97": "mov     [esp], esi",
                    "98": "mov     eax, offset unk_801E290",
                    "99": "xor     edx, edx",
                    "100": "mov     [esp+8], eax",
                    "101": "mov     [esp+4], edx",
                    "102": "call    f2fs_printk",
                    "103": "mov     eax, [ebp+var_14]",
                    "104": "or      dword ptr [eax+30h], 1",
                    "105": "add     esp, 20h",
                    "106": "pop     ebx",
                    "107": "pop     esi",
                    "108": "pop     edi",
                    "109": "pop     ebp",
                    "110": "retn",
                    "111": "mov     edx, [edx+10h]",
                    "112": "mov     ecx, [edx+3Ch]",
                    "113": "cmp     byte ptr [ecx+20h], 0",
                    "114": "jnz     INSTR36",
                    "115": "mov     edx, [edx+0D8h]",
                    "116": "test    dl, 2",
                    "117": "jnz     INSTR36",
                    "118": "inc     edi",
                    "119": "add     eax, 50h ; 'P'",
                    "120": "cmp     [ebp+var_1C], edi",
                    "121": "jnz     INSTR33",
                    "122": "jmp     INSTR65",
                    "123": "test    bl, bl",
                    "124": "jz      INSTR40",
                    "125": "mov     eax, ds:system_state",
                    "126": "sub     eax, 4",
                    "127": "cmp     eax, 2",
                    "128": "jbe     INSTR89",
                    "129": "mov     eax, [esi+28h]",
                    "130": "test    al, 40h",
                    "131": "jnz     INSTR89",
                    "132": "mov     dword ptr [esp], offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "133": "mov     eax, [ebp+var_14]",
                    "134": "add     eax, 214h",
                    "135": "mov     [esp+4], eax",
                    "136": "call    panic",
                    "137": "mov     eax, esi",
                    "138": "call    f2fs_record_stop_reason",
                    "139": "jmp     INSTR36"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x40+var_s0]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#var_s10]",
                    "5": "MOV             X19, X0",
                    "6": "ANDS            W20, W1, #0xFF",
                    "7": "STP             X21, X22, [SP,#var_s20]",
                    "8": "MOV             W21, #0",
                    "9": "STP             X23, X24, [SP,#var_s30]",
                    "10": "AND             W23, W2, #0xFF",
                    "11": "LDR             X22, [X0]",
                    "12": "B.EQ            loc_12510",
                    "13": "LDR             W0, [X0,#0x680]",
                    "14": "CMP             W0, #1",
                    "15": "CSET            W21, EQ",
                    "16": "ADD             X24, X19, #0xFC",
                    "17": "MOV             X0, X24",
                    "18": "BL              _raw_spin_lock_irqsave",
                    "19": "LDR             X3, [X19,#0xF0]",
                    "20": "MOV             X1, X0",
                    "21": "MOV             X0, X24",
                    "22": "LDR             W2, [X3,#0x84]",
                    "23": "ORR             W2, W2, #8",
                    "24": "STR             W2, [X3,#0x84]",
                    "25": "BL              _raw_spin_unlock_irqrestore",
                    "26": "LDR             W0, [X19,#0xA74]",
                    "27": "CMP             W0, #1",
                    "28": "B.LE            loc_12640",
                    "29": "LDR             X1, [X19,#0xA78]",
                    "30": "SUB             W0, W0, #1",
                    "31": "MOV             W3, #0x58 ; 'X'",
                    "32": "ADD             X2, X1, #0x58 ; 'X'",
                    "33": "UMADDL          X0, W0, W3, X2",
                    "34": "LDR             X2, [X1]",
                    "35": "LDRB            W3, [X2,#0x30]",
                    "36": "CBZ             W3, loc_12614",
                    "37": "LDR             W0, [X19,#0x680]",
                    "38": "CMP             W0, #2",
                    "39": "B.EQ            loc_125FC",
                    "40": "CBZ             W20, loc_12600",
                    "41": "CBNZ            W21, loc_12590",
                    "42": "LDR             X1, [X22,#0x50]",
                    "43": "CMP             W20, #0",
                    "44": "CSET            W0, EQ",
                    "45": "AND             W1, W1, #1",
                    "46": "ORR             W0, W0, W1",
                    "47": "CBZ             W0, loc_125C0",
                    "48": "MOV             W3, W20",
                    "49": "MOV             X0, X19",
                    "50": "MOV             W1, #0",
                    "51": "ADRL            X2, unk_21228",
                    "52": "BL              f2fs_printk",
                    "53": "LDP             X19, X20, [SP,#var_s10]",
                    "54": "LDP             X21, X22, [SP,#var_s20]",
                    "55": "LDP             X23, X24, [SP,#var_s30]",
                    "56": "LDP             X29, X30, [SP+var_s0],#0x40",
                    "57": "AUTIASP",
                    "58": "RET",
                    "59": "MOV             X0, X19",
                    "60": "MOV             W1, #0",
                    "61": "ADRL            X2, unk_21250",
                    "62": "BL              f2fs_printk",
                    "63": "DMB             ISHST",
                    "64": "LDR             X0, [X22,#0x50]",
                    "65": "ORR             X0, X0, #1",
                    "66": "STR             X0, [X22,#0x50]",
                    "67": "LDP             X19, X20, [SP,#var_s10]",
                    "68": "LDP             X21, X22, [SP,#var_s20]",
                    "69": "LDP             X23, X24, [SP,#var_s30]",
                    "70": "LDP             X29, X30, [SP+var_s0],#0x40",
                    "71": "AUTIASP",
                    "72": "RET",
                    "73": "CBNZ            W20, loc_126C8",
                    "74": "B               loc_126F8",
                    "75": "ADD             X1, X19, #0x48 ; 'H'",
                    "76": "MOV             X0, #0x40 ; '@'",
                    "77": "STSET           X0, [X1]",
                    "78": "B               loc_12590",
                    "79": "LDR             X2, [X2,#0x10]",
                    "80": "LDR             X3, [X2,#0x40]",
                    "81": "LDRB            W3, [X3,#0x30]",
                    "82": "CBNZ            W3, loc_12564",
                    "83": "LDR             X2, [X2,#0x160]",
                    "84": "TST             W2, #2",
                    "85": "B.NE            loc_12564",
                    "86": "ADD             X1, X1, #0x58 ; 'X'",
                    "87": "CMP             X0, X1",
                    "88": "B.NE            loc_12558",
                    "89": "B               loc_1266C",
                    "90": "LDR             X0, [X19]",
                    "91": "LDR             X0, [X0,#0xC8]",
                    "92": "LDRB            W1, [X0,#0x30]",
                    "93": "CBNZ            W1, loc_12564",
                    "94": "LDR             X0, [X0,#0x10]",
                    "95": "LDR             X1, [X0,#0x40]",
                    "96": "LDRB            W1, [X1,#0x30]",
                    "97": "CBNZ            W1, loc_12564",
                    "98": "LDR             X0, [X0,#0x160]",
                    "99": "TST             W0, #2",
                    "100": "B.NE            loc_12564",
                    "101": "ADD             X24, X19, #0xB08",
                    "102": "MOV             X0, X24",
                    "103": "BL              _raw_spin_lock_irqsave",
                    "104": "ADD             X2, X19, W20,SXTW",
                    "105": "MOV             X1, X0",
                    "106": "LDRB            W0, [X2,#0xAE8]",
                    "107": "CMP             W0, #0xFF",
                    "108": "B.EQ            loc_12694",
                    "109": "ADD             W0, W0, #1",
                    "110": "STRB            W0, [X2,#0xAE8]",
                    "111": "MOV             X0, X24",
                    "112": "BL              _raw_spin_unlock_irqrestore",
                    "113": "CMP             W20, #0",
                    "114": "CCMP            W23, #0, #4, NE",
                    "115": "B.EQ            loc_12714",
                    "116": "ADRP            X1, #system_wq@PAGE",
                    "117": "ADD             X2, X19, #0xAB8",
                    "118": "MOV             W0, #8",
                    "119": "LDR             X1, [X1,#system_wq@PAGEOFF]",
                    "120": "BL              queue_work_on",
                    "121": "LDR             W0, [X19,#0x680]",
                    "122": "CMP             W0, #2",
                    "123": "B.NE            loc_12574",
                    "124": "ADRP            X0, #system_state@PAGE",
                    "125": "LDR             W0, [X0,#system_state@PAGEOFF]",
                    "126": "SUB             W0, W0, #4",
                    "127": "CMP             W0, #2",
                    "128": "B.LS            loc_12574",
                    "129": "LDR             X0, [X19,#0x48]",
                    "130": "TST             W0, #0x40",
                    "131": "B.NE            loc_12574",
                    "132": "ADRP            X0, #aF2fsFsDeviceSP@PAGE; \"F2FS-fs (device %s): panic forced after\"...",
                    "133": "ADD             X1, X22, #0x390",
                    "134": "ADD             X0, X0, #aF2fsFsDeviceSP@PAGEOFF; \"F2FS-fs (device %s): panic forced after\"...",
                    "135": "BL              panic",
                    "136": "ADD             X2, X19, #0x48 ; 'H'",
                    "137": "PRFM            #0x11, [X2]",
                    "138": "LDXR            X0, [X2]",
                    "139": "ORR             X0, X0, #0x40 ; '@'",
                    "140": "STXR            W1, X0, [X2]",
                    "141": "CBNZ            W1, loc_12700",
                    "142": "B               loc_12590",
                    "143": "MOV             X0, X19",
                    "144": "BL              f2fs_record_stop_reason",
                    "145": "B               loc_12564"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r12d, edx",
                    "8": "mov     r13d, esi",
                    "9": "mov     rbx, rdi",
                    "10": "test    esi, esi",
                    "11": "jz      short INSTR15",
                    "12": "cmp     dword ptr [rbx+680h], 1",
                    "13": "setz    r15b",
                    "14": "jmp     short INSTR16",
                    "15": "xor     r15d, r15d",
                    "16": "mov     r14, [rbx]",
                    "17": "lea     rbp, [rbx+0FCh]",
                    "18": "mov     rdi, rbp",
                    "19": "call    _raw_spin_lock_irqsave; PIC mode",
                    "20": "mov     rcx, [rbx+0F0h]",
                    "21": "or      dword ptr [rcx+84h], 8",
                    "22": "mov     rdi, rbp",
                    "23": "mov     rsi, rax",
                    "24": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "25": "mov     ecx, [rbx+0A74h]",
                    "26": "cmp     ecx, 2",
                    "27": "jl      short INSTR44",
                    "28": "mov     rax, [rbx+0A78h]",
                    "29": "imul    rcx, 58h ; 'X'",
                    "30": "xor     edx, edx",
                    "31": "mov     rsi, [rax+rdx]",
                    "32": "cmp     byte ptr [rsi+30h], 0",
                    "33": "jnz     INSTR75",
                    "34": "mov     rsi, [rsi+10h]",
                    "35": "mov     rdi, [rsi+40h]",
                    "36": "cmp     byte ptr [rdi+30h], 0",
                    "37": "jnz     INSTR75",
                    "38": "test    qword ptr [rsi+160h], 2",
                    "39": "jnz     INSTR75",
                    "40": "add     rdx, 58h ; 'X'",
                    "41": "cmp     rcx, rdx",
                    "42": "jnz     short INSTR31",
                    "43": "jmp     short INSTR54",
                    "44": "mov     rax, [rbx]",
                    "45": "mov     rax, [rax+0C8h]",
                    "46": "cmp     byte ptr [rax+30h], 0",
                    "47": "jnz     short INSTR75",
                    "48": "mov     rax, [rax+10h]",
                    "49": "mov     rcx, [rax+40h]",
                    "50": "cmp     byte ptr [rcx+30h], 0",
                    "51": "jnz     short INSTR75",
                    "52": "test    qword ptr [rax+160h], 2",
                    "53": "jnz     short INSTR75",
                    "54": "mov     ebp, r12d",
                    "55": "lea     r12, [rbx+0B08h]",
                    "56": "mov     rdi, r12",
                    "57": "call    _raw_spin_lock_irqsave; PIC mode",
                    "58": "movzx   ecx, r13b",
                    "59": "mov     dl, [rbx+rcx+0AE8h]",
                    "60": "cmp     dl, 0FFh",
                    "61": "jz      short INSTR64",
                    "62": "add     dl, 1",
                    "63": "mov     [rbx+rcx+0AE8h], dl",
                    "64": "mov     rdi, r12",
                    "65": "mov     rsi, rax",
                    "66": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "67": "test    r13b, r13b",
                    "68": "jz      INSTR122",
                    "69": "test    bpl, bpl",
                    "70": "jz      INSTR122",
                    "71": "lea     rdx, [rbx+0AB8h]",
                    "72": "mov     rsi, cs:system_wq",
                    "73": "mov     edi, 40h ; '@'",
                    "74": "call    queue_work_on; PIC mode",
                    "75": "test    r13b, r13b",
                    "76": "jz      short INSTR85",
                    "77": "cmp     dword ptr [rbx+680h], 2",
                    "78": "jnz     short INSTR85",
                    "79": "mov     eax, cs:system_state",
                    "80": "add     eax, 0FFFFFFFCh",
                    "81": "cmp     eax, 3",
                    "82": "jb      short INSTR85",
                    "83": "test    qword ptr [rbx+48h], 40h",
                    "84": "jz      short INSTR127",
                    "85": "test    r13b, r13b",
                    "86": "jz      short INSTR90",
                    "87": "test    r15b, r15b",
                    "88": "jz      short INSTR93",
                    "89": "jmp     short INSTR111",
                    "90": "lock or byte ptr [rbx+48h], 40h",
                    "91": "test    r15b, r15b",
                    "92": "jnz     short INSTR111",
                    "93": "test    r13b, r13b",
                    "94": "jz      short INSTR111",
                    "95": "mov     rax, [r14+50h]",
                    "96": "and     eax, 1",
                    "97": "test    rax, rax",
                    "98": "jnz     short INSTR111",
                    "99": "mov     rdi, rbx",
                    "100": "xor     esi, esi",
                    "101": "mov     rdx, offset unk_1FCDE",
                    "102": "call    f2fs_printk; PIC mode",
                    "103": "or      byte ptr [r14+50h], 1",
                    "104": "pop     rbx",
                    "105": "pop     r12",
                    "106": "pop     r13",
                    "107": "pop     r14",
                    "108": "pop     r15",
                    "109": "pop     rbp",
                    "110": "retn",
                    "111": "mov     rdi, rbx",
                    "112": "xor     esi, esi",
                    "113": "mov     rdx, offset unk_1FCB7",
                    "114": "mov     ecx, r13d",
                    "115": "pop     rbx",
                    "116": "pop     r12",
                    "117": "pop     r13",
                    "118": "pop     r14",
                    "119": "pop     r15",
                    "120": "pop     rbp",
                    "121": "jmp     f2fs_printk; PIC mode",
                    "122": "mov     rdi, rbx",
                    "123": "call    f2fs_record_stop_reason",
                    "124": "test    r13b, r13b",
                    "125": "jnz     INSTR77",
                    "126": "jmp     short INSTR85",
                    "127": "add     r14, 390h",
                    "128": "mov     rdi, offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "129": "mov     rsi, r14",
                    "130": "call    panic; PIC mode"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "xor     r13d, r13d",
                    "5": "push    r12",
                    "6": "mov     r12d, edx",
                    "7": "push    rbp",
                    "8": "mov     rbp, rdi",
                    "9": "push    rbx",
                    "10": "mov     ebx, esi",
                    "11": "sub     rsp, 8",
                    "12": "mov     r14, [rdi]",
                    "13": "test    sil, sil",
                    "14": "jz      short INSTR18",
                    "15": "xor     r13d, r13d",
                    "16": "cmp     dword ptr [rdi+680h], 1",
                    "17": "setz    r13b",
                    "18": "lea     r15, [rbp+0FCh]",
                    "19": "mov     rdi, r15",
                    "20": "call    _raw_spin_lock_irqsave; PIC mode",
                    "21": "mov     rdi, r15",
                    "22": "mov     rsi, rax",
                    "23": "mov     rax, [rbp+0F0h]",
                    "24": "or      dword ptr [rax+84h], 8",
                    "25": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "26": "mov     edx, [rbp+0A74h]",
                    "27": "cmp     edx, 1",
                    "28": "jle     short INSTR54",
                    "29": "sub     edx, 1",
                    "30": "mov     rax, [rbp+0A78h]",
                    "31": "lea     rcx, [rdx+rdx*4]",
                    "32": "lea     rdx, [rdx+rcx*2]",
                    "33": "lea     rcx, [rax+rdx*8+58h]",
                    "34": "mov     rdx, [rax]",
                    "35": "cmp     byte ptr [rdx+30h], 0",
                    "36": "jz      INSTR107",
                    "37": "cmp     dword ptr [rbp+680h], 2",
                    "38": "jz      INSTR118",
                    "39": "test    bl, bl",
                    "40": "jnz     INSTR88",
                    "41": "lock or byte ptr [rbp+48h], 40h",
                    "42": "add     rsp, 8",
                    "43": "movzx   ecx, bl",
                    "44": "mov     rdi, rbp",
                    "45": "xor     esi, esi",
                    "46": "pop     rbx",
                    "47": "mov     rdx, offset unk_227A0",
                    "48": "pop     rbp",
                    "49": "pop     r12",
                    "50": "pop     r13",
                    "51": "pop     r14",
                    "52": "pop     r15",
                    "53": "jmp     f2fs_printk",
                    "54": "mov     rax, [rbp+0]",
                    "55": "mov     rax, [rax+0C8h]",
                    "56": "cmp     byte ptr [rax+30h], 0",
                    "57": "jnz     short INSTR37",
                    "58": "mov     rax, [rax+10h]",
                    "59": "mov     rdx, [rax+40h]",
                    "60": "cmp     byte ptr [rdx+30h], 0",
                    "61": "jnz     short INSTR37",
                    "62": "mov     rax, [rax+160h]",
                    "63": "test    al, 2",
                    "64": "jnz     short INSTR37",
                    "65": "lea     rdi, [rbp+0B08h]",
                    "66": "movzx   r15d, bl",
                    "67": "mov     [rsp+38h+var_38], rdi",
                    "68": "call    _raw_spin_lock_irqsave; PIC mode",
                    "69": "movsxd  rdx, r15d",
                    "70": "mov     rdi, [rsp+38h+var_38]",
                    "71": "mov     rsi, rax",
                    "72": "movzx   eax, byte ptr [rbp+rdx+0AE8h]",
                    "73": "cmp     al, 0FFh",
                    "74": "jz      short INSTR77",
                    "75": "add     eax, 1",
                    "76": "mov     [rbp+rdx+0AE8h], al",
                    "77": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "78": "test    bl, bl",
                    "79": "jz      INSTR130",
                    "80": "test    r12b, r12b",
                    "81": "jz      INSTR130",
                    "82": "mov     rsi, cs:system_wq",
                    "83": "lea     rdx, [rbp+0AB8h]",
                    "84": "mov     edi, 40h ; '@'",
                    "85": "call    queue_work_on; PIC mode",
                    "86": "cmp     dword ptr [rbp+680h], 2",
                    "87": "jz      INSTR120",
                    "88": "test    r13d, r13d",
                    "89": "jnz     INSTR42",
                    "90": "test    byte ptr [r14+50h], 1",
                    "91": "jnz     INSTR42",
                    "92": "test    bl, bl",
                    "93": "jz      INSTR42",
                    "94": "mov     rdx, offset unk_227C8",
                    "95": "xor     esi, esi",
                    "96": "mov     rdi, rbp",
                    "97": "call    f2fs_printk; PIC mode",
                    "98": "or      qword ptr [r14+50h], 1",
                    "99": "add     rsp, 8",
                    "100": "pop     rbx",
                    "101": "pop     rbp",
                    "102": "pop     r12",
                    "103": "pop     r13",
                    "104": "pop     r14",
                    "105": "pop     r15",
                    "106": "jmp     __x86_return_thunk; PIC mode",
                    "107": "mov     rdx, [rdx+10h]",
                    "108": "mov     rsi, [rdx+40h]",
                    "109": "cmp     byte ptr [rsi+30h], 0",
                    "110": "jnz     INSTR37",
                    "111": "mov     rdx, [rdx+160h]",
                    "112": "and     edx, 2",
                    "113": "jnz     INSTR37",
                    "114": "add     rax, 58h ; 'X'",
                    "115": "cmp     rcx, rax",
                    "116": "jnz     INSTR34",
                    "117": "jmp     INSTR65",
                    "118": "test    bl, bl",
                    "119": "jz      INSTR41",
                    "120": "mov     eax, cs:system_state",
                    "121": "sub     eax, 4",
                    "122": "cmp     eax, 2",
                    "123": "jbe     INSTR88",
                    "124": "mov     rax, [rbp+48h]",
                    "125": "test    al, 40h",
                    "126": "jnz     INSTR88",
                    "127": "lea     rsi, [r14+390h]",
                    "128": "mov     rdi, offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "129": "call    panic; PIC mode",
                    "130": "mov     rdi, rbp",
                    "131": "call    f2fs_record_stop_reason",
                    "132": "jmp     INSTR37"
                }
            },
            {
                "filename": "super.f2fs_handle_critical_error.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "xor     r14d, r14d",
                    "5": "push    r13",
                    "6": "mov     r13d, edx",
                    "7": "push    r12",
                    "8": "push    rbp",
                    "9": "mov     rbp, rdi",
                    "10": "push    rbx",
                    "11": "mov     ebx, esi",
                    "12": "push    r9",
                    "13": "mov     r12, [rdi]",
                    "14": "test    sil, sil",
                    "15": "jz      short INSTR19",
                    "16": "xor     r14d, r14d",
                    "17": "cmp     dword ptr [rdi+680h], 1",
                    "18": "setz    r14b",
                    "19": "lea     r15, [rbp+0FCh]",
                    "20": "mov     rdi, r15",
                    "21": "call    _raw_spin_lock_irqsave; PIC mode",
                    "22": "mov     rdi, r15",
                    "23": "mov     rsi, rax",
                    "24": "mov     rax, [rbp+0F0h]",
                    "25": "or      dword ptr [rax+84h], 8",
                    "26": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "27": "mov     rdi, rbp",
                    "28": "call    f2fs_hw_is_readonly",
                    "29": "test    al, al",
                    "30": "jnz     short INSTR55",
                    "31": "lea     rdi, [rbp+0B08h]",
                    "32": "movzx   r15d, bl",
                    "33": "mov     [rsp+38h+var_38], rdi",
                    "34": "call    _raw_spin_lock_irqsave; PIC mode",
                    "35": "movsxd  rdx, r15d",
                    "36": "mov     rdi, [rsp+38h+var_38]",
                    "37": "mov     cl, [rbp+rdx+0AE8h]",
                    "38": "mov     rsi, rax",
                    "39": "cmp     cl, 0FFh",
                    "40": "jz      short INSTR43",
                    "41": "inc     ecx",
                    "42": "mov     [rbp+rdx+0AE8h], cl",
                    "43": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "44": "test    bl, bl",
                    "45": "jz      short INSTR53",
                    "46": "test    r13b, r13b",
                    "47": "jz      short INSTR53",
                    "48": "mov     rsi, cs:system_wq",
                    "49": "lea     rdx, [rbp+0AB8h]",
                    "50": "mov     edi, 8",
                    "51": "call    queue_work_on; PIC mode",
                    "52": "jmp     short INSTR55",
                    "53": "mov     rdi, rbp",
                    "54": "call    f2fs_record_stop_reason",
                    "55": "cmp     dword ptr [rbp+680h], 2",
                    "56": "jnz     short INSTR74",
                    "57": "test    bl, bl",
                    "58": "jz      short INSTR76",
                    "59": "mov     eax, cs:system_state",
                    "60": "sub     eax, 4",
                    "61": "cmp     eax, 2",
                    "62": "ja      short INSTR66",
                    "63": "test    r14d, r14d",
                    "64": "jz      short INSTR80",
                    "65": "jmp     short INSTR84",
                    "66": "mov     esi, 6",
                    "67": "mov     rdi, rbp",
                    "68": "call    is_sbi_flag_set",
                    "69": "test    al, al",
                    "70": "jnz     short INSTR63",
                    "71": "lea     rsi, [r12+390h]",
                    "72": "mov     rdi, offset aF2fsFsDeviceSP; \"F2FS-fs (device %s): panic forced after\"...",
                    "73": "call    panic; PIC mode",
                    "74": "test    bl, bl",
                    "75": "jnz     short INSTR63",
                    "76": "mov     esi, 6",
                    "77": "mov     rdi, rbp",
                    "78": "call    set_sbi_flag",
                    "79": "jmp     short INSTR84",
                    "80": "test    bl, bl",
                    "81": "jz      short INSTR84",
                    "82": "test    byte ptr [r12+50h], 1",
                    "83": "jz      short INSTR96",
                    "84": "pop     r8",
                    "85": "movzx   ecx, bl",
                    "86": "mov     rdi, rbp",
                    "87": "pop     rbx",
                    "88": "mov     rdx, offset unk_2083F",
                    "89": "pop     rbp",
                    "90": "xor     esi, esi",
                    "91": "pop     r12",
                    "92": "pop     r13",
                    "93": "pop     r14",
                    "94": "pop     r15",
                    "95": "jmp     f2fs_printk",
                    "96": "mov     rdx, offset unk_20866",
                    "97": "xor     esi, esi",
                    "98": "mov     rdi, rbp",
                    "99": "call    f2fs_printk; PIC mode",
                    "100": "or      qword ptr [r12+50h], 1",
                    "101": "pop     rax",
                    "102": "pop     rbx",
                    "103": "pop     rbp",
                    "104": "pop     r12",
                    "105": "pop     r13",
                    "106": "pop     r14",
                    "107": "pop     r15",
                    "108": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47691",
        "files": [
            {
                "filename": "file.f2fs_do_shutdown.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, edx",
                    "6": "push    ebx",
                    "7": "mov     ebx, eax",
                    "8": "sub     esp, 0Ch",
                    "9": "cmp     edx, 2",
                    "10": "mov     [ebp+var_11], cl",
                    "11": "movzx   eax, [ebp+arg_0]",
                    "12": "mov     [ebp+var_12], al",
                    "13": "mov     eax, [ebx]",
                    "14": "mov     [ebp+var_10], eax",
                    "15": "jz      short INSTR48",
                    "16": "jbe     short INSTR38",
                    "17": "cmp     edx, 3",
                    "18": "jz      INSTR87",
                    "19": "cmp     edx, 4",
                    "20": "jnz     INSTR121",
                    "21": "lock or byte ptr [ebx+28h], 4",
                    "22": "lock or byte ptr [ebx+29h], 2",
                    "23": "lock or byte ptr [ebx+28h], 1",
                    "24": "mov     eax, [ebp+var_10]",
                    "25": "mov     edx, 1",
                    "26": "call    f2fs_sync_fs",
                    "27": "mov     edi, eax",
                    "28": "lea     esi, [esi+0]",
                    "29": "nop",
                    "30": "lea     esi, [esi+0]",
                    "31": "add     esp, 0Ch",
                    "32": "mov     eax, edi",
                    "33": "pop     ebx",
                    "34": "pop     esi",
                    "35": "pop     edi",
                    "36": "pop     ebp",
                    "37": "retn",
                    "38": "test    edx, edx",
                    "39": "jz      INSTR93",
                    "40": "mov     eax, [ebp+var_10]",
                    "41": "mov     edx, 1",
                    "42": "call    f2fs_sync_fs",
                    "43": "test    eax, eax",
                    "44": "mov     edi, eax",
                    "45": "jnz     short INSTR30",
                    "46": "lea     esi, [esi+0]",
                    "47": "nop",
                    "48": "xor     ecx, ecx",
                    "49": "xor     edx, edx",
                    "50": "mov     eax, ebx",
                    "51": "call    f2fs_stop_checkpoint",
                    "52": "cmp     [ebp+var_11], 0",
                    "53": "jnz     INSTR85",
                    "54": "cmp     [ebp+var_12], 0",
                    "55": "jnz     INSTR107",
                    "56": "mov     eax, ebx",
                    "57": "call    f2fs_stop_gc_thread",
                    "58": "mov     eax, ebx",
                    "59": "call    f2fs_stop_discard_thread",
                    "60": "mov     eax, ebx",
                    "61": "call    f2fs_drop_discard_cmd",
                    "62": "and     dword ptr [ebx+3F8h], 0FFFFFFFDh",
                    "63": "mov     eax, ds:jiffies",
                    "64": "xor     edi, edi",
                    "65": "mov     [ebx+108h], eax",
                    "66": "mov     [ebx+10Ch], eax",
                    "67": "mov     [ebx+110h], eax",
                    "68": "jmp     INSTR30",
                    "69": "mov     eax, fs:pcpu_hot+8",
                    "70": "bt      ds:__cpu_online_mask, eax",
                    "71": "jnb     INSTR31",
                    "72": "inc     fs:pcpu_hot+4",
                    "73": "mov     eax, dword ptr ds:__tracepoint_f2fs_shutdown+24h",
                    "74": "test    eax, eax",
                    "75": "jz      short INSTR81",
                    "76": "mov     eax, [eax+4]",
                    "77": "mov     ecx, esi",
                    "78": "mov     edx, ebx",
                    "79": "mov     [esp], edi",
                    "80": "call    __SCT__tp_func_f2fs_shutdown",
                    "81": "dec     fs:pcpu_hot+4",
                    "82": "jnz     INSTR31",
                    "83": "call    __SCT__preempt_schedule_notrace",
                    "84": "jmp     INSTR31",
                    "85": "xor     edi, edi",
                    "86": "jmp     INSTR30",
                    "87": "mov     ecx, 7FFFFFFFh",
                    "88": "mov     edx, 2",
                    "89": "mov     dword ptr [esp], 9",
                    "90": "mov     eax, ebx",
                    "91": "call    f2fs_sync_meta_pages",
                    "92": "jmp     INSTR48",
                    "93": "mov     eax, [ebp+var_10]",
                    "94": "mov     eax, [eax+74h]",
                    "95": "call    freeze_bdev",
                    "96": "test    eax, eax",
                    "97": "mov     edi, eax",
                    "98": "jnz     INSTR30",
                    "99": "mov     eax, ebx",
                    "100": "xor     ecx, ecx",
                    "101": "xor     edx, edx",
                    "102": "call    f2fs_stop_checkpoint",
                    "103": "mov     eax, [ebp+var_10]",
                    "104": "mov     eax, [eax+74h]",
                    "105": "call    thaw_bdev",
                    "106": "jmp     INSTR52",
                    "107": "mov     eax, [ebx]",
                    "108": "add     eax, 40h ; '@'",
                    "109": "call    down_read",
                    "110": "mov     eax, ebx",
                    "111": "call    f2fs_stop_gc_thread",
                    "112": "mov     eax, ebx",
                    "113": "call    f2fs_stop_discard_thread",
                    "114": "mov     eax, ebx",
                    "115": "call    f2fs_drop_discard_cmd",
                    "116": "mov     eax, [ebx]",
                    "117": "and     dword ptr [ebx+3F8h], 0FFFFFFFDh",
                    "118": "add     eax, 40h ; '@'",
                    "119": "call    up_read",
                    "120": "jmp     INSTR63",
                    "121": "mov     edi, 0FFFFFFEAh",
                    "122": "jmp     INSTR30"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x40+var_s0]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#var_s10]",
                    "5": "MOV             X19, X0",
                    "6": "MOV             W20, W1",
                    "7": "STP             X21, X22, [SP,#var_s20]",
                    "8": "STP             X23, X24, [SP,#var_s30]",
                    "9": "AND             W23, W2, #0xFF",
                    "10": "AND             W24, W3, #0xFF",
                    "11": "LDR             X22, [X0]",
                    "12": "CMP             W1, #2",
                    "13": "B.EQ            loc_8F50",
                    "14": "B.LS            loc_8E4C",
                    "15": "CMP             W1, #3",
                    "16": "B.EQ            loc_8F60",
                    "17": "MOV             W21, #0xFFFFFFEA",
                    "18": "CMP             W1, #4",
                    "19": "B.NE            loc_8E2C",
                    "20": "B               loc_8F34",
                    "21": "MOV             X0, #4",
                    "22": "ADD             X1, X19, #0x48 ; 'H'",
                    "23": "STSET           X0, [X1]",
                    "24": "B               loc_8FE0",
                    "25": "MOV             X0, #0x200",
                    "26": "ADD             X1, X19, #0x48 ; 'H'",
                    "27": "STSET           X0, [X1]",
                    "28": "B               loc_8FFC",
                    "29": "MOV             X0, #1",
                    "30": "ADD             X1, X19, #0x48 ; 'H'",
                    "31": "STSET           X0, [X1]",
                    "32": "MOV             X0, X22",
                    "33": "MOV             W1, #1",
                    "34": "BL              f2fs_sync_fs",
                    "35": "MOV             W21, W0",
                    "36": "NOP",
                    "37": "MOV             W0, W21",
                    "38": "LDP             X19, X20, [SP,#var_s10]",
                    "39": "LDP             X21, X22, [SP,#var_s20]",
                    "40": "LDP             X23, X24, [SP,#var_s30]",
                    "41": "LDP             X29, X30, [SP+var_s0],#0x40",
                    "42": "AUTIASP",
                    "43": "RET",
                    "44": "CBZ             W1, loc_8F74",
                    "45": "MOV             X0, X22",
                    "46": "MOV             W1, #1",
                    "47": "BL              f2fs_sync_fs",
                    "48": "MOV             W21, W0",
                    "49": "CBNZ            W0, loc_8E2C",
                    "50": "MOV             X0, X19",
                    "51": "MOV             W2, #0",
                    "52": "MOV             W1, #0",
                    "53": "BL              f2fs_stop_checkpoint",
                    "54": "MOV             W21, #0",
                    "55": "CBNZ            W23, loc_8E2C",
                    "56": "CBNZ            W24, loc_8FA0",
                    "57": "MOV             X0, X19",
                    "58": "BL              f2fs_stop_gc_thread",
                    "59": "MOV             X0, X19",
                    "60": "BL              f2fs_stop_discard_thread",
                    "61": "MOV             X0, X19",
                    "62": "BL              f2fs_drop_discard_cmd",
                    "63": "LDR             W0, [X19,#0x638]",
                    "64": "AND             W0, W0, #0xFFFFFFFD",
                    "65": "STR             W0, [X19,#0x638]",
                    "66": "ADRP            X0, #jiffies@PAGE",
                    "67": "MOV             W21, #0",
                    "68": "LDR             X0, [X0,#jiffies@PAGEOFF]",
                    "69": "STP             X0, X0, [X19,#0x1C8]",
                    "70": "STR             X0, [X19,#0x1D8]",
                    "71": "NOP",
                    "72": "B               loc_8E30",
                    "73": "MRS             X2, TPIDR_EL1",
                    "74": "ADRL            X1, cpu_number",
                    "75": "LDR             W1, [X1,X2]",
                    "76": "ADRL            X0, __cpu_online_mask",
                    "77": "LSR             W2, W1, #6",
                    "78": "LDR             X0, [X0,X2,LSL#3]",
                    "79": "LSR             X0, X0, X1",
                    "80": "TBZ             W0, #0, loc_8E30",
                    "81": "MRS             X22, SP_EL0",
                    "82": "LDR             W0, [X22,#8]",
                    "83": "ADD             W0, W0, #1",
                    "84": "STR             W0, [X22,#8]",
                    "85": "MOV             X0, #0",
                    "86": "MOV             W2, W20",
                    "87": "MOV             X1, X19",
                    "88": "MOV             W3, W21",
                    "89": "BL              __traceiter_f2fs_shutdown",
                    "90": "LDR             X0, [X22,#8]",
                    "91": "SUB             X0, X0, #1",
                    "92": "STR             W0, [X22,#8]",
                    "93": "CBNZ            X0, loc_8F24",
                    "94": "BL              dynamic_preempt_schedule_notrace",
                    "95": "B               loc_8E30",
                    "96": "LDR             X0, [X22,#8]",
                    "97": "CBNZ            X0, loc_8E30",
                    "98": "BL              dynamic_preempt_schedule_notrace",
                    "99": "B               loc_8E30",
                    "100": "ADD             X2, X0, #0x48 ; 'H'",
                    "101": "PRFM            #0x11, [X2]",
                    "102": "LDXR            X0, [X2]",
                    "103": "ORR             X0, X0, #4",
                    "104": "STXR            W1, X0, [X2]",
                    "105": "CBNZ            W1, loc_8F3C",
                    "106": "B               loc_8DFC",
                    "107": "MOV             W2, #0",
                    "108": "MOV             W1, #0",
                    "109": "BL              f2fs_stop_checkpoint",
                    "110": "B               loc_8E74",
                    "111": "MOV             W3, #9",
                    "112": "MOV             X2, #0x7FFFFFFFFFFFFFFF",
                    "113": "MOV             W1, #2",
                    "114": "BL              f2fs_sync_meta_pages",
                    "115": "B               loc_8E64",
                    "116": "LDR             X0, [X22,#0xC8]",
                    "117": "BL              freeze_bdev",
                    "118": "MOV             W21, W0",
                    "119": "CBNZ            W0, loc_8E2C",
                    "120": "MOV             X0, X19",
                    "121": "MOV             W2, #0",
                    "122": "MOV             W1, #0",
                    "123": "BL              f2fs_stop_checkpoint",
                    "124": "LDR             X0, [X22,#0xC8]",
                    "125": "BL              thaw_bdev",
                    "126": "B               loc_8E74",
                    "127": "LDR             X0, [X19]",
                    "128": "ADD             X0, X0, #0x70 ; 'p'",
                    "129": "BL              down_read",
                    "130": "MOV             X0, X19",
                    "131": "BL              f2fs_stop_gc_thread",
                    "132": "MOV             X0, X19",
                    "133": "BL              f2fs_stop_discard_thread",
                    "134": "MOV             X0, X19",
                    "135": "BL              f2fs_drop_discard_cmd",
                    "136": "LDR             W1, [X19,#0x638]",
                    "137": "LDR             X0, [X19]",
                    "138": "AND             W1, W1, #0xFFFFFFFD",
                    "139": "STR             W1, [X19,#0x638]",
                    "140": "ADD             X0, X0, #0x70 ; 'p'",
                    "141": "BL              up_read",
                    "142": "B               loc_8EA4",
                    "143": "ADD             X2, X19, #0x48 ; 'H'",
                    "144": "PRFM            #0x11, [X2]",
                    "145": "LDXR            X0, [X2]",
                    "146": "ORR             X0, X0, #0x200",
                    "147": "STXR            W1, X0, [X2]",
                    "148": "CBNZ            W1, loc_8FE8",
                    "149": "B               loc_8E0C",
                    "150": "ADD             X2, X19, #0x48 ; 'H'",
                    "151": "PRFM            #0x11, [X2]",
                    "152": "LDXR            X0, [X2]",
                    "153": "ORR             X0, X0, #1",
                    "154": "STXR            W1, X0, [X2]",
                    "155": "CBNZ            W1, loc_9004",
                    "156": "B               loc_8E1C"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r15d, ecx",
                    "8": "mov     r12d, edx",
                    "9": "mov     r14d, esi",
                    "10": "mov     rbx, rdi",
                    "11": "mov     r13, [rdi]",
                    "12": "mov     ebp, 0FFFFFFEAh",
                    "13": "cmp     esi, 1",
                    "14": "jle     short INSTR29",
                    "15": "cmp     r14d, 2",
                    "16": "jz      short INSTR45",
                    "17": "cmp     r14d, 3",
                    "18": "jz      short INSTR40",
                    "19": "cmp     r14d, 4",
                    "20": "jnz     INSTR91",
                    "21": "lock or byte ptr [rbx+48h], 4",
                    "22": "lock or byte ptr [rbx+49h], 2",
                    "23": "lock or byte ptr [rbx+48h], 1",
                    "24": "mov     rdi, r13",
                    "25": "mov     esi, 1",
                    "26": "call    f2fs_sync_fs; PIC mode",
                    "27": "mov     ebp, eax",
                    "28": "jmp     INSTR91",
                    "29": "test    r14d, r14d",
                    "30": "jz      INSTR68",
                    "31": "cmp     r14d, 1",
                    "32": "jnz     INSTR91",
                    "33": "mov     rdi, r13",
                    "34": "mov     esi, 1",
                    "35": "call    f2fs_sync_fs; PIC mode",
                    "36": "mov     ebp, eax",
                    "37": "test    eax, eax",
                    "38": "jnz     INSTR91",
                    "39": "jmp     short INSTR45",
                    "40": "mov     rdx, 7FFFFFFFFFFFFFFFh",
                    "41": "mov     rdi, rbx",
                    "42": "mov     esi, 2",
                    "43": "mov     ecx, 9",
                    "44": "call    f2fs_sync_meta_pages; PIC mode",
                    "45": "mov     rdi, rbx",
                    "46": "xor     esi, esi",
                    "47": "xor     edx, edx",
                    "48": "call    f2fs_stop_checkpoint; PIC mode",
                    "49": "xor     ebp, ebp",
                    "50": "test    r12b, r12b",
                    "51": "jnz     INSTR91",
                    "52": "test    r15b, r15b",
                    "53": "jz      short INSTR80",
                    "54": "mov     rdi, [rbx]",
                    "55": "add     rdi, 70h ; 'p'",
                    "56": "call    down_read; PIC mode",
                    "57": "mov     rdi, rbx",
                    "58": "call    f2fs_stop_gc_thread; PIC mode",
                    "59": "mov     rdi, rbx",
                    "60": "call    f2fs_stop_discard_thread; PIC mode",
                    "61": "mov     rdi, rbx",
                    "62": "call    f2fs_drop_discard_cmd; PIC mode",
                    "63": "and     byte ptr [rbx+638h], 0FDh",
                    "64": "mov     rdi, [rbx]",
                    "65": "add     rdi, 70h ; 'p'",
                    "66": "call    up_read; PIC mode",
                    "67": "jmp     short INSTR87",
                    "68": "mov     rdi, [r13+0C8h]",
                    "69": "call    freeze_bdev; PIC mode",
                    "70": "mov     ebp, eax",
                    "71": "test    eax, eax",
                    "72": "jnz     short INSTR91",
                    "73": "mov     rdi, rbx",
                    "74": "xor     esi, esi",
                    "75": "xor     edx, edx",
                    "76": "call    f2fs_stop_checkpoint; PIC mode",
                    "77": "mov     rdi, [r13+0C8h]",
                    "78": "call    thaw_bdev; PIC mode",
                    "79": "jmp     short INSTR49",
                    "80": "mov     rdi, rbx",
                    "81": "call    f2fs_stop_gc_thread; PIC mode",
                    "82": "mov     rdi, rbx",
                    "83": "call    f2fs_stop_discard_thread; PIC mode",
                    "84": "mov     rdi, rbx",
                    "85": "call    f2fs_drop_discard_cmd; PIC mode",
                    "86": "and     byte ptr [rbx+638h], 0FDh",
                    "87": "mov     rax, cs:jiffies",
                    "88": "mov     [rbx+1C8h], rax",
                    "89": "mov     [rbx+1D0h], rax",
                    "90": "mov     [rbx+1D8h], rax",
                    "91": "xchg    ax, ax",
                    "92": "mov     eax, ebp",
                    "93": "pop     rbx",
                    "94": "pop     r12",
                    "95": "pop     r13",
                    "96": "pop     r14",
                    "97": "pop     r15",
                    "98": "pop     rbp",
                    "99": "retn"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "mov     r14d, ecx",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "mov     r12d, esi",
                    "7": "push    rbp",
                    "8": "mov     rbp, rdi",
                    "9": "push    rbx",
                    "10": "mov     ebx, edx",
                    "11": "mov     r15, [rdi]",
                    "12": "cmp     esi, 2",
                    "13": "jz      short INSTR43",
                    "14": "jbe     short INSTR35",
                    "15": "cmp     esi, 3",
                    "16": "jz      INSTR82",
                    "17": "cmp     esi, 4",
                    "18": "jnz     INSTR113",
                    "19": "lock or byte ptr [rdi+48h], 4",
                    "20": "lock or byte ptr [rdi+49h], 2",
                    "21": "lock or byte ptr [rdi+48h], 1",
                    "22": "mov     esi, 1",
                    "23": "mov     rdi, r15",
                    "24": "call    f2fs_sync_fs; PIC mode",
                    "25": "mov     r13d, eax",
                    "26": "nop     dword ptr [rax+rax+00h]",
                    "27": "pop     rbx",
                    "28": "mov     eax, r13d",
                    "29": "pop     rbp",
                    "30": "pop     r12",
                    "31": "pop     r13",
                    "32": "pop     r14",
                    "33": "pop     r15",
                    "34": "jmp     __x86_return_thunk; PIC mode",
                    "35": "test    esi, esi",
                    "36": "jz      INSTR87",
                    "37": "mov     esi, 1",
                    "38": "mov     rdi, r15",
                    "39": "call    f2fs_sync_fs; PIC mode",
                    "40": "mov     r13d, eax",
                    "41": "test    eax, eax",
                    "42": "jnz     short INSTR26",
                    "43": "xor     edx, edx",
                    "44": "xor     esi, esi",
                    "45": "mov     rdi, rbp",
                    "46": "call    f2fs_stop_checkpoint; PIC mode",
                    "47": "xor     r13d, r13d",
                    "48": "test    bl, bl",
                    "49": "jnz     short INSTR26",
                    "50": "test    r14b, r14b",
                    "51": "jnz     INSTR99",
                    "52": "mov     rdi, rbp",
                    "53": "call    f2fs_stop_gc_thread; PIC mode",
                    "54": "mov     rdi, rbp",
                    "55": "call    f2fs_stop_discard_thread; PIC mode",
                    "56": "mov     rdi, rbp",
                    "57": "call    f2fs_drop_discard_cmd; PIC mode",
                    "58": "and     dword ptr [rbp+638h], 0FFFFFFFDh",
                    "59": "mov     rax, cs:jiffies",
                    "60": "xor     r13d, r13d",
                    "61": "mov     [rbp+1C8h], rax",
                    "62": "mov     [rbp+1D0h], rax",
                    "63": "mov     [rbp+1D8h], rax",
                    "64": "jmp     INSTR26",
                    "65": "mov     eax, dword ptr gs:pcpu_hot+0Ch",
                    "66": "mov     eax, eax",
                    "67": "bt      cs:__cpu_online_mask, rax",
                    "68": "jnb     INSTR27",
                    "69": "inc     dword ptr gs:pcpu_hot+8",
                    "70": "mov     rax, qword ptr cs:__tracepoint_f2fs_shutdown+48h",
                    "71": "test    rax, rax",
                    "72": "jz      short INSTR78",
                    "73": "mov     rdi, [rax+8]",
                    "74": "mov     ecx, r13d",
                    "75": "mov     edx, r12d",
                    "76": "mov     rsi, rbp",
                    "77": "call    __SCT__tp_func_f2fs_shutdown; PIC mode",
                    "78": "dec     dword ptr gs:pcpu_hot+8",
                    "79": "jnz     INSTR27",
                    "80": "call    __SCT__preempt_schedule_notrace; PIC mode",
                    "81": "jmp     INSTR27",
                    "82": "mov     ecx, 9",
                    "83": "mov     esi, 2",
                    "84": "mov     rdx, 7FFFFFFFFFFFFFFFh",
                    "85": "call    f2fs_sync_meta_pages; PIC mode",
                    "86": "jmp     INSTR43",
                    "87": "mov     rdi, [r15+0C8h]",
                    "88": "call    freeze_bdev; PIC mode",
                    "89": "mov     r13d, eax",
                    "90": "test    eax, eax",
                    "91": "jnz     INSTR26",
                    "92": "mov     rdi, rbp",
                    "93": "xor     edx, edx",
                    "94": "xor     esi, esi",
                    "95": "call    f2fs_stop_checkpoint; PIC mode",
                    "96": "mov     rdi, [r15+0C8h]",
                    "97": "call    thaw_bdev; PIC mode",
                    "98": "jmp     INSTR47",
                    "99": "mov     rax, [rbp+0]",
                    "100": "lea     rdi, [rax+70h]",
                    "101": "call    down_read; PIC mode",
                    "102": "mov     rdi, rbp",
                    "103": "call    f2fs_stop_gc_thread; PIC mode",
                    "104": "mov     rdi, rbp",
                    "105": "call    f2fs_stop_discard_thread; PIC mode",
                    "106": "mov     rdi, rbp",
                    "107": "call    f2fs_drop_discard_cmd; PIC mode",
                    "108": "and     dword ptr [rbp+638h], 0FFFFFFFDh",
                    "109": "mov     rax, [rbp+0]",
                    "110": "lea     rdi, [rax+70h]",
                    "111": "call    up_read; PIC mode",
                    "112": "jmp     INSTR59",
                    "113": "mov     r13d, 0FFFFFFEAh",
                    "114": "jmp     INSTR26"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "mov     r14d, edx",
                    "5": "push    r13",
                    "6": "mov     r13d, esi",
                    "7": "push    r12",
                    "8": "push    rbp",
                    "9": "mov     rbp, rdi",
                    "10": "push    rbx",
                    "11": "mov     ebx, ecx",
                    "12": "mov     r15, [rdi]",
                    "13": "cmp     esi, 2",
                    "14": "jz      INSTR60",
                    "15": "ja      short INSTR19",
                    "16": "test    esi, esi",
                    "17": "jnz     INSTR49",
                    "18": "jmp     short INSTR37",
                    "19": "cmp     esi, 3",
                    "20": "jz      INSTR56",
                    "21": "mov     r12d, 0FFFFFFEAh",
                    "22": "cmp     esi, 4",
                    "23": "jnz     INSTR89",
                    "24": "mov     esi, 2",
                    "25": "call    set_sbi_flag",
                    "26": "mov     esi, 9",
                    "27": "mov     rdi, rbp",
                    "28": "call    set_sbi_flag",
                    "29": "xor     esi, esi",
                    "30": "mov     rdi, rbp",
                    "31": "call    set_sbi_flag",
                    "32": "mov     esi, 1",
                    "33": "mov     rdi, r15",
                    "34": "call    f2fs_sync_fs; PIC mode",
                    "35": "mov     r12d, eax",
                    "36": "jmp     INSTR89",
                    "37": "mov     rdi, [r15+0C8h]",
                    "38": "call    freeze_bdev; PIC mode",
                    "39": "mov     r12d, eax",
                    "40": "test    eax, eax",
                    "41": "jnz     INSTR89",
                    "42": "mov     rdi, rbp",
                    "43": "xor     edx, edx",
                    "44": "xor     esi, esi",
                    "45": "call    f2fs_stop_checkpoint; PIC mode",
                    "46": "mov     rdi, [r15+0C8h]",
                    "47": "call    thaw_bdev; PIC mode",
                    "48": "jmp     short INSTR64",
                    "49": "mov     esi, 1",
                    "50": "mov     rdi, r15",
                    "51": "call    f2fs_sync_fs; PIC mode",
                    "52": "mov     r12d, eax",
                    "53": "test    eax, eax",
                    "54": "jnz     INSTR89",
                    "55": "jmp     short INSTR60",
                    "56": "mov     ecx, 9",
                    "57": "mov     esi, 2",
                    "58": "mov     rdx, 7FFFFFFFFFFFFFFFh",
                    "59": "call    f2fs_sync_meta_pages; PIC mode",
                    "60": "xor     edx, edx",
                    "61": "xor     esi, esi",
                    "62": "mov     rdi, rbp",
                    "63": "call    f2fs_stop_checkpoint; PIC mode",
                    "64": "xor     r12d, r12d",
                    "65": "test    r14b, r14b",
                    "66": "jnz     short INSTR89",
                    "67": "test    bl, bl",
                    "68": "jz      short INSTR72",
                    "69": "mov     rax, [rbp+0]",
                    "70": "lea     rdi, [rax+70h]",
                    "71": "call    down_read; PIC mode",
                    "72": "mov     rdi, rbp",
                    "73": "call    f2fs_stop_gc_thread; PIC mode",
                    "74": "mov     rdi, rbp",
                    "75": "call    f2fs_stop_discard_thread; PIC mode",
                    "76": "mov     rdi, rbp",
                    "77": "call    f2fs_drop_discard_cmd; PIC mode",
                    "78": "and     dword ptr [rbp+638h], 0FFFFFFFDh",
                    "79": "test    bl, bl",
                    "80": "jz      short INSTR84",
                    "81": "mov     rax, [rbp+0]",
                    "82": "lea     rdi, [rax+70h]",
                    "83": "call    up_read; PIC mode",
                    "84": "mov     rax, cs:jiffies",
                    "85": "xor     r12d, r12d",
                    "86": "mov     [rbp+1C8h], rax",
                    "87": "mov     [rbp+1D0h], rax",
                    "88": "mov     [rbp+1D8h], rax",
                    "89": "jmp     short INSTR91",
                    "90": "jmp     short INSTR107",
                    "91": "mov     edi, dword ptr gs:pcpu_hot+0Ch",
                    "92": "call    cpu_online",
                    "93": "test    al, al",
                    "94": "jz      short INSTR107",
                    "95": "inc     dword ptr gs:pcpu_hot+8",
                    "96": "mov     rax, qword ptr cs:__tracepoint_f2fs_shutdown+48h",
                    "97": "test    rax, rax",
                    "98": "jz      short INSTR104",
                    "99": "mov     rdi, [rax+8]",
                    "100": "mov     ecx, r12d",
                    "101": "mov     edx, r13d",
                    "102": "mov     rsi, rbp",
                    "103": "call    __SCT__tp_func_f2fs_shutdown; PIC mode",
                    "104": "dec     dword ptr gs:pcpu_hot+8",
                    "105": "jnz     short INSTR107",
                    "106": "call    __SCT__preempt_schedule_notrace; PIC mode",
                    "107": "pop     rbx",
                    "108": "mov     eax, r12d",
                    "109": "pop     rbp",
                    "110": "pop     r12",
                    "111": "pop     r13",
                    "112": "pop     r14",
                    "113": "pop     r15",
                    "114": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "sub     esp, 18h",
                    "4": "mov     [ebp+var_C], ebx",
                    "5": "mov     ebx, eax",
                    "6": "cmp     edx, 2",
                    "7": "mov     [ebp+var_8], esi",
                    "8": "mov     esi, edx",
                    "9": "mov     [ebp+var_4], edi",
                    "10": "mov     [ebp+var_11], cl",
                    "11": "mov     eax, [eax]",
                    "12": "mov     [ebp+var_10], eax",
                    "13": "jz      short INSTR45",
                    "14": "jbe     short INSTR35",
                    "15": "cmp     edx, 3",
                    "16": "jz      INSTR94",
                    "17": "cmp     edx, 4",
                    "18": "jnz     INSTR100",
                    "19": "lock or byte ptr [ebx+28h], 4",
                    "20": "lock or byte ptr [ebx+29h], 2",
                    "21": "lock or byte ptr [ebx+28h], 1",
                    "22": "mov     eax, [ebp+var_10]",
                    "23": "mov     edx, 1",
                    "24": "call    f2fs_sync_fs",
                    "25": "mov     edi, eax",
                    "26": "lea     esi, [esi+0]",
                    "27": "lea     esi, [esi+0]",
                    "28": "mov     ebx, [ebp+var_C]",
                    "29": "mov     eax, edi",
                    "30": "mov     esi, [ebp+var_8]",
                    "31": "mov     edi, [ebp+var_4]",
                    "32": "mov     esp, ebp",
                    "33": "pop     ebp",
                    "34": "retn",
                    "35": "test    edx, edx",
                    "36": "jz      INSTR80",
                    "37": "mov     eax, [ebp+var_10]",
                    "38": "mov     edx, 1",
                    "39": "call    f2fs_sync_fs",
                    "40": "test    eax, eax",
                    "41": "mov     edi, eax",
                    "42": "jnz     short INSTR27",
                    "43": "lea     esi, [esi+0]",
                    "44": "lea     esi, [esi+0]",
                    "45": "xor     ecx, ecx",
                    "46": "xor     edx, edx",
                    "47": "mov     eax, ebx",
                    "48": "call    f2fs_stop_checkpoint",
                    "49": "xor     edi, edi",
                    "50": "cmp     [ebp+var_11], 0",
                    "51": "jnz     short INSTR27",
                    "52": "mov     eax, ebx",
                    "53": "call    f2fs_stop_gc_thread",
                    "54": "mov     eax, ebx",
                    "55": "call    f2fs_stop_discard_thread",
                    "56": "mov     eax, ebx",
                    "57": "call    f2fs_drop_discard_cmd",
                    "58": "mov     eax, ds:jiffies",
                    "59": "and     dword ptr [ebx+3F8h], 0FFFFFFFDh",
                    "60": "mov     [ebx+108h], eax",
                    "61": "mov     [ebx+10Ch], eax",
                    "62": "mov     [ebx+110h], eax",
                    "63": "jmp     INSTR27",
                    "64": "mov     eax, fs:pcpu_hot+8",
                    "65": "bt      ds:__cpu_online_mask, eax",
                    "66": "jnb     INSTR28",
                    "67": "inc     fs:pcpu_hot+4",
                    "68": "mov     eax, dword ptr ds:__tracepoint_f2fs_shutdown+24h",
                    "69": "test    eax, eax",
                    "70": "jz      short INSTR76",
                    "71": "mov     eax, [eax+4]",
                    "72": "mov     ecx, esi",
                    "73": "mov     edx, ebx",
                    "74": "mov     [esp], edi",
                    "75": "call    __SCT__tp_func_f2fs_shutdown",
                    "76": "dec     fs:pcpu_hot+4",
                    "77": "jnz     INSTR28",
                    "78": "call    __SCT__preempt_schedule_notrace",
                    "79": "jmp     INSTR28",
                    "80": "mov     eax, [ebp+var_10]",
                    "81": "mov     eax, [eax+74h]",
                    "82": "call    freeze_bdev",
                    "83": "test    eax, eax",
                    "84": "mov     edi, eax",
                    "85": "jnz     INSTR27",
                    "86": "mov     eax, ebx",
                    "87": "xor     ecx, ecx",
                    "88": "xor     edx, edx",
                    "89": "call    f2fs_stop_checkpoint",
                    "90": "mov     eax, [ebp+var_10]",
                    "91": "mov     eax, [eax+74h]",
                    "92": "call    thaw_bdev",
                    "93": "jmp     INSTR49",
                    "94": "mov     ecx, 7FFFFFFFh",
                    "95": "mov     edx, 2",
                    "96": "mov     dword ptr [esp], 9",
                    "97": "mov     eax, ebx",
                    "98": "call    f2fs_sync_meta_pages",
                    "99": "jmp     INSTR45",
                    "100": "mov     edi, 0FFFFFFEAh",
                    "101": "jmp     INSTR27"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_40]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#0x40+var_30]",
                    "5": "MOV             X19, X0",
                    "6": "MOV             W20, W1",
                    "7": "STP             X21, X22, [SP,#0x40+var_20]",
                    "8": "STR             X23, [SP,#0x40+var_10]",
                    "9": "AND             W23, W2, #0xFF",
                    "10": "LDR             X22, [X0]",
                    "11": "CMP             W1, #2",
                    "12": "B.EQ            loc_8F84",
                    "13": "B.LS            loc_8E48",
                    "14": "CMP             W1, #3",
                    "15": "B.EQ            loc_8F44",
                    "16": "MOV             W21, #0xFFFFFFEA",
                    "17": "CMP             W1, #4",
                    "18": "B.NE            loc_8E28",
                    "19": "B               loc_8F28",
                    "20": "MOV             X0, #4",
                    "21": "ADD             X1, X19, #0x48 ; 'H'",
                    "22": "STSET           X0, [X1]",
                    "23": "B               loc_8F94",
                    "24": "MOV             X0, #0x200",
                    "25": "ADD             X1, X19, #0x48 ; 'H'",
                    "26": "STSET           X0, [X1]",
                    "27": "B               loc_8FB0",
                    "28": "MOV             X0, #1",
                    "29": "ADD             X1, X19, #0x48 ; 'H'",
                    "30": "STSET           X0, [X1]",
                    "31": "MOV             X0, X22",
                    "32": "MOV             W1, #1",
                    "33": "BL              f2fs_sync_fs",
                    "34": "MOV             W21, W0",
                    "35": "NOP",
                    "36": "MOV             W0, W21",
                    "37": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "38": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "39": "LDR             X23, [SP,#0x40+var_10]",
                    "40": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "41": "AUTIASP",
                    "42": "RET",
                    "43": "CBZ             W1, loc_8F58",
                    "44": "MOV             X0, X22",
                    "45": "MOV             W1, #1",
                    "46": "BL              f2fs_sync_fs",
                    "47": "MOV             W21, W0",
                    "48": "CBNZ            W0, loc_8E28",
                    "49": "MOV             X0, X19",
                    "50": "MOV             W2, #0",
                    "51": "MOV             W1, #0",
                    "52": "BL              f2fs_stop_checkpoint",
                    "53": "MOV             W21, #0",
                    "54": "CBNZ            W23, loc_8E28",
                    "55": "MOV             X0, X19",
                    "56": "BL              f2fs_stop_gc_thread",
                    "57": "MOV             X0, X19",
                    "58": "BL              f2fs_stop_discard_thread",
                    "59": "MOV             X0, X19",
                    "60": "BL              f2fs_drop_discard_cmd",
                    "61": "ADRP            X1, #jiffies@PAGE",
                    "62": "LDR             W0, [X19,#0x638]",
                    "63": "LDR             X1, [X1,#jiffies@PAGEOFF]",
                    "64": "AND             W0, W0, #0xFFFFFFFD",
                    "65": "STP             X1, X1, [X19,#0x1C8]",
                    "66": "STR             X1, [X19,#0x1D8]",
                    "67": "STR             W0, [X19,#0x638]",
                    "68": "NOP",
                    "69": "B               loc_8E2C",
                    "70": "MRS             X2, TPIDR_EL1",
                    "71": "ADRL            X1, cpu_number",
                    "72": "LDR             W1, [X1,X2]",
                    "73": "ADRL            X0, __cpu_online_mask",
                    "74": "LSR             W2, W1, #6",
                    "75": "LDR             X0, [X0,X2,LSL#3]",
                    "76": "LSR             X0, X0, X1",
                    "77": "TBZ             W0, #0, loc_8E2C",
                    "78": "MRS             X22, SP_EL0",
                    "79": "LDR             W0, [X22,#8]",
                    "80": "ADD             W0, W0, #1",
                    "81": "STR             W0, [X22,#8]",
                    "82": "MOV             X0, #0",
                    "83": "MOV             W2, W20",
                    "84": "MOV             X1, X19",
                    "85": "MOV             W3, W21",
                    "86": "BL              __traceiter_f2fs_shutdown",
                    "87": "LDR             X0, [X22,#8]",
                    "88": "SUB             X0, X0, #1",
                    "89": "STR             W0, [X22,#8]",
                    "90": "CBNZ            X0, loc_8F18",
                    "91": "BL              dynamic_preempt_schedule_notrace",
                    "92": "B               loc_8E2C",
                    "93": "LDR             X0, [X22,#8]",
                    "94": "CBNZ            X0, loc_8E2C",
                    "95": "BL              dynamic_preempt_schedule_notrace",
                    "96": "B               loc_8E2C",
                    "97": "ADD             X2, X0, #0x48 ; 'H'",
                    "98": "PRFM            #0x11, [X2]",
                    "99": "LDXR            X0, [X2]",
                    "100": "ORR             X0, X0, #4",
                    "101": "STXR            W1, X0, [X2]",
                    "102": "CBNZ            W1, loc_8F30",
                    "103": "B               loc_8DF8",
                    "104": "MOV             W3, #9",
                    "105": "MOV             X2, #0x7FFFFFFFFFFFFFFF",
                    "106": "MOV             W1, #2",
                    "107": "BL              f2fs_sync_meta_pages",
                    "108": "B               loc_8E60",
                    "109": "LDR             X0, [X22,#0xC8]",
                    "110": "BL              freeze_bdev",
                    "111": "MOV             W21, W0",
                    "112": "CBNZ            W0, loc_8E28",
                    "113": "MOV             X0, X19",
                    "114": "MOV             W2, #0",
                    "115": "MOV             W1, #0",
                    "116": "BL              f2fs_stop_checkpoint",
                    "117": "LDR             X0, [X22,#0xC8]",
                    "118": "BL              thaw_bdev",
                    "119": "B               loc_8E70",
                    "120": "MOV             W2, #0",
                    "121": "MOV             W1, #0",
                    "122": "BL              f2fs_stop_checkpoint",
                    "123": "B               loc_8E70",
                    "124": "ADD             X2, X19, #0x48 ; 'H'",
                    "125": "PRFM            #0x11, [X2]",
                    "126": "LDXR            X0, [X2]",
                    "127": "ORR             X0, X0, #0x200",
                    "128": "STXR            W1, X0, [X2]",
                    "129": "CBNZ            W1, loc_8F9C",
                    "130": "B               loc_8E08",
                    "131": "ADD             X2, X19, #0x48 ; 'H'",
                    "132": "PRFM            #0x11, [X2]",
                    "133": "LDXR            X0, [X2]",
                    "134": "ORR             X0, X0, #1",
                    "135": "STXR            W1, X0, [X2]",
                    "136": "CBNZ            W1, loc_8FB8",
                    "137": "B               loc_8E18"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r12",
                    "5": "push    rbx",
                    "6": "mov     r14d, edx",
                    "7": "mov     r15d, esi",
                    "8": "mov     rbx, rdi",
                    "9": "mov     r12, [rdi]",
                    "10": "mov     ebp, 0FFFFFFEAh",
                    "11": "cmp     esi, 1",
                    "12": "jle     short INSTR27",
                    "13": "cmp     r15d, 2",
                    "14": "jz      short INSTR43",
                    "15": "cmp     r15d, 3",
                    "16": "jz      short INSTR38",
                    "17": "cmp     r15d, 4",
                    "18": "jnz     INSTR67",
                    "19": "lock or byte ptr [rbx+48h], 4",
                    "20": "lock or byte ptr [rbx+49h], 2",
                    "21": "lock or byte ptr [rbx+48h], 1",
                    "22": "mov     rdi, r12",
                    "23": "mov     esi, 1",
                    "24": "call    f2fs_sync_fs; PIC mode",
                    "25": "mov     ebp, eax",
                    "26": "jmp     INSTR67",
                    "27": "test    r15d, r15d",
                    "28": "jz      INSTR62",
                    "29": "cmp     r15d, 1",
                    "30": "jnz     INSTR67",
                    "31": "mov     rdi, r12",
                    "32": "mov     esi, 1",
                    "33": "call    f2fs_sync_fs; PIC mode",
                    "34": "mov     ebp, eax",
                    "35": "test    eax, eax",
                    "36": "jnz     INSTR67",
                    "37": "jmp     short INSTR43",
                    "38": "mov     rdx, 7FFFFFFFFFFFFFFFh",
                    "39": "mov     rdi, rbx",
                    "40": "mov     esi, 2",
                    "41": "mov     ecx, 9",
                    "42": "call    f2fs_sync_meta_pages; PIC mode",
                    "43": "mov     rdi, rbx",
                    "44": "xor     esi, esi",
                    "45": "xor     edx, edx",
                    "46": "call    f2fs_stop_checkpoint; PIC mode",
                    "47": "xor     ebp, ebp",
                    "48": "test    r14b, r14b",
                    "49": "jnz     short INSTR67",
                    "50": "mov     rdi, rbx",
                    "51": "call    f2fs_stop_gc_thread; PIC mode",
                    "52": "mov     rdi, rbx",
                    "53": "call    f2fs_stop_discard_thread; PIC mode",
                    "54": "mov     rdi, rbx",
                    "55": "call    f2fs_drop_discard_cmd; PIC mode",
                    "56": "and     byte ptr [rbx+638h], 0FDh",
                    "57": "mov     rax, cs:jiffies",
                    "58": "mov     [rbx+1C8h], rax",
                    "59": "mov     [rbx+1D0h], rax",
                    "60": "mov     [rbx+1D8h], rax",
                    "61": "jmp     short INSTR67",
                    "62": "mov     rdi, [r12+0C8h]",
                    "63": "call    freeze_bdev; PIC mode",
                    "64": "mov     ebp, eax",
                    "65": "test    eax, eax",
                    "66": "jz      short INSTR75",
                    "67": "xchg    ax, ax",
                    "68": "mov     eax, ebp",
                    "69": "pop     rbx",
                    "70": "pop     r12",
                    "71": "pop     r14",
                    "72": "pop     r15",
                    "73": "pop     rbp",
                    "74": "retn",
                    "75": "mov     rdi, rbx",
                    "76": "xor     esi, esi",
                    "77": "xor     edx, edx",
                    "78": "call    f2fs_stop_checkpoint; PIC mode",
                    "79": "mov     rdi, [r12+0C8h]",
                    "80": "call    thaw_bdev; PIC mode",
                    "81": "jmp     short INSTR47"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r14",
                    "2": "push    r13",
                    "3": "push    r12",
                    "4": "mov     r12d, esi",
                    "5": "push    rbp",
                    "6": "mov     rbp, rdi",
                    "7": "push    rbx",
                    "8": "mov     ebx, edx",
                    "9": "mov     r14, [rdi]",
                    "10": "cmp     esi, 2",
                    "11": "jz      short INSTR40",
                    "12": "jbe     short INSTR32",
                    "13": "cmp     esi, 3",
                    "14": "jz      INSTR88",
                    "15": "cmp     esi, 4",
                    "16": "jnz     INSTR93",
                    "17": "lock or byte ptr [rdi+48h], 4",
                    "18": "lock or byte ptr [rdi+49h], 2",
                    "19": "lock or byte ptr [rdi+48h], 1",
                    "20": "mov     esi, 1",
                    "21": "mov     rdi, r14",
                    "22": "call    f2fs_sync_fs; PIC mode",
                    "23": "mov     r13d, eax",
                    "24": "xchg    ax, ax",
                    "25": "pop     rbx",
                    "26": "mov     eax, r13d",
                    "27": "pop     rbp",
                    "28": "pop     r12",
                    "29": "pop     r13",
                    "30": "pop     r14",
                    "31": "jmp     __x86_return_thunk; PIC mode",
                    "32": "test    esi, esi",
                    "33": "jz      INSTR76",
                    "34": "mov     esi, 1",
                    "35": "mov     rdi, r14",
                    "36": "call    f2fs_sync_fs; PIC mode",
                    "37": "mov     r13d, eax",
                    "38": "test    eax, eax",
                    "39": "jnz     short INSTR24",
                    "40": "xor     edx, edx",
                    "41": "xor     esi, esi",
                    "42": "mov     rdi, rbp",
                    "43": "call    f2fs_stop_checkpoint; PIC mode",
                    "44": "xor     r13d, r13d",
                    "45": "test    bl, bl",
                    "46": "jnz     short INSTR24",
                    "47": "mov     rdi, rbp",
                    "48": "call    f2fs_stop_gc_thread; PIC mode",
                    "49": "mov     rdi, rbp",
                    "50": "call    f2fs_stop_discard_thread; PIC mode",
                    "51": "mov     rdi, rbp",
                    "52": "call    f2fs_drop_discard_cmd; PIC mode",
                    "53": "mov     rax, cs:jiffies",
                    "54": "and     dword ptr [rbp+638h], 0FFFFFFFDh",
                    "55": "mov     [rbp+1C8h], rax",
                    "56": "mov     [rbp+1D0h], rax",
                    "57": "mov     [rbp+1D8h], rax",
                    "58": "jmp     short INSTR24",
                    "59": "mov     eax, dword ptr gs:pcpu_hot+0Ch",
                    "60": "mov     eax, eax",
                    "61": "bt      cs:__cpu_online_mask, rax",
                    "62": "jnb     INSTR25",
                    "63": "inc     dword ptr gs:pcpu_hot+8",
                    "64": "mov     rax, qword ptr cs:__tracepoint_f2fs_shutdown+48h",
                    "65": "test    rax, rax",
                    "66": "jz      short INSTR72",
                    "67": "mov     rdi, [rax+8]",
                    "68": "mov     ecx, r13d",
                    "69": "mov     edx, r12d",
                    "70": "mov     rsi, rbp",
                    "71": "call    __SCT__tp_func_f2fs_shutdown; PIC mode",
                    "72": "dec     dword ptr gs:pcpu_hot+8",
                    "73": "jnz     INSTR25",
                    "74": "call    __SCT__preempt_schedule_notrace; PIC mode",
                    "75": "jmp     INSTR25",
                    "76": "mov     rdi, [r14+0C8h]",
                    "77": "call    freeze_bdev; PIC mode",
                    "78": "mov     r13d, eax",
                    "79": "test    eax, eax",
                    "80": "jnz     INSTR24",
                    "81": "mov     rdi, rbp",
                    "82": "xor     edx, edx",
                    "83": "xor     esi, esi",
                    "84": "call    f2fs_stop_checkpoint; PIC mode",
                    "85": "mov     rdi, [r14+0C8h]",
                    "86": "call    thaw_bdev; PIC mode",
                    "87": "jmp     INSTR44",
                    "88": "mov     ecx, 9",
                    "89": "mov     esi, 2",
                    "90": "mov     rdx, 7FFFFFFFFFFFFFFFh",
                    "91": "call    f2fs_sync_meta_pages; PIC mode",
                    "92": "jmp     INSTR40",
                    "93": "mov     r13d, 0FFFFFFEAh",
                    "94": "jmp     INSTR24"
                }
            },
            {
                "filename": "file.f2fs_do_shutdown.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "mov     r13d, esi",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "mov     rbp, rdi",
                    "8": "push    rbx",
                    "9": "mov     ebx, edx",
                    "10": "mov     r14, [rdi]",
                    "11": "cmp     esi, 2",
                    "12": "jz      INSTR58",
                    "13": "ja      short INSTR17",
                    "14": "test    esi, esi",
                    "15": "jnz     INSTR47",
                    "16": "jmp     short INSTR35",
                    "17": "cmp     esi, 3",
                    "18": "jz      INSTR54",
                    "19": "mov     r12d, 0FFFFFFEAh",
                    "20": "cmp     esi, 4",
                    "21": "jnz     INSTR76",
                    "22": "mov     esi, 2",
                    "23": "call    set_sbi_flag",
                    "24": "mov     esi, 9",
                    "25": "mov     rdi, rbp",
                    "26": "call    set_sbi_flag",
                    "27": "xor     esi, esi",
                    "28": "mov     rdi, rbp",
                    "29": "call    set_sbi_flag",
                    "30": "mov     esi, 1",
                    "31": "mov     rdi, r14",
                    "32": "call    f2fs_sync_fs; PIC mode",
                    "33": "mov     r12d, eax",
                    "34": "jmp     INSTR76",
                    "35": "mov     rdi, [r14+0C8h]",
                    "36": "call    freeze_bdev; PIC mode",
                    "37": "mov     r12d, eax",
                    "38": "test    eax, eax",
                    "39": "jnz     INSTR76",
                    "40": "mov     rdi, rbp",
                    "41": "xor     edx, edx",
                    "42": "xor     esi, esi",
                    "43": "call    f2fs_stop_checkpoint; PIC mode",
                    "44": "mov     rdi, [r14+0C8h]",
                    "45": "call    thaw_bdev; PIC mode",
                    "46": "jmp     short INSTR62",
                    "47": "mov     esi, 1",
                    "48": "mov     rdi, r14",
                    "49": "call    f2fs_sync_fs; PIC mode",
                    "50": "mov     r12d, eax",
                    "51": "test    eax, eax",
                    "52": "jnz     short INSTR76",
                    "53": "jmp     short INSTR58",
                    "54": "mov     ecx, 9",
                    "55": "mov     esi, 2",
                    "56": "mov     rdx, 7FFFFFFFFFFFFFFFh",
                    "57": "call    f2fs_sync_meta_pages; PIC mode",
                    "58": "xor     edx, edx",
                    "59": "xor     esi, esi",
                    "60": "mov     rdi, rbp",
                    "61": "call    f2fs_stop_checkpoint; PIC mode",
                    "62": "xor     r12d, r12d",
                    "63": "test    bl, bl",
                    "64": "jnz     short INSTR76",
                    "65": "mov     rdi, rbp",
                    "66": "call    f2fs_stop_gc_thread; PIC mode",
                    "67": "mov     rdi, rbp",
                    "68": "call    f2fs_stop_discard_thread; PIC mode",
                    "69": "mov     rdi, rbp",
                    "70": "call    f2fs_drop_discard_cmd; PIC mode",
                    "71": "mov     rax, cs:jiffies",
                    "72": "and     dword ptr [rbp+638h], 0FFFFFFFDh",
                    "73": "mov     [rbp+1C8h], rax",
                    "74": "mov     [rbp+1D0h], rax",
                    "75": "mov     [rbp+1D8h], rax",
                    "76": "jmp     short INSTR78",
                    "77": "jmp     short INSTR94",
                    "78": "mov     edi, dword ptr gs:pcpu_hot+0Ch",
                    "79": "call    cpu_online",
                    "80": "test    al, al",
                    "81": "jz      short INSTR94",
                    "82": "inc     dword ptr gs:pcpu_hot+8",
                    "83": "mov     rax, qword ptr cs:__tracepoint_f2fs_shutdown+48h",
                    "84": "test    rax, rax",
                    "85": "jz      short INSTR91",
                    "86": "mov     rdi, [rax+8]",
                    "87": "mov     ecx, r12d",
                    "88": "mov     edx, r13d",
                    "89": "mov     rsi, rbp",
                    "90": "call    __SCT__tp_func_f2fs_shutdown; PIC mode",
                    "91": "dec     dword ptr gs:pcpu_hot+8",
                    "92": "jnz     short INSTR94",
                    "93": "call    __SCT__preempt_schedule_notrace; PIC mode",
                    "94": "pop     rbx",
                    "95": "mov     eax, r12d",
                    "96": "pop     rbp",
                    "97": "pop     r12",
                    "98": "pop     r13",
                    "99": "pop     r14",
                    "100": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47693",
        "files": [
            {
                "filename": "cache.ib_cache_setup_one.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "mov     edi, eax",
                    "5": "push    esi",
                    "6": "push    ebx",
                    "7": "sub     esp, 14h",
                    "8": "movzx   eax, byte ptr [eax+4F0h]",
                    "9": "and     al, 1",
                    "10": "mov     dl, al",
                    "11": "xor     dl, 1",
                    "12": "movzx   esi, dl",
                    "13": "mov     [ebp+var_10], esi",
                    "14": "mov     esi, 1",
                    "15": "lea     esi, [esi+0]",
                    "16": "nop",
                    "17": "xor     edx, edx",
                    "18": "test    al, al",
                    "19": "jnz     short INSTR21",
                    "20": "mov     edx, [edi+4F4h]",
                    "21": "cmp     [ebp+var_10], edx",
                    "22": "ja      INSTR97",
                    "23": "imul    eax, [ebp+var_10], 74h ; 't'",
                    "24": "mov     ecx, 28h ; '('",
                    "25": "mov     [ebp+var_18], eax",
                    "26": "mov     edx, eax",
                    "27": "mov     eax, [edi+2B8h]",
                    "28": "mov     eax, [eax+edx+8]",
                    "29": "mov     edx, 0DC0h",
                    "30": "mov     [ebp+var_14], eax",
                    "31": "mov     eax, dword ptr ds:kmalloc_caches+18h",
                    "32": "call    kmem_cache_alloc_trace",
                    "33": "test    eax, eax",
                    "34": "mov     ebx, eax",
                    "35": "jz      INSTR87",
                    "36": "mov     eax, [ebp+var_14]",
                    "37": "lea     ecx, ds:0[eax*4]",
                    "38": "shr     eax, 1Eh",
                    "39": "setnz   al",
                    "40": "movzx   eax, al",
                    "41": "mov     [ebp+var_1C], eax",
                    "42": "test    eax, eax",
                    "43": "jnz     INSTR84",
                    "44": "mov     edx, 0DC0h",
                    "45": "mov     eax, ecx",
                    "46": "call    __kmalloc",
                    "47": "mov     [ebx+20h], eax",
                    "48": "test    eax, eax",
                    "49": "jz      short INSTR85",
                    "50": "lea     eax, [ebx+4]",
                    "51": "mov     ecx, (offset unk_8001F0F+1)",
                    "52": "mov     edx, offset aTableLock; \"&table->lock\"",
                    "53": "call    __mutex_init",
                    "54": "mov     eax, [ebp+var_14]",
                    "55": "mov     dword ptr [ebx+18h], 0",
                    "56": "mov     edx, [ebp+var_10]",
                    "57": "mov     dword ptr [ebx+1Ch], 0",
                    "58": "mov     [ebx], eax",
                    "59": "mov     eax, edi",
                    "60": "call    roce_gid_type_mask_support",
                    "61": "call    __sw_hweight32",
                    "62": "test    eax, eax",
                    "63": "jz      short INSTR77",
                    "64": "mov     [ebp+var_14], edi",
                    "65": "mov     edx, [ebx]",
                    "66": "mov     ecx, [ebp+var_1C]",
                    "67": "jmp     short INSTR74",
                    "68": "mov     edi, esi",
                    "69": "shl     edi, cl",
                    "70": "inc     ecx",
                    "71": "or      [ebx+24h], edi",
                    "72": "cmp     eax, ecx",
                    "73": "jz      short INSTR76",
                    "74": "cmp     edx, ecx",
                    "75": "jnz     short INSTR68",
                    "76": "mov     edi, [ebp+var_14]",
                    "77": "mov     eax, [edi+2B8h]",
                    "78": "mov     edx, [ebp+var_18]",
                    "79": "inc     [ebp+var_10]",
                    "80": "mov     [eax+edx+30h], ebx",
                    "81": "movzx   eax, byte ptr [edi+4F0h]",
                    "82": "and     al, 1",
                    "83": "jmp     INSTR17",
                    "84": "mov     dword ptr [ebx+20h], 0",
                    "85": "mov     eax, ebx",
                    "86": "call    kfree",
                    "87": "mov     eax, edi",
                    "88": "mov     esi, 0FFFFFFF4h",
                    "89": "call    gid_table_release_one",
                    "90": "mov     eax, esi",
                    "91": "add     esp, 14h",
                    "92": "pop     ebx",
                    "93": "pop     esi",
                    "94": "pop     edi",
                    "95": "pop     ebp",
                    "96": "retn",
                    "97": "mov     eax, edi",
                    "98": "call    rdma_roce_rescan_device",
                    "99": "movzx   eax, byte ptr [edi+4F0h]",
                    "100": "and     al, 1",
                    "101": "mov     bl, al",
                    "102": "xor     bl, 1",
                    "103": "movzx   ebx, bl",
                    "104": "lea     esi, [esi+0]",
                    "105": "test    al, al",
                    "106": "jnz     short INSTR121",
                    "107": "cmp     ebx, [edi+4F4h]",
                    "108": "ja      short INSTR134",
                    "109": "test    ebx, ebx",
                    "110": "jnz     short INSTR123",
                    "111": "mov     esi, 0FFFFFFEAh",
                    "112": "mov     eax, edi",
                    "113": "call    gid_table_cleanup_one",
                    "114": "mov     eax, esi",
                    "115": "add     esp, 14h",
                    "116": "pop     ebx",
                    "117": "pop     esi",
                    "118": "pop     edi",
                    "119": "pop     ebp",
                    "120": "retn",
                    "121": "test    ebx, ebx",
                    "122": "jnz     short INSTR134",
                    "123": "mov     dword ptr [esp], 1",
                    "124": "mov     ecx, 1",
                    "125": "mov     edx, ebx",
                    "126": "mov     eax, edi",
                    "127": "call    ib_cache_update_part_0",
                    "128": "test    eax, eax",
                    "129": "jnz     short INSTR142",
                    "130": "movzx   eax, byte ptr [edi+4F0h]",
                    "131": "inc     ebx",
                    "132": "and     al, 1",
                    "133": "jmp     short INSTR105",
                    "134": "add     esp, 14h",
                    "135": "xor     esi, esi",
                    "136": "pop     ebx",
                    "137": "mov     eax, esi",
                    "138": "pop     esi",
                    "139": "pop     edi",
                    "140": "pop     ebp",
                    "141": "retn",
                    "142": "mov     esi, eax",
                    "143": "jmp     short INSTR112"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_50]!",
                    "3": "ADRP            X1, #zgid@PAGE",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x50+var_40]",
                    "6": "ADD             X1, X1, #zgid@PAGEOFF",
                    "7": "STP             X21, X22, [SP,#0x50+var_30]",
                    "8": "ADD             X22, X1, #0x10",
                    "9": "STP             X23, X24, [SP,#0x50+var_20]",
                    "10": "MOV             X24, X0",
                    "11": "ADRP            X23, #kmalloc_caches@PAGE",
                    "12": "STR             X25, [SP,#0x50+var_10]",
                    "13": "ADD             X23, X23, #kmalloc_caches@PAGEOFF",
                    "14": "LDR             X0, [X0,#0x888]",
                    "15": "UBFX            X0, X0, #0x20, #1 ; ' '",
                    "16": "EOR             W20, W0, #1",
                    "17": "NOP",
                    "18": "MOV             W1, #0",
                    "19": "CBNZ            W0, loc_2E24",
                    "20": "LDR             W1, [X24,#0x890]",
                    "21": "CMP             W20, W1",
                    "22": "B.HI            loc_2EFC",
                    "23": "MOV             W21, #0xB0",
                    "24": "MOV             X2, #0x40 ; '@'",
                    "25": "LDR             X3, [X24,#0x500]",
                    "26": "UMULL           X21, W20, W21",
                    "27": "LDR             X0, [X23,#0x38]",
                    "28": "ADD             X3, X3, X21",
                    "29": "MOV             W1, #0xDC0",
                    "30": "LDR             W25, [X3,#0xC]",
                    "31": "BL              kmem_cache_alloc_trace",
                    "32": "MOV             X19, X0",
                    "33": "CBZ             X0, loc_2F8C",
                    "34": "SXTW            X1, W25",
                    "35": "SBFIZ           X0, X25, #3, #0x20 ; ' '",
                    "36": "CMP             XZR, X1,LSR#61",
                    "37": "B.NE            loc_2F80",
                    "38": "MOV             W1, #0xDC0",
                    "39": "BL              __kmalloc",
                    "40": "STR             X0, [X19,#0x30]",
                    "41": "CBZ             X0, loc_2F84",
                    "42": "MOV             X2, X22",
                    "43": "ADD             X0, X19, #8",
                    "44": "ADRL            X1, aTableLock; \"&table->lock\"",
                    "45": "BL              __mutex_init",
                    "46": "STR             W25, [X19]",
                    "47": "MOV             W1, W20",
                    "48": "STR             XZR, [X19,#0x28]",
                    "49": "MOV             X0, X24",
                    "50": "BL              roce_gid_type_mask_support",
                    "51": "BL              __sw_hweight64",
                    "52": "MOV             W6, W0",
                    "53": "CBZ             W0, loc_2EE0",
                    "54": "LDR             W4, [X19]",
                    "55": "MOV             W1, #0",
                    "56": "MOV             X5, #1",
                    "57": "B               loc_2ED4",
                    "58": "LDR             W2, [X19,#0x38]",
                    "59": "ADD             W1, W1, #1",
                    "60": "ORR             W2, W2, W3",
                    "61": "STR             W2, [X19,#0x38]",
                    "62": "CMP             W6, W1",
                    "63": "B.EQ            loc_2EE0",
                    "64": "LSL             X3, X5, X1",
                    "65": "CMP             W4, W1",
                    "66": "B.NE            loc_2EBC",
                    "67": "LDR             X0, [X24,#0x500]",
                    "68": "ADD             W20, W20, #1",
                    "69": "ADD             X0, X0, X21",
                    "70": "STR             X19, [X0,#0x40]",
                    "71": "LDR             X0, [X24,#0x888]",
                    "72": "UBFX            X0, X0, #0x20, #1 ; ' '",
                    "73": "B               loc_2E18",
                    "74": "MOV             X0, X24",
                    "75": "BL              rdma_roce_rescan_device",
                    "76": "LDR             X4, [X24,#0x888]",
                    "77": "UBFX            X4, X4, #0x20, #1 ; ' '",
                    "78": "EOR             W19, W4, #1",
                    "79": "MOV             W3, #1",
                    "80": "MOV             W1, W19",
                    "81": "MOV             X0, X24",
                    "82": "MOV             W2, W3",
                    "83": "CBNZ            W4, loc_2F60",
                    "84": "LDR             W4, [X24,#0x890]",
                    "85": "CMP             W19, W4",
                    "86": "B.HI            loc_2FB8",
                    "87": "CBNZ            W19, loc_2F64",
                    "88": "MOV             W20, #0xFFFFFFEA",
                    "89": "MOV             X0, X24",
                    "90": "BL              gid_table_cleanup_one",
                    "91": "MOV             W0, W20",
                    "92": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "93": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "94": "LDP             X23, X24, [SP,#0x50+var_20]",
                    "95": "LDR             X25, [SP,#0x50+var_10]",
                    "96": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "97": "AUTIASP",
                    "98": "RET",
                    "99": "CBNZ            W19, loc_2FB8",
                    "100": "BL              ib_cache_update.part.0",
                    "101": "ADD             W19, W19, #1",
                    "102": "MOV             W20, W0",
                    "103": "CBNZ            W0, loc_2F38",
                    "104": "LDR             X4, [X24,#0x888]",
                    "105": "UBFX            X4, X4, #0x20, #1 ; ' '",
                    "106": "B               loc_2F10",
                    "107": "STR             XZR, [X19,#0x30]",
                    "108": "MOV             X0, X19",
                    "109": "BL              kfree",
                    "110": "MOV             X0, X24",
                    "111": "MOV             W20, #0xFFFFFFF4",
                    "112": "BL              gid_table_release_one",
                    "113": "MOV             W0, W20",
                    "114": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "115": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "116": "LDP             X23, X24, [SP,#0x50+var_20]",
                    "117": "LDR             X25, [SP,#0x50+var_10]",
                    "118": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "119": "AUTIASP",
                    "120": "RET",
                    "121": "MOV             W20, #0",
                    "122": "MOV             W0, W20",
                    "123": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "124": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "125": "LDP             X23, X24, [SP,#0x50+var_20]",
                    "126": "LDR             X25, [SP,#0x50+var_10]",
                    "127": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "128": "AUTIASP",
                    "129": "RET"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r14, rdi",
                    "8": "mov     eax, [rdi+884h]",
                    "9": "mov     r12d, eax",
                    "10": "not     r12d",
                    "11": "and     r12d, 1",
                    "12": "mov     r15d, 8",
                    "13": "jmp     short INSTR18",
                    "14": "mov     rax, [r14+500h]",
                    "15": "mov     [rax+r13+40h], rbx",
                    "16": "add     r12d, 1",
                    "17": "mov     al, [r14+884h]",
                    "18": "mov     ecx, 0",
                    "19": "test    al, 1",
                    "20": "jnz     short INSTR22",
                    "21": "mov     ecx, [r14+888h]",
                    "22": "cmp     r12d, ecx",
                    "23": "ja      INSTR70",
                    "24": "mov     rax, [r14+500h]",
                    "25": "mov     ecx, r12d",
                    "26": "imul    r13, rcx, 0B0h",
                    "27": "mov     ebp, [rax+r13+0Ch]",
                    "28": "mov     rdi, qword ptr cs:kmalloc_caches+30h",
                    "29": "mov     edx, 40h ; '@'",
                    "30": "mov     esi, 0DC0h",
                    "31": "call    kmem_cache_alloc_trace; PIC mode",
                    "32": "test    rax, rax",
                    "33": "jz      INSTR101",
                    "34": "mov     rbx, rax",
                    "35": "movsxd  rax, ebp",
                    "36": "mul     r15",
                    "37": "jo      INSTR98",
                    "38": "mov     rdi, rax",
                    "39": "mov     esi, 0DC0h",
                    "40": "call    __kmalloc; PIC mode",
                    "41": "mov     [rbx+30h], rax",
                    "42": "test    rax, rax",
                    "43": "jz      INSTR99",
                    "44": "mov     rdi, rbx",
                    "45": "add     rdi, 8",
                    "46": "mov     rsi, offset aTableLock; \"&table->lock\"",
                    "47": "mov     rdx, offset alloc_gid_table___key",
                    "48": "call    __mutex_init; PIC mode",
                    "49": "mov     [rbx], ebp",
                    "50": "mov     qword ptr [rbx+28h], 0",
                    "51": "mov     rdi, r14",
                    "52": "mov     esi, r12d",
                    "53": "call    roce_gid_type_mask_support; PIC mode",
                    "54": "mov     rdi, rax",
                    "55": "call    __sw_hweight64; PIC mode",
                    "56": "test    eax, eax",
                    "57": "jz      INSTR14",
                    "58": "mov     edx, [rbx]",
                    "59": "mov     eax, eax",
                    "60": "xor     ecx, ecx",
                    "61": "cmp     rdx, rcx",
                    "62": "jz      INSTR14",
                    "63": "mov     esi, 1",
                    "64": "shl     rsi, cl",
                    "65": "or      [rbx+38h], esi",
                    "66": "add     rcx, 1",
                    "67": "cmp     rax, rcx",
                    "68": "jnz     short INSTR61",
                    "69": "jmp     INSTR14",
                    "70": "mov     rdi, r14",
                    "71": "call    rdma_roce_rescan_device; PIC mode",
                    "72": "mov     eax, [r14+884h]",
                    "73": "mov     ebx, eax",
                    "74": "not     ebx",
                    "75": "and     ebx, 1",
                    "76": "xor     ebp, ebp",
                    "77": "mov     ecx, 0",
                    "78": "test    al, 1",
                    "79": "jnz     short INSTR81",
                    "80": "mov     ecx, [r14+888h]",
                    "81": "cmp     ebx, ecx",
                    "82": "ja      short INSTR104",
                    "83": "mov     rdi, r14",
                    "84": "mov     esi, ebx",
                    "85": "mov     edx, 1",
                    "86": "mov     ecx, 1",
                    "87": "mov     r8d, 1",
                    "88": "call    ib_cache_update",
                    "89": "test    eax, eax",
                    "90": "jnz     short INSTR94",
                    "91": "add     ebx, 1",
                    "92": "movzx   eax, byte ptr [r14+884h]",
                    "93": "jmp     short INSTR76",
                    "94": "mov     ebp, eax",
                    "95": "mov     rdi, r14",
                    "96": "call    gid_table_cleanup_one",
                    "97": "jmp     short INSTR104",
                    "98": "mov     qword ptr [rbx+30h], 0",
                    "99": "mov     rdi, rbx",
                    "100": "call    kfree; PIC mode",
                    "101": "mov     rdi, r14",
                    "102": "call    gid_table_release_one",
                    "103": "mov     ebp, 0FFFFFFF4h",
                    "104": "mov     eax, ebp",
                    "105": "pop     rbx",
                    "106": "pop     r12",
                    "107": "pop     r13",
                    "108": "pop     r14",
                    "109": "pop     r15",
                    "110": "pop     rbp",
                    "111": "retn"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "mov     r14, rdi",
                    "4": "push    r13",
                    "5": "mov     r13d, 1",
                    "6": "push    r12",
                    "7": "push    rbp",
                    "8": "push    rbx",
                    "9": "sub     rsp, 8",
                    "10": "movzx   eax, byte ptr [rdi+884h]",
                    "11": "and     eax, 1",
                    "12": "mov     ebx, eax",
                    "13": "xor     ebx, 1",
                    "14": "movzx   ebx, bl",
                    "15": "xor     edx, edx",
                    "16": "test    al, al",
                    "17": "jnz     short INSTR19",
                    "18": "mov     edx, [r14+888h]",
                    "19": "cmp     ebx, edx",
                    "20": "ja      INSTR74",
                    "21": "mov     eax, ebx",
                    "22": "mov     rdi, qword ptr cs:kmalloc_caches+30h",
                    "23": "mov     esi, 0DC0h",
                    "24": "lea     rdx, [rax+rax*4]",
                    "25": "lea     r12, [rax+rdx*2]",
                    "26": "mov     rax, [r14+500h]",
                    "27": "mov     edx, 40h ; '@'",
                    "28": "shl     r12, 4",
                    "29": "mov     r15d, [rax+r12+0Ch]",
                    "30": "call    kmem_cache_alloc_trace; PIC mode",
                    "31": "mov     rbp, rax",
                    "32": "test    rax, rax",
                    "33": "jz      INSTR116",
                    "34": "movsxd  rax, r15d",
                    "35": "lea     rdi, ds:0[rax*8]",
                    "36": "shr     rax, 3Dh",
                    "37": "jnz     INSTR113",
                    "38": "mov     esi, 0DC0h",
                    "39": "call    __kmalloc; PIC mode",
                    "40": "mov     [rbp+30h], rax",
                    "41": "test    rax, rax",
                    "42": "jz      INSTR114",
                    "43": "lea     rdi, [rbp+8]",
                    "44": "mov     rdx, offset __key_0; \"zgid\"",
                    "45": "mov     rsi, offset aTableLock; \"&table->lock\"",
                    "46": "call    __mutex_init; PIC mode",
                    "47": "mov     esi, ebx",
                    "48": "mov     rdi, r14",
                    "49": "mov     [rbp+0], r15d",
                    "50": "mov     qword ptr [rbp+28h], 0",
                    "51": "call    roce_gid_type_mask_support; PIC mode",
                    "52": "mov     rdi, rax",
                    "53": "call    __sw_hweight64; PIC mode",
                    "54": "mov     esi, eax",
                    "55": "test    eax, eax",
                    "56": "jz      short INSTR68",
                    "57": "mov     edx, [rbp+0]",
                    "58": "xor     ecx, ecx",
                    "59": "jmp     short INSTR66",
                    "60": "mov     rax, r13",
                    "61": "shl     rax, cl",
                    "62": "add     ecx, 1",
                    "63": "or      [rbp+38h], eax",
                    "64": "cmp     esi, ecx",
                    "65": "jz      short INSTR68",
                    "66": "cmp     edx, ecx",
                    "67": "jnz     short INSTR60",
                    "68": "mov     rax, [r14+500h]",
                    "69": "add     ebx, 1",
                    "70": "mov     [rax+r12+40h], rbp",
                    "71": "movzx   eax, byte ptr [r14+884h]",
                    "72": "and     eax, 1",
                    "73": "jmp     INSTR15",
                    "74": "mov     rdi, r14",
                    "75": "call    rdma_roce_rescan_device; PIC mode",
                    "76": "movzx   eax, byte ptr [r14+884h]",
                    "77": "and     eax, 1",
                    "78": "mov     ebx, eax",
                    "79": "xor     ebx, 1",
                    "80": "movzx   ebx, bl",
                    "81": "test    al, al",
                    "82": "jnz     short INSTR100",
                    "83": "cmp     ebx, [r14+888h]",
                    "84": "ja      INSTR127",
                    "85": "test    ebx, ebx",
                    "86": "jnz     short INSTR102",
                    "87": "mov     eax, 0FFFFFFEAh",
                    "88": "mov     rdi, r14",
                    "89": "mov     [rsp+38h+var_34], eax",
                    "90": "call    gid_table_cleanup_one",
                    "91": "mov     eax, [rsp+38h+var_34]",
                    "92": "add     rsp, 8",
                    "93": "pop     rbx",
                    "94": "pop     rbp",
                    "95": "pop     r12",
                    "96": "pop     r13",
                    "97": "pop     r14",
                    "98": "pop     r15",
                    "99": "jmp     __x86_return_thunk; PIC mode",
                    "100": "test    ebx, ebx",
                    "101": "jnz     short INSTR127",
                    "102": "mov     ecx, 1",
                    "103": "mov     edx, 1",
                    "104": "mov     esi, ebx",
                    "105": "mov     rdi, r14",
                    "106": "call    ib_cache_update_part_0",
                    "107": "test    eax, eax",
                    "108": "jnz     short INSTR88",
                    "109": "movzx   eax, byte ptr [r14+884h]",
                    "110": "add     ebx, 1",
                    "111": "and     eax, 1",
                    "112": "jmp     short INSTR81",
                    "113": "mov     qword ptr [rbp+30h], 0",
                    "114": "mov     rdi, rbp",
                    "115": "call    __imp_kfree; PIC mode",
                    "116": "mov     rdi, r14",
                    "117": "call    gid_table_release_one",
                    "118": "mov     eax, 0FFFFFFF4h",
                    "119": "add     rsp, 8",
                    "120": "pop     rbx",
                    "121": "pop     rbp",
                    "122": "pop     r12",
                    "123": "pop     r13",
                    "124": "pop     r14",
                    "125": "pop     r15",
                    "126": "jmp     __x86_return_thunk; PIC mode",
                    "127": "add     rsp, 8",
                    "128": "xor     eax, eax",
                    "129": "pop     rbx",
                    "130": "pop     rbp",
                    "131": "pop     r12",
                    "132": "pop     r13",
                    "133": "pop     r14",
                    "134": "pop     r15",
                    "135": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r14",
                    "2": "push    r13",
                    "3": "push    r12",
                    "4": "push    rbp",
                    "5": "mov     rbp, rdi",
                    "6": "push    rbx",
                    "7": "push    rcx",
                    "8": "mov     bl, [rdi+87Ch]",
                    "9": "and     ebx, 1",
                    "10": "xor     ebx, 1",
                    "11": "movzx   ebx, bl",
                    "12": "xor     eax, eax",
                    "13": "test    byte ptr [rbp+87Ch], 1",
                    "14": "jnz     short INSTR16",
                    "15": "mov     eax, [rbp+880h]",
                    "16": "cmp     ebx, eax",
                    "17": "ja      INSTR75",
                    "18": "mov     r13d, ebx",
                    "19": "mov     edx, 40h ; '@'",
                    "20": "mov     esi, 0DC0h",
                    "21": "mov     rax, [rbp+500h]",
                    "22": "imul    r13, 0B0h",
                    "23": "mov     rdi, qword ptr cs:kmalloc_caches+30h",
                    "24": "mov     r14d, [rax+r13+0Ch]",
                    "25": "call    kmem_cache_alloc_trace; PIC mode",
                    "26": "mov     r12, rax",
                    "27": "test    rax, rax",
                    "28": "jz      short INSTR59",
                    "29": "movsxd  rdi, r14d",
                    "30": "mov     edx, 8",
                    "31": "mov     rax, rdi",
                    "32": "mul     rdx",
                    "33": "mov     rdi, rax",
                    "34": "jo      short INSTR41",
                    "35": "mov     esi, 0DC0h",
                    "36": "call    __kmalloc; PIC mode",
                    "37": "mov     [r12+30h], rax",
                    "38": "test    rax, rax",
                    "39": "jnz     short INSTR45",
                    "40": "jmp     short INSTR42",
                    "41": "mov     qword ptr [r12+30h], 0",
                    "42": "mov     rdi, r12",
                    "43": "call    kfree; PIC mode",
                    "44": "jmp     short INSTR59",
                    "45": "mov     rdx, offset __key_0; \"zgid\"",
                    "46": "lea     rdi, [r12+8]",
                    "47": "mov     rsi, offset aTableLock; \"&table->lock\"",
                    "48": "call    __mutex_init; PIC mode",
                    "49": "mov     rdi, rbp",
                    "50": "mov     esi, ebx",
                    "51": "mov     [r12], r14d",
                    "52": "mov     qword ptr [r12+28h], 0",
                    "53": "call    roce_gid_type_mask_support; PIC mode",
                    "54": "xor     ecx, ecx",
                    "55": "mov     edx, 1",
                    "56": "mov     rdi, rax",
                    "57": "call    __sw_hweight64; PIC mode",
                    "58": "jmp     short INSTR69",
                    "59": "mov     rdi, rbp",
                    "60": "call    gid_table_release_one",
                    "61": "mov     eax, 0FFFFFFF4h",
                    "62": "jmp     INSTR102",
                    "63": "cmp     ecx, [r12]",
                    "64": "jnb     short INSTR71",
                    "65": "mov     rsi, rdx",
                    "66": "shl     rsi, cl",
                    "67": "or      [r12+38h], esi",
                    "68": "inc     ecx",
                    "69": "cmp     eax, ecx",
                    "70": "jnz     short INSTR63",
                    "71": "mov     rax, [rbp+500h]",
                    "72": "inc     ebx",
                    "73": "mov     [rax+r13+40h], r12",
                    "74": "jmp     INSTR12",
                    "75": "mov     rdi, rbp",
                    "76": "call    rdma_roce_rescan_device; PIC mode",
                    "77": "mov     bl, [rbp+87Ch]",
                    "78": "and     ebx, 1",
                    "79": "xor     ebx, 1",
                    "80": "movzx   ebx, bl",
                    "81": "xor     eax, eax",
                    "82": "test    byte ptr [rbp+87Ch], 1",
                    "83": "jnz     short INSTR85",
                    "84": "mov     eax, [rbp+880h]",
                    "85": "cmp     ebx, eax",
                    "86": "ja      short INSTR101",
                    "87": "mov     ecx, 1",
                    "88": "mov     edx, 1",
                    "89": "mov     esi, ebx",
                    "90": "mov     rdi, rbp",
                    "91": "call    ib_cache_update_constprop_0",
                    "92": "test    eax, eax",
                    "93": "jz      short INSTR99",
                    "94": "mov     rdi, rbp",
                    "95": "mov     [rsp+30h+var_2C], eax",
                    "96": "call    gid_table_cleanup_one",
                    "97": "mov     eax, [rsp+30h+var_2C]",
                    "98": "jmp     short INSTR102",
                    "99": "inc     ebx",
                    "100": "jmp     short INSTR81",
                    "101": "xor     eax, eax",
                    "102": "pop     rdx",
                    "103": "pop     rbx",
                    "104": "pop     rbp",
                    "105": "pop     r12",
                    "106": "pop     r13",
                    "107": "pop     r14",
                    "108": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "mov     edi, eax",
                    "5": "push    esi",
                    "6": "push    ebx",
                    "7": "sub     esp, 14h",
                    "8": "movzx   eax, byte ptr [eax+4F0h]",
                    "9": "and     al, 1",
                    "10": "mov     dl, al",
                    "11": "xor     dl, 1",
                    "12": "movzx   esi, dl",
                    "13": "mov     [ebp+var_10], esi",
                    "14": "mov     esi, 1",
                    "15": "lea     esi, [esi+0]",
                    "16": "nop",
                    "17": "xor     edx, edx",
                    "18": "test    al, al",
                    "19": "jnz     short INSTR21",
                    "20": "mov     edx, [edi+4F4h]",
                    "21": "cmp     [ebp+var_10], edx",
                    "22": "ja      INSTR96",
                    "23": "imul    eax, [ebp+var_10], 74h ; 't'",
                    "24": "mov     ecx, 28h ; '('",
                    "25": "mov     [ebp+var_18], eax",
                    "26": "mov     edx, eax",
                    "27": "mov     eax, [edi+2B8h]",
                    "28": "mov     eax, [eax+edx+8]",
                    "29": "mov     edx, 0DC0h",
                    "30": "mov     [ebp+var_14], eax",
                    "31": "mov     eax, dword ptr ds:kmalloc_caches+18h",
                    "32": "call    kmem_cache_alloc_trace",
                    "33": "test    eax, eax",
                    "34": "mov     ebx, eax",
                    "35": "jz      INSTR87",
                    "36": "mov     eax, [ebp+var_14]",
                    "37": "lea     ecx, ds:0[eax*4]",
                    "38": "shr     eax, 1Eh",
                    "39": "setnz   al",
                    "40": "movzx   eax, al",
                    "41": "mov     [ebp+var_1C], eax",
                    "42": "test    eax, eax",
                    "43": "jnz     INSTR84",
                    "44": "mov     edx, 0DC0h",
                    "45": "mov     eax, ecx",
                    "46": "call    __kmalloc",
                    "47": "mov     [ebx+20h], eax",
                    "48": "test    eax, eax",
                    "49": "jz      short INSTR85",
                    "50": "lea     eax, [ebx+4]",
                    "51": "mov     ecx, (offset unk_8001ED3+1)",
                    "52": "mov     edx, offset aTableLock; \"&table->lock\"",
                    "53": "call    __mutex_init",
                    "54": "mov     eax, [ebp+var_14]",
                    "55": "mov     dword ptr [ebx+18h], 0",
                    "56": "mov     edx, [ebp+var_10]",
                    "57": "mov     dword ptr [ebx+1Ch], 0",
                    "58": "mov     [ebx], eax",
                    "59": "mov     eax, edi",
                    "60": "call    roce_gid_type_mask_support",
                    "61": "call    __sw_hweight32",
                    "62": "test    eax, eax",
                    "63": "jz      short INSTR77",
                    "64": "mov     [ebp+var_14], edi",
                    "65": "mov     edx, [ebx]",
                    "66": "mov     ecx, [ebp+var_1C]",
                    "67": "jmp     short INSTR74",
                    "68": "mov     edi, esi",
                    "69": "shl     edi, cl",
                    "70": "inc     ecx",
                    "71": "or      [ebx+24h], edi",
                    "72": "cmp     eax, ecx",
                    "73": "jz      short INSTR76",
                    "74": "cmp     edx, ecx",
                    "75": "jnz     short INSTR68",
                    "76": "mov     edi, [ebp+var_14]",
                    "77": "mov     eax, [edi+2B8h]",
                    "78": "mov     edx, [ebp+var_18]",
                    "79": "inc     [ebp+var_10]",
                    "80": "mov     [eax+edx+30h], ebx",
                    "81": "movzx   eax, byte ptr [edi+4F0h]",
                    "82": "and     al, 1",
                    "83": "jmp     INSTR17",
                    "84": "mov     dword ptr [ebx+20h], 0",
                    "85": "mov     eax, ebx",
                    "86": "call    kfree",
                    "87": "mov     eax, edi",
                    "88": "call    gid_table_release_one",
                    "89": "mov     eax, 0FFFFFFF4h",
                    "90": "add     esp, 14h",
                    "91": "pop     ebx",
                    "92": "pop     esi",
                    "93": "pop     edi",
                    "94": "pop     ebp",
                    "95": "retn",
                    "96": "mov     eax, edi",
                    "97": "call    rdma_roce_rescan_device",
                    "98": "movzx   eax, byte ptr [edi+4F0h]",
                    "99": "and     al, 1",
                    "100": "mov     bl, al",
                    "101": "xor     bl, 1",
                    "102": "movzx   ebx, bl",
                    "103": "test    al, al",
                    "104": "jnz     short INSTR116",
                    "105": "cmp     ebx, [edi+4F4h]",
                    "106": "ja      short INSTR129",
                    "107": "test    ebx, ebx",
                    "108": "jnz     short INSTR118",
                    "109": "add     esp, 14h",
                    "110": "mov     eax, 0FFFFFFEAh",
                    "111": "pop     ebx",
                    "112": "pop     esi",
                    "113": "pop     edi",
                    "114": "pop     ebp",
                    "115": "retn",
                    "116": "test    ebx, ebx",
                    "117": "jnz     short INSTR129",
                    "118": "mov     dword ptr [esp], 1",
                    "119": "mov     ecx, 1",
                    "120": "mov     edx, ebx",
                    "121": "mov     eax, edi",
                    "122": "call    ib_cache_update_part_0",
                    "123": "test    eax, eax",
                    "124": "jnz     short INSTR90",
                    "125": "movzx   eax, byte ptr [edi+4F0h]",
                    "126": "inc     ebx",
                    "127": "and     al, 1",
                    "128": "jmp     short INSTR103",
                    "129": "xor     eax, eax",
                    "130": "jmp     short INSTR90"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_50]!",
                    "3": "ADRP            X1, #zgid@PAGE",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x50+var_40]",
                    "6": "ADD             X1, X1, #zgid@PAGEOFF",
                    "7": "STP             X21, X22, [SP,#0x50+var_30]",
                    "8": "ADD             X22, X1, #0x10",
                    "9": "STP             X23, X24, [SP,#0x50+var_20]",
                    "10": "MOV             X24, X0",
                    "11": "ADRP            X23, #kmalloc_caches@PAGE",
                    "12": "STR             X25, [SP,#0x50+var_10]",
                    "13": "ADD             X23, X23, #kmalloc_caches@PAGEOFF",
                    "14": "LDR             X0, [X0,#0x888]",
                    "15": "UBFX            X0, X0, #0x20, #1 ; ' '",
                    "16": "EOR             W20, W0, #1",
                    "17": "NOP",
                    "18": "MOV             W1, #0",
                    "19": "CBNZ            W0, loc_2D44",
                    "20": "LDR             W1, [X24,#0x890]",
                    "21": "CMP             W20, W1",
                    "22": "B.HI            loc_2E1C",
                    "23": "MOV             W21, #0xB0",
                    "24": "MOV             X2, #0x40 ; '@'",
                    "25": "LDR             X3, [X24,#0x500]",
                    "26": "UMULL           X21, W20, W21",
                    "27": "LDR             X0, [X23,#0x38]",
                    "28": "ADD             X3, X3, X21",
                    "29": "MOV             W1, #0xDC0",
                    "30": "LDR             W25, [X3,#0xC]",
                    "31": "BL              kmem_cache_alloc_trace",
                    "32": "MOV             X19, X0",
                    "33": "CBZ             X0, loc_2E9C",
                    "34": "SXTW            X1, W25",
                    "35": "SBFIZ           X0, X25, #3, #0x20 ; ' '",
                    "36": "CMP             XZR, X1,LSR#61",
                    "37": "B.NE            loc_2E90",
                    "38": "MOV             W1, #0xDC0",
                    "39": "BL              __kmalloc",
                    "40": "STR             X0, [X19,#0x30]",
                    "41": "CBZ             X0, loc_2E94",
                    "42": "MOV             X2, X22",
                    "43": "ADD             X0, X19, #8",
                    "44": "ADRL            X1, aTableLock; \"&table->lock\"",
                    "45": "BL              __mutex_init",
                    "46": "STR             W25, [X19]",
                    "47": "MOV             W1, W20",
                    "48": "STR             XZR, [X19,#0x28]",
                    "49": "MOV             X0, X24",
                    "50": "BL              roce_gid_type_mask_support",
                    "51": "BL              __sw_hweight64",
                    "52": "MOV             W6, W0",
                    "53": "CBZ             W0, loc_2E00",
                    "54": "LDR             W4, [X19]",
                    "55": "MOV             W1, #0",
                    "56": "MOV             X5, #1",
                    "57": "B               loc_2DF4",
                    "58": "LDR             W2, [X19,#0x38]",
                    "59": "ADD             W1, W1, #1",
                    "60": "ORR             W2, W2, W3",
                    "61": "STR             W2, [X19,#0x38]",
                    "62": "CMP             W6, W1",
                    "63": "B.EQ            loc_2E00",
                    "64": "LSL             X3, X5, X1",
                    "65": "CMP             W4, W1",
                    "66": "B.NE            loc_2DDC",
                    "67": "LDR             X0, [X24,#0x500]",
                    "68": "ADD             W20, W20, #1",
                    "69": "ADD             X0, X0, X21",
                    "70": "STR             X19, [X0,#0x40]",
                    "71": "LDR             X0, [X24,#0x888]",
                    "72": "UBFX            X0, X0, #0x20, #1 ; ' '",
                    "73": "B               loc_2D38",
                    "74": "MOV             X0, X24",
                    "75": "BL              rdma_roce_rescan_device",
                    "76": "LDR             X4, [X24,#0x888]",
                    "77": "UBFX            X4, X4, #0x20, #1 ; ' '",
                    "78": "EOR             W19, W4, #1",
                    "79": "MOV             W3, #1",
                    "80": "MOV             W1, W19",
                    "81": "MOV             X0, X24",
                    "82": "MOV             W2, W3",
                    "83": "CBNZ            W4, loc_2E74",
                    "84": "LDR             W4, [X24,#0x890]",
                    "85": "CMP             W19, W4",
                    "86": "B.HI            loc_2EC4",
                    "87": "CBNZ            W19, loc_2E78",
                    "88": "MOV             W0, #0xFFFFFFEA",
                    "89": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "90": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "91": "LDP             X23, X24, [SP,#0x50+var_20]",
                    "92": "LDR             X25, [SP,#0x50+var_10]",
                    "93": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "94": "AUTIASP",
                    "95": "RET",
                    "96": "CBNZ            W19, loc_2EC4",
                    "97": "ADD             W19, W19, #1",
                    "98": "BL              ib_cache_update.part.0",
                    "99": "CBNZ            W0, loc_2E58",
                    "100": "LDR             X4, [X24,#0x888]",
                    "101": "UBFX            X4, X4, #0x20, #1 ; ' '",
                    "102": "B               loc_2E30",
                    "103": "STR             XZR, [X19,#0x30]",
                    "104": "MOV             X0, X19",
                    "105": "BL              kfree",
                    "106": "MOV             X0, X24",
                    "107": "BL              gid_table_release_one",
                    "108": "MOV             W0, #0xFFFFFFF4",
                    "109": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "110": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "111": "LDP             X23, X24, [SP,#0x50+var_20]",
                    "112": "LDR             X25, [SP,#0x50+var_10]",
                    "113": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "114": "AUTIASP",
                    "115": "RET",
                    "116": "MOV             W0, #0",
                    "117": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "118": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "119": "LDP             X23, X24, [SP,#0x50+var_20]",
                    "120": "LDR             X25, [SP,#0x50+var_10]",
                    "121": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "122": "AUTIASP",
                    "123": "RET"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r14, rdi",
                    "8": "mov     eax, [rdi+884h]",
                    "9": "mov     r12d, eax",
                    "10": "not     r12d",
                    "11": "and     r12d, 1",
                    "12": "mov     r15d, 8",
                    "13": "jmp     short INSTR18",
                    "14": "mov     rax, [r14+500h]",
                    "15": "mov     [rax+r13+40h], rbx",
                    "16": "add     r12d, 1",
                    "17": "mov     al, [r14+884h]",
                    "18": "mov     ecx, 0",
                    "19": "test    al, 1",
                    "20": "jnz     short INSTR22",
                    "21": "mov     ecx, [r14+888h]",
                    "22": "cmp     r12d, ecx",
                    "23": "ja      INSTR70",
                    "24": "mov     rax, [r14+500h]",
                    "25": "mov     ecx, r12d",
                    "26": "imul    r13, rcx, 0B0h",
                    "27": "mov     ebp, [rax+r13+0Ch]",
                    "28": "mov     rdi, qword ptr cs:kmalloc_caches+30h",
                    "29": "mov     edx, 40h ; '@'",
                    "30": "mov     esi, 0DC0h",
                    "31": "call    kmem_cache_alloc_trace; PIC mode",
                    "32": "test    rax, rax",
                    "33": "jz      INSTR97",
                    "34": "mov     rbx, rax",
                    "35": "movsxd  rax, ebp",
                    "36": "mul     r15",
                    "37": "jo      INSTR94",
                    "38": "mov     rdi, rax",
                    "39": "mov     esi, 0DC0h",
                    "40": "call    __kmalloc; PIC mode",
                    "41": "mov     [rbx+30h], rax",
                    "42": "test    rax, rax",
                    "43": "jz      INSTR95",
                    "44": "mov     rdi, rbx",
                    "45": "add     rdi, 8",
                    "46": "mov     rsi, offset aTableLock; \"&table->lock\"",
                    "47": "mov     rdx, offset alloc_gid_table___key",
                    "48": "call    __mutex_init; PIC mode",
                    "49": "mov     [rbx], ebp",
                    "50": "mov     qword ptr [rbx+28h], 0",
                    "51": "mov     rdi, r14",
                    "52": "mov     esi, r12d",
                    "53": "call    roce_gid_type_mask_support; PIC mode",
                    "54": "mov     rdi, rax",
                    "55": "call    __sw_hweight64; PIC mode",
                    "56": "test    eax, eax",
                    "57": "jz      INSTR14",
                    "58": "mov     edx, [rbx]",
                    "59": "mov     eax, eax",
                    "60": "xor     ecx, ecx",
                    "61": "cmp     rdx, rcx",
                    "62": "jz      INSTR14",
                    "63": "mov     esi, 1",
                    "64": "shl     rsi, cl",
                    "65": "or      [rbx+38h], esi",
                    "66": "add     rcx, 1",
                    "67": "cmp     rax, rcx",
                    "68": "jnz     short INSTR61",
                    "69": "jmp     INSTR14",
                    "70": "mov     rdi, r14",
                    "71": "call    rdma_roce_rescan_device; PIC mode",
                    "72": "mov     ecx, [r14+884h]",
                    "73": "mov     ebx, ecx",
                    "74": "not     ebx",
                    "75": "and     ebx, 1",
                    "76": "xor     eax, eax",
                    "77": "mov     edx, 0",
                    "78": "test    cl, 1",
                    "79": "jnz     short INSTR81",
                    "80": "mov     edx, [r14+888h]",
                    "81": "cmp     ebx, edx",
                    "82": "ja      short INSTR100",
                    "83": "mov     rdi, r14",
                    "84": "mov     esi, ebx",
                    "85": "mov     edx, 1",
                    "86": "mov     ecx, 1",
                    "87": "mov     r8d, 1",
                    "88": "call    ib_cache_update",
                    "89": "test    eax, eax",
                    "90": "jnz     short INSTR100",
                    "91": "add     ebx, 1",
                    "92": "movzx   ecx, byte ptr [r14+884h]",
                    "93": "jmp     short INSTR76",
                    "94": "mov     qword ptr [rbx+30h], 0",
                    "95": "mov     rdi, rbx",
                    "96": "call    kfree; PIC mode",
                    "97": "mov     rdi, r14",
                    "98": "call    gid_table_release_one",
                    "99": "mov     eax, 0FFFFFFF4h",
                    "100": "pop     rbx",
                    "101": "pop     r12",
                    "102": "pop     r13",
                    "103": "pop     r14",
                    "104": "pop     r15",
                    "105": "pop     rbp",
                    "106": "retn"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "mov     r14, rdi",
                    "4": "push    r13",
                    "5": "mov     r13d, 1",
                    "6": "push    r12",
                    "7": "push    rbp",
                    "8": "push    rbx",
                    "9": "movzx   eax, byte ptr [rdi+884h]",
                    "10": "and     eax, 1",
                    "11": "mov     ebx, eax",
                    "12": "xor     ebx, 1",
                    "13": "movzx   ebx, bl",
                    "14": "xor     edx, edx",
                    "15": "test    al, al",
                    "16": "jnz     short INSTR18",
                    "17": "mov     edx, [r14+888h]",
                    "18": "cmp     ebx, edx",
                    "19": "ja      INSTR73",
                    "20": "mov     eax, ebx",
                    "21": "mov     rdi, qword ptr cs:kmalloc_caches+30h",
                    "22": "mov     esi, 0DC0h",
                    "23": "lea     rdx, [rax+rax*4]",
                    "24": "lea     r12, [rax+rdx*2]",
                    "25": "mov     rax, [r14+500h]",
                    "26": "mov     edx, 40h ; '@'",
                    "27": "shl     r12, 4",
                    "28": "mov     r15d, [rax+r12+0Ch]",
                    "29": "call    kmem_cache_alloc_trace; PIC mode",
                    "30": "mov     rbp, rax",
                    "31": "test    rax, rax",
                    "32": "jz      INSTR110",
                    "33": "movsxd  rax, r15d",
                    "34": "lea     rdi, ds:0[rax*8]",
                    "35": "shr     rax, 3Dh",
                    "36": "jnz     INSTR107",
                    "37": "mov     esi, 0DC0h",
                    "38": "call    __kmalloc; PIC mode",
                    "39": "mov     [rbp+30h], rax",
                    "40": "test    rax, rax",
                    "41": "jz      INSTR108",
                    "42": "lea     rdi, [rbp+8]",
                    "43": "mov     rdx, offset __key_0; \"zgid\"",
                    "44": "mov     rsi, offset aTableLock; \"&table->lock\"",
                    "45": "call    __mutex_init; PIC mode",
                    "46": "mov     esi, ebx",
                    "47": "mov     rdi, r14",
                    "48": "mov     [rbp+0], r15d",
                    "49": "mov     qword ptr [rbp+28h], 0",
                    "50": "call    roce_gid_type_mask_support; PIC mode",
                    "51": "mov     rdi, rax",
                    "52": "call    __sw_hweight64; PIC mode",
                    "53": "mov     esi, eax",
                    "54": "test    eax, eax",
                    "55": "jz      short INSTR67",
                    "56": "mov     edx, [rbp+0]",
                    "57": "xor     ecx, ecx",
                    "58": "jmp     short INSTR65",
                    "59": "mov     rax, r13",
                    "60": "shl     rax, cl",
                    "61": "add     ecx, 1",
                    "62": "or      [rbp+38h], eax",
                    "63": "cmp     esi, ecx",
                    "64": "jz      short INSTR67",
                    "65": "cmp     edx, ecx",
                    "66": "jnz     short INSTR59",
                    "67": "mov     rax, [r14+500h]",
                    "68": "add     ebx, 1",
                    "69": "mov     [rax+r12+40h], rbp",
                    "70": "movzx   eax, byte ptr [r14+884h]",
                    "71": "and     eax, 1",
                    "72": "jmp     INSTR14",
                    "73": "mov     rdi, r14",
                    "74": "call    rdma_roce_rescan_device; PIC mode",
                    "75": "movzx   eax, byte ptr [r14+884h]",
                    "76": "and     eax, 1",
                    "77": "mov     ebx, eax",
                    "78": "xor     ebx, 1",
                    "79": "movzx   ebx, bl",
                    "80": "test    al, al",
                    "81": "jnz     short INSTR94",
                    "82": "cmp     ebx, [r14+888h]",
                    "83": "ja      short INSTR120",
                    "84": "test    ebx, ebx",
                    "85": "jnz     short INSTR96",
                    "86": "mov     eax, 0FFFFFFEAh",
                    "87": "pop     rbx",
                    "88": "pop     rbp",
                    "89": "pop     r12",
                    "90": "pop     r13",
                    "91": "pop     r14",
                    "92": "pop     r15",
                    "93": "jmp     __x86_return_thunk; PIC mode",
                    "94": "test    ebx, ebx",
                    "95": "jnz     short INSTR120",
                    "96": "mov     ecx, 1",
                    "97": "mov     edx, 1",
                    "98": "mov     esi, ebx",
                    "99": "mov     rdi, r14",
                    "100": "call    ib_cache_update_part_0",
                    "101": "test    eax, eax",
                    "102": "jnz     short INSTR87",
                    "103": "movzx   eax, byte ptr [r14+884h]",
                    "104": "add     ebx, 1",
                    "105": "and     eax, 1",
                    "106": "jmp     short INSTR80",
                    "107": "mov     qword ptr [rbp+30h], 0",
                    "108": "mov     rdi, rbp",
                    "109": "call    __imp_kfree; PIC mode",
                    "110": "mov     rdi, r14",
                    "111": "call    gid_table_release_one",
                    "112": "mov     eax, 0FFFFFFF4h",
                    "113": "pop     rbx",
                    "114": "pop     rbp",
                    "115": "pop     r12",
                    "116": "pop     r13",
                    "117": "pop     r14",
                    "118": "pop     r15",
                    "119": "jmp     __x86_return_thunk; PIC mode",
                    "120": "pop     rbx",
                    "121": "xor     eax, eax",
                    "122": "pop     rbp",
                    "123": "pop     r12",
                    "124": "pop     r13",
                    "125": "pop     r14",
                    "126": "pop     r15",
                    "127": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "cache.ib_cache_setup_one.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r14",
                    "2": "push    r13",
                    "3": "push    r12",
                    "4": "push    rbp",
                    "5": "mov     rbp, rdi",
                    "6": "push    rbx",
                    "7": "mov     bl, [rdi+87Ch]",
                    "8": "and     ebx, 1",
                    "9": "xor     ebx, 1",
                    "10": "movzx   ebx, bl",
                    "11": "xor     eax, eax",
                    "12": "test    byte ptr [rbp+87Ch], 1",
                    "13": "jnz     short INSTR15",
                    "14": "mov     eax, [rbp+880h]",
                    "15": "cmp     ebx, eax",
                    "16": "ja      INSTR74",
                    "17": "mov     r13d, ebx",
                    "18": "mov     edx, 40h ; '@'",
                    "19": "mov     esi, 0DC0h",
                    "20": "mov     rax, [rbp+500h]",
                    "21": "imul    r13, 0B0h",
                    "22": "mov     rdi, qword ptr cs:kmalloc_caches+30h",
                    "23": "mov     r14d, [rax+r13+0Ch]",
                    "24": "call    kmem_cache_alloc_trace; PIC mode",
                    "25": "mov     r12, rax",
                    "26": "test    rax, rax",
                    "27": "jz      short INSTR58",
                    "28": "movsxd  rdi, r14d",
                    "29": "mov     edx, 8",
                    "30": "mov     rax, rdi",
                    "31": "mul     rdx",
                    "32": "mov     rdi, rax",
                    "33": "jo      short INSTR40",
                    "34": "mov     esi, 0DC0h",
                    "35": "call    __kmalloc; PIC mode",
                    "36": "mov     [r12+30h], rax",
                    "37": "test    rax, rax",
                    "38": "jnz     short INSTR44",
                    "39": "jmp     short INSTR41",
                    "40": "mov     qword ptr [r12+30h], 0",
                    "41": "mov     rdi, r12",
                    "42": "call    kfree; PIC mode",
                    "43": "jmp     short INSTR58",
                    "44": "mov     rdx, offset __key_0; \"zgid\"",
                    "45": "lea     rdi, [r12+8]",
                    "46": "mov     rsi, offset aTableLock; \"&table->lock\"",
                    "47": "call    __mutex_init; PIC mode",
                    "48": "mov     rdi, rbp",
                    "49": "mov     esi, ebx",
                    "50": "mov     [r12], r14d",
                    "51": "mov     qword ptr [r12+28h], 0",
                    "52": "call    roce_gid_type_mask_support; PIC mode",
                    "53": "xor     ecx, ecx",
                    "54": "mov     edx, 1",
                    "55": "mov     rdi, rax",
                    "56": "call    __sw_hweight64; PIC mode",
                    "57": "jmp     short INSTR68",
                    "58": "mov     rdi, rbp",
                    "59": "call    gid_table_release_one",
                    "60": "mov     eax, 0FFFFFFF4h",
                    "61": "jmp     short INSTR96",
                    "62": "cmp     ecx, [r12]",
                    "63": "jnb     short INSTR70",
                    "64": "mov     rsi, rdx",
                    "65": "shl     rsi, cl",
                    "66": "or      [r12+38h], esi",
                    "67": "inc     ecx",
                    "68": "cmp     eax, ecx",
                    "69": "jnz     short INSTR62",
                    "70": "mov     rax, [rbp+500h]",
                    "71": "inc     ebx",
                    "72": "mov     [rax+r13+40h], r12",
                    "73": "jmp     INSTR11",
                    "74": "mov     rdi, rbp",
                    "75": "call    rdma_roce_rescan_device; PIC mode",
                    "76": "mov     bl, [rbp+87Ch]",
                    "77": "and     ebx, 1",
                    "78": "xor     ebx, 1",
                    "79": "movzx   ebx, bl",
                    "80": "xor     eax, eax",
                    "81": "test    byte ptr [rbp+87Ch], 1",
                    "82": "jnz     short INSTR84",
                    "83": "mov     eax, [rbp+880h]",
                    "84": "cmp     ebx, eax",
                    "85": "ja      short INSTR95",
                    "86": "mov     ecx, 1",
                    "87": "mov     edx, 1",
                    "88": "mov     esi, ebx",
                    "89": "mov     rdi, rbp",
                    "90": "call    ib_cache_update_constprop_0",
                    "91": "test    eax, eax",
                    "92": "jnz     short INSTR96",
                    "93": "inc     ebx",
                    "94": "jmp     short INSTR80",
                    "95": "xor     eax, eax",
                    "96": "pop     rbx",
                    "97": "pop     rbp",
                    "98": "pop     r12",
                    "99": "pop     r13",
                    "100": "pop     r14",
                    "101": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47694",
        "files": [
            {
                "filename": "umr.mlx5r_umr_cleanup.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "mov     eax, [eax+720h]",
                    "2": "test    eax, eax",
                    "3": "jz      short INSTR14",
                    "4": "push    ebp",
                    "5": "xor     edx, edx",
                    "6": "mov     ebp, esp",
                    "7": "sub     esp, 4",
                    "8": "call    ib_dealloc_pd_user",
                    "9": "test    eax, eax",
                    "10": "jnz     short INSTR15",
                    "11": "mov     esp, ebp",
                    "12": "pop     ebp",
                    "13": "retn",
                    "14": "retn",
                    "15": "cmp     ds:__already_done_5, 0",
                    "16": "nop",
                    "17": "jnz     short INSTR11",
                    "18": "mov     [esp+4+var_4], offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "19": "mov     al, 1",
                    "20": "mov     ds:__already_done_5, al",
                    "21": "call    __warn_printk",
                    "22": "ud2"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "LDR             X0, [X0,#0xB98]",
                    "2": "CBZ             X0, locret_E0C",
                    "3": "PACIASP",
                    "4": "STP             X29, X30, [SP,#-0x10+var_s0]!",
                    "5": "MOV             X1, #0",
                    "6": "MOV             X29, SP",
                    "7": "BL              ib_dealloc_pd_user",
                    "8": "CBNZ            W0, loc_E10",
                    "9": "LDP             X29, X30, [SP+var_s0],#0x10",
                    "10": "AUTIASP",
                    "11": "RET",
                    "12": "RET",
                    "13": "ADRL            X1, __already_done.6",
                    "14": "LDRB            W0, [X1,#(__already_done.5 - 0x1A39)]",
                    "15": "CBNZ            W0, loc_E00",
                    "16": "MOV             W2, #1",
                    "17": "ADRL            X0, aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "18": "STRB            W2, [X1,#(__already_done.5 - 0x1A39)]",
                    "19": "BL              __warn_printk",
                    "20": "BRK             #0x800",
                    "21": "B               loc_E00"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "mov     rdi, [rdi+0B90h]",
                    "2": "test    rdi, rdi",
                    "3": "jz      short INSTR10",
                    "4": "xor     esi, esi",
                    "5": "call    ib_dealloc_pd_user; PIC mode",
                    "6": "test    eax, eax",
                    "7": "jz      short INSTR10",
                    "8": "test    cs:ib_dealloc_pd___already_done, 1",
                    "9": "jz      short INSTR11",
                    "10": "retn",
                    "11": "mov     cs:ib_dealloc_pd___already_done, 1",
                    "12": "mov     rdi, offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "13": "call    __warn_printk; PIC mode",
                    "14": "ud2"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "mov     rdi, [rdi+0B90h]",
                    "2": "test    rdi, rdi",
                    "3": "jz      short INSTR8",
                    "4": "xor     esi, esi",
                    "5": "call    ib_dealloc_pd_user; PIC mode",
                    "6": "test    eax, eax",
                    "7": "jnz     short INSTR9",
                    "8": "jmp     __imp___x86_return_thunk; PIC mode",
                    "9": "cmp     cs:__already_done_5, 0",
                    "10": "jnz     short INSTR8",
                    "11": "mov     rdi, offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "12": "mov     cs:__already_done_5, 1",
                    "13": "call    __warn_printk; PIC mode",
                    "14": "ud2"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "mov     rdi, [rdi+0B98h]",
                    "3": "test    rdi, rdi",
                    "4": "jz      short INSTR15",
                    "5": "xor     esi, esi",
                    "6": "call    ib_dealloc_pd_user; PIC mode",
                    "7": "test    eax, eax",
                    "8": "jz      short INSTR15",
                    "9": "cmp     cs:__already_done_5, 0",
                    "10": "jnz     short INSTR15",
                    "11": "mov     rdi, offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "12": "mov     cs:__already_done_5, 1",
                    "13": "call    __warn_printk; PIC mode",
                    "14": "ud2",
                    "15": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "xor     edx, edx",
                    "3": "mov     ebp, esp",
                    "4": "sub     esp, 4",
                    "5": "mov     eax, [eax+720h]",
                    "6": "call    ib_dealloc_pd_user",
                    "7": "test    eax, eax",
                    "8": "jnz     short INSTR12",
                    "9": "mov     esp, ebp",
                    "10": "pop     ebp",
                    "11": "retn",
                    "12": "cmp     ds:__already_done_5, 0",
                    "13": "jnz     short INSTR9",
                    "14": "mov     dword ptr [esp], offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "15": "mov     al, 1",
                    "16": "mov     ds:__already_done_5, al",
                    "17": "call    __warn_printk",
                    "18": "ud2"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x10+var_s0]!",
                    "3": "MOV             X1, #0",
                    "4": "MOV             X29, SP",
                    "5": "LDR             X0, [X0,#0xB98]",
                    "6": "BL              ib_dealloc_pd_user",
                    "7": "CBNZ            W0, loc_E08",
                    "8": "LDP             X29, X30, [SP+var_s0],#0x10",
                    "9": "AUTIASP",
                    "10": "RET",
                    "11": "ADRL            X1, __already_done.6",
                    "12": "LDRB            W0, [X1,#(__already_done.5 - 0x1A39)]",
                    "13": "CBNZ            W0, loc_DFC",
                    "14": "MOV             W2, #1",
                    "15": "ADRL            X0, aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "16": "STRB            W2, [X1,#(__already_done.5 - 0x1A39)]",
                    "17": "BL              __warn_printk",
                    "18": "BRK             #0x800",
                    "19": "LDP             X29, X30, [SP+var_s0],#0x10",
                    "20": "AUTIASP",
                    "21": "RET"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "mov     rdi, [rdi+0B90h]",
                    "2": "xor     esi, esi",
                    "3": "call    ib_dealloc_pd_user; PIC mode",
                    "4": "test    eax, eax",
                    "5": "jz      short INSTR8",
                    "6": "test    cs:ib_dealloc_pd___already_done, 1",
                    "7": "jz      short INSTR9",
                    "8": "retn",
                    "9": "mov     cs:ib_dealloc_pd___already_done, 1",
                    "10": "mov     rdi, offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "11": "call    __warn_printk; PIC mode",
                    "12": "ud2"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "mov     rdi, [rdi+0B90h]",
                    "2": "xor     esi, esi",
                    "3": "call    ib_dealloc_pd_user; PIC mode",
                    "4": "test    eax, eax",
                    "5": "jnz     short INSTR7",
                    "6": "jmp     __imp___x86_return_thunk; PIC mode",
                    "7": "cmp     cs:__already_done_5, 0",
                    "8": "jnz     short INSTR6",
                    "9": "mov     rdi, offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "10": "mov     cs:__already_done_5, 1",
                    "11": "call    __warn_printk; PIC mode",
                    "12": "ud2"
                }
            },
            {
                "filename": "umr.mlx5r_umr_cleanup.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "mov     rdi, [rdi+0B98h]",
                    "3": "xor     esi, esi",
                    "4": "call    ib_dealloc_pd_user; PIC mode",
                    "5": "test    eax, eax",
                    "6": "jz      short INSTR13",
                    "7": "cmp     cs:__already_done_5, 0",
                    "8": "jnz     short INSTR13",
                    "9": "mov     rdi, offset aDestroyOfKerne; \"Destroy of kernel PD shouldn't fail\"",
                    "10": "mov     cs:__already_done_5, 1",
                    "11": "call    __warn_printk; PIC mode",
                    "12": "ud2",
                    "13": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47720",
        "files": [
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "sub     esp, 30h",
                    "4": "mov     [ebp+var_C], ebx",
                    "5": "mov     [ebp+var_8], esi",
                    "6": "mov     [ebp+var_4], edi",
                    "7": "mov     [ebp+var_18], ecx",
                    "8": "mov     eax, [edx+0ACh]",
                    "9": "mov     eax, [eax+7Ch]",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "mov     eax, [edx+0C8h]",
                    "12": "mov     eax, [eax]",
                    "13": "mov     eax, [eax]",
                    "14": "mov     eax, [eax+380h]",
                    "15": "mov     esi, [eax+0DCh]",
                    "16": "mov     eax, [edx+250h]",
                    "17": "mov     [ebp+var_1C], eax",
                    "18": "test    eax, eax",
                    "19": "jz      short INSTR37",
                    "20": "mov     byte ptr [ebp+var_14], 0",
                    "21": "mov     eax, [esi]",
                    "22": "mov     edi, [eax+48h]",
                    "23": "xor     eax, eax",
                    "24": "test    edi, edi",
                    "25": "jz      INSTR85",
                    "26": "mov     ecx, eax",
                    "27": "mov     edx, [ebp+var_10]",
                    "28": "mov     eax, esi",
                    "29": "call    __x86_indirect_thunk_edi",
                    "30": "movzx   eax, byte ptr [ebp+var_14]",
                    "31": "mov     ebx, [ebp+var_C]",
                    "32": "mov     esi, [ebp+var_8]",
                    "33": "mov     edi, [ebp+var_4]",
                    "34": "mov     esp, ebp",
                    "35": "pop     ebp",
                    "36": "retn",
                    "37": "mov     eax, [ebp+var_18]",
                    "38": "mov     ebx, edx",
                    "39": "mov     eax, [eax+4CCh]",
                    "40": "mov     [ebp+var_14], eax",
                    "41": "test    eax, eax",
                    "42": "jz      short INSTR49",
                    "43": "mov     eax, [eax+4]",
                    "44": "cmp     eax, 3",
                    "45": "jz      INSTR164",
                    "46": "dec     eax",
                    "47": "jz      INSTR175",
                    "48": "mov     [ebp+var_14], 0",
                    "49": "mov     eax, [ebp+var_18]",
                    "50": "mov     eax, [eax+4D0h]",
                    "51": "test    eax, eax",
                    "52": "jz      short INSTR58",
                    "53": "movzx   edx, byte ptr [eax+0E65Ch]",
                    "54": "mov     cl, dl",
                    "55": "and     cl, 3",
                    "56": "cmp     cl, 3",
                    "57": "jz      INSTR92",
                    "58": "mov     eax, [esi]",
                    "59": "mov     edx, [ebp+var_10]",
                    "60": "mov     ecx, [eax+70h]",
                    "61": "mov     eax, esi",
                    "62": "call    __x86_indirect_thunk_ecx",
                    "63": "mov     eax, [esi]",
                    "64": "mov     edi, [eax+48h]",
                    "65": "test    edi, edi",
                    "66": "jz      short INSTR83",
                    "67": "mov     eax, [ebp+var_18]",
                    "68": "mov     eax, [eax+248h]",
                    "69": "test    eax, eax",
                    "70": "jz      short INSTR90",
                    "71": "mov     edx, [eax+4]",
                    "72": "cmp     edx, 3",
                    "73": "jz      INSTR184",
                    "74": "mov     ecx, [ebx+4]",
                    "75": "mov     ecx, [ecx+248h]",
                    "76": "cmp     dword ptr [ecx+4], 1",
                    "77": "jz      INSTR205",
                    "78": "test    edx, edx",
                    "79": "jz      INSTR187",
                    "80": "mov     byte ptr [ebp+var_14], 0",
                    "81": "xor     eax, eax",
                    "82": "jmp     INSTR26",
                    "83": "mov     byte ptr [ebp+var_14], 0",
                    "84": "lea     esi, [esi+0]",
                    "85": "mov     dword ptr [esp], offset aSSetOutputGamm; \"%s: set_output_gamma function pointer i\"...",
                    "86": "mov     eax, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "87": "mov     [esp+4], eax",
                    "88": "call    __drm_err",
                    "89": "jmp     INSTR30",
                    "90": "mov     byte ptr [ebp+var_14], 0",
                    "91": "jmp     INSTR26",
                    "92": "and     dl, 1Ch",
                    "93": "jnz     INSTR166",
                    "94": "movzx   ecx, word ptr [eax+0E65Ch]",
                    "95": "shr     ecx, 5",
                    "96": "and     ecx, 0Fh",
                    "97": "cmp     [ebp+var_10], ecx",
                    "98": "jz      short INSTR109",
                    "99": "mov     dword ptr [esp], 2",
                    "100": "mov     eax, 7Dh ; '}'",
                    "101": "mov     edx, offset aSD; \"%s():%d\\n\"",
                    "102": "mov     [esp+0Ch], eax",
                    "103": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "104": "mov     [esp+8], eax",
                    "105": "mov     [esp+4], edx",
                    "106": "call    __drm_dbg",
                    "107": "mov     eax, [ebp+var_18]",
                    "108": "mov     eax, [eax+4D0h]",
                    "109": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "110": "mov     eax, [esi]",
                    "111": "mov     edx, [ebp+var_10]",
                    "112": "shr     cl, 2",
                    "113": "and     cl, 7",
                    "114": "mov     edi, [eax+68h]",
                    "115": "mov     eax, esi",
                    "116": "movzx   ecx, cl",
                    "117": "call    __x86_indirect_thunk_edi",
                    "118": "mov     edx, [ebp+var_18]",
                    "119": "mov     edx, [edx+4D0h]",
                    "120": "mov     edi, eax",
                    "121": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "122": "shr     al, 2",
                    "123": "and     al, 7",
                    "124": "movzx   ecx, al",
                    "125": "cmp     edi, ecx",
                    "126": "jz      short INSTR141",
                    "127": "mov     dword ptr [esp], 2",
                    "128": "mov     eax, 82h",
                    "129": "mov     [esp+0Ch], eax",
                    "130": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "131": "mov     [esp+8], eax",
                    "132": "mov     eax, offset aSD; \"%s():%d\\n\"",
                    "133": "mov     [esp+4], eax",
                    "134": "call    __drm_dbg",
                    "135": "mov     edx, [ebp+var_18]",
                    "136": "mov     edx, [edx+4D0h]",
                    "137": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "138": "shr     al, 2",
                    "139": "and     al, 7",
                    "140": "movzx   ecx, al",
                    "141": "mov     eax, [esi]",
                    "142": "add     edx, 4",
                    "143": "mov     edi, [eax+6Ch]",
                    "144": "mov     eax, esi",
                    "145": "call    __x86_indirect_thunk_edi",
                    "146": "mov     eax, [ebp+var_18]",
                    "147": "mov     edx, [ebp+var_14]",
                    "148": "mov     eax, [eax+4D0h]",
                    "149": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "150": "mov     eax, [esi]",
                    "151": "shr     cl, 2",
                    "152": "and     cl, 7",
                    "153": "mov     edi, [eax+64h]",
                    "154": "mov     eax, esi",
                    "155": "movzx   ecx, cl",
                    "156": "call    __x86_indirect_thunk_edi",
                    "157": "mov     byte ptr [ebp+var_14], al",
                    "158": "test    al, al",
                    "159": "jz      INSTR63",
                    "160": "mov     eax, [esi]",
                    "161": "mov     edi, [eax+48h]",
                    "162": "xor     eax, eax",
                    "163": "jmp     INSTR24",
                    "164": "add     [ebp+var_14], 10h",
                    "165": "jmp     INSTR49",
                    "166": "cmp     dl, 4",
                    "167": "jz      INSTR200",
                    "168": "xor     ecx, ecx",
                    "169": "cmp     dl, 8",
                    "170": "jnz     INSTR97",
                    "171": "mov     ecx, [eax+0E65Ch]",
                    "172": "shr     ecx, 0Dh",
                    "173": "and     ecx, 0Fh",
                    "174": "jmp     INSTR97",
                    "175": "mov     eax, [edx+0BCh]",
                    "176": "mov     ecx, 1",
                    "177": "lea     edx, [eax+9630h]",
                    "178": "mov     eax, [ebp+var_14]",
                    "179": "mov     [ebp+var_20], edx",
                    "180": "call    cm_helper_translate_curve_to_hw_format",
                    "181": "mov     edx, [ebp+var_20]",
                    "182": "mov     [ebp+var_14], edx",
                    "183": "jmp     INSTR49",
                    "184": "mov     byte ptr [ebp+var_14], 0",
                    "185": "add     eax, 10h",
                    "186": "jmp     INSTR26",
                    "187": "mov     edx, 0D3h",
                    "188": "mov     ecx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "189": "mov     [esp+0Ch], edx",
                    "190": "mov     ebx, offset aSD; \"%s():%d\\n\"",
                    "191": "mov     [esp+8], ecx",
                    "192": "mov     [esp+4], ebx",
                    "193": "mov     dword ptr [esp], 2",
                    "194": "call    __drm_dbg",
                    "195": "mov     eax, [esi]",
                    "196": "mov     byte ptr [ebp+var_14], 0",
                    "197": "mov     edi, [eax+48h]",
                    "198": "mov     eax, [ebp+var_1C]",
                    "199": "jmp     INSTR24",
                    "200": "movzx   ecx, byte ptr [eax+0E65Dh]",
                    "201": "shr     cl, 1",
                    "202": "and     cl, 0Fh",
                    "203": "movzx   ecx, cl",
                    "204": "jmp     INSTR97",
                    "205": "lea     ebx, [esi+200h]",
                    "206": "xor     ecx, ecx",
                    "207": "mov     edx, ebx",
                    "208": "call    cm3_helper_translate_curve_to_hw_format",
                    "209": "test    al, al",
                    "210": "mov     eax, [ebp+var_18]",
                    "211": "cmovz   ebx, [ebp+var_1C]",
                    "212": "mov     [ebp+var_1C], ebx",
                    "213": "mov     eax, [eax+248h]",
                    "214": "mov     edi, [eax+4]",
                    "215": "test    edi, edi",
                    "216": "jz      short INSTR187",
                    "217": "mov     byte ptr [ebp+var_14], 0",
                    "218": "mov     eax, [esi]",
                    "219": "mov     edi, [eax+48h]",
                    "220": "mov     eax, ebx",
                    "221": "jmp     INSTR24"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "sub     esp, 30h",
                    "4": "mov     [ebp+var_C], ebx",
                    "5": "mov     [ebp+var_8], esi",
                    "6": "mov     [ebp+var_4], edi",
                    "7": "mov     [ebp+var_18], ecx",
                    "8": "mov     eax, [edx+0ACh]",
                    "9": "mov     eax, [eax+7Ch]",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "mov     eax, [edx+0C8h]",
                    "12": "mov     eax, [eax]",
                    "13": "mov     eax, [eax]",
                    "14": "mov     eax, [eax+380h]",
                    "15": "mov     esi, [eax+0DCh]",
                    "16": "mov     eax, [edx+250h]",
                    "17": "mov     [ebp+var_1C], eax",
                    "18": "test    eax, eax",
                    "19": "jz      short INSTR37",
                    "20": "mov     byte ptr [ebp+var_14], 0",
                    "21": "mov     eax, [esi]",
                    "22": "mov     edi, [eax+48h]",
                    "23": "xor     eax, eax",
                    "24": "test    edi, edi",
                    "25": "jz      INSTR85",
                    "26": "mov     ecx, eax",
                    "27": "mov     edx, [ebp+var_10]",
                    "28": "mov     eax, esi",
                    "29": "call    __x86_indirect_thunk_edi",
                    "30": "movzx   eax, byte ptr [ebp+var_14]",
                    "31": "mov     ebx, [ebp+var_C]",
                    "32": "mov     esi, [ebp+var_8]",
                    "33": "mov     edi, [ebp+var_4]",
                    "34": "mov     esp, ebp",
                    "35": "pop     ebp",
                    "36": "retn",
                    "37": "mov     eax, [ebp+var_18]",
                    "38": "mov     ebx, edx",
                    "39": "mov     eax, [eax+4CCh]",
                    "40": "mov     [ebp+var_14], eax",
                    "41": "test    eax, eax",
                    "42": "jz      short INSTR49",
                    "43": "mov     eax, [eax+4]",
                    "44": "cmp     eax, 3",
                    "45": "jz      INSTR164",
                    "46": "dec     eax",
                    "47": "jz      INSTR175",
                    "48": "mov     [ebp+var_14], 0",
                    "49": "mov     eax, [ebp+var_18]",
                    "50": "mov     eax, [eax+4D0h]",
                    "51": "test    eax, eax",
                    "52": "jz      short INSTR58",
                    "53": "movzx   edx, byte ptr [eax+0E65Ch]",
                    "54": "mov     cl, dl",
                    "55": "and     cl, 3",
                    "56": "cmp     cl, 3",
                    "57": "jz      INSTR92",
                    "58": "mov     eax, [esi]",
                    "59": "mov     edx, [ebp+var_10]",
                    "60": "mov     ecx, [eax+70h]",
                    "61": "mov     eax, esi",
                    "62": "call    __x86_indirect_thunk_ecx",
                    "63": "mov     eax, [esi]",
                    "64": "mov     edi, [eax+48h]",
                    "65": "test    edi, edi",
                    "66": "jz      short INSTR83",
                    "67": "mov     eax, [ebp+var_18]",
                    "68": "mov     eax, [eax+248h]",
                    "69": "test    eax, eax",
                    "70": "jz      short INSTR90",
                    "71": "mov     edx, [eax+4]",
                    "72": "cmp     edx, 3",
                    "73": "jz      INSTR184",
                    "74": "mov     ecx, [ebx+4]",
                    "75": "mov     ecx, [ecx+248h]",
                    "76": "cmp     dword ptr [ecx+4], 1",
                    "77": "jz      INSTR205",
                    "78": "test    edx, edx",
                    "79": "jz      INSTR187",
                    "80": "mov     byte ptr [ebp+var_14], 0",
                    "81": "xor     eax, eax",
                    "82": "jmp     INSTR26",
                    "83": "mov     byte ptr [ebp+var_14], 0",
                    "84": "lea     esi, [esi+0]",
                    "85": "mov     dword ptr [esp], offset aSSetOutputGamm; \"%s: set_output_gamma function pointer i\"...",
                    "86": "mov     eax, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "87": "mov     [esp+4], eax",
                    "88": "call    __drm_err",
                    "89": "jmp     INSTR30",
                    "90": "mov     byte ptr [ebp+var_14], 0",
                    "91": "jmp     INSTR26",
                    "92": "and     dl, 1Ch",
                    "93": "jnz     INSTR166",
                    "94": "movzx   ecx, word ptr [eax+0E65Ch]",
                    "95": "shr     ecx, 5",
                    "96": "and     ecx, 0Fh",
                    "97": "cmp     [ebp+var_10], ecx",
                    "98": "jz      short INSTR109",
                    "99": "mov     dword ptr [esp], 2",
                    "100": "mov     eax, 7Dh ; '}'",
                    "101": "mov     edx, offset aSD; \"%s():%d\\n\"",
                    "102": "mov     [esp+0Ch], eax",
                    "103": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "104": "mov     [esp+8], eax",
                    "105": "mov     [esp+4], edx",
                    "106": "call    __drm_dbg",
                    "107": "mov     eax, [ebp+var_18]",
                    "108": "mov     eax, [eax+4D0h]",
                    "109": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "110": "mov     eax, [esi]",
                    "111": "mov     edx, [ebp+var_10]",
                    "112": "shr     cl, 2",
                    "113": "and     cl, 7",
                    "114": "mov     edi, [eax+68h]",
                    "115": "mov     eax, esi",
                    "116": "movzx   ecx, cl",
                    "117": "call    __x86_indirect_thunk_edi",
                    "118": "mov     edx, [ebp+var_18]",
                    "119": "mov     edx, [edx+4D0h]",
                    "120": "mov     edi, eax",
                    "121": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "122": "shr     al, 2",
                    "123": "and     al, 7",
                    "124": "movzx   ecx, al",
                    "125": "cmp     edi, ecx",
                    "126": "jz      short INSTR141",
                    "127": "mov     dword ptr [esp], 2",
                    "128": "mov     eax, 82h",
                    "129": "mov     [esp+0Ch], eax",
                    "130": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "131": "mov     [esp+8], eax",
                    "132": "mov     eax, offset aSD; \"%s():%d\\n\"",
                    "133": "mov     [esp+4], eax",
                    "134": "call    __drm_dbg",
                    "135": "mov     edx, [ebp+var_18]",
                    "136": "mov     edx, [edx+4D0h]",
                    "137": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "138": "shr     al, 2",
                    "139": "and     al, 7",
                    "140": "movzx   ecx, al",
                    "141": "mov     eax, [esi]",
                    "142": "add     edx, 4",
                    "143": "mov     edi, [eax+6Ch]",
                    "144": "mov     eax, esi",
                    "145": "call    __x86_indirect_thunk_edi",
                    "146": "mov     eax, [ebp+var_18]",
                    "147": "mov     edx, [ebp+var_14]",
                    "148": "mov     eax, [eax+4D0h]",
                    "149": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "150": "mov     eax, [esi]",
                    "151": "shr     cl, 2",
                    "152": "and     cl, 7",
                    "153": "mov     edi, [eax+64h]",
                    "154": "mov     eax, esi",
                    "155": "movzx   ecx, cl",
                    "156": "call    __x86_indirect_thunk_edi",
                    "157": "mov     byte ptr [ebp+var_14], al",
                    "158": "test    al, al",
                    "159": "jz      INSTR63",
                    "160": "mov     eax, [esi]",
                    "161": "mov     edi, [eax+48h]",
                    "162": "xor     eax, eax",
                    "163": "jmp     INSTR24",
                    "164": "add     [ebp+var_14], 10h",
                    "165": "jmp     INSTR49",
                    "166": "cmp     dl, 4",
                    "167": "jz      INSTR200",
                    "168": "xor     ecx, ecx",
                    "169": "cmp     dl, 8",
                    "170": "jnz     INSTR97",
                    "171": "mov     ecx, [eax+0E65Ch]",
                    "172": "shr     ecx, 0Dh",
                    "173": "and     ecx, 0Fh",
                    "174": "jmp     INSTR97",
                    "175": "mov     eax, [edx+0BCh]",
                    "176": "mov     ecx, 1",
                    "177": "lea     edx, [eax+9630h]",
                    "178": "mov     eax, [ebp+var_14]",
                    "179": "mov     [ebp+var_20], edx",
                    "180": "call    cm_helper_translate_curve_to_hw_format",
                    "181": "mov     edx, [ebp+var_20]",
                    "182": "mov     [ebp+var_14], edx",
                    "183": "jmp     INSTR49",
                    "184": "mov     byte ptr [ebp+var_14], 0",
                    "185": "add     eax, 10h",
                    "186": "jmp     INSTR26",
                    "187": "mov     edx, 0D3h",
                    "188": "mov     ecx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "189": "mov     [esp+0Ch], edx",
                    "190": "mov     ebx, offset aSD; \"%s():%d\\n\"",
                    "191": "mov     [esp+8], ecx",
                    "192": "mov     [esp+4], ebx",
                    "193": "mov     dword ptr [esp], 2",
                    "194": "call    __drm_dbg",
                    "195": "mov     eax, [esi]",
                    "196": "mov     byte ptr [ebp+var_14], 0",
                    "197": "mov     edi, [eax+48h]",
                    "198": "mov     eax, [ebp+var_1C]",
                    "199": "jmp     INSTR24",
                    "200": "movzx   ecx, byte ptr [eax+0E65Dh]",
                    "201": "shr     cl, 1",
                    "202": "and     cl, 0Fh",
                    "203": "movzx   ecx, cl",
                    "204": "jmp     INSTR97",
                    "205": "lea     ebx, [esi+200h]",
                    "206": "xor     ecx, ecx",
                    "207": "mov     edx, ebx",
                    "208": "call    cm3_helper_translate_curve_to_hw_format",
                    "209": "test    al, al",
                    "210": "mov     eax, [ebp+var_18]",
                    "211": "cmovz   ebx, [ebp+var_1C]",
                    "212": "mov     [ebp+var_1C], ebx",
                    "213": "mov     eax, [eax+248h]",
                    "214": "mov     edi, [eax+4]",
                    "215": "test    edi, edi",
                    "216": "jz      short INSTR187",
                    "217": "mov     byte ptr [ebp+var_14], 0",
                    "218": "mov     eax, [esi]",
                    "219": "mov     edi, [eax+48h]",
                    "220": "mov     eax, ebx",
                    "221": "jmp     INSTR24"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     rax, [rsi+0B8h]",
                    "8": "mov     rcx, [rsi+0E8h]",
                    "9": "mov     r14d, [rax+88h]",
                    "10": "mov     rax, [rcx]",
                    "11": "mov     rax, [rax]",
                    "12": "mov     rax, [rax+3D8h]",
                    "13": "mov     r13, [rax+1B8h]",
                    "14": "cmp     qword ptr [rsi+290h], 0",
                    "15": "jz      short INSTR27",
                    "16": "xor     ebx, ebx",
                    "17": "xor     ebp, ebp",
                    "18": "mov     rax, [r13+0]",
                    "19": "mov     r11, [rax+90h]",
                    "20": "test    r11, r11",
                    "21": "jz      short INSTR39",
                    "22": "mov     rdi, r13",
                    "23": "mov     esi, r14d",
                    "24": "mov     rdx, rbx",
                    "25": "call    __x86_indirect_thunk_r11; PIC mode",
                    "26": "jmp     short INSTR42",
                    "27": "mov     r15, rdx",
                    "28": "mov     rbp, rsi",
                    "29": "mov     r12, [rdx+520h]",
                    "30": "test    r12, r12",
                    "31": "jz      short INSTR50",
                    "32": "mov     eax, [r12+4]",
                    "33": "cmp     eax, 1",
                    "34": "jz      short INSTR52",
                    "35": "cmp     eax, 3",
                    "36": "jnz     short INSTR50",
                    "37": "add     r12, 10h",
                    "38": "jmp     short INSTR59",
                    "39": "mov     rdi, offset aSSetOutputGamm; \"%s: set_output_gamma function pointer i\"...",
                    "40": "mov     rsi, offset aDcn30SetOutput; \"dcn30_set_output_transfer_func\"",
                    "41": "call    __drm_err; PIC mode",
                    "42": "mov     eax, ebp",
                    "43": "pop     rbx",
                    "44": "pop     r12",
                    "45": "pop     r13",
                    "46": "pop     r14",
                    "47": "pop     r15",
                    "48": "pop     rbp",
                    "49": "retn",
                    "50": "xor     r12d, r12d",
                    "51": "jmp     short INSTR59",
                    "52": "mov     rbx, [rbp+0D8h]",
                    "53": "add     rbx, 9648h",
                    "54": "mov     rdi, r12",
                    "55": "mov     rsi, rbx",
                    "56": "mov     edx, 1",
                    "57": "call    cm_helper_translate_curve_to_hw_format; PIC mode",
                    "58": "mov     r12, rbx",
                    "59": "mov     rax, [r15+528h]",
                    "60": "test    rax, rax",
                    "61": "jz      short INSTR79",
                    "62": "mov     eax, [rax+0E660h]",
                    "63": "mov     ecx, eax",
                    "64": "not     ecx",
                    "65": "test    cl, 3",
                    "66": "jnz     short INSTR79",
                    "67": "mov     edx, eax",
                    "68": "shr     edx, 2",
                    "69": "and     edx, 7",
                    "70": "cmp     edx, 2",
                    "71": "jz      INSTR113",
                    "72": "cmp     edx, 1",
                    "73": "jz      INSTR115",
                    "74": "xor     ecx, ecx",
                    "75": "test    edx, edx",
                    "76": "jnz     INSTR118",
                    "77": "shr     eax, 5",
                    "78": "jmp     INSTR116",
                    "79": "mov     rax, [r13+0]",
                    "80": "mov     r11, [rax+0E0h]",
                    "81": "mov     rdi, r13",
                    "82": "mov     esi, r14d",
                    "83": "call    __x86_indirect_thunk_r11; PIC mode",
                    "84": "mov     rax, [r13+0]",
                    "85": "cmp     qword ptr [rax+90h], 0",
                    "86": "jz      INSTR16",
                    "87": "mov     rbx, [r15+258h]",
                    "88": "test    rbx, rbx",
                    "89": "jz      INSTR16",
                    "90": "mov     eax, [rbx+4]",
                    "91": "cmp     eax, 3",
                    "92": "jnz     short INSTR95",
                    "93": "add     rbx, 10h",
                    "94": "jmp     INSTR17",
                    "95": "mov     rcx, [rbp+8]",
                    "96": "mov     rcx, [rcx+258h]",
                    "97": "cmp     dword ptr [rcx+4], 1",
                    "98": "jnz     INSTR169",
                    "99": "lea     r12, [r13+220h]",
                    "100": "xor     ebp, ebp",
                    "101": "mov     rdi, rbx",
                    "102": "mov     rsi, r12",
                    "103": "xor     edx, edx",
                    "104": "call    cm3_helper_translate_curve_to_hw_format; PIC mode",
                    "105": "test    al, al",
                    "106": "cmovnz  rbp, r12",
                    "107": "mov     rax, [r15+258h]",
                    "108": "mov     eax, [rax+4]",
                    "109": "mov     rbx, rbp",
                    "110": "test    eax, eax",
                    "111": "jnz     INSTR17",
                    "112": "jmp     INSTR172",
                    "113": "shr     eax, 0Dh",
                    "114": "jmp     short INSTR116",
                    "115": "shr     eax, 9",
                    "116": "and     eax, 0Fh",
                    "117": "mov     ecx, eax",
                    "118": "cmp     ecx, r14d",
                    "119": "jz      short INSTR129",
                    "120": "mov     edi, 2",
                    "121": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "122": "mov     rdx, offset aDcn30SetMpcSha; \"dcn30_set_mpc_shaper_3dlut\"",
                    "123": "mov     ecx, 7Dh ; '}'",
                    "124": "call    __drm_dbg; PIC mode",
                    "125": "mov     rax, [r15+528h]",
                    "126": "mov     edx, [rax+0E660h]",
                    "127": "shr     edx, 2",
                    "128": "and     edx, 7",
                    "129": "mov     rax, [r13+0]",
                    "130": "mov     r11, [rax+0D0h]",
                    "131": "mov     rdi, r13",
                    "132": "mov     esi, r14d",
                    "133": "call    __x86_indirect_thunk_r11; PIC mode",
                    "134": "mov     rsi, [r15+528h]",
                    "135": "mov     ecx, [rsi+0E660h]",
                    "136": "shr     ecx, 2",
                    "137": "and     ecx, 7",
                    "138": "cmp     eax, ecx",
                    "139": "jz      short INSTR149",
                    "140": "mov     edi, 2",
                    "141": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "142": "mov     rdx, offset aDcn30SetMpcSha; \"dcn30_set_mpc_shaper_3dlut\"",
                    "143": "mov     ecx, 82h",
                    "144": "call    __drm_dbg; PIC mode",
                    "145": "mov     rsi, [r15+528h]",
                    "146": "mov     eax, [rsi+0E660h]",
                    "147": "shr     eax, 2",
                    "148": "and     eax, 7",
                    "149": "mov     rcx, [r13+0]",
                    "150": "mov     r11, [rcx+0D8h]",
                    "151": "add     rsi, 4",
                    "152": "mov     rdi, r13",
                    "153": "mov     edx, eax",
                    "154": "call    __x86_indirect_thunk_r11; PIC mode",
                    "155": "mov     rax, [r13+0]",
                    "156": "mov     r11, [rax+0C8h]",
                    "157": "mov     rax, [r15+528h]",
                    "158": "mov     edx, [rax+0E660h]",
                    "159": "shr     edx, 2",
                    "160": "and     edx, 7",
                    "161": "mov     rdi, r13",
                    "162": "mov     rsi, r12",
                    "163": "call    __x86_indirect_thunk_r11; PIC mode",
                    "164": "test    al, al",
                    "165": "jz      INSTR84",
                    "166": "mov     bpl, 1",
                    "167": "xor     ebx, ebx",
                    "168": "jmp     INSTR18",
                    "169": "xor     ebx, ebx",
                    "170": "test    eax, eax",
                    "171": "jnz     INSTR17",
                    "172": "mov     edi, 2",
                    "173": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "174": "mov     rdx, offset aDcn30SetOutput; \"dcn30_set_output_transfer_func\"",
                    "175": "mov     ecx, 0D3h",
                    "176": "call    __drm_dbg; PIC mode",
                    "177": "jmp     INSTR17"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "sub     rsp, 8",
                    "8": "mov     rax, [rsi+0B8h]",
                    "9": "mov     r15, [rsi+290h]",
                    "10": "mov     r14d, [rax+88h]",
                    "11": "mov     rax, [rsi+0E8h]",
                    "12": "mov     rax, [rax]",
                    "13": "mov     rax, [rax]",
                    "14": "mov     rax, [rax+3D8h]",
                    "15": "mov     r12, [rax+1B8h]",
                    "16": "test    r15, r15",
                    "17": "jz      short INSTR37",
                    "18": "mov     rax, [r12]",
                    "19": "xor     r13d, r13d",
                    "20": "xor     r8d, r8d",
                    "21": "mov     rcx, [rax+90h]",
                    "22": "test    rcx, rcx",
                    "23": "jz      INSTR81",
                    "24": "mov     rdx, r8",
                    "25": "mov     esi, r14d",
                    "26": "mov     rdi, r12",
                    "27": "call    __x86_indirect_thunk_rcx; PIC mode",
                    "28": "add     rsp, 8",
                    "29": "mov     eax, r13d",
                    "30": "pop     rbx",
                    "31": "pop     rbp",
                    "32": "pop     r12",
                    "33": "pop     r13",
                    "34": "pop     r14",
                    "35": "pop     r15",
                    "36": "jmp     __x86_return_thunk; PIC mode",
                    "37": "mov     r13, [rdx+520h]",
                    "38": "mov     rbx, rsi",
                    "39": "mov     rbp, rdx",
                    "40": "test    r13, r13",
                    "41": "jz      short INSTR48",
                    "42": "mov     eax, [r13+4]",
                    "43": "cmp     eax, 3",
                    "44": "jz      INSTR144",
                    "45": "cmp     eax, 1",
                    "46": "jz      INSTR155",
                    "47": "xor     r13d, r13d",
                    "48": "mov     rax, [rbp+528h]",
                    "49": "test    rax, rax",
                    "50": "jz      short INSTR56",
                    "51": "movzx   edx, byte ptr [rax+0E660h]",
                    "52": "mov     ecx, edx",
                    "53": "and     ecx, 3",
                    "54": "cmp     cl, 3",
                    "55": "jz      INSTR87",
                    "56": "mov     rax, [r12]",
                    "57": "mov     esi, r14d",
                    "58": "mov     rdi, r12",
                    "59": "mov     rax, [rax+0E0h]",
                    "60": "call    __x86_indirect_thunk_rax; PIC mode",
                    "61": "mov     rax, [r12]",
                    "62": "mov     rcx, [rax+90h]",
                    "63": "test    rcx, rcx",
                    "64": "jz      short INSTR80",
                    "65": "mov     r8, [rbp+258h]",
                    "66": "test    r8, r8",
                    "67": "jz      short INSTR85",
                    "68": "mov     eax, [r8+4]",
                    "69": "cmp     eax, 3",
                    "70": "jz      INSTR164",
                    "71": "mov     rdx, [rbx+8]",
                    "72": "mov     rdx, [rdx+258h]",
                    "73": "cmp     dword ptr [rdx+4], 1",
                    "74": "jz      INSTR167",
                    "75": "test    eax, eax",
                    "76": "jz      INSTR178",
                    "77": "xor     r8d, r8d",
                    "78": "xor     r13d, r13d",
                    "79": "jmp     INSTR24",
                    "80": "xor     r13d, r13d",
                    "81": "mov     rsi, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "82": "mov     rdi, offset aSSetOutputGamm; \"%s: set_output_gamma function pointer i\"...",
                    "83": "call    __drm_err; PIC mode",
                    "84": "jmp     INSTR28",
                    "85": "xor     r13d, r13d",
                    "86": "jmp     INSTR24",
                    "87": "and     edx, 1Ch",
                    "88": "jnz     INSTR146",
                    "89": "movzx   ecx, word ptr [rax+0E660h]",
                    "90": "shr     cx, 5",
                    "91": "and     ecx, 0Fh",
                    "92": "cmp     r14d, ecx",
                    "93": "jz      short INSTR100",
                    "94": "mov     ecx, 7Dh ; '}'",
                    "95": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "96": "mov     edi, 2",
                    "97": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "98": "call    __drm_dbg; PIC mode",
                    "99": "mov     rax, [rbp+528h]",
                    "100": "movzx   edx, byte ptr [rax+0E660h]",
                    "101": "mov     rax, [r12]",
                    "102": "mov     esi, r14d",
                    "103": "mov     rdi, r12",
                    "104": "shr     dl, 2",
                    "105": "mov     rax, [rax+0D0h]",
                    "106": "and     edx, 7",
                    "107": "call    __x86_indirect_thunk_rax; PIC mode",
                    "108": "mov     rsi, [rbp+528h]",
                    "109": "movzx   edx, byte ptr [rsi+0E660h]",
                    "110": "shr     dl, 2",
                    "111": "and     edx, 7",
                    "112": "cmp     eax, edx",
                    "113": "jz      short INSTR123",
                    "114": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "115": "mov     ecx, 82h",
                    "116": "mov     edi, 2",
                    "117": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "118": "call    __drm_dbg; PIC mode",
                    "119": "mov     rsi, [rbp+528h]",
                    "120": "movzx   edx, byte ptr [rsi+0E660h]",
                    "121": "shr     dl, 2",
                    "122": "and     edx, 7",
                    "123": "mov     rax, [r12]",
                    "124": "add     rsi, 4",
                    "125": "mov     rdi, r12",
                    "126": "mov     rax, [rax+0D8h]",
                    "127": "call    __x86_indirect_thunk_rax; PIC mode",
                    "128": "mov     rax, [rbp+528h]",
                    "129": "mov     rsi, r13",
                    "130": "mov     rdi, r12",
                    "131": "movzx   edx, byte ptr [rax+0E660h]",
                    "132": "mov     rax, [r12]",
                    "133": "shr     dl, 2",
                    "134": "mov     rax, [rax+0C8h]",
                    "135": "and     edx, 7",
                    "136": "call    __x86_indirect_thunk_rax; PIC mode",
                    "137": "mov     r13d, eax",
                    "138": "test    al, al",
                    "139": "jz      INSTR61",
                    "140": "mov     rax, [r12]",
                    "141": "xor     r8d, r8d",
                    "142": "mov     rcx, [rax+90h]",
                    "143": "jmp     INSTR22",
                    "144": "add     r13, 10h",
                    "145": "jmp     INSTR48",
                    "146": "cmp     dl, 4",
                    "147": "jz      INSTR188",
                    "148": "xor     ecx, ecx",
                    "149": "cmp     dl, 8",
                    "150": "jnz     INSTR92",
                    "151": "mov     ecx, [rax+0E660h]",
                    "152": "shr     ecx, 0Dh",
                    "153": "and     ecx, 0Fh",
                    "154": "jmp     INSTR92",
                    "155": "mov     rax, [rsi+0D8h]",
                    "156": "mov     rdi, r13",
                    "157": "mov     edx, 1",
                    "158": "lea     rcx, [rax+9648h]",
                    "159": "mov     rsi, rcx",
                    "160": "mov     [rsp+38h+var_38], rcx",
                    "161": "call    cm_helper_translate_curve_to_hw_format; PIC mode",
                    "162": "mov     r13, [rsp+38h+var_38]",
                    "163": "jmp     INSTR48",
                    "164": "add     r8, 10h",
                    "165": "xor     r13d, r13d",
                    "166": "jmp     INSTR24",
                    "167": "lea     rbx, [r12+220h]",
                    "168": "xor     edx, edx",
                    "169": "mov     rdi, r8",
                    "170": "mov     rsi, rbx",
                    "171": "call    cm3_helper_translate_curve_to_hw_format; PIC mode",
                    "172": "test    al, al",
                    "173": "mov     rax, [rbp+258h]",
                    "174": "cmovnz  r15, rbx",
                    "175": "mov     eax, [rax+4]",
                    "176": "test    eax, eax",
                    "177": "jnz     short INSTR183",
                    "178": "mov     ecx, 0D3h",
                    "179": "mov     rdx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "180": "mov     edi, 2",
                    "181": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "182": "call    __drm_dbg; PIC mode",
                    "183": "mov     rax, [r12]",
                    "184": "mov     r8, r15",
                    "185": "xor     r13d, r13d",
                    "186": "mov     rcx, [rax+90h]",
                    "187": "jmp     INSTR22",
                    "188": "movzx   ecx, byte ptr [rax+0E661h]",
                    "189": "shr     cl, 1",
                    "190": "and     ecx, 0Fh",
                    "191": "jmp     INSTR92"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rax, [rsi+0B8h]",
                    "8": "cmp     qword ptr [rsi+290h], 0",
                    "9": "mov     r12d, [rax+88h]",
                    "10": "mov     rax, [rsi+0E8h]",
                    "11": "mov     rax, [rax]",
                    "12": "mov     rax, [rax]",
                    "13": "mov     rax, [rax+3D8h]",
                    "14": "mov     r13, [rax+1B8h]",
                    "15": "jz      short INSTR19",
                    "16": "xor     r14d, r14d",
                    "17": "xor     r15d, r15d",
                    "18": "jmp     INSTR151",
                    "19": "mov     r14, [rdx+520h]",
                    "20": "mov     rbp, rsi",
                    "21": "mov     rbx, rdx",
                    "22": "test    r14, r14",
                    "23": "jz      short INSTR40",
                    "24": "mov     eax, [r14+4]",
                    "25": "cmp     eax, 3",
                    "26": "jnz     short INSTR29",
                    "27": "add     r14, 10h",
                    "28": "jmp     short INSTR40",
                    "29": "dec     eax",
                    "30": "jnz     short INSTR39",
                    "31": "mov     rax, [rsi+0D8h]",
                    "32": "mov     rdi, r14",
                    "33": "mov     edx, 1",
                    "34": "lea     r15, [rax+9648h]",
                    "35": "mov     rsi, r15",
                    "36": "mov     r14, r15",
                    "37": "call    cm_helper_translate_curve_to_hw_format; PIC mode",
                    "38": "jmp     short INSTR40",
                    "39": "xor     r14d, r14d",
                    "40": "mov     rcx, [rbx+528h]",
                    "41": "test    rcx, rcx",
                    "42": "jz      INSTR116",
                    "43": "mov     al, [rcx+0E660h]",
                    "44": "mov     edx, eax",
                    "45": "and     edx, 3",
                    "46": "cmp     dl, 3",
                    "47": "jnz     INSTR116",
                    "48": "and     al, 1Ch",
                    "49": "mov     edx, eax",
                    "50": "jnz     short INSTR54",
                    "51": "mov     eax, [rcx+0E660h]",
                    "52": "shr     ax, 5",
                    "53": "jmp     short INSTR64",
                    "54": "cmp     al, 4",
                    "55": "jnz     short INSTR59",
                    "56": "mov     al, [rcx+0E661h]",
                    "57": "shr     al, 1",
                    "58": "jmp     short INSTR64",
                    "59": "xor     eax, eax",
                    "60": "cmp     dl, 8",
                    "61": "jnz     short INSTR65",
                    "62": "mov     eax, [rcx+0E660h]",
                    "63": "shr     eax, 0Dh",
                    "64": "and     eax, 0Fh",
                    "65": "cmp     r12d, eax",
                    "66": "jz      short INSTR72",
                    "67": "mov     ecx, 7Dh ; '}'",
                    "68": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "69": "mov     edi, 2",
                    "70": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "71": "call    __drm_dbg; PIC mode",
                    "72": "mov     rax, [rbx+528h]",
                    "73": "mov     esi, r12d",
                    "74": "mov     rdi, r13",
                    "75": "mov     dl, [rax+0E660h]",
                    "76": "mov     rax, [r13+0]",
                    "77": "shr     dl, 2",
                    "78": "mov     rax, [rax+0D0h]",
                    "79": "and     edx, 7",
                    "80": "call    __x86_indirect_thunk_rax; PIC mode",
                    "81": "mov     r8d, eax",
                    "82": "mov     rax, [rbx+528h]",
                    "83": "mov     al, [rax+0E660h]",
                    "84": "shr     al, 2",
                    "85": "and     eax, 7",
                    "86": "cmp     r8d, eax",
                    "87": "jz      short INSTR93",
                    "88": "mov     ecx, 82h",
                    "89": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "90": "mov     edi, 2",
                    "91": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "92": "call    __drm_dbg; PIC mode",
                    "93": "mov     rsi, [rbx+528h]",
                    "94": "mov     rax, [r13+0]",
                    "95": "mov     rdi, r13",
                    "96": "xor     r15d, r15d",
                    "97": "mov     dl, [rsi+0E660h]",
                    "98": "mov     rax, [rax+0D8h]",
                    "99": "add     rsi, 4",
                    "100": "shr     dl, 2",
                    "101": "and     edx, 7",
                    "102": "call    __x86_indirect_thunk_rax; PIC mode",
                    "103": "mov     rax, [rbx+528h]",
                    "104": "mov     rsi, r14",
                    "105": "mov     rdi, r13",
                    "106": "mov     dl, [rax+0E660h]",
                    "107": "mov     rax, [r13+0]",
                    "108": "shr     dl, 2",
                    "109": "mov     rax, [rax+0C8h]",
                    "110": "and     edx, 7",
                    "111": "call    __x86_indirect_thunk_rax; PIC mode",
                    "112": "mov     r14d, eax",
                    "113": "test    al, al",
                    "114": "jnz     INSTR151",
                    "115": "jmp     short INSTR121",
                    "116": "mov     rax, [r13+0]",
                    "117": "mov     esi, r12d",
                    "118": "mov     rdi, r13",
                    "119": "mov     rax, [rax+0E0h]",
                    "120": "call    __x86_indirect_thunk_rax; PIC mode",
                    "121": "mov     rax, [r13+0]",
                    "122": "cmp     qword ptr [rax+90h], 0",
                    "123": "jz      INSTR16",
                    "124": "mov     rdi, [rbx+258h]",
                    "125": "test    rdi, rdi",
                    "126": "jz      INSTR16",
                    "127": "cmp     dword ptr [rdi+4], 3",
                    "128": "lea     r15, [rdi+10h]",
                    "129": "jz      short INSTR142",
                    "130": "mov     rax, [rbp+8]",
                    "131": "mov     rax, [rax+258h]",
                    "132": "cmp     dword ptr [rax+4], 1",
                    "133": "jz      short INSTR136",
                    "134": "xor     r15d, r15d",
                    "135": "jmp     short INSTR142",
                    "136": "lea     r15, [r13+220h]",
                    "137": "xor     edx, edx",
                    "138": "mov     rsi, r15",
                    "139": "call    cm3_helper_translate_curve_to_hw_format; PIC mode",
                    "140": "test    al, al",
                    "141": "jz      short INSTR134",
                    "142": "mov     rax, [rbx+258h]",
                    "143": "xor     r14d, r14d",
                    "144": "cmp     dword ptr [rax+4], 0",
                    "145": "jnz     short INSTR151",
                    "146": "mov     ecx, 0D3h",
                    "147": "mov     rdx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "148": "mov     edi, 2",
                    "149": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "150": "call    __drm_dbg; PIC mode",
                    "151": "mov     rax, [r13+0]",
                    "152": "mov     rax, [rax+90h]",
                    "153": "test    rax, rax",
                    "154": "jz      short INSTR160",
                    "155": "mov     rdx, r15",
                    "156": "mov     esi, r12d",
                    "157": "mov     rdi, r13",
                    "158": "call    __x86_indirect_thunk_rax; PIC mode",
                    "159": "jmp     short INSTR163",
                    "160": "mov     rsi, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "161": "mov     rdi, offset aSSetOutputGamm; \"%s: set_output_gamma function pointer i\"...",
                    "162": "call    __drm_err; PIC mode",
                    "163": "pop     rbx",
                    "164": "mov     eax, r14d",
                    "165": "pop     rbp",
                    "166": "pop     r12",
                    "167": "pop     r13",
                    "168": "pop     r14",
                    "169": "pop     r15",
                    "170": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "sub     esp, 30h",
                    "4": "mov     [ebp+var_C], ebx",
                    "5": "mov     [ebp+var_8], esi",
                    "6": "mov     [ebp+var_4], edi",
                    "7": "mov     [ebp+var_1C], ecx",
                    "8": "mov     eax, [edx+0ACh]",
                    "9": "mov     edi, [edx+250h]",
                    "10": "mov     eax, [eax+7Ch]",
                    "11": "test    edi, edi",
                    "12": "mov     [ebp+var_14], eax",
                    "13": "mov     eax, [edx+0C8h]",
                    "14": "mov     eax, [eax]",
                    "15": "mov     eax, [eax]",
                    "16": "mov     eax, [eax+380h]",
                    "17": "mov     eax, [eax+0DCh]",
                    "18": "mov     [ebp+var_10], eax",
                    "19": "jz      short INSTR35",
                    "20": "mov     byte ptr [ebp+var_18], 0",
                    "21": "mov     eax, [eax]",
                    "22": "xor     edi, edi",
                    "23": "mov     esi, [eax+48h]",
                    "24": "mov     eax, [ebp+var_10]",
                    "25": "mov     ecx, edi",
                    "26": "mov     edx, [ebp+var_14]",
                    "27": "call    __x86_indirect_thunk_esi",
                    "28": "movzx   eax, byte ptr [ebp+var_18]",
                    "29": "mov     ebx, [ebp+var_C]",
                    "30": "mov     esi, [ebp+var_8]",
                    "31": "mov     edi, [ebp+var_4]",
                    "32": "mov     esp, ebp",
                    "33": "pop     ebp",
                    "34": "retn",
                    "35": "mov     eax, [ebp+var_1C]",
                    "36": "mov     ebx, edx",
                    "37": "mov     eax, [eax+4CCh]",
                    "38": "mov     [ebp+var_18], eax",
                    "39": "test    eax, eax",
                    "40": "jz      short INSTR47",
                    "41": "mov     eax, [eax+4]",
                    "42": "cmp     eax, 3",
                    "43": "jz      INSTR97",
                    "44": "dec     eax",
                    "45": "jz      INSTR183",
                    "46": "mov     [ebp+var_18], 0",
                    "47": "mov     eax, [ebp+var_1C]",
                    "48": "mov     eax, [eax+4D0h]",
                    "49": "test    eax, eax",
                    "50": "jz      short INSTR56",
                    "51": "movzx   edx, byte ptr [eax+0E65Ch]",
                    "52": "mov     cl, dl",
                    "53": "and     cl, 3",
                    "54": "cmp     cl, 3",
                    "55": "jz      INSTR99",
                    "56": "mov     esi, [ebp+var_10]",
                    "57": "mov     edx, [ebp+var_14]",
                    "58": "mov     eax, [esi]",
                    "59": "mov     ecx, [eax+70h]",
                    "60": "mov     eax, esi",
                    "61": "call    __x86_indirect_thunk_ecx",
                    "62": "mov     eax, [ebp+var_10]",
                    "63": "mov     eax, [eax]",
                    "64": "mov     eax, [eax+48h]",
                    "65": "test    eax, eax",
                    "66": "mov     esi, eax",
                    "67": "jz      short INSTR95",
                    "68": "mov     eax, [ebp+var_1C]",
                    "69": "mov     eax, [eax+248h]",
                    "70": "test    eax, eax",
                    "71": "jz      short INSTR94",
                    "72": "mov     edx, [eax+4]",
                    "73": "cmp     edx, 3",
                    "74": "jz      INSTR192",
                    "75": "mov     ecx, [ebx+4]",
                    "76": "mov     ecx, [ecx+248h]",
                    "77": "cmp     dword ptr [ecx+4], 1",
                    "78": "jz      INSTR200",
                    "79": "test    edx, edx",
                    "80": "jnz     short INSTR89",
                    "81": "mov     eax, 0D3h",
                    "82": "mov     edx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "83": "mov     [esp+0Ch], eax",
                    "84": "mov     ecx, offset aSD; \"%s():%d\\n\"",
                    "85": "mov     [esp+8], edx",
                    "86": "mov     [esp+4], ecx",
                    "87": "mov     dword ptr [esp], 2",
                    "88": "call    __drm_dbg",
                    "89": "mov     eax, [ebp+var_10]",
                    "90": "mov     eax, [eax]",
                    "91": "mov     esi, [eax+48h]",
                    "92": "mov     byte ptr [ebp+var_18], 0",
                    "93": "jmp     INSTR24",
                    "94": "xor     edi, edi",
                    "95": "mov     byte ptr [ebp+var_18], 0",
                    "96": "jmp     INSTR24",
                    "97": "add     [ebp+var_18], 10h",
                    "98": "jmp     INSTR47",
                    "99": "and     dl, 1Ch",
                    "100": "jnz     INSTR174",
                    "101": "movzx   ecx, word ptr [eax+0E65Ch]",
                    "102": "shr     ecx, 5",
                    "103": "and     ecx, 0Fh",
                    "104": "cmp     [ebp+var_14], ecx",
                    "105": "jz      short INSTR116",
                    "106": "mov     dword ptr [esp], 2",
                    "107": "mov     eax, 7Dh ; '}'",
                    "108": "mov     [esp+0Ch], eax",
                    "109": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "110": "mov     [esp+8], eax",
                    "111": "mov     eax, offset aSD; \"%s():%d\\n\"",
                    "112": "mov     [esp+4], eax",
                    "113": "call    __drm_dbg",
                    "114": "mov     eax, [ebp+var_1C]",
                    "115": "mov     eax, [eax+4D0h]",
                    "116": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "117": "mov     eax, [ebp+var_10]",
                    "118": "mov     edx, [ebp+var_14]",
                    "119": "shr     cl, 2",
                    "120": "mov     eax, [eax]",
                    "121": "and     cl, 7",
                    "122": "movzx   ecx, cl",
                    "123": "mov     esi, [eax+68h]",
                    "124": "mov     eax, [ebp+var_10]",
                    "125": "call    __x86_indirect_thunk_esi",
                    "126": "mov     edx, [ebp+var_1C]",
                    "127": "mov     edx, [edx+4D0h]",
                    "128": "mov     esi, eax",
                    "129": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "130": "shr     al, 2",
                    "131": "and     al, 7",
                    "132": "movzx   ecx, al",
                    "133": "cmp     esi, ecx",
                    "134": "jz      short INSTR149",
                    "135": "mov     dword ptr [esp], 2",
                    "136": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "137": "mov     esi, 82h",
                    "138": "mov     [esp+8], eax",
                    "139": "mov     eax, offset aSD; \"%s():%d\\n\"",
                    "140": "mov     [esp+4], eax",
                    "141": "mov     [esp+0Ch], esi",
                    "142": "call    __drm_dbg",
                    "143": "mov     edx, [ebp+var_1C]",
                    "144": "mov     edx, [edx+4D0h]",
                    "145": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "146": "shr     al, 2",
                    "147": "and     al, 7",
                    "148": "movzx   ecx, al",
                    "149": "mov     eax, [ebp+var_10]",
                    "150": "add     edx, 4",
                    "151": "mov     eax, [eax]",
                    "152": "mov     esi, [eax+6Ch]",
                    "153": "mov     eax, [ebp+var_10]",
                    "154": "call    __x86_indirect_thunk_esi",
                    "155": "mov     eax, [ebp+var_1C]",
                    "156": "mov     edx, [ebp+var_18]",
                    "157": "mov     eax, [eax+4D0h]",
                    "158": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "159": "mov     eax, [ebp+var_10]",
                    "160": "shr     cl, 2",
                    "161": "mov     eax, [eax]",
                    "162": "and     cl, 7",
                    "163": "movzx   ecx, cl",
                    "164": "mov     esi, [eax+64h]",
                    "165": "mov     eax, [ebp+var_10]",
                    "166": "call    __x86_indirect_thunk_esi",
                    "167": "mov     byte ptr [ebp+var_18], al",
                    "168": "test    al, al",
                    "169": "jz      INSTR62",
                    "170": "mov     eax, [ebp+var_10]",
                    "171": "mov     eax, [eax]",
                    "172": "mov     esi, [eax+48h]",
                    "173": "jmp     INSTR24",
                    "174": "cmp     dl, 4",
                    "175": "jz      short INSTR195",
                    "176": "xor     ecx, ecx",
                    "177": "cmp     dl, 8",
                    "178": "jnz     INSTR104",
                    "179": "mov     ecx, [eax+0E65Ch]",
                    "180": "shr     ecx, 0Dh",
                    "181": "and     ecx, 0Fh",
                    "182": "jmp     INSTR104",
                    "183": "mov     eax, [edx+0BCh]",
                    "184": "mov     ecx, 1",
                    "185": "lea     edx, [eax+9630h]",
                    "186": "mov     eax, [ebp+var_18]",
                    "187": "mov     [ebp+var_20], edx",
                    "188": "call    cm_helper_translate_curve_to_hw_format",
                    "189": "mov     edx, [ebp+var_20]",
                    "190": "mov     [ebp+var_18], edx",
                    "191": "jmp     INSTR47",
                    "192": "mov     byte ptr [ebp+var_18], 0",
                    "193": "lea     edi, [eax+10h]",
                    "194": "jmp     INSTR24",
                    "195": "movzx   ecx, byte ptr [eax+0E65Dh]",
                    "196": "shr     cl, 1",
                    "197": "and     cl, 0Fh",
                    "198": "movzx   ecx, cl",
                    "199": "jmp     INSTR104",
                    "200": "mov     ebx, [ebp+var_10]",
                    "201": "xor     ecx, ecx",
                    "202": "add     ebx, 200h",
                    "203": "mov     edx, ebx",
                    "204": "call    cm3_helper_translate_curve_to_hw_format",
                    "205": "test    al, al",
                    "206": "mov     eax, [ebp+var_1C]",
                    "207": "mov     eax, [eax+248h]",
                    "208": "mov     edx, [eax+4]",
                    "209": "jz      INSTR79",
                    "210": "mov     edi, ebx",
                    "211": "jmp     INSTR79"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "sub     esp, 30h",
                    "4": "mov     [ebp+var_C], ebx",
                    "5": "mov     [ebp+var_8], esi",
                    "6": "mov     [ebp+var_4], edi",
                    "7": "mov     [ebp+var_1C], ecx",
                    "8": "mov     eax, [edx+0ACh]",
                    "9": "mov     edi, [edx+250h]",
                    "10": "mov     eax, [eax+7Ch]",
                    "11": "test    edi, edi",
                    "12": "mov     [ebp+var_14], eax",
                    "13": "mov     eax, [edx+0C8h]",
                    "14": "mov     eax, [eax]",
                    "15": "mov     eax, [eax]",
                    "16": "mov     eax, [eax+380h]",
                    "17": "mov     eax, [eax+0DCh]",
                    "18": "mov     [ebp+var_10], eax",
                    "19": "jz      short INSTR35",
                    "20": "mov     byte ptr [ebp+var_18], 0",
                    "21": "mov     eax, [eax]",
                    "22": "xor     edi, edi",
                    "23": "mov     esi, [eax+48h]",
                    "24": "mov     eax, [ebp+var_10]",
                    "25": "mov     ecx, edi",
                    "26": "mov     edx, [ebp+var_14]",
                    "27": "call    __x86_indirect_thunk_esi",
                    "28": "movzx   eax, byte ptr [ebp+var_18]",
                    "29": "mov     ebx, [ebp+var_C]",
                    "30": "mov     esi, [ebp+var_8]",
                    "31": "mov     edi, [ebp+var_4]",
                    "32": "mov     esp, ebp",
                    "33": "pop     ebp",
                    "34": "retn",
                    "35": "mov     eax, [ebp+var_1C]",
                    "36": "mov     ebx, edx",
                    "37": "mov     eax, [eax+4CCh]",
                    "38": "mov     [ebp+var_18], eax",
                    "39": "test    eax, eax",
                    "40": "jz      short INSTR47",
                    "41": "mov     eax, [eax+4]",
                    "42": "cmp     eax, 3",
                    "43": "jz      INSTR97",
                    "44": "dec     eax",
                    "45": "jz      INSTR183",
                    "46": "mov     [ebp+var_18], 0",
                    "47": "mov     eax, [ebp+var_1C]",
                    "48": "mov     eax, [eax+4D0h]",
                    "49": "test    eax, eax",
                    "50": "jz      short INSTR56",
                    "51": "movzx   edx, byte ptr [eax+0E65Ch]",
                    "52": "mov     cl, dl",
                    "53": "and     cl, 3",
                    "54": "cmp     cl, 3",
                    "55": "jz      INSTR99",
                    "56": "mov     esi, [ebp+var_10]",
                    "57": "mov     edx, [ebp+var_14]",
                    "58": "mov     eax, [esi]",
                    "59": "mov     ecx, [eax+70h]",
                    "60": "mov     eax, esi",
                    "61": "call    __x86_indirect_thunk_ecx",
                    "62": "mov     eax, [ebp+var_10]",
                    "63": "mov     eax, [eax]",
                    "64": "mov     eax, [eax+48h]",
                    "65": "test    eax, eax",
                    "66": "mov     esi, eax",
                    "67": "jz      short INSTR95",
                    "68": "mov     eax, [ebp+var_1C]",
                    "69": "mov     eax, [eax+248h]",
                    "70": "test    eax, eax",
                    "71": "jz      short INSTR94",
                    "72": "mov     edx, [eax+4]",
                    "73": "cmp     edx, 3",
                    "74": "jz      INSTR192",
                    "75": "mov     ecx, [ebx+4]",
                    "76": "mov     ecx, [ecx+248h]",
                    "77": "cmp     dword ptr [ecx+4], 1",
                    "78": "jz      INSTR200",
                    "79": "test    edx, edx",
                    "80": "jnz     short INSTR89",
                    "81": "mov     eax, 0D3h",
                    "82": "mov     edx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "83": "mov     [esp+0Ch], eax",
                    "84": "mov     ecx, offset aSD; \"%s():%d\\n\"",
                    "85": "mov     [esp+8], edx",
                    "86": "mov     [esp+4], ecx",
                    "87": "mov     dword ptr [esp], 2",
                    "88": "call    __drm_dbg",
                    "89": "mov     eax, [ebp+var_10]",
                    "90": "mov     eax, [eax]",
                    "91": "mov     esi, [eax+48h]",
                    "92": "mov     byte ptr [ebp+var_18], 0",
                    "93": "jmp     INSTR24",
                    "94": "xor     edi, edi",
                    "95": "mov     byte ptr [ebp+var_18], 0",
                    "96": "jmp     INSTR24",
                    "97": "add     [ebp+var_18], 10h",
                    "98": "jmp     INSTR47",
                    "99": "and     dl, 1Ch",
                    "100": "jnz     INSTR174",
                    "101": "movzx   ecx, word ptr [eax+0E65Ch]",
                    "102": "shr     ecx, 5",
                    "103": "and     ecx, 0Fh",
                    "104": "cmp     [ebp+var_14], ecx",
                    "105": "jz      short INSTR116",
                    "106": "mov     dword ptr [esp], 2",
                    "107": "mov     eax, 7Dh ; '}'",
                    "108": "mov     [esp+0Ch], eax",
                    "109": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "110": "mov     [esp+8], eax",
                    "111": "mov     eax, offset aSD; \"%s():%d\\n\"",
                    "112": "mov     [esp+4], eax",
                    "113": "call    __drm_dbg",
                    "114": "mov     eax, [ebp+var_1C]",
                    "115": "mov     eax, [eax+4D0h]",
                    "116": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "117": "mov     eax, [ebp+var_10]",
                    "118": "mov     edx, [ebp+var_14]",
                    "119": "shr     cl, 2",
                    "120": "mov     eax, [eax]",
                    "121": "and     cl, 7",
                    "122": "movzx   ecx, cl",
                    "123": "mov     esi, [eax+68h]",
                    "124": "mov     eax, [ebp+var_10]",
                    "125": "call    __x86_indirect_thunk_esi",
                    "126": "mov     edx, [ebp+var_1C]",
                    "127": "mov     edx, [edx+4D0h]",
                    "128": "mov     esi, eax",
                    "129": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "130": "shr     al, 2",
                    "131": "and     al, 7",
                    "132": "movzx   ecx, al",
                    "133": "cmp     esi, ecx",
                    "134": "jz      short INSTR149",
                    "135": "mov     dword ptr [esp], 2",
                    "136": "mov     eax, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "137": "mov     esi, 82h",
                    "138": "mov     [esp+8], eax",
                    "139": "mov     eax, offset aSD; \"%s():%d\\n\"",
                    "140": "mov     [esp+4], eax",
                    "141": "mov     [esp+0Ch], esi",
                    "142": "call    __drm_dbg",
                    "143": "mov     edx, [ebp+var_1C]",
                    "144": "mov     edx, [edx+4D0h]",
                    "145": "movzx   eax, byte ptr [edx+0E65Ch]",
                    "146": "shr     al, 2",
                    "147": "and     al, 7",
                    "148": "movzx   ecx, al",
                    "149": "mov     eax, [ebp+var_10]",
                    "150": "add     edx, 4",
                    "151": "mov     eax, [eax]",
                    "152": "mov     esi, [eax+6Ch]",
                    "153": "mov     eax, [ebp+var_10]",
                    "154": "call    __x86_indirect_thunk_esi",
                    "155": "mov     eax, [ebp+var_1C]",
                    "156": "mov     edx, [ebp+var_18]",
                    "157": "mov     eax, [eax+4D0h]",
                    "158": "movzx   ecx, byte ptr [eax+0E65Ch]",
                    "159": "mov     eax, [ebp+var_10]",
                    "160": "shr     cl, 2",
                    "161": "mov     eax, [eax]",
                    "162": "and     cl, 7",
                    "163": "movzx   ecx, cl",
                    "164": "mov     esi, [eax+64h]",
                    "165": "mov     eax, [ebp+var_10]",
                    "166": "call    __x86_indirect_thunk_esi",
                    "167": "mov     byte ptr [ebp+var_18], al",
                    "168": "test    al, al",
                    "169": "jz      INSTR62",
                    "170": "mov     eax, [ebp+var_10]",
                    "171": "mov     eax, [eax]",
                    "172": "mov     esi, [eax+48h]",
                    "173": "jmp     INSTR24",
                    "174": "cmp     dl, 4",
                    "175": "jz      short INSTR195",
                    "176": "xor     ecx, ecx",
                    "177": "cmp     dl, 8",
                    "178": "jnz     INSTR104",
                    "179": "mov     ecx, [eax+0E65Ch]",
                    "180": "shr     ecx, 0Dh",
                    "181": "and     ecx, 0Fh",
                    "182": "jmp     INSTR104",
                    "183": "mov     eax, [edx+0BCh]",
                    "184": "mov     ecx, 1",
                    "185": "lea     edx, [eax+9630h]",
                    "186": "mov     eax, [ebp+var_18]",
                    "187": "mov     [ebp+var_20], edx",
                    "188": "call    cm_helper_translate_curve_to_hw_format",
                    "189": "mov     edx, [ebp+var_20]",
                    "190": "mov     [ebp+var_18], edx",
                    "191": "jmp     INSTR47",
                    "192": "mov     byte ptr [ebp+var_18], 0",
                    "193": "lea     edi, [eax+10h]",
                    "194": "jmp     INSTR24",
                    "195": "movzx   ecx, byte ptr [eax+0E65Dh]",
                    "196": "shr     cl, 1",
                    "197": "and     cl, 0Fh",
                    "198": "movzx   ecx, cl",
                    "199": "jmp     INSTR104",
                    "200": "mov     ebx, [ebp+var_10]",
                    "201": "xor     ecx, ecx",
                    "202": "add     ebx, 200h",
                    "203": "mov     edx, ebx",
                    "204": "call    cm3_helper_translate_curve_to_hw_format",
                    "205": "test    al, al",
                    "206": "mov     eax, [ebp+var_1C]",
                    "207": "mov     eax, [eax+248h]",
                    "208": "mov     edx, [eax+4]",
                    "209": "jz      INSTR79",
                    "210": "mov     edi, ebx",
                    "211": "jmp     INSTR79"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     rax, [rsi+0B8h]",
                    "8": "mov     rcx, [rsi+0E8h]",
                    "9": "mov     r14d, [rax+88h]",
                    "10": "mov     rax, [rcx]",
                    "11": "mov     rax, [rax]",
                    "12": "mov     rax, [rax+3D8h]",
                    "13": "mov     r13, [rax+1B8h]",
                    "14": "cmp     qword ptr [rsi+290h], 0",
                    "15": "jz      short INSTR32",
                    "16": "xor     ebx, ebx",
                    "17": "xor     ebp, ebp",
                    "18": "mov     rax, [r13+0]",
                    "19": "mov     r11, [rax+90h]",
                    "20": "mov     rdi, r13",
                    "21": "mov     esi, r14d",
                    "22": "mov     rdx, rbx",
                    "23": "call    __x86_indirect_thunk_r11; PIC mode",
                    "24": "mov     eax, ebp",
                    "25": "pop     rbx",
                    "26": "pop     r12",
                    "27": "pop     r13",
                    "28": "pop     r14",
                    "29": "pop     r15",
                    "30": "pop     rbp",
                    "31": "retn",
                    "32": "mov     r15, rdx",
                    "33": "mov     rbp, rsi",
                    "34": "mov     r12, [rdx+520h]",
                    "35": "test    r12, r12",
                    "36": "jz      short INSTR44",
                    "37": "mov     eax, [r12+4]",
                    "38": "cmp     eax, 1",
                    "39": "jz      short INSTR46",
                    "40": "cmp     eax, 3",
                    "41": "jnz     short INSTR44",
                    "42": "add     r12, 10h",
                    "43": "jmp     short INSTR53",
                    "44": "xor     r12d, r12d",
                    "45": "jmp     short INSTR53",
                    "46": "mov     rbx, [rbp+0D8h]",
                    "47": "add     rbx, 9648h",
                    "48": "mov     rdi, r12",
                    "49": "mov     rsi, rbx",
                    "50": "mov     edx, 1",
                    "51": "call    cm_helper_translate_curve_to_hw_format; PIC mode",
                    "52": "mov     r12, rbx",
                    "53": "mov     rax, [r15+528h]",
                    "54": "test    rax, rax",
                    "55": "jz      short INSTR73",
                    "56": "mov     eax, [rax+0E660h]",
                    "57": "mov     ecx, eax",
                    "58": "not     ecx",
                    "59": "test    cl, 3",
                    "60": "jnz     short INSTR73",
                    "61": "mov     edx, eax",
                    "62": "shr     edx, 2",
                    "63": "and     edx, 7",
                    "64": "cmp     edx, 2",
                    "65": "jz      INSTR107",
                    "66": "cmp     edx, 1",
                    "67": "jz      INSTR109",
                    "68": "xor     ecx, ecx",
                    "69": "test    edx, edx",
                    "70": "jnz     INSTR112",
                    "71": "shr     eax, 5",
                    "72": "jmp     INSTR110",
                    "73": "mov     rax, [r13+0]",
                    "74": "mov     r11, [rax+0E0h]",
                    "75": "mov     rdi, r13",
                    "76": "mov     esi, r14d",
                    "77": "call    __x86_indirect_thunk_r11; PIC mode",
                    "78": "mov     rax, [r13+0]",
                    "79": "cmp     qword ptr [rax+90h], 0",
                    "80": "jz      INSTR16",
                    "81": "mov     rbx, [r15+258h]",
                    "82": "test    rbx, rbx",
                    "83": "jz      INSTR16",
                    "84": "mov     eax, [rbx+4]",
                    "85": "cmp     eax, 3",
                    "86": "jnz     short INSTR89",
                    "87": "add     rbx, 10h",
                    "88": "jmp     INSTR17",
                    "89": "mov     rcx, [rbp+8]",
                    "90": "mov     rcx, [rcx+258h]",
                    "91": "cmp     dword ptr [rcx+4], 1",
                    "92": "jnz     INSTR163",
                    "93": "lea     r12, [r13+220h]",
                    "94": "xor     ebp, ebp",
                    "95": "mov     rdi, rbx",
                    "96": "mov     rsi, r12",
                    "97": "xor     edx, edx",
                    "98": "call    cm3_helper_translate_curve_to_hw_format; PIC mode",
                    "99": "test    al, al",
                    "100": "cmovnz  rbp, r12",
                    "101": "mov     rax, [r15+258h]",
                    "102": "mov     eax, [rax+4]",
                    "103": "mov     rbx, rbp",
                    "104": "test    eax, eax",
                    "105": "jnz     INSTR17",
                    "106": "jmp     INSTR166",
                    "107": "shr     eax, 0Dh",
                    "108": "jmp     short INSTR110",
                    "109": "shr     eax, 9",
                    "110": "and     eax, 0Fh",
                    "111": "mov     ecx, eax",
                    "112": "cmp     ecx, r14d",
                    "113": "jz      short INSTR123",
                    "114": "mov     edi, 2",
                    "115": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "116": "mov     rdx, offset aDcn30SetMpcSha; \"dcn30_set_mpc_shaper_3dlut\"",
                    "117": "mov     ecx, 7Dh ; '}'",
                    "118": "call    __drm_dbg; PIC mode",
                    "119": "mov     rax, [r15+528h]",
                    "120": "mov     edx, [rax+0E660h]",
                    "121": "shr     edx, 2",
                    "122": "and     edx, 7",
                    "123": "mov     rax, [r13+0]",
                    "124": "mov     r11, [rax+0D0h]",
                    "125": "mov     rdi, r13",
                    "126": "mov     esi, r14d",
                    "127": "call    __x86_indirect_thunk_r11; PIC mode",
                    "128": "mov     rsi, [r15+528h]",
                    "129": "mov     ecx, [rsi+0E660h]",
                    "130": "shr     ecx, 2",
                    "131": "and     ecx, 7",
                    "132": "cmp     eax, ecx",
                    "133": "jz      short INSTR143",
                    "134": "mov     edi, 2",
                    "135": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "136": "mov     rdx, offset aDcn30SetMpcSha; \"dcn30_set_mpc_shaper_3dlut\"",
                    "137": "mov     ecx, 82h",
                    "138": "call    __drm_dbg; PIC mode",
                    "139": "mov     rsi, [r15+528h]",
                    "140": "mov     eax, [rsi+0E660h]",
                    "141": "shr     eax, 2",
                    "142": "and     eax, 7",
                    "143": "mov     rcx, [r13+0]",
                    "144": "mov     r11, [rcx+0D8h]",
                    "145": "add     rsi, 4",
                    "146": "mov     rdi, r13",
                    "147": "mov     edx, eax",
                    "148": "call    __x86_indirect_thunk_r11; PIC mode",
                    "149": "mov     rax, [r13+0]",
                    "150": "mov     r11, [rax+0C8h]",
                    "151": "mov     rax, [r15+528h]",
                    "152": "mov     edx, [rax+0E660h]",
                    "153": "shr     edx, 2",
                    "154": "and     edx, 7",
                    "155": "mov     rdi, r13",
                    "156": "mov     rsi, r12",
                    "157": "call    __x86_indirect_thunk_r11; PIC mode",
                    "158": "test    al, al",
                    "159": "jz      INSTR78",
                    "160": "mov     bpl, 1",
                    "161": "xor     ebx, ebx",
                    "162": "jmp     INSTR18",
                    "163": "xor     ebx, ebx",
                    "164": "test    eax, eax",
                    "165": "jnz     INSTR17",
                    "166": "mov     edi, 2",
                    "167": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "168": "mov     rdx, offset aDcn30SetOutput; \"dcn30_set_output_transfer_func\"",
                    "169": "mov     ecx, 0D3h",
                    "170": "call    __drm_dbg; PIC mode",
                    "171": "jmp     INSTR17"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "sub     rsp, 8",
                    "8": "mov     rax, [rsi+0B8h]",
                    "9": "mov     r12, [rsi+290h]",
                    "10": "mov     r14d, [rax+88h]",
                    "11": "mov     rax, [rsi+0E8h]",
                    "12": "mov     rax, [rax]",
                    "13": "mov     rax, [rax]",
                    "14": "mov     rax, [rax+3D8h]",
                    "15": "mov     r13, [rax+1B8h]",
                    "16": "test    r12, r12",
                    "17": "jz      short INSTR35",
                    "18": "mov     rax, [r13+0]",
                    "19": "xor     r15d, r15d",
                    "20": "xor     r12d, r12d",
                    "21": "mov     rax, [rax+90h]",
                    "22": "mov     rdx, r12",
                    "23": "mov     esi, r14d",
                    "24": "mov     rdi, r13",
                    "25": "call    __x86_indirect_thunk_rax; PIC mode",
                    "26": "mov     eax, r15d",
                    "27": "add     rsp, 8",
                    "28": "pop     rbx",
                    "29": "pop     rbp",
                    "30": "pop     r12",
                    "31": "pop     r13",
                    "32": "pop     r14",
                    "33": "pop     r15",
                    "34": "jmp     __x86_return_thunk; PIC mode",
                    "35": "mov     r15, [rdx+520h]",
                    "36": "mov     rbx, rsi",
                    "37": "mov     rbp, rdx",
                    "38": "test    r15, r15",
                    "39": "jz      short INSTR46",
                    "40": "mov     eax, [r15+4]",
                    "41": "cmp     eax, 3",
                    "42": "jz      INSTR87",
                    "43": "cmp     eax, 1",
                    "44": "jz      INSTR154",
                    "45": "xor     r15d, r15d",
                    "46": "mov     rax, [rbp+528h]",
                    "47": "test    rax, rax",
                    "48": "jz      short INSTR54",
                    "49": "movzx   edx, byte ptr [rax+0E660h]",
                    "50": "mov     ecx, edx",
                    "51": "and     ecx, 3",
                    "52": "cmp     cl, 3",
                    "53": "jz      INSTR89",
                    "54": "mov     rax, [r13+0]",
                    "55": "mov     esi, r14d",
                    "56": "mov     rdi, r13",
                    "57": "mov     rax, [rax+0E0h]",
                    "58": "call    __x86_indirect_thunk_rax; PIC mode",
                    "59": "mov     rax, [r13+0]",
                    "60": "xor     r15d, r15d",
                    "61": "mov     rax, [rax+90h]",
                    "62": "test    rax, rax",
                    "63": "jz      INSTR22",
                    "64": "mov     rdi, [rbp+258h]",
                    "65": "test    rdi, rdi",
                    "66": "jz      short INSTR85",
                    "67": "mov     edx, [rdi+4]",
                    "68": "cmp     edx, 3",
                    "69": "jz      INSTR163",
                    "70": "mov     rax, [rbx+8]",
                    "71": "mov     rax, [rax+258h]",
                    "72": "cmp     dword ptr [rax+4], 1",
                    "73": "jz      INSTR169",
                    "74": "test    edx, edx",
                    "75": "jnz     short INSTR81",
                    "76": "mov     ecx, 0D3h",
                    "77": "mov     rdx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "78": "mov     edi, 2",
                    "79": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "80": "call    __drm_dbg; PIC mode",
                    "81": "mov     rax, [r13+0]",
                    "82": "xor     r15d, r15d",
                    "83": "mov     rax, [rax+90h]",
                    "84": "jmp     INSTR22",
                    "85": "xor     r12d, r12d",
                    "86": "jmp     INSTR22",
                    "87": "add     r15, 10h",
                    "88": "jmp     INSTR46",
                    "89": "and     edx, 1Ch",
                    "90": "jnz     INSTR145",
                    "91": "movzx   ecx, word ptr [rax+0E660h]",
                    "92": "shr     cx, 5",
                    "93": "and     ecx, 0Fh",
                    "94": "cmp     r14d, ecx",
                    "95": "jz      short INSTR102",
                    "96": "mov     ecx, 7Dh ; '}'",
                    "97": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "98": "mov     edi, 2",
                    "99": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "100": "call    __drm_dbg; PIC mode",
                    "101": "mov     rax, [rbp+528h]",
                    "102": "movzx   edx, byte ptr [rax+0E660h]",
                    "103": "mov     rax, [r13+0]",
                    "104": "mov     esi, r14d",
                    "105": "mov     rdi, r13",
                    "106": "shr     dl, 2",
                    "107": "mov     rax, [rax+0D0h]",
                    "108": "and     edx, 7",
                    "109": "call    __x86_indirect_thunk_rax; PIC mode",
                    "110": "mov     rsi, [rbp+528h]",
                    "111": "movzx   edx, byte ptr [rsi+0E660h]",
                    "112": "shr     dl, 2",
                    "113": "and     edx, 7",
                    "114": "cmp     eax, edx",
                    "115": "jz      short INSTR125",
                    "116": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "117": "mov     ecx, 82h",
                    "118": "mov     edi, 2",
                    "119": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "120": "call    __drm_dbg; PIC mode",
                    "121": "mov     rsi, [rbp+528h]",
                    "122": "movzx   edx, byte ptr [rsi+0E660h]",
                    "123": "shr     dl, 2",
                    "124": "and     edx, 7",
                    "125": "mov     rax, [r13+0]",
                    "126": "add     rsi, 4",
                    "127": "mov     rdi, r13",
                    "128": "mov     rax, [rax+0D8h]",
                    "129": "call    __x86_indirect_thunk_rax; PIC mode",
                    "130": "mov     rax, [rbp+528h]",
                    "131": "mov     rsi, r15",
                    "132": "mov     rdi, r13",
                    "133": "movzx   edx, byte ptr [rax+0E660h]",
                    "134": "mov     rax, [r13+0]",
                    "135": "shr     dl, 2",
                    "136": "mov     rax, [rax+0C8h]",
                    "137": "and     edx, 7",
                    "138": "call    __x86_indirect_thunk_rax; PIC mode",
                    "139": "mov     r15d, eax",
                    "140": "test    al, al",
                    "141": "jz      INSTR59",
                    "142": "mov     rax, [r13+0]",
                    "143": "mov     rax, [rax+90h]",
                    "144": "jmp     INSTR22",
                    "145": "cmp     dl, 4",
                    "146": "jz      short INSTR165",
                    "147": "xor     ecx, ecx",
                    "148": "cmp     dl, 8",
                    "149": "jnz     INSTR94",
                    "150": "mov     ecx, [rax+0E660h]",
                    "151": "shr     ecx, 0Dh",
                    "152": "and     ecx, 0Fh",
                    "153": "jmp     INSTR94",
                    "154": "mov     rax, [rsi+0D8h]",
                    "155": "mov     rdi, r15",
                    "156": "mov     edx, 1",
                    "157": "lea     rcx, [rax+9648h]",
                    "158": "mov     rsi, rcx",
                    "159": "mov     [rsp+38h+var_38], rcx",
                    "160": "call    cm_helper_translate_curve_to_hw_format; PIC mode",
                    "161": "mov     r15, [rsp+38h+var_38]",
                    "162": "jmp     INSTR46",
                    "163": "lea     r12, [rdi+10h]",
                    "164": "jmp     INSTR22",
                    "165": "movzx   ecx, byte ptr [rax+0E661h]",
                    "166": "shr     cl, 1",
                    "167": "and     ecx, 0Fh",
                    "168": "jmp     INSTR94",
                    "169": "lea     rbx, [r13+220h]",
                    "170": "xor     edx, edx",
                    "171": "mov     rsi, rbx",
                    "172": "call    cm3_helper_translate_curve_to_hw_format; PIC mode",
                    "173": "test    al, al",
                    "174": "mov     rax, [rbp+258h]",
                    "175": "mov     edx, [rax+4]",
                    "176": "jz      INSTR74",
                    "177": "mov     r12, rbx",
                    "178": "jmp     INSTR74"
                }
            },
            {
                "filename": "dcn30_hwseq.dcn30_set_output_transfer_func.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rax, [rsi+0B8h]",
                    "8": "cmp     qword ptr [rsi+290h], 0",
                    "9": "mov     r12d, [rax+88h]",
                    "10": "mov     rax, [rsi+0E8h]",
                    "11": "mov     rax, [rax]",
                    "12": "mov     rax, [rax]",
                    "13": "mov     rax, [rax+3D8h]",
                    "14": "mov     r13, [rax+1B8h]",
                    "15": "jz      short INSTR19",
                    "16": "xor     r14d, r14d",
                    "17": "xor     r15d, r15d",
                    "18": "jmp     INSTR151",
                    "19": "mov     r14, [rdx+520h]",
                    "20": "mov     rbp, rsi",
                    "21": "mov     rbx, rdx",
                    "22": "test    r14, r14",
                    "23": "jz      short INSTR40",
                    "24": "mov     eax, [r14+4]",
                    "25": "cmp     eax, 3",
                    "26": "jnz     short INSTR29",
                    "27": "add     r14, 10h",
                    "28": "jmp     short INSTR40",
                    "29": "dec     eax",
                    "30": "jnz     short INSTR39",
                    "31": "mov     rax, [rsi+0D8h]",
                    "32": "mov     rdi, r14",
                    "33": "mov     edx, 1",
                    "34": "lea     r15, [rax+9648h]",
                    "35": "mov     rsi, r15",
                    "36": "mov     r14, r15",
                    "37": "call    cm_helper_translate_curve_to_hw_format; PIC mode",
                    "38": "jmp     short INSTR40",
                    "39": "xor     r14d, r14d",
                    "40": "mov     rcx, [rbx+528h]",
                    "41": "test    rcx, rcx",
                    "42": "jz      INSTR116",
                    "43": "mov     al, [rcx+0E660h]",
                    "44": "mov     edx, eax",
                    "45": "and     edx, 3",
                    "46": "cmp     dl, 3",
                    "47": "jnz     INSTR116",
                    "48": "and     al, 1Ch",
                    "49": "mov     edx, eax",
                    "50": "jnz     short INSTR54",
                    "51": "mov     eax, [rcx+0E660h]",
                    "52": "shr     ax, 5",
                    "53": "jmp     short INSTR64",
                    "54": "cmp     al, 4",
                    "55": "jnz     short INSTR59",
                    "56": "mov     al, [rcx+0E661h]",
                    "57": "shr     al, 1",
                    "58": "jmp     short INSTR64",
                    "59": "xor     eax, eax",
                    "60": "cmp     dl, 8",
                    "61": "jnz     short INSTR65",
                    "62": "mov     eax, [rcx+0E660h]",
                    "63": "shr     eax, 0Dh",
                    "64": "and     eax, 0Fh",
                    "65": "cmp     r12d, eax",
                    "66": "jz      short INSTR72",
                    "67": "mov     ecx, 7Dh ; '}'",
                    "68": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "69": "mov     edi, 2",
                    "70": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "71": "call    __drm_dbg; PIC mode",
                    "72": "mov     rax, [rbx+528h]",
                    "73": "mov     esi, r12d",
                    "74": "mov     rdi, r13",
                    "75": "mov     dl, [rax+0E660h]",
                    "76": "mov     rax, [r13+0]",
                    "77": "shr     dl, 2",
                    "78": "mov     rax, [rax+0D0h]",
                    "79": "and     edx, 7",
                    "80": "call    __x86_indirect_thunk_rax; PIC mode",
                    "81": "mov     r8d, eax",
                    "82": "mov     rax, [rbx+528h]",
                    "83": "mov     al, [rax+0E660h]",
                    "84": "shr     al, 2",
                    "85": "and     eax, 7",
                    "86": "cmp     r8d, eax",
                    "87": "jz      short INSTR93",
                    "88": "mov     ecx, 82h",
                    "89": "mov     rdx, offset __func___5; \"dcn30_set_mpc_shaper_3dlut\"",
                    "90": "mov     edi, 2",
                    "91": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "92": "call    __drm_dbg; PIC mode",
                    "93": "mov     rsi, [rbx+528h]",
                    "94": "mov     rax, [r13+0]",
                    "95": "mov     rdi, r13",
                    "96": "xor     r15d, r15d",
                    "97": "mov     dl, [rsi+0E660h]",
                    "98": "mov     rax, [rax+0D8h]",
                    "99": "add     rsi, 4",
                    "100": "shr     dl, 2",
                    "101": "and     edx, 7",
                    "102": "call    __x86_indirect_thunk_rax; PIC mode",
                    "103": "mov     rax, [rbx+528h]",
                    "104": "mov     rsi, r14",
                    "105": "mov     rdi, r13",
                    "106": "mov     dl, [rax+0E660h]",
                    "107": "mov     rax, [r13+0]",
                    "108": "shr     dl, 2",
                    "109": "mov     rax, [rax+0C8h]",
                    "110": "and     edx, 7",
                    "111": "call    __x86_indirect_thunk_rax; PIC mode",
                    "112": "mov     r14d, eax",
                    "113": "test    al, al",
                    "114": "jnz     INSTR151",
                    "115": "jmp     short INSTR121",
                    "116": "mov     rax, [r13+0]",
                    "117": "mov     esi, r12d",
                    "118": "mov     rdi, r13",
                    "119": "mov     rax, [rax+0E0h]",
                    "120": "call    __x86_indirect_thunk_rax; PIC mode",
                    "121": "mov     rax, [r13+0]",
                    "122": "cmp     qword ptr [rax+90h], 0",
                    "123": "jz      INSTR16",
                    "124": "mov     rdi, [rbx+258h]",
                    "125": "test    rdi, rdi",
                    "126": "jz      INSTR16",
                    "127": "cmp     dword ptr [rdi+4], 3",
                    "128": "lea     r15, [rdi+10h]",
                    "129": "jz      short INSTR142",
                    "130": "mov     rax, [rbp+8]",
                    "131": "mov     rax, [rax+258h]",
                    "132": "cmp     dword ptr [rax+4], 1",
                    "133": "jz      short INSTR136",
                    "134": "xor     r15d, r15d",
                    "135": "jmp     short INSTR142",
                    "136": "lea     r15, [r13+220h]",
                    "137": "xor     edx, edx",
                    "138": "mov     rsi, r15",
                    "139": "call    cm3_helper_translate_curve_to_hw_format; PIC mode",
                    "140": "test    al, al",
                    "141": "jz      short INSTR134",
                    "142": "mov     rax, [rbx+258h]",
                    "143": "xor     r14d, r14d",
                    "144": "cmp     dword ptr [rax+4], 0",
                    "145": "jnz     short INSTR151",
                    "146": "mov     ecx, 0D3h",
                    "147": "mov     rdx, offset __func___6; \"dcn30_set_output_transfer_func\"",
                    "148": "mov     edi, 2",
                    "149": "mov     rsi, offset aSD; \"%s():%d\\n\"",
                    "150": "call    __drm_dbg; PIC mode",
                    "151": "mov     rax, [r13+0]",
                    "152": "mov     rdx, r15",
                    "153": "mov     esi, r12d",
                    "154": "mov     rdi, r13",
                    "155": "mov     rax, [rax+90h]",
                    "156": "call    __x86_indirect_thunk_rax; PIC mode",
                    "157": "mov     eax, r14d",
                    "158": "pop     rbx",
                    "159": "pop     rbp",
                    "160": "pop     r12",
                    "161": "pop     r13",
                    "162": "pop     r14",
                    "163": "pop     r15",
                    "164": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47723",
        "files": [
            {
                "filename": "jfs_dmap.dbMount.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ecx, 660h",
                    "3": "mov     ebp, esp",
                    "4": "mov     edx, 0CC0h",
                    "5": "push    edi",
                    "6": "mov     edi, eax",
                    "7": "push    esi",
                    "8": "push    ebx",
                    "9": "sub     esp, 14h",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "mov     eax, dword ptr ds:kmalloc_caches+2Ch",
                    "12": "call    kmem_cache_alloc_trace",
                    "13": "test    eax, eax",
                    "14": "jz      INSTR129",
                    "15": "mov     dword ptr [esp], 0",
                    "16": "mov     ebx, eax",
                    "17": "xor     eax, eax",
                    "18": "mov     [esp+4], eax",
                    "19": "xor     edx, edx",
                    "20": "mov     ecx, 1000h",
                    "21": "mov     eax, edi",
                    "22": "call    __get_metapage",
                    "23": "test    eax, eax",
                    "24": "jz      INSTR127",
                    "25": "mov     edx, [eax+1Ch]",
                    "26": "mov     esi, [edx]",
                    "27": "mov     edi, [edx+4]",
                    "28": "mov     [ebx], esi",
                    "29": "mov     [ebx+4], edi",
                    "30": "mov     [ebp+var_18], esi",
                    "31": "mov     esi, [edx+8]",
                    "32": "mov     [ebp+var_14], edi",
                    "33": "mov     edi, [edx+0Ch]",
                    "34": "mov     [ebx+8], esi",
                    "35": "mov     [ebx+0Ch], edi",
                    "36": "mov     ecx, [edx+10h]",
                    "37": "mov     [ebx+10h], ecx",
                    "38": "cmp     ecx, 3",
                    "39": "ja      short INSTR55",
                    "40": "mov     ecx, [edx+14h]",
                    "41": "mov     [ebx+14h], ecx",
                    "42": "test    ecx, ecx",
                    "43": "jz      short INSTR55",
                    "44": "cmp     ecx, 7Fh",
                    "45": "jg      short INSTR55",
                    "46": "mov     ecx, [edx+18h]",
                    "47": "mov     [ebx+18h], ecx",
                    "48": "mov     esi, [edx+1Ch]",
                    "49": "mov     [ebx+1Ch], esi",
                    "50": "mov     ecx, [edx+20h]",
                    "51": "mov     [ebx+20h], ecx",
                    "52": "or      ecx, esi",
                    "53": "cmp     ecx, 7Fh",
                    "54": "jbe     short INSTR66",
                    "55": "call    release_metapage",
                    "56": "mov     esi, 0FFFFFFEAh",
                    "57": "mov     eax, ebx",
                    "58": "call    kfree",
                    "59": "add     esp, 14h",
                    "60": "mov     eax, esi",
                    "61": "pop     ebx",
                    "62": "pop     esi",
                    "63": "pop     edi",
                    "64": "pop     ebp",
                    "65": "retn",
                    "66": "mov     ecx, [edx+24h]",
                    "67": "mov     [ebx+24h], ecx",
                    "68": "mov     ecx, [edx+28h]",
                    "69": "mov     [ebx+28h], ecx",
                    "70": "mov     ecx, [edx+2Ch]",
                    "71": "mov     [ebx+2Ch], ecx",
                    "72": "mov     ecx, [edx+30h]",
                    "73": "mov     [ebx+30h], ecx",
                    "74": "mov     ecx, [edx+34h]",
                    "75": "mov     [ebx+34h], ecx",
                    "76": "cmp     ecx, 24h ; '$'",
                    "77": "ja      short INSTR55",
                    "78": "mov     esi, [ebp+var_18]",
                    "79": "mov     edi, [ebp+var_14]",
                    "80": "add     esi, 0FFFFFFFFh",
                    "81": "adc     edi, 0FFFFFFFFh",
                    "82": "shrd    esi, edi, cl",
                    "83": "sar     edi, cl",
                    "84": "test    cl, 20h",
                    "85": "jz      short INSTR88",
                    "86": "mov     esi, edi",
                    "87": "sar     edi, 1Fh",
                    "88": "mov     ecx, 80h",
                    "89": "cmp     ecx, esi",
                    "90": "mov     ecx, 0",
                    "91": "sbb     ecx, edi",
                    "92": "jl      short INSTR55",
                    "93": "xor     ecx, ecx",
                    "94": "mov     esi, [edx+ecx*8+38h]",
                    "95": "mov     edi, [edx+ecx*8+3Ch]",
                    "96": "mov     [ebx+ecx*8+38h], esi",
                    "97": "mov     [ebx+ecx*8+3Ch], edi",
                    "98": "inc     ecx",
                    "99": "cmp     ecx, 80h",
                    "100": "jnz     short INSTR94",
                    "101": "mov     esi, [edx+438h]",
                    "102": "mov     edi, [edx+43Ch]",
                    "103": "mov     [ebx+438h], esi",
                    "104": "mov     [ebx+43Ch], edi",
                    "105": "movzx   edx, byte ptr [edx+440h]",
                    "106": "mov     [ebx+440h], dl",
                    "107": "call    release_metapage",
                    "108": "mov     eax, [ebp+var_10]",
                    "109": "lea     ecx, [ebx+45Ch]",
                    "110": "xor     edx, edx",
                    "111": "mov     [ebx+444h], eax",
                    "112": "mov     eax, [eax+1Ch]",
                    "113": "mov     eax, [eax+1FCh]",
                    "114": "mov     [eax+7Ch], ebx",
                    "115": "xor     eax, eax",
                    "116": "mov     [ecx+eax], edx",
                    "117": "mov     [ecx+eax+4], edx",
                    "118": "add     eax, 8",
                    "119": "cmp     eax, 200h",
                    "120": "jb      short INSTR116",
                    "121": "lea     eax, [ebx+448h]",
                    "122": "mov     ecx, offset __key_0",
                    "123": "mov     edx, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "124": "xor     esi, esi",
                    "125": "call    __mutex_init",
                    "126": "jmp     INSTR59",
                    "127": "mov     esi, 0FFFFFFFBh",
                    "128": "jmp     INSTR57",
                    "129": "mov     esi, 0FFFFFFF4h",
                    "130": "jmp     INSTR59"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_30]!",
                    "3": "ADRP            X1, #gic_nonsecure_priorities@PAGE",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x30+var_20]",
                    "6": "MOV             X20, X0",
                    "7": "MOV             X2, #0x678",
                    "8": "LDR             X0, [X1,#gic_nonsecure_priorities@PAGEOFF]",
                    "9": "MOV             W1, #0xCC0",
                    "10": "STR             X21, [SP,#0x30+var_10]",
                    "11": "BL              kmem_cache_alloc_trace",
                    "12": "CBZ             X0, loc_1E98",
                    "13": "MOV             X19, X0",
                    "14": "MOV             X4, #0",
                    "15": "MOV             X0, X20",
                    "16": "MOV             W3, #0",
                    "17": "MOV             W2, #0x1000",
                    "18": "MOV             X1, #0",
                    "19": "BL              __get_metapage",
                    "20": "CBZ             X0, loc_1E90",
                    "21": "LDR             X2, [X0,#0x30]",
                    "22": "LDR             X3, [X2]",
                    "23": "STR             X3, [X19]",
                    "24": "LDR             X1, [X2,#8]",
                    "25": "STR             X1, [X19,#8]",
                    "26": "LDR             W1, [X2,#0x10]",
                    "27": "STR             W1, [X19,#0x10]",
                    "28": "CMP             W1, #3",
                    "29": "B.HI            loc_1DBC",
                    "30": "LDR             W1, [X2,#0x14]",
                    "31": "STR             W1, [X19,#0x14]",
                    "32": "CMP             W1, #0x7F",
                    "33": "CCMP            W1, #0, #4, LE",
                    "34": "B.EQ            loc_1DBC",
                    "35": "LDR             W1, [X2,#0x18]",
                    "36": "STR             W1, [X19,#0x18]",
                    "37": "LDR             W1, [X2,#0x1C]",
                    "38": "STR             W1, [X19,#0x1C]",
                    "39": "LDR             W4, [X2,#0x20]",
                    "40": "STR             W4, [X19,#0x20]",
                    "41": "ORR             W1, W1, W4",
                    "42": "CMP             W1, #0x7F",
                    "43": "B.LS            loc_1DE4",
                    "44": "MOV             W21, #0xFFFFFFEA",
                    "45": "BL              release_metapage",
                    "46": "MOV             X0, X19",
                    "47": "BL              kfree",
                    "48": "MOV             W0, W21",
                    "49": "LDP             X19, X20, [SP,#0x30+var_20]",
                    "50": "LDR             X21, [SP,#0x30+var_10]",
                    "51": "LDP             X29, X30, [SP+0x30+var_30],#0x30",
                    "52": "AUTIASP",
                    "53": "RET",
                    "54": "LDR             W1, [X2,#0x24]",
                    "55": "STR             W1, [X19,#0x24]",
                    "56": "LDR             W1, [X2,#0x28]",
                    "57": "STR             W1, [X19,#0x28]",
                    "58": "LDR             W1, [X2,#0x2C]",
                    "59": "STR             W1, [X19,#0x2C]",
                    "60": "LDR             W1, [X2,#0x30]",
                    "61": "STR             W1, [X19,#0x30]",
                    "62": "LDR             W4, [X2,#0x34]",
                    "63": "STR             W4, [X19,#0x34]",
                    "64": "CMP             W4, #0x24 ; '$'",
                    "65": "B.HI            loc_1DBC",
                    "66": "SUB             X1, X3, #1",
                    "67": "ASR             X1, X1, X4",
                    "68": "CMP             X1, #0x80",
                    "69": "B.GT            loc_1DBC",
                    "70": "MOV             X1, #0x38 ; '8'",
                    "71": "LDR             X3, [X2,X1]",
                    "72": "STR             X3, [X19,X1]",
                    "73": "ADD             X1, X1, #8",
                    "74": "CMP             X1, #0x438",
                    "75": "B.NE            loc_1E28",
                    "76": "LDR             X1, [X2,#0x438]",
                    "77": "STR             X1, [X19,#0x438]",
                    "78": "MOV             W21, #0",
                    "79": "LDRSB           W1, [X2,#0x440]",
                    "80": "STRB            W1, [X19,#0x440]",
                    "81": "BL              release_metapage",
                    "82": "STR             X20, [X19,#0x448]",
                    "83": "LDR             X3, [X20,#0x28]",
                    "84": "ADD             X0, X19, #0x470; s",
                    "85": "MOV             X2, #0x200; n",
                    "86": "MOV             W1, #0; c",
                    "87": "LDR             X3, [X3,#0x370]",
                    "88": "STR             X19, [X3,#0xA0]",
                    "89": "BL              memset",
                    "90": "ADD             X0, X19, #0x450",
                    "91": "ADRP            X2, #__key.0@PAGE",
                    "92": "ADRP            X1, #aBmpDbBmaplock@PAGE; \"&bmp->db_bmaplock\"",
                    "93": "ADD             X2, X2, #__key.0@PAGEOFF",
                    "94": "ADD             X1, X1, #aBmpDbBmaplock@PAGEOFF; \"&bmp->db_bmaplock\"",
                    "95": "BL              __mutex_init",
                    "96": "B               loc_1DCC",
                    "97": "MOV             W21, #0xFFFFFFFB",
                    "98": "B               loc_1DC4",
                    "99": "MOV             W21, #0xFFFFFFF4",
                    "100": "B               loc_1DCC"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r14",
                    "3": "push    rbx",
                    "4": "mov     r14, rdi",
                    "5": "mov     rdi, qword ptr cs:kmalloc_caches+58h",
                    "6": "mov     edx, 678h",
                    "7": "mov     esi, 0CC0h",
                    "8": "call    kmem_cache_alloc_trace; PIC mode",
                    "9": "test    rax, rax",
                    "10": "jz      INSTR67",
                    "11": "mov     rbx, rax",
                    "12": "mov     rdi, r14",
                    "13": "xor     esi, esi",
                    "14": "mov     edx, 1000h",
                    "15": "xor     ecx, ecx",
                    "16": "xor     r8d, r8d",
                    "17": "call    __get_metapage; PIC mode",
                    "18": "test    rax, rax",
                    "19": "jz      INSTR69",
                    "20": "mov     rdx, [rax+30h]",
                    "21": "mov     rsi, [rdx]",
                    "22": "mov     [rbx], rsi",
                    "23": "mov     rcx, [rdx+8]",
                    "24": "mov     [rbx+8], rcx",
                    "25": "mov     ecx, [rdx+10h]",
                    "26": "mov     [rbx+10h], ecx",
                    "27": "cmp     ecx, 3",
                    "28": "ja      short INSTR63",
                    "29": "mov     ecx, [rdx+14h]",
                    "30": "mov     [rbx+14h], ecx",
                    "31": "test    ecx, ecx",
                    "32": "jz      short INSTR63",
                    "33": "cmp     ecx, 7Fh",
                    "34": "jg      short INSTR63",
                    "35": "mov     ecx, [rdx+18h]",
                    "36": "mov     [rbx+18h], ecx",
                    "37": "mov     edi, [rdx+1Ch]",
                    "38": "mov     [rbx+1Ch], edi",
                    "39": "mov     ecx, [rdx+20h]",
                    "40": "mov     [rbx+20h], ecx",
                    "41": "cmp     edi, 7Fh",
                    "42": "ja      short INSTR63",
                    "43": "cmp     ecx, 7Fh",
                    "44": "jg      short INSTR63",
                    "45": "test    ecx, ecx",
                    "46": "js      short INSTR63",
                    "47": "mov     ecx, [rdx+24h]",
                    "48": "mov     [rbx+24h], ecx",
                    "49": "mov     ecx, [rdx+28h]",
                    "50": "mov     [rbx+28h], ecx",
                    "51": "mov     ecx, [rdx+2Ch]",
                    "52": "mov     [rbx+2Ch], ecx",
                    "53": "mov     ecx, [rdx+30h]",
                    "54": "mov     [rbx+30h], ecx",
                    "55": "mov     ecx, [rdx+34h]",
                    "56": "mov     [rbx+34h], ecx",
                    "57": "cmp     rcx, 24h ; '$'",
                    "58": "ja      short INSTR63",
                    "59": "add     rsi, 0FFFFFFFFFFFFFFFFh",
                    "60": "sar     rsi, cl",
                    "61": "cmp     rsi, 80h",
                    "62": "jle     short INSTR77",
                    "63": "mov     rdi, rax",
                    "64": "call    release_metapage; PIC mode",
                    "65": "mov     ebp, 0FFFFFFEAh",
                    "66": "jmp     short INSTR70",
                    "67": "mov     ebp, 0FFFFFFF4h",
                    "68": "jmp     short INSTR72",
                    "69": "mov     ebp, 0FFFFFFFBh",
                    "70": "mov     rdi, rbx",
                    "71": "call    kfree; PIC mode",
                    "72": "mov     eax, ebp",
                    "73": "pop     rbx",
                    "74": "pop     r14",
                    "75": "pop     rbp",
                    "76": "retn",
                    "77": "mov     ecx, 0Ah",
                    "78": "mov     rsi, [rdx+rcx*8-18h]",
                    "79": "mov     [rbx+rcx*8-18h], rsi",
                    "80": "mov     rsi, [rdx+rcx*8-10h]",
                    "81": "mov     [rbx+rcx*8-10h], rsi",
                    "82": "mov     rsi, [rdx+rcx*8-8]",
                    "83": "mov     [rbx+rcx*8-8], rsi",
                    "84": "mov     rsi, [rdx+rcx*8]",
                    "85": "mov     [rbx+rcx*8], rsi",
                    "86": "add     rcx, 4",
                    "87": "cmp     rcx, 8Ah",
                    "88": "jnz     short INSTR78",
                    "89": "mov     rcx, [rdx+438h]",
                    "90": "mov     [rbx+438h], rcx",
                    "91": "mov     cl, [rdx+440h]",
                    "92": "mov     [rbx+440h], cl",
                    "93": "mov     rdi, rax",
                    "94": "call    release_metapage; PIC mode",
                    "95": "mov     [rbx+448h], r14",
                    "96": "mov     rax, [r14+28h]",
                    "97": "mov     rax, [rax+370h]",
                    "98": "mov     [rax+0A0h], rbx",
                    "99": "lea     rdi, [rbx+470h]; s",
                    "100": "xor     ebp, ebp",
                    "101": "mov     edx, 200h; n",
                    "102": "xor     esi, esi; c",
                    "103": "call    memset; PIC mode",
                    "104": "add     rbx, 450h",
                    "105": "mov     rdi, rbx",
                    "106": "mov     rsi, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "107": "mov     rdx, offset dbMount___key",
                    "108": "call    __mutex_init; PIC mode",
                    "109": "jmp     INSTR72"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "mov     edx, 678h",
                    "3": "mov     esi, 0CC0h",
                    "4": "push    rbp",
                    "5": "push    rbx",
                    "6": "mov     rbx, rdi",
                    "7": "mov     rdi, qword ptr cs:kmalloc_caches+58h",
                    "8": "call    kmem_cache_alloc_trace; PIC mode",
                    "9": "test    rax, rax",
                    "10": "jz      INSTR98",
                    "11": "mov     rdi, rbx",
                    "12": "xor     r8d, r8d",
                    "13": "xor     ecx, ecx",
                    "14": "mov     edx, 1000h",
                    "15": "xor     esi, esi",
                    "16": "mov     rbp, rax",
                    "17": "call    __get_metapage; PIC mode",
                    "18": "mov     rdi, rax",
                    "19": "test    rax, rax",
                    "20": "jz      INSTR96",
                    "21": "mov     rdx, [rax+30h]",
                    "22": "mov     rsi, [rdx]",
                    "23": "mov     [rbp+0], rsi",
                    "24": "mov     rax, [rdx+8]",
                    "25": "mov     [rbp+8], rax",
                    "26": "mov     eax, [rdx+10h]",
                    "27": "mov     [rbp+10h], eax",
                    "28": "cmp     eax, 3",
                    "29": "ja      short INSTR45",
                    "30": "mov     eax, [rdx+14h]",
                    "31": "mov     [rbp+14h], eax",
                    "32": "test    eax, eax",
                    "33": "jz      short INSTR45",
                    "34": "cmp     eax, 7Fh",
                    "35": "jg      short INSTR45",
                    "36": "mov     eax, [rdx+18h]",
                    "37": "mov     [rbp+18h], eax",
                    "38": "mov     eax, [rdx+1Ch]",
                    "39": "mov     [rbp+1Ch], eax",
                    "40": "mov     ecx, [rdx+20h]",
                    "41": "or      eax, ecx",
                    "42": "mov     [rbp+20h], ecx",
                    "43": "cmp     eax, 7Fh",
                    "44": "jbe     short INSTR54",
                    "45": "call    release_metapage; PIC mode",
                    "46": "mov     r12d, 0FFFFFFEAh",
                    "47": "mov     rdi, rbp",
                    "48": "call    kfree; PIC mode",
                    "49": "mov     eax, r12d",
                    "50": "pop     rbx",
                    "51": "pop     rbp",
                    "52": "pop     r12",
                    "53": "jmp     __imp___x86_return_thunk; PIC mode",
                    "54": "mov     eax, [rdx+24h]",
                    "55": "mov     [rbp+24h], eax",
                    "56": "mov     eax, [rdx+28h]",
                    "57": "mov     [rbp+28h], eax",
                    "58": "mov     eax, [rdx+2Ch]",
                    "59": "mov     [rbp+2Ch], eax",
                    "60": "mov     eax, [rdx+30h]",
                    "61": "mov     [rbp+30h], eax",
                    "62": "mov     ecx, [rdx+34h]",
                    "63": "mov     [rbp+34h], ecx",
                    "64": "cmp     ecx, 24h ; '$'",
                    "65": "ja      short INSTR45",
                    "66": "sub     rsi, 1",
                    "67": "sar     rsi, cl",
                    "68": "cmp     rsi, 80h",
                    "69": "jg      short INSTR45",
                    "70": "mov     eax, 38h ; '8'",
                    "71": "mov     rcx, [rdx+rax]",
                    "72": "mov     [rbp+rax+0], rcx",
                    "73": "add     rax, 8",
                    "74": "cmp     rax, 438h",
                    "75": "jnz     short INSTR71",
                    "76": "mov     rax, [rdx+438h]",
                    "77": "xor     r12d, r12d",
                    "78": "mov     [rbp+438h], rax",
                    "79": "movzx   eax, byte ptr [rdx+440h]",
                    "80": "mov     [rbp+440h], al",
                    "81": "call    release_metapage; PIC mode",
                    "82": "mov     rax, [rbx+28h]",
                    "83": "mov     ecx, 40h ; '@'",
                    "84": "mov     [rbp+448h], rbx",
                    "85": "lea     rdx, [rbp+470h]",
                    "86": "mov     rsi, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "87": "mov     rax, [rax+370h]",
                    "88": "mov     rdi, rdx",
                    "89": "mov     rdx, offset __key_0",
                    "90": "mov     [rax+0A0h], rbp",
                    "91": "xor     eax, eax",
                    "92": "rep stosq",
                    "93": "lea     rdi, [rbp+450h]",
                    "94": "call    __mutex_init; PIC mode",
                    "95": "jmp     INSTR49",
                    "96": "mov     r12d, 0FFFFFFFBh",
                    "97": "jmp     INSTR47",
                    "98": "mov     r12d, 0FFFFFFF4h",
                    "99": "jmp     INSTR49"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r12",
                    "2": "mov     edx, 678h",
                    "3": "mov     esi, 0CC0h",
                    "4": "mov     r12d, 0FFFFFFF4h",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rbx, rdi",
                    "8": "mov     rdi, qword ptr cs:kmalloc_caches+58h",
                    "9": "call    kmem_cache_alloc_trace; PIC mode",
                    "10": "test    rax, rax",
                    "11": "jz      INSTR94",
                    "12": "mov     rdi, rbx",
                    "13": "xor     r8d, r8d",
                    "14": "xor     ecx, ecx",
                    "15": "mov     edx, 1000h",
                    "16": "xor     esi, esi",
                    "17": "mov     rbp, rax",
                    "18": "call    __get_metapage; PIC mode",
                    "19": "mov     rdi, rax",
                    "20": "test    rax, rax",
                    "21": "jz      INSTR91",
                    "22": "mov     rax, [rax+30h]",
                    "23": "mov     rdx, [rax]",
                    "24": "mov     [rbp+0], rdx",
                    "25": "mov     rcx, [rax+8]",
                    "26": "mov     [rbp+8], rcx",
                    "27": "mov     ecx, [rax+10h]",
                    "28": "mov     [rbp+10h], ecx",
                    "29": "cmp     ecx, 3",
                    "30": "ja      INSTR88",
                    "31": "mov     ecx, [rax+14h]",
                    "32": "mov     [rbp+14h], ecx",
                    "33": "test    ecx, ecx",
                    "34": "jz      INSTR88",
                    "35": "cmp     ecx, 7Fh",
                    "36": "jg      INSTR88",
                    "37": "mov     ecx, [rax+18h]",
                    "38": "mov     [rbp+18h], ecx",
                    "39": "mov     ecx, [rax+1Ch]",
                    "40": "mov     [rbp+1Ch], ecx",
                    "41": "mov     esi, [rax+20h]",
                    "42": "or      ecx, esi",
                    "43": "mov     [rbp+20h], esi",
                    "44": "cmp     ecx, 7Fh",
                    "45": "ja      INSTR88",
                    "46": "mov     ecx, [rax+24h]",
                    "47": "mov     [rbp+24h], ecx",
                    "48": "mov     ecx, [rax+28h]",
                    "49": "mov     [rbp+28h], ecx",
                    "50": "mov     ecx, [rax+2Ch]",
                    "51": "mov     [rbp+2Ch], ecx",
                    "52": "mov     ecx, [rax+30h]",
                    "53": "mov     [rbp+30h], ecx",
                    "54": "mov     ecx, [rax+34h]",
                    "55": "mov     [rbp+34h], ecx",
                    "56": "cmp     ecx, 24h ; '$'",
                    "57": "ja      INSTR88",
                    "58": "dec     rdx",
                    "59": "sar     rdx, cl",
                    "60": "cmp     rdx, 80h",
                    "61": "jg      INSTR88",
                    "62": "mov     edx, 38h ; '8'",
                    "63": "mov     rcx, [rax+rdx]",
                    "64": "mov     [rbp+rdx+0], rcx",
                    "65": "add     rdx, 8",
                    "66": "cmp     rdx, 438h",
                    "67": "jnz     short INSTR63",
                    "68": "mov     rdx, [rax+438h]",
                    "69": "xor     r12d, r12d",
                    "70": "mov     [rbp+438h], rdx",
                    "71": "mov     al, [rax+440h]",
                    "72": "mov     [rbp+440h], al",
                    "73": "call    release_metapage; PIC mode",
                    "74": "mov     rax, [rbx+28h]",
                    "75": "mov     ecx, 80h",
                    "76": "mov     [rbp+448h], rbx",
                    "77": "lea     rdx, [rbp+470h]",
                    "78": "mov     rsi, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "79": "mov     rax, [rax+370h]",
                    "80": "mov     rdi, rdx",
                    "81": "mov     rdx, offset __key_0",
                    "82": "mov     [rax+0A0h], rbp",
                    "83": "xor     eax, eax",
                    "84": "rep stosd",
                    "85": "lea     rdi, [rbp+450h]",
                    "86": "call    __mutex_init; PIC mode",
                    "87": "jmp     short INSTR94",
                    "88": "call    release_metapage; PIC mode",
                    "89": "mov     r12d, 0FFFFFFEAh",
                    "90": "jmp     short INSTR92",
                    "91": "mov     r12d, 0FFFFFFFBh",
                    "92": "mov     rdi, rbp",
                    "93": "call    kfree; PIC mode",
                    "94": "mov     eax, r12d",
                    "95": "pop     rbx",
                    "96": "pop     rbp",
                    "97": "pop     r12",
                    "98": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ecx, 660h",
                    "3": "mov     ebp, esp",
                    "4": "mov     edx, 0CC0h",
                    "5": "push    edi",
                    "6": "mov     edi, eax",
                    "7": "push    esi",
                    "8": "push    ebx",
                    "9": "sub     esp, 14h",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "mov     eax, dword ptr ds:kmalloc_caches+2Ch",
                    "12": "call    kmem_cache_alloc_trace",
                    "13": "test    eax, eax",
                    "14": "jz      INSTR127",
                    "15": "mov     dword ptr [esp], 0",
                    "16": "mov     ebx, eax",
                    "17": "xor     eax, eax",
                    "18": "mov     [esp+4], eax",
                    "19": "xor     edx, edx",
                    "20": "mov     ecx, 1000h",
                    "21": "mov     eax, edi",
                    "22": "call    __get_metapage",
                    "23": "test    eax, eax",
                    "24": "jz      INSTR125",
                    "25": "mov     edx, [eax+1Ch]",
                    "26": "mov     esi, [edx]",
                    "27": "mov     edi, [edx+4]",
                    "28": "mov     [ebx], esi",
                    "29": "mov     [ebx+4], edi",
                    "30": "mov     [ebp+var_18], esi",
                    "31": "mov     esi, [edx+8]",
                    "32": "mov     [ebp+var_14], edi",
                    "33": "mov     edi, [edx+0Ch]",
                    "34": "mov     [ebx+8], esi",
                    "35": "mov     [ebx+0Ch], edi",
                    "36": "mov     ecx, [edx+10h]",
                    "37": "mov     [ebx+10h], ecx",
                    "38": "cmp     ecx, 3",
                    "39": "ja      short INSTR53",
                    "40": "mov     ecx, [edx+14h]",
                    "41": "mov     [ebx+14h], ecx",
                    "42": "test    ecx, ecx",
                    "43": "jz      short INSTR53",
                    "44": "mov     ecx, [edx+18h]",
                    "45": "mov     [ebx+18h], ecx",
                    "46": "mov     esi, [edx+1Ch]",
                    "47": "mov     [ebx+1Ch], esi",
                    "48": "mov     ecx, [edx+20h]",
                    "49": "mov     [ebx+20h], ecx",
                    "50": "or      ecx, esi",
                    "51": "cmp     ecx, 7Fh",
                    "52": "jbe     short INSTR64",
                    "53": "call    release_metapage",
                    "54": "mov     esi, 0FFFFFFEAh",
                    "55": "mov     eax, ebx",
                    "56": "call    kfree",
                    "57": "add     esp, 14h",
                    "58": "mov     eax, esi",
                    "59": "pop     ebx",
                    "60": "pop     esi",
                    "61": "pop     edi",
                    "62": "pop     ebp",
                    "63": "retn",
                    "64": "mov     ecx, [edx+24h]",
                    "65": "mov     [ebx+24h], ecx",
                    "66": "mov     ecx, [edx+28h]",
                    "67": "mov     [ebx+28h], ecx",
                    "68": "mov     ecx, [edx+2Ch]",
                    "69": "mov     [ebx+2Ch], ecx",
                    "70": "mov     ecx, [edx+30h]",
                    "71": "mov     [ebx+30h], ecx",
                    "72": "mov     ecx, [edx+34h]",
                    "73": "mov     [ebx+34h], ecx",
                    "74": "cmp     ecx, 24h ; '$'",
                    "75": "ja      short INSTR53",
                    "76": "mov     esi, [ebp+var_18]",
                    "77": "mov     edi, [ebp+var_14]",
                    "78": "add     esi, 0FFFFFFFFh",
                    "79": "adc     edi, 0FFFFFFFFh",
                    "80": "shrd    esi, edi, cl",
                    "81": "sar     edi, cl",
                    "82": "test    cl, 20h",
                    "83": "jz      short INSTR86",
                    "84": "mov     esi, edi",
                    "85": "sar     edi, 1Fh",
                    "86": "mov     ecx, 80h",
                    "87": "cmp     ecx, esi",
                    "88": "mov     ecx, 0",
                    "89": "sbb     ecx, edi",
                    "90": "jl      short INSTR53",
                    "91": "xor     ecx, ecx",
                    "92": "mov     esi, [edx+ecx*8+38h]",
                    "93": "mov     edi, [edx+ecx*8+3Ch]",
                    "94": "mov     [ebx+ecx*8+38h], esi",
                    "95": "mov     [ebx+ecx*8+3Ch], edi",
                    "96": "inc     ecx",
                    "97": "cmp     ecx, 80h",
                    "98": "jnz     short INSTR92",
                    "99": "mov     esi, [edx+438h]",
                    "100": "mov     edi, [edx+43Ch]",
                    "101": "mov     [ebx+438h], esi",
                    "102": "mov     [ebx+43Ch], edi",
                    "103": "movzx   edx, byte ptr [edx+440h]",
                    "104": "mov     [ebx+440h], dl",
                    "105": "call    release_metapage",
                    "106": "mov     eax, [ebp+var_10]",
                    "107": "lea     ecx, [ebx+45Ch]",
                    "108": "xor     edx, edx",
                    "109": "mov     [ebx+444h], eax",
                    "110": "mov     eax, [eax+1Ch]",
                    "111": "mov     eax, [eax+1FCh]",
                    "112": "mov     [eax+7Ch], ebx",
                    "113": "xor     eax, eax",
                    "114": "mov     [ecx+eax], edx",
                    "115": "mov     [ecx+eax+4], edx",
                    "116": "add     eax, 8",
                    "117": "cmp     eax, 200h",
                    "118": "jb      short INSTR114",
                    "119": "lea     eax, [ebx+448h]",
                    "120": "mov     ecx, offset __key_0",
                    "121": "mov     edx, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "122": "xor     esi, esi",
                    "123": "call    __mutex_init",
                    "124": "jmp     INSTR57",
                    "125": "mov     esi, 0FFFFFFFBh",
                    "126": "jmp     INSTR55",
                    "127": "mov     esi, 0FFFFFFF4h",
                    "128": "jmp     INSTR57"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_30]!",
                    "3": "ADRP            X1, #gic_nonsecure_priorities@PAGE",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x30+var_20]",
                    "6": "MOV             X20, X0",
                    "7": "MOV             X2, #0x678",
                    "8": "LDR             X0, [X1,#gic_nonsecure_priorities@PAGEOFF]",
                    "9": "MOV             W1, #0xCC0",
                    "10": "STR             X21, [SP,#0x30+var_10]",
                    "11": "BL              kmem_cache_alloc_trace",
                    "12": "CBZ             X0, loc_1E90",
                    "13": "MOV             X19, X0",
                    "14": "MOV             X4, #0",
                    "15": "MOV             X0, X20",
                    "16": "MOV             W3, #0",
                    "17": "MOV             W2, #0x1000",
                    "18": "MOV             X1, #0",
                    "19": "BL              __get_metapage",
                    "20": "CBZ             X0, loc_1E88",
                    "21": "LDR             X2, [X0,#0x30]",
                    "22": "LDR             X3, [X2]",
                    "23": "STR             X3, [X19]",
                    "24": "LDR             X1, [X2,#8]",
                    "25": "STR             X1, [X19,#8]",
                    "26": "LDR             W1, [X2,#0x10]",
                    "27": "STR             W1, [X19,#0x10]",
                    "28": "CMP             W1, #3",
                    "29": "B.HI            loc_1DB4",
                    "30": "LDR             W1, [X2,#0x14]",
                    "31": "STR             W1, [X19,#0x14]",
                    "32": "CBZ             W1, loc_1DB4",
                    "33": "LDR             W1, [X2,#0x18]",
                    "34": "STR             W1, [X19,#0x18]",
                    "35": "LDR             W1, [X2,#0x1C]",
                    "36": "STR             W1, [X19,#0x1C]",
                    "37": "LDR             W4, [X2,#0x20]",
                    "38": "STR             W4, [X19,#0x20]",
                    "39": "ORR             W1, W1, W4",
                    "40": "CMP             W1, #0x7F",
                    "41": "B.LS            loc_1DDC",
                    "42": "MOV             W21, #0xFFFFFFEA",
                    "43": "BL              release_metapage",
                    "44": "MOV             X0, X19",
                    "45": "BL              kfree",
                    "46": "MOV             W0, W21",
                    "47": "LDP             X19, X20, [SP,#0x30+var_20]",
                    "48": "LDR             X21, [SP,#0x30+var_10]",
                    "49": "LDP             X29, X30, [SP+0x30+var_30],#0x30",
                    "50": "AUTIASP",
                    "51": "RET",
                    "52": "LDR             W1, [X2,#0x24]",
                    "53": "STR             W1, [X19,#0x24]",
                    "54": "LDR             W1, [X2,#0x28]",
                    "55": "STR             W1, [X19,#0x28]",
                    "56": "LDR             W1, [X2,#0x2C]",
                    "57": "STR             W1, [X19,#0x2C]",
                    "58": "LDR             W1, [X2,#0x30]",
                    "59": "STR             W1, [X19,#0x30]",
                    "60": "LDR             W4, [X2,#0x34]",
                    "61": "STR             W4, [X19,#0x34]",
                    "62": "CMP             W4, #0x24 ; '$'",
                    "63": "B.HI            loc_1DB4",
                    "64": "SUB             X1, X3, #1",
                    "65": "ASR             X1, X1, X4",
                    "66": "CMP             X1, #0x80",
                    "67": "B.GT            loc_1DB4",
                    "68": "MOV             X1, #0x38 ; '8'",
                    "69": "LDR             X3, [X2,X1]",
                    "70": "STR             X3, [X19,X1]",
                    "71": "ADD             X1, X1, #8",
                    "72": "CMP             X1, #0x438",
                    "73": "B.NE            loc_1E20",
                    "74": "LDR             X1, [X2,#0x438]",
                    "75": "STR             X1, [X19,#0x438]",
                    "76": "MOV             W21, #0",
                    "77": "LDRSB           W1, [X2,#0x440]",
                    "78": "STRB            W1, [X19,#0x440]",
                    "79": "BL              release_metapage",
                    "80": "STR             X20, [X19,#0x448]",
                    "81": "LDR             X3, [X20,#0x28]",
                    "82": "ADD             X0, X19, #0x470; s",
                    "83": "MOV             X2, #0x200; n",
                    "84": "MOV             W1, #0; c",
                    "85": "LDR             X3, [X3,#0x370]",
                    "86": "STR             X19, [X3,#0xA0]",
                    "87": "BL              memset",
                    "88": "ADD             X0, X19, #0x450",
                    "89": "ADRP            X2, #__key.0@PAGE",
                    "90": "ADRP            X1, #aBmpDbBmaplock@PAGE; \"&bmp->db_bmaplock\"",
                    "91": "ADD             X2, X2, #__key.0@PAGEOFF",
                    "92": "ADD             X1, X1, #aBmpDbBmaplock@PAGEOFF; \"&bmp->db_bmaplock\"",
                    "93": "BL              __mutex_init",
                    "94": "B               loc_1DC4",
                    "95": "MOV             W21, #0xFFFFFFFB",
                    "96": "B               loc_1DBC",
                    "97": "MOV             W21, #0xFFFFFFF4",
                    "98": "B               loc_1DC4"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r14",
                    "3": "push    rbx",
                    "4": "mov     r14, rdi",
                    "5": "mov     rdi, qword ptr cs:kmalloc_caches+58h",
                    "6": "mov     edx, 678h",
                    "7": "mov     esi, 0CC0h",
                    "8": "call    kmem_cache_alloc_trace; PIC mode",
                    "9": "test    rax, rax",
                    "10": "jz      INSTR65",
                    "11": "mov     rbx, rax",
                    "12": "mov     rdi, r14",
                    "13": "xor     esi, esi",
                    "14": "mov     edx, 1000h",
                    "15": "xor     ecx, ecx",
                    "16": "xor     r8d, r8d",
                    "17": "call    __get_metapage; PIC mode",
                    "18": "test    rax, rax",
                    "19": "jz      INSTR67",
                    "20": "mov     rdx, [rax+30h]",
                    "21": "mov     rsi, [rdx]",
                    "22": "mov     [rbx], rsi",
                    "23": "mov     rcx, [rdx+8]",
                    "24": "mov     [rbx+8], rcx",
                    "25": "mov     ecx, [rdx+10h]",
                    "26": "mov     [rbx+10h], ecx",
                    "27": "cmp     ecx, 3",
                    "28": "ja      short INSTR61",
                    "29": "mov     ecx, [rdx+14h]",
                    "30": "mov     [rbx+14h], ecx",
                    "31": "test    ecx, ecx",
                    "32": "jz      short INSTR61",
                    "33": "mov     ecx, [rdx+18h]",
                    "34": "mov     [rbx+18h], ecx",
                    "35": "mov     edi, [rdx+1Ch]",
                    "36": "mov     [rbx+1Ch], edi",
                    "37": "mov     ecx, [rdx+20h]",
                    "38": "mov     [rbx+20h], ecx",
                    "39": "cmp     edi, 7Fh",
                    "40": "ja      short INSTR61",
                    "41": "cmp     ecx, 7Fh",
                    "42": "jg      short INSTR61",
                    "43": "test    ecx, ecx",
                    "44": "js      short INSTR61",
                    "45": "mov     ecx, [rdx+24h]",
                    "46": "mov     [rbx+24h], ecx",
                    "47": "mov     ecx, [rdx+28h]",
                    "48": "mov     [rbx+28h], ecx",
                    "49": "mov     ecx, [rdx+2Ch]",
                    "50": "mov     [rbx+2Ch], ecx",
                    "51": "mov     ecx, [rdx+30h]",
                    "52": "mov     [rbx+30h], ecx",
                    "53": "mov     ecx, [rdx+34h]",
                    "54": "mov     [rbx+34h], ecx",
                    "55": "cmp     rcx, 24h ; '$'",
                    "56": "ja      short INSTR61",
                    "57": "add     rsi, 0FFFFFFFFFFFFFFFFh",
                    "58": "sar     rsi, cl",
                    "59": "cmp     rsi, 80h",
                    "60": "jle     short INSTR75",
                    "61": "mov     rdi, rax",
                    "62": "call    release_metapage; PIC mode",
                    "63": "mov     ebp, 0FFFFFFEAh",
                    "64": "jmp     short INSTR68",
                    "65": "mov     ebp, 0FFFFFFF4h",
                    "66": "jmp     short INSTR70",
                    "67": "mov     ebp, 0FFFFFFFBh",
                    "68": "mov     rdi, rbx",
                    "69": "call    kfree; PIC mode",
                    "70": "mov     eax, ebp",
                    "71": "pop     rbx",
                    "72": "pop     r14",
                    "73": "pop     rbp",
                    "74": "retn",
                    "75": "mov     ecx, 0Ah",
                    "76": "mov     rsi, [rdx+rcx*8-18h]",
                    "77": "mov     [rbx+rcx*8-18h], rsi",
                    "78": "mov     rsi, [rdx+rcx*8-10h]",
                    "79": "mov     [rbx+rcx*8-10h], rsi",
                    "80": "mov     rsi, [rdx+rcx*8-8]",
                    "81": "mov     [rbx+rcx*8-8], rsi",
                    "82": "mov     rsi, [rdx+rcx*8]",
                    "83": "mov     [rbx+rcx*8], rsi",
                    "84": "add     rcx, 4",
                    "85": "cmp     rcx, 8Ah",
                    "86": "jnz     short INSTR76",
                    "87": "mov     rcx, [rdx+438h]",
                    "88": "mov     [rbx+438h], rcx",
                    "89": "mov     cl, [rdx+440h]",
                    "90": "mov     [rbx+440h], cl",
                    "91": "mov     rdi, rax",
                    "92": "call    release_metapage; PIC mode",
                    "93": "mov     [rbx+448h], r14",
                    "94": "mov     rax, [r14+28h]",
                    "95": "mov     rax, [rax+370h]",
                    "96": "mov     [rax+0A0h], rbx",
                    "97": "lea     rdi, [rbx+470h]; s",
                    "98": "xor     ebp, ebp",
                    "99": "mov     edx, 200h; n",
                    "100": "xor     esi, esi; c",
                    "101": "call    memset; PIC mode",
                    "102": "add     rbx, 450h",
                    "103": "mov     rdi, rbx",
                    "104": "mov     rsi, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "105": "mov     rdx, offset dbMount___key",
                    "106": "call    __mutex_init; PIC mode",
                    "107": "jmp     INSTR70"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "mov     edx, 678h",
                    "3": "mov     esi, 0CC0h",
                    "4": "push    rbp",
                    "5": "push    rbx",
                    "6": "mov     rbx, rdi",
                    "7": "mov     rdi, qword ptr cs:kmalloc_caches+58h",
                    "8": "call    kmem_cache_alloc_trace; PIC mode",
                    "9": "test    rax, rax",
                    "10": "jz      INSTR96",
                    "11": "mov     rdi, rbx",
                    "12": "xor     r8d, r8d",
                    "13": "xor     ecx, ecx",
                    "14": "mov     edx, 1000h",
                    "15": "xor     esi, esi",
                    "16": "mov     rbp, rax",
                    "17": "call    __get_metapage; PIC mode",
                    "18": "mov     rdi, rax",
                    "19": "test    rax, rax",
                    "20": "jz      INSTR94",
                    "21": "mov     rdx, [rax+30h]",
                    "22": "mov     rsi, [rdx]",
                    "23": "mov     [rbp+0], rsi",
                    "24": "mov     rax, [rdx+8]",
                    "25": "mov     [rbp+8], rax",
                    "26": "mov     eax, [rdx+10h]",
                    "27": "mov     [rbp+10h], eax",
                    "28": "cmp     eax, 3",
                    "29": "ja      short INSTR43",
                    "30": "mov     eax, [rdx+14h]",
                    "31": "mov     [rbp+14h], eax",
                    "32": "test    eax, eax",
                    "33": "jz      short INSTR43",
                    "34": "mov     eax, [rdx+18h]",
                    "35": "mov     [rbp+18h], eax",
                    "36": "mov     eax, [rdx+1Ch]",
                    "37": "mov     [rbp+1Ch], eax",
                    "38": "mov     ecx, [rdx+20h]",
                    "39": "or      eax, ecx",
                    "40": "mov     [rbp+20h], ecx",
                    "41": "cmp     eax, 7Fh",
                    "42": "jbe     short INSTR52",
                    "43": "call    release_metapage; PIC mode",
                    "44": "mov     r12d, 0FFFFFFEAh",
                    "45": "mov     rdi, rbp",
                    "46": "call    kfree; PIC mode",
                    "47": "mov     eax, r12d",
                    "48": "pop     rbx",
                    "49": "pop     rbp",
                    "50": "pop     r12",
                    "51": "jmp     __imp___x86_return_thunk; PIC mode",
                    "52": "mov     eax, [rdx+24h]",
                    "53": "mov     [rbp+24h], eax",
                    "54": "mov     eax, [rdx+28h]",
                    "55": "mov     [rbp+28h], eax",
                    "56": "mov     eax, [rdx+2Ch]",
                    "57": "mov     [rbp+2Ch], eax",
                    "58": "mov     eax, [rdx+30h]",
                    "59": "mov     [rbp+30h], eax",
                    "60": "mov     ecx, [rdx+34h]",
                    "61": "mov     [rbp+34h], ecx",
                    "62": "cmp     ecx, 24h ; '$'",
                    "63": "ja      short INSTR43",
                    "64": "sub     rsi, 1",
                    "65": "sar     rsi, cl",
                    "66": "cmp     rsi, 80h",
                    "67": "jg      short INSTR43",
                    "68": "mov     eax, 38h ; '8'",
                    "69": "mov     rcx, [rdx+rax]",
                    "70": "mov     [rbp+rax+0], rcx",
                    "71": "add     rax, 8",
                    "72": "cmp     rax, 438h",
                    "73": "jnz     short INSTR69",
                    "74": "mov     rax, [rdx+438h]",
                    "75": "xor     r12d, r12d",
                    "76": "mov     [rbp+438h], rax",
                    "77": "movzx   eax, byte ptr [rdx+440h]",
                    "78": "mov     [rbp+440h], al",
                    "79": "call    release_metapage; PIC mode",
                    "80": "mov     rax, [rbx+28h]",
                    "81": "mov     ecx, 40h ; '@'",
                    "82": "mov     [rbp+448h], rbx",
                    "83": "lea     rdx, [rbp+470h]",
                    "84": "mov     rsi, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "85": "mov     rax, [rax+370h]",
                    "86": "mov     rdi, rdx",
                    "87": "mov     rdx, offset __key_0",
                    "88": "mov     [rax+0A0h], rbp",
                    "89": "xor     eax, eax",
                    "90": "rep stosq",
                    "91": "lea     rdi, [rbp+450h]",
                    "92": "call    __mutex_init; PIC mode",
                    "93": "jmp     INSTR47",
                    "94": "mov     r12d, 0FFFFFFFBh",
                    "95": "jmp     INSTR45",
                    "96": "mov     r12d, 0FFFFFFF4h",
                    "97": "jmp     INSTR47"
                }
            },
            {
                "filename": "jfs_dmap.dbMount.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r12",
                    "2": "mov     edx, 678h",
                    "3": "mov     esi, 0CC0h",
                    "4": "mov     r12d, 0FFFFFFF4h",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rbx, rdi",
                    "8": "mov     rdi, qword ptr cs:kmalloc_caches+58h",
                    "9": "call    kmem_cache_alloc_trace; PIC mode",
                    "10": "test    rax, rax",
                    "11": "jz      INSTR92",
                    "12": "mov     rdi, rbx",
                    "13": "xor     r8d, r8d",
                    "14": "xor     ecx, ecx",
                    "15": "mov     edx, 1000h",
                    "16": "xor     esi, esi",
                    "17": "mov     rbp, rax",
                    "18": "call    __get_metapage; PIC mode",
                    "19": "mov     rdi, rax",
                    "20": "test    rax, rax",
                    "21": "jz      INSTR89",
                    "22": "mov     rax, [rax+30h]",
                    "23": "mov     rdx, [rax]",
                    "24": "mov     [rbp+0], rdx",
                    "25": "mov     rcx, [rax+8]",
                    "26": "mov     [rbp+8], rcx",
                    "27": "mov     ecx, [rax+10h]",
                    "28": "mov     [rbp+10h], ecx",
                    "29": "cmp     ecx, 3",
                    "30": "ja      INSTR86",
                    "31": "mov     ecx, [rax+14h]",
                    "32": "mov     [rbp+14h], ecx",
                    "33": "test    ecx, ecx",
                    "34": "jz      INSTR86",
                    "35": "mov     ecx, [rax+18h]",
                    "36": "mov     [rbp+18h], ecx",
                    "37": "mov     ecx, [rax+1Ch]",
                    "38": "mov     [rbp+1Ch], ecx",
                    "39": "mov     esi, [rax+20h]",
                    "40": "or      ecx, esi",
                    "41": "mov     [rbp+20h], esi",
                    "42": "cmp     ecx, 7Fh",
                    "43": "ja      INSTR86",
                    "44": "mov     ecx, [rax+24h]",
                    "45": "mov     [rbp+24h], ecx",
                    "46": "mov     ecx, [rax+28h]",
                    "47": "mov     [rbp+28h], ecx",
                    "48": "mov     ecx, [rax+2Ch]",
                    "49": "mov     [rbp+2Ch], ecx",
                    "50": "mov     ecx, [rax+30h]",
                    "51": "mov     [rbp+30h], ecx",
                    "52": "mov     ecx, [rax+34h]",
                    "53": "mov     [rbp+34h], ecx",
                    "54": "cmp     ecx, 24h ; '$'",
                    "55": "ja      INSTR86",
                    "56": "dec     rdx",
                    "57": "sar     rdx, cl",
                    "58": "cmp     rdx, 80h",
                    "59": "jg      INSTR86",
                    "60": "mov     edx, 38h ; '8'",
                    "61": "mov     rcx, [rax+rdx]",
                    "62": "mov     [rbp+rdx+0], rcx",
                    "63": "add     rdx, 8",
                    "64": "cmp     rdx, 438h",
                    "65": "jnz     short INSTR61",
                    "66": "mov     rdx, [rax+438h]",
                    "67": "xor     r12d, r12d",
                    "68": "mov     [rbp+438h], rdx",
                    "69": "mov     al, [rax+440h]",
                    "70": "mov     [rbp+440h], al",
                    "71": "call    release_metapage; PIC mode",
                    "72": "mov     rax, [rbx+28h]",
                    "73": "mov     ecx, 80h",
                    "74": "mov     [rbp+448h], rbx",
                    "75": "lea     rdx, [rbp+470h]",
                    "76": "mov     rsi, offset aBmpDbBmaplock; \"&bmp->db_bmaplock\"",
                    "77": "mov     rax, [rax+370h]",
                    "78": "mov     rdi, rdx",
                    "79": "mov     rdx, offset __key_0",
                    "80": "mov     [rax+0A0h], rbp",
                    "81": "xor     eax, eax",
                    "82": "rep stosd",
                    "83": "lea     rdi, [rbp+450h]",
                    "84": "call    __mutex_init; PIC mode",
                    "85": "jmp     short INSTR92",
                    "86": "call    release_metapage; PIC mode",
                    "87": "mov     r12d, 0FFFFFFEAh",
                    "88": "jmp     short INSTR90",
                    "89": "mov     r12d, 0FFFFFFFBh",
                    "90": "mov     rdi, rbp",
                    "91": "call    kfree; PIC mode",
                    "92": "mov     eax, r12d",
                    "93": "pop     rbx",
                    "94": "pop     rbp",
                    "95": "pop     r12",
                    "96": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47726",
        "files": [
            {
                "filename": "file.f2fs_setattr.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "sub     esp, 38h",
                    "7": "mov     [ebp+var_28], eax",
                    "8": "mov     ebx, [edx+20h]",
                    "9": "mov     [ebp+var_30], edx",
                    "10": "mov     eax, fs:__stack_chk_guard",
                    "11": "mov     [ebp+var_10], eax",
                    "12": "xor     eax, eax",
                    "13": "mov     eax, [ebx+1Ch]",
                    "14": "mov     eax, [eax+1FCh]",
                    "15": "mov     eax, [eax+0A0h]",
                    "16": "test    byte ptr [eax+84h], 8",
                    "17": "jnz     INSTR381",
                    "18": "mov     eax, [ebx+0Ch]",
                    "19": "test    al, 8",
                    "20": "jnz     INSTR388",
                    "21": "test    al, 4",
                    "22": "mov     edx, [ecx]",
                    "23": "mov     edi, ecx",
                    "24": "jnz     INSTR383",
                    "25": "test    dl, 8",
                    "26": "jnz     INSTR121",
                    "27": "mov     edx, [ebp+var_30]",
                    "28": "mov     ecx, edi",
                    "29": "mov     eax, [ebp+var_28]",
                    "30": "call    setattr_prepare",
                    "31": "mov     [ebp+var_2C], eax",
                    "32": "test    eax, eax",
                    "33": "jnz     INSTR111",
                    "34": "mov     eax, [ebp+var_30]",
                    "35": "mov     eax, [eax+20h]",
                    "36": "test    dword ptr [eax+0Ch], 14000h",
                    "37": "jnz     INSTR442",
                    "38": "mov     eax, [edi]",
                    "39": "test    al, 8",
                    "40": "jz      INSTR252",
                    "41": "mov     eax, ebx",
                    "42": "call    f2fs_dquot_initialize",
                    "43": "test    eax, eax",
                    "44": "jnz     INSTR250",
                    "45": "mov     esi, [edi]",
                    "46": "test    esi, 2",
                    "47": "jnz     INSTR338",
                    "48": "test    esi, 4",
                    "49": "jnz     INSTR296",
                    "50": "test    esi, 8",
                    "51": "jnz     INSTR142",
                    "52": "lea     esi, [esi+0]",
                    "53": "nop",
                    "54": "test    esi, 2",
                    "55": "mov     eax, esi",
                    "56": "jnz     INSTR288",
                    "57": "test    al, 4",
                    "58": "jnz     INSTR281",
                    "59": "test    esi, 10h",
                    "60": "jz      short INSTR67",
                    "61": "mov     eax, [edi+18h]",
                    "62": "mov     edx, [edi+1Ch]",
                    "63": "mov     ecx, [edi+20h]",
                    "64": "mov     [ebx+3Ch], eax",
                    "65": "mov     [ebx+40h], edx",
                    "66": "mov     [ebx+54h], ecx",
                    "67": "test    esi, 20h",
                    "68": "jz      short INSTR75",
                    "69": "mov     eax, [edi+24h]",
                    "70": "mov     edx, [edi+28h]",
                    "71": "mov     ecx, [edi+2Ch]",
                    "72": "mov     [ebx+44h], eax",
                    "73": "mov     [ebx+48h], edx",
                    "74": "mov     [ebx+58h], ecx",
                    "75": "test    esi, 40h",
                    "76": "jz      short INSTR83",
                    "77": "mov     eax, [edi+30h]",
                    "78": "mov     edx, [edi+34h]",
                    "79": "mov     ecx, [edi+38h]",
                    "80": "mov     [ebx+4Ch], eax",
                    "81": "mov     [ebx+50h], edx",
                    "82": "mov     [ebx+5Ch], ecx",
                    "83": "and     esi, 1",
                    "84": "jnz     INSTR262",
                    "85": "test    byte ptr [edi], 1",
                    "86": "jz      short INSTR104",
                    "87": "mov     eax, [ebx+19Ch]",
                    "88": "test    al, 20h",
                    "89": "jz      INSTR405",
                    "90": "movzx   ecx, word ptr [ebx+198h]",
                    "91": "mov     edx, [ebp+var_30]",
                    "92": "mov     eax, [ebp+var_28]",
                    "93": "call    posix_acl_chmod",
                    "94": "mov     [ebp+var_2C], eax",
                    "95": "mov     esi, eax",
                    "96": "mov     eax, [ebx+19Ch]",
                    "97": "test    al, 20h",
                    "98": "jz      short INSTR104",
                    "99": "test    esi, esi",
                    "100": "jnz     short INSTR103",
                    "101": "mov     eax, [ebx+198h]",
                    "102": "mov     [ebx], ax",
                    "103": "lock and byte ptr [ebx+19Ch], 0DFh",
                    "104": "mov     edx, 1",
                    "105": "mov     eax, ebx",
                    "106": "call    f2fs_mark_inode_dirty_sync",
                    "107": "mov     eax, [ebx+1Ch]",
                    "108": "mov     edx, 1",
                    "109": "mov     eax, [eax+1FCh]",
                    "110": "call    f2fs_balance_fs",
                    "111": "mov     eax, [ebp+var_10]",
                    "112": "sub     eax, fs:__stack_chk_guard",
                    "113": "jnz     INSTR444",
                    "114": "mov     eax, [ebp+var_2C]",
                    "115": "add     esp, 38h",
                    "116": "pop     ebx",
                    "117": "pop     esi",
                    "118": "pop     edi",
                    "119": "pop     ebp",
                    "120": "retn",
                    "121": "mov     eax, ebx",
                    "122": "call    f2fs_is_compress_backend_ready",
                    "123": "test    al, al",
                    "124": "jz      INSTR442",
                    "125": "mov     eax, [ebx+19Ch]",
                    "126": "test    eax, 40000000h",
                    "127": "jz      INSTR27",
                    "128": "mov     eax, [ebx+2D4h]",
                    "129": "xor     edx, edx",
                    "130": "mov     ecx, [edi+10h]",
                    "131": "shl     eax, 0Ch",
                    "132": "add     eax, 0FFFFFFFFh",
                    "133": "adc     edx, 0FFFFFFFFh",
                    "134": "and     ecx, eax",
                    "135": "mov     eax, [edi+14h]",
                    "136": "and     eax, edx",
                    "137": "or      eax, ecx",
                    "138": "jz      INSTR27",
                    "139": "mov     [ebp+var_2C], 0FFFFFFEAh",
                    "140": "jmp     short INSTR111",
                    "141": "pause",
                    "142": "mov     eax, [ebx+74h]",
                    "143": "test    al, 1",
                    "144": "jnz     short INSTR141",
                    "145": "mov     ecx, [ebx+34h]",
                    "146": "mov     esi, [ebx+38h]",
                    "147": "mov     edx, [ebx+74h]",
                    "148": "cmp     edx, eax",
                    "149": "jnz     short INSTR142",
                    "150": "mov     [ebp+var_34], ecx",
                    "151": "mov     eax, [ebx+298h]",
                    "152": "mov     ecx, 39Ah",
                    "153": "mov     [ebp+var_3C], 0",
                    "154": "mov     edx, [edi+10h]",
                    "155": "mov     [ebp+var_38], esi",
                    "156": "mov     esi, [edi+14h]",
                    "157": "sub     ecx, eax",
                    "158": "mov     eax, [ebx+290h]",
                    "159": "shr     eax, 2",
                    "160": "sub     ecx, eax",
                    "161": "mov     eax, [ebp+var_3C]",
                    "162": "shl     ecx, 2",
                    "163": "mov     [ebp+var_40], ecx",
                    "164": "cmp     ecx, edx",
                    "165": "sbb     eax, esi",
                    "166": "jl      INSTR420",
                    "167": "cmp     edx, [ebp+var_34]",
                    "168": "sbb     esi, [ebp+var_38]",
                    "169": "jl      INSTR439",
                    "170": "lea     esi, [ebx+248h]",
                    "171": "mov     eax, esi",
                    "172": "call    down_write",
                    "173": "mov     eax, [ebx+20h]",
                    "174": "add     eax, 10h",
                    "175": "call    down_write",
                    "176": "mov     edx, [edi+10h]",
                    "177": "mov     eax, ebx",
                    "178": "mov     ecx, [edi+14h]",
                    "179": "call    truncate_setsize",
                    "180": "lea     eax, [ebx+260h]",
                    "181": "mov     [ebp+var_40], eax",
                    "182": "mov     eax, [ebp+var_34]",
                    "183": "cmp     eax, [edi+10h]",
                    "184": "mov     eax, [ebp+var_38]",
                    "185": "sbb     eax, [edi+14h]",
                    "186": "jge     INSTR233",
                    "187": "mov     eax, [ebx+20h]",
                    "188": "add     eax, 10h",
                    "189": "call    up_write",
                    "190": "mov     eax, esi",
                    "191": "call    up_write",
                    "192": "mov     eax, [ebp+var_40]",
                    "193": "xor     ecx, ecx",
                    "194": "mov     edx, 3",
                    "195": "mov     dword ptr [esp], 0",
                    "196": "call    __wake_up",
                    "197": "lea     esi, [ebx+1ECh]",
                    "198": "mov     eax, esi",
                    "199": "call    _raw_spin_lock",
                    "200": "lea     eax, [ebp+var_24]",
                    "201": "mov     edx, ebx",
                    "202": "call    inode_set_ctime_current",
                    "203": "mov     eax, [ebp+var_1C]",
                    "204": "mov     [ebp+var_34], edi",
                    "205": "mov     edx, [ebp+var_24]",
                    "206": "mov     edi, esi",
                    "207": "mov     ecx, [ebp+var_20]",
                    "208": "mov     [ebx+58h], eax",
                    "209": "mov     [ebx+44h], edx",
                    "210": "mov     [ebx+48h], ecx",
                    "211": "mov     eax, [ebx+74h]",
                    "212": "test    al, 1",
                    "213": "jz      short INSTR220",
                    "214": "mov     ecx, [ebp+var_34]",
                    "215": "pause",
                    "216": "mov     eax, [ebx+74h]",
                    "217": "test    al, 1",
                    "218": "jnz     short INSTR215",
                    "219": "mov     [ebp+var_34], ecx",
                    "220": "mov     edx, [ebx+34h]",
                    "221": "mov     ecx, [ebx+38h]",
                    "222": "mov     esi, [ebx+74h]",
                    "223": "cmp     esi, eax",
                    "224": "jnz     short INSTR211",
                    "225": "mov     [ebx+1E4h], edx",
                    "226": "mov     esi, edi",
                    "227": "mov     edi, [ebp+var_34]",
                    "228": "mov     [ebx+1E8h], ecx",
                    "229": "mov     eax, esi",
                    "230": "call    _raw_spin_unlock",
                    "231": "mov     esi, [edi]",
                    "232": "jmp     INSTR54",
                    "233": "mov     eax, ebx",
                    "234": "call    f2fs_truncate",
                    "235": "mov     ecx, [ebx+20h]",
                    "236": "mov     [ebp+var_34], eax",
                    "237": "lea     eax, [ecx+10h]",
                    "238": "call    up_write",
                    "239": "mov     eax, esi",
                    "240": "call    up_write",
                    "241": "mov     eax, [ebp+var_40]",
                    "242": "xor     ecx, ecx",
                    "243": "mov     edx, 3",
                    "244": "mov     dword ptr [esp], 0",
                    "245": "call    __wake_up",
                    "246": "mov     eax, [ebp+var_34]",
                    "247": "test    eax, eax",
                    "248": "jz      INSTR197",
                    "249": "mov     eax, [ebp+var_34]",
                    "250": "mov     [ebp+var_2C], eax",
                    "251": "jmp     INSTR111",
                    "252": "test    al, 2",
                    "253": "jnz     INSTR407",
                    "254": "test    al, 4",
                    "255": "jnz     INSTR427",
                    "256": "test    al, 2",
                    "257": "jnz     INSTR338",
                    "258": "test    al, 8",
                    "259": "mov     esi, eax",
                    "260": "jz      INSTR57",
                    "261": "jmp     INSTR142",
                    "262": "mov     eax, [ebx+1Ch]",
                    "263": "mov     ecx, [ebx+8]",
                    "264": "movzx   esi, word ptr [edi+4]",
                    "265": "mov     edx, [eax+2ACh]",
                    "266": "mov     eax, [ebp+var_28]",
                    "267": "call    make_vfsgid",
                    "268": "mov     edx, ebx",
                    "269": "mov     ecx, eax",
                    "270": "mov     eax, [ebp+var_28]",
                    "271": "call    in_group_or_capable",
                    "272": "test    al, al",
                    "273": "jnz     short INSTR275",
                    "274": "and     esi, 0FBFFh",
                    "275": "mov     [ebx+198h], si",
                    "276": "lock or byte ptr [ebx+19Ch], 20h",
                    "277": "xor     edx, edx",
                    "278": "mov     eax, ebx",
                    "279": "call    f2fs_mark_inode_dirty_sync",
                    "280": "jmp     INSTR85",
                    "281": "mov     eax, [ebx+1Ch]",
                    "282": "mov     ecx, [edi+0Ch]",
                    "283": "mov     edx, [eax+2ACh]",
                    "284": "mov     eax, [ebp+var_28]",
                    "285": "call    from_vfsgid",
                    "286": "mov     [ebx+8], eax",
                    "287": "jmp     INSTR59",
                    "288": "mov     eax, [ebx+1Ch]",
                    "289": "mov     ecx, [edi+8]",
                    "290": "mov     edx, [eax+2ACh]",
                    "291": "mov     eax, [ebp+var_28]",
                    "292": "call    from_vfsuid",
                    "293": "mov     [ebx+4], eax",
                    "294": "mov     eax, [edi]",
                    "295": "jmp     INSTR57",
                    "296": "mov     eax, [ebx+1Ch]",
                    "297": "mov     ecx, [ebx+8]",
                    "298": "mov     edx, [eax+2ACh]",
                    "299": "mov     eax, [ebp+var_28]",
                    "300": "call    make_vfsgid",
                    "301": "mov     edx, eax",
                    "302": "mov     eax, [edi+0Ch]",
                    "303": "cmp     edx, eax",
                    "304": "jnz     short INSTR307",
                    "305": "inc     eax",
                    "306": "jnz     short INSTR334",
                    "307": "mov     eax, [ebx+1Ch]",
                    "308": "mov     esi, [eax+1FCh]",
                    "309": "call    __SCT__might_resched",
                    "310": "lea     eax, [esi+0D4h]",
                    "311": "mov     [ebp+var_34], eax",
                    "312": "call    down_read_trylock",
                    "313": "test    eax, eax",
                    "314": "jz      INSTR360",
                    "315": "mov     eax, [ebp+var_28]",
                    "316": "mov     ecx, edi",
                    "317": "mov     edx, ebx",
                    "318": "call    dquot_transfer",
                    "319": "test    eax, eax",
                    "320": "mov     esi, eax",
                    "321": "jnz     short INSTR351",
                    "322": "mov     eax, [edi]",
                    "323": "test    al, 2",
                    "324": "jnz     INSTR390",
                    "325": "test    al, 4",
                    "326": "jnz     INSTR398",
                    "327": "mov     eax, ebx",
                    "328": "mov     edx, 1",
                    "329": "call    f2fs_mark_inode_dirty_sync",
                    "330": "mov     eax, [ebx+1Ch]",
                    "331": "mov     eax, [eax+1FCh]",
                    "332": "add     eax, 0D4h",
                    "333": "call    up_read",
                    "334": "mov     esi, [edi]",
                    "335": "test    esi, 8",
                    "336": "jz      INSTR54",
                    "337": "jmp     INSTR142",
                    "338": "mov     eax, [ebx+1Ch]",
                    "339": "mov     ecx, [ebx+4]",
                    "340": "mov     edx, [eax+2ACh]",
                    "341": "mov     eax, [ebp+var_28]",
                    "342": "call    make_vfsuid",
                    "343": "mov     edx, eax",
                    "344": "mov     eax, [edi+8]",
                    "345": "cmp     edx, eax",
                    "346": "jnz     INSTR307",
                    "347": "inc     eax",
                    "348": "jz      INSTR307",
                    "349": "mov     esi, [edi]",
                    "350": "jmp     INSTR48",
                    "351": "mov     eax, [ebx+1Ch]",
                    "352": "mov     eax, [eax+1FCh]",
                    "353": "lock or byte ptr [eax+35h], 10h",
                    "354": "mov     eax, [ebx+1Ch]",
                    "355": "mov     eax, [eax+1FCh]",
                    "356": "add     eax, 0D4h",
                    "357": "call    up_read",
                    "358": "mov     [ebp+var_2C], esi",
                    "359": "jmp     INSTR111",
                    "360": "xor     edx, edx",
                    "361": "add     esi, 0ECh",
                    "362": "lea     eax, [ebp+var_24]",
                    "363": "call    init_wait_entry",
                    "364": "mov     [ebp+var_38], ebx",
                    "365": "mov     ebx, [ebp+var_34]",
                    "366": "jmp     short INSTR368",
                    "367": "call    schedule",
                    "368": "mov     ecx, 2",
                    "369": "mov     eax, esi",
                    "370": "lea     edx, [ebp+var_24]",
                    "371": "call    prepare_to_wait_event",
                    "372": "mov     eax, ebx",
                    "373": "call    down_read_trylock",
                    "374": "test    eax, eax",
                    "375": "jz      short INSTR367",
                    "376": "lea     edx, [ebp+var_24]",
                    "377": "mov     eax, esi",
                    "378": "mov     ebx, [ebp+var_38]",
                    "379": "call    finish_wait",
                    "380": "jmp     INSTR315",
                    "381": "mov     [ebp+var_2C], 0FFFFFFFBh",
                    "382": "jmp     INSTR111",
                    "383": "test    edx, 10007h",
                    "384": "jz      INSTR25",
                    "385": "lea     esi, [esi+0]",
                    "386": "lea     esi, [esi+0]",
                    "387": "nop",
                    "388": "mov     [ebp+var_2C], 0FFFFFFFFh",
                    "389": "jmp     INSTR111",
                    "390": "mov     eax, [ebx+1Ch]",
                    "391": "mov     ecx, [edi+8]",
                    "392": "mov     edx, [eax+2ACh]",
                    "393": "mov     eax, [ebp+var_28]",
                    "394": "call    from_vfsuid",
                    "395": "mov     [ebx+4], eax",
                    "396": "mov     eax, [edi]",
                    "397": "jmp     INSTR325",
                    "398": "mov     eax, [ebx+1Ch]",
                    "399": "mov     ecx, [edi+0Ch]",
                    "400": "mov     edx, [eax+2ACh]",
                    "401": "mov     eax, [ebp+var_28]",
                    "402": "call    from_vfsgid",
                    "403": "mov     [ebx+8], eax",
                    "404": "jmp     INSTR327",
                    "405": "movzx   ecx, word ptr [ebx]",
                    "406": "jmp     INSTR91",
                    "407": "mov     eax, [ebx+1Ch]",
                    "408": "mov     ecx, [ebx+4]",
                    "409": "mov     edx, [eax+2ACh]",
                    "410": "mov     eax, [ebp+var_28]",
                    "411": "call    make_vfsuid",
                    "412": "mov     edx, eax",
                    "413": "mov     eax, [edi+8]",
                    "414": "cmp     edx, eax",
                    "415": "jnz     INSTR41",
                    "416": "inc     eax",
                    "417": "jz      INSTR41",
                    "418": "mov     eax, [edi]",
                    "419": "jmp     INSTR254",
                    "420": "mov     eax, ebx",
                    "421": "call    f2fs_convert_inline_inode",
                    "422": "test    eax, eax",
                    "423": "jnz     INSTR250",
                    "424": "mov     edx, [edi+10h]",
                    "425": "mov     esi, [edi+14h]",
                    "426": "jmp     INSTR167",
                    "427": "mov     eax, [ebx+1Ch]",
                    "428": "mov     ecx, [ebx+8]",
                    "429": "mov     edx, [eax+2ACh]",
                    "430": "mov     eax, [ebp+var_28]",
                    "431": "call    make_vfsgid",
                    "432": "mov     edx, eax",
                    "433": "mov     eax, [edi+0Ch]",
                    "434": "cmp     edx, eax",
                    "435": "jnz     INSTR41",
                    "436": "inc     eax",
                    "437": "jz      INSTR41",
                    "438": "jmp     INSTR45",
                    "439": "mov     eax, ebx",
                    "440": "call    inode_dio_wait",
                    "441": "jmp     INSTR170",
                    "442": "mov     [ebp+var_2C], 0FFFFFFA1h",
                    "443": "jmp     INSTR111",
                    "444": "call    __stack_chk_fail"
                }
            },
            {
                "filename": "file.f2fs_setattr.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_80]!",
                    "3": "MRS             X3, SP_EL0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X21, X22, [SP,#0x80+var_60]",
                    "6": "MOV             X21, X1",
                    "7": "STP             X19, X20, [SP,#0x80+var_70]",
                    "8": "STP             X23, X24, [SP,#0x80+var_50]",
                    "9": "MOV             X23, X0",
                    "10": "LDR             X19, [X21,#0x30]",
                    "11": "LDR             X1, [X3,#0x550]",
                    "12": "STR             X1, [SP,#0x80+var_8]",
                    "13": "MOV             X1, #0",
                    "14": "LDR             X0, [X19,#0x28]",
                    "15": "LDR             X0, [X0,#0x368]",
                    "16": "LDR             X0, [X0,#0x120]",
                    "17": "LDR             W0, [X0,#0x84]",
                    "18": "TBNZ            W0, #3, loc_6460",
                    "19": "LDR             W0, [X19,#0xC]",
                    "20": "TBNZ            W0, #3, loc_6308",
                    "21": "LDR             W1, [X2]",
                    "22": "MOV             X20, X2",
                    "23": "TBNZ            W0, #2, loc_62FC",
                    "24": "TBNZ            W1, #3, loc_621C",
                    "25": "MOV             X2, X20",
                    "26": "MOV             X1, X21",
                    "27": "MOV             X0, X23",
                    "28": "BL              setattr_prepare",
                    "29": "MOV             W22, W0",
                    "30": "CBNZ            W0, loc_61E8",
                    "31": "LDR             X0, [X21,#0x30]",
                    "32": "LDR             W0, [X0,#0xC]",
                    "33": "AND             W0, W0, #0x1C000",
                    "34": "AND             W0, W0, #0xFFFF7FFF",
                    "35": "CBNZ            W0, loc_65CC",
                    "36": "LDR             W0, [X20]",
                    "37": "TBZ             W0, #3, loc_6258",
                    "38": "MOV             X0, X19",
                    "39": "BL              f2fs_dquot_initialize",
                    "40": "CBNZ            W0, loc_63E0",
                    "41": "LDR             W24, [X20]",
                    "42": "TBNZ            W24, #1, loc_6270",
                    "43": "TBNZ            W24, #2, loc_6310",
                    "44": "TBZ             W24, #3, loc_6138",
                    "45": "ADD             X0, X19, #0x50 ; 'P'",
                    "46": "LDAR            X24, [X0]",
                    "47": "LDRSW           X0, [X19,#0x410]",
                    "48": "MOV             X1, #0x39A",
                    "49": "LDRSW           X3, [X19,#0x418]",
                    "50": "LDR             X2, [X20,#0x10]",
                    "51": "SUB             X1, X1, X3",
                    "52": "SUB             X0, X1, X0,ASR#2",
                    "53": "CMP             X2, X0,LSL#2",
                    "54": "B.HI            loc_63D0",
                    "55": "STP             X25, X26, [SP,#0x80+var_40]",
                    "56": "CMP             X24, X2",
                    "57": "B.GT            loc_6514",
                    "58": "ADD             X25, X19, #0x390",
                    "59": "ADD             X26, X19, #0x3B8",
                    "60": "MOV             X0, X25",
                    "61": "BL              down_write",
                    "62": "LDR             X0, [X19,#0x30]",
                    "63": "ADD             X0, X0, #0x18",
                    "64": "BL              down_write",
                    "65": "LDR             X1, [X20,#0x10]",
                    "66": "MOV             X0, X19",
                    "67": "BL              truncate_setsize",
                    "68": "LDR             X0, [X20,#0x10]",
                    "69": "CMP             X0, X24",
                    "70": "B.LE            loc_6468",
                    "71": "LDR             X0, [X19,#0x30]",
                    "72": "ADD             X0, X0, #0x18",
                    "73": "BL              up_write",
                    "74": "MOV             X0, X25",
                    "75": "BL              up_write",
                    "76": "MOV             X0, X26",
                    "77": "MOV             X3, #0",
                    "78": "MOV             W2, #0",
                    "79": "MOV             W1, #3",
                    "80": "BL              __wake_up",
                    "81": "ADD             X24, X19, #0x2E8",
                    "82": "MOV             X0, X24",
                    "83": "BL              _raw_spin_lock",
                    "84": "MOV             X0, X19",
                    "85": "BL              inode_set_ctime_current",
                    "86": "STR             X0, [X19,#0x60]",
                    "87": "ADD             X0, X19, #0x50 ; 'P'",
                    "88": "STR             W1, [X19,#0x74]",
                    "89": "LDAR            X0, [X0]",
                    "90": "STR             X0, [X19,#0x2E0]",
                    "91": "MOV             X0, X24",
                    "92": "BL              _raw_spin_unlock",
                    "93": "LDR             W24, [X20]",
                    "94": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "95": "AND             W0, W24, #4",
                    "96": "TBNZ            W24, #1, loc_6378",
                    "97": "CBNZ            W0, loc_635C",
                    "98": "TBZ             W24, #4, loc_6154",
                    "99": "LDP             X1, X0, [X20,#0x18]",
                    "100": "STR             X1, [X19,#0x58]",
                    "101": "STR             W0, [X19,#0x70]",
                    "102": "TBZ             W24, #5, loc_6164",
                    "103": "LDP             X1, X0, [X20,#0x28]",
                    "104": "STR             X1, [X19,#0x60]",
                    "105": "STR             W0, [X19,#0x74]",
                    "106": "TBZ             W24, #6, loc_6174",
                    "107": "LDP             X1, X0, [X20,#0x38]",
                    "108": "STR             X1, [X19,#0x68]",
                    "109": "STR             W0, [X19,#0x78]",
                    "110": "TBNZ            W24, #0, loc_64C8",
                    "111": "LDR             W0, [X20]",
                    "112": "TBZ             W0, #0, loc_61C8",
                    "113": "LDR             X0, [X19,#0x268]",
                    "114": "TST             W0, #0x20",
                    "115": "B.NE            loc_653C",
                    "116": "LDRH            W2, [X19]",
                    "117": "MOV             X1, X21",
                    "118": "MOV             X0, X23",
                    "119": "BL              posix_acl_chmod",
                    "120": "MOV             W22, W0",
                    "121": "LDR             X1, [X19,#0x268]",
                    "122": "TST             W1, #0x20",
                    "123": "B.EQ            loc_61C8",
                    "124": "CBNZ            W0, loc_61B8",
                    "125": "LDRH            W0, [X19,#0x264]",
                    "126": "STRH            W0, [X19]",
                    "127": "B               loc_65AC",
                    "128": "MOV             X0, #0x20 ; ' '",
                    "129": "ADD             X1, X19, #0x268",
                    "130": "STCLR           X0, [X1]",
                    "131": "MOV             X0, X19",
                    "132": "MOV             W1, #1",
                    "133": "BL              f2fs_mark_inode_dirty_sync",
                    "134": "LDR             X0, [X19,#0x28]",
                    "135": "MOV             W1, #1",
                    "136": "LDR             X0, [X0,#0x368]",
                    "137": "BL              f2fs_balance_fs",
                    "138": "NOP",
                    "139": "MRS             X0, SP_EL0",
                    "140": "LDR             X2, [SP,#0x80+var_8]",
                    "141": "LDR             X1, [X0,#0x550]",
                    "142": "SUBS            X2, X2, X1",
                    "143": "MOV             X1, #0",
                    "144": "B.NE            loc_65D4",
                    "145": "MOV             W0, W22",
                    "146": "LDP             X19, X20, [SP,#0x80+var_70]",
                    "147": "LDP             X21, X22, [SP,#0x80+var_60]",
                    "148": "LDP             X23, X24, [SP,#0x80+var_50]",
                    "149": "LDP             X29, X30, [SP+0x80+var_80],#0x80",
                    "150": "AUTIASP",
                    "151": "RET",
                    "152": "MOV             X0, X19",
                    "153": "BL              f2fs_is_compress_backend_ready",
                    "154": "TST             W0, #0xFF",
                    "155": "B.EQ            loc_65CC",
                    "156": "LDR             X0, [X19,#0x268]",
                    "157": "TST             W0, #0x40000000",
                    "158": "B.EQ            loc_6020",
                    "159": "LDR             W0, [X19,#0x468]",
                    "160": "LDR             X1, [X20,#0x10]",
                    "161": "LSL             W0, W0, #0xC",
                    "162": "SUB             X0, X0, #1",
                    "163": "TST             X0, X1",
                    "164": "B.EQ            loc_6020",
                    "165": "MOV             W22, #0xFFFFFFEA",
                    "166": "B               loc_61E8",
                    "167": "TBNZ            W0, #1, loc_63A0",
                    "168": "TBNZ            W0, #2, loc_6578",
                    "169": "TBNZ            W0, #1, loc_6270",
                    "170": "MOV             W24, W0",
                    "171": "TBNZ            W0, #3, loc_6070",
                    "172": "B               loc_6144",
                    "173": "LDR             X1, [X19,#0x28]",
                    "174": "MOV             X0, X23",
                    "175": "LDR             W2, [X19,#4]",
                    "176": "LDR             X1, [X1,#0x450]",
                    "177": "BL              make_vfsuid",
                    "178": "LDR             W1, [X20,#8]",
                    "179": "CMP             W0, W1",
                    "180": "CCMN            W1, #1, #4, EQ",
                    "181": "B.NE            loc_65A0",
                    "182": "STP             X25, X26, [SP,#0x80+var_40]",
                    "183": "LDR             X0, [X19,#0x28]",
                    "184": "LDR             X24, [X0,#0x368]",
                    "185": "BL              dynamic_might_resched",
                    "186": "ADD             X25, X24, #0x178",
                    "187": "MOV             X0, X25",
                    "188": "BL              down_read_trylock",
                    "189": "CBZ             W0, loc_641C",
                    "190": "MOV             X2, X20",
                    "191": "MOV             X1, X19",
                    "192": "MOV             X0, X23",
                    "193": "BL              dquot_transfer",
                    "194": "CBNZ            W0, loc_63E8",
                    "195": "LDR             W0, [X20]",
                    "196": "TBNZ            W0, #1, loc_633C",
                    "197": "TBNZ            W0, #2, loc_64AC",
                    "198": "MOV             X0, X19",
                    "199": "MOV             W1, #1",
                    "200": "BL              f2fs_mark_inode_dirty_sync",
                    "201": "LDR             X0, [X19,#0x28]",
                    "202": "LDR             X0, [X0,#0x368]",
                    "203": "ADD             X0, X0, #0x178",
                    "204": "BL              up_read",
                    "205": "LDR             W24, [X20]",
                    "206": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "207": "B               loc_606C",
                    "208": "AND             W0, W1, #0x1FFFF",
                    "209": "AND             W0, W0, #0xFFFF0007",
                    "210": "CBZ             W0, loc_601C",
                    "211": "MOV             W22, #0xFFFFFFFF",
                    "212": "B               loc_61E8",
                    "213": "LDR             X1, [X19,#0x28]",
                    "214": "MOV             X0, X23",
                    "215": "LDR             W2, [X19,#8]",
                    "216": "LDR             X1, [X1,#0x450]",
                    "217": "BL              make_vfsgid",
                    "218": "LDR             W1, [X20,#0xC]",
                    "219": "CMP             W0, W1",
                    "220": "CCMN            W1, #1, #4, EQ",
                    "221": "B.EQ            loc_6294",
                    "222": "LDR             W24, [X20]",
                    "223": "B               loc_606C",
                    "224": "LDR             X1, [X19,#0x28]",
                    "225": "MOV             X0, X23",
                    "226": "LDR             W2, [X20,#8]",
                    "227": "LDR             X1, [X1,#0x450]",
                    "228": "BL              from_vfsuid",
                    "229": "STR             W0, [X19,#4]",
                    "230": "LDR             W0, [X20]",
                    "231": "B               loc_62D0",
                    "232": "LDR             X1, [X19,#0x28]",
                    "233": "MOV             X0, X23",
                    "234": "LDR             W2, [X20,#0xC]",
                    "235": "LDR             X1, [X1,#0x450]",
                    "236": "BL              from_vfsgid",
                    "237": "STR             W0, [X19,#8]",
                    "238": "B               loc_6144",
                    "239": "LDR             X1, [X19,#0x28]",
                    "240": "MOV             X0, X23",
                    "241": "LDR             W2, [X20,#8]",
                    "242": "LDR             X1, [X1,#0x450]",
                    "243": "BL              from_vfsuid",
                    "244": "STR             W0, [X19,#4]",
                    "245": "LDR             W0, [X20]",
                    "246": "AND             W0, W0, #4",
                    "247": "CBZ             W0, loc_6144",
                    "248": "B               loc_635C",
                    "249": "LDR             X1, [X19,#0x28]",
                    "250": "MOV             X0, X23",
                    "251": "LDR             W2, [X19,#4]",
                    "252": "LDR             X1, [X1,#0x450]",
                    "253": "BL              make_vfsuid",
                    "254": "LDR             W1, [X20,#8]",
                    "255": "CMP             W0, W1",
                    "256": "CCMN            W1, #1, #4, EQ",
                    "257": "B.EQ            loc_6054",
                    "258": "LDR             W0, [X20]",
                    "259": "TBZ             W0, #2, loc_6260",
                    "260": "B               loc_6578",
                    "261": "MOV             X0, X19",
                    "262": "BL              f2fs_convert_inline_inode",
                    "263": "CBZ             W0, loc_6544",
                    "264": "NOP",
                    "265": "MOV             W22, W0",
                    "266": "B               loc_61E8",
                    "267": "LDR             X1, [X19,#0x28]",
                    "268": "LDR             X1, [X1,#0x368]",
                    "269": "B               loc_6520",
                    "270": "MOV             X2, #0x1000",
                    "271": "ADD             X1, X1, #0x60 ; '`'",
                    "272": "STSET           X2, [X1]",
                    "273": "LDR             X1, [X19,#0x28]",
                    "274": "MOV             W22, W0",
                    "275": "LDR             X0, [X1,#0x368]",
                    "276": "ADD             X0, X0, #0x178",
                    "277": "BL              up_read",
                    "278": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "279": "B               loc_61E8",
                    "280": "ADD             X24, X24, #0x1A0",
                    "281": "ADD             X0, SP, #0x80+var_30",
                    "282": "MOV             W1, #0",
                    "283": "BL              init_wait_entry",
                    "284": "B               loc_6434",
                    "285": "BL              schedule",
                    "286": "ADD             X1, SP, #0x80+var_30",
                    "287": "MOV             W2, #2",
                    "288": "MOV             X0, X24",
                    "289": "BL              prepare_to_wait_event",
                    "290": "MOV             X0, X25",
                    "291": "BL              down_read_trylock",
                    "292": "CBZ             W0, loc_6430",
                    "293": "ADD             X1, SP, #0x80+var_30",
                    "294": "MOV             X0, X24",
                    "295": "BL              finish_wait",
                    "296": "B               loc_62B4",
                    "297": "MOV             W22, #0xFFFFFFFB",
                    "298": "B               loc_61E8",
                    "299": "MOV             X0, X19",
                    "300": "BL              f2fs_truncate",
                    "301": "LDR             X1, [X19,#0x30]",
                    "302": "MOV             W24, W0",
                    "303": "ADD             X0, X1, #0x18",
                    "304": "BL              up_write",
                    "305": "MOV             X0, X25",
                    "306": "BL              up_write",
                    "307": "MOV             X0, X26",
                    "308": "MOV             X3, #0",
                    "309": "MOV             W2, #0",
                    "310": "MOV             W1, #3",
                    "311": "BL              __wake_up",
                    "312": "CBZ             W24, loc_6100",
                    "313": "MOV             W22, W24",
                    "314": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "315": "B               loc_61E8",
                    "316": "LDR             X1, [X19,#0x28]",
                    "317": "MOV             X0, X23",
                    "318": "LDR             W2, [X20,#0xC]",
                    "319": "LDR             X1, [X1,#0x450]",
                    "320": "BL              from_vfsgid",
                    "321": "STR             W0, [X19,#8]",
                    "322": "B               loc_62D4",
                    "323": "LDR             X1, [X19,#0x28]",
                    "324": "MOV             X0, X23",
                    "325": "LDR             W2, [X19,#8]",
                    "326": "LDRH            W24, [X20,#4]",
                    "327": "LDR             X1, [X1,#0x450]",
                    "328": "BL              make_vfsgid",
                    "329": "MOV             W2, W0",
                    "330": "MOV             X1, X19",
                    "331": "MOV             X0, X23",
                    "332": "BL              in_group_or_capable",
                    "333": "TST             W0, #0xFF",
                    "334": "AND             W1, W24, #0xFFFFFBFF",
                    "335": "CSEL            W24, W1, W24, EQ",
                    "336": "STRH            W24, [X19,#0x264]",
                    "337": "B               loc_6550",
                    "338": "ADD             X1, X19, #0x268",
                    "339": "MOV             X0, #0x20 ; ' '",
                    "340": "STSET           X0, [X1]",
                    "341": "B               loc_6568",
                    "342": "MOV             X0, X19",
                    "343": "BL              inode_dio_wait",
                    "344": "B               loc_60A4",
                    "345": "ADD             X1, X1, #0x60 ; '`'",
                    "346": "PRFM            #0x11, [X1]",
                    "347": "LDXR            X2, [X1]",
                    "348": "ORR             X2, X2, #0x1000",
                    "349": "STXR            W3, X2, [X1]",
                    "350": "CBNZ            W3, loc_6528",
                    "351": "B               loc_6400",
                    "352": "LDRH            W2, [X19,#0x264]",
                    "353": "B               loc_6190",
                    "354": "STP             X25, X26, [SP,#0x80+var_40]",
                    "355": "LDR             X2, [X20,#0x10]",
                    "356": "B               loc_609C",
                    "357": "ADD             X2, X19, #0x268",
                    "358": "PRFM            #0x11, [X2]",
                    "359": "LDXR            X0, [X2]",
                    "360": "ORR             X0, X0, #0x20 ; ' '",
                    "361": "STXR            W1, X0, [X2]",
                    "362": "CBNZ            W1, loc_6558",
                    "363": "MOV             X0, X19",
                    "364": "MOV             W1, #0",
                    "365": "BL              f2fs_mark_inode_dirty_sync",
                    "366": "B               loc_6178",
                    "367": "LDR             X1, [X19,#0x28]",
                    "368": "MOV             X0, X23",
                    "369": "LDR             W2, [X19,#8]",
                    "370": "LDR             X1, [X1,#0x450]",
                    "371": "BL              make_vfsgid",
                    "372": "LDR             W1, [X20,#0xC]",
                    "373": "CMP             W0, W1",
                    "374": "CCMN            W1, #1, #4, EQ",
                    "375": "B.EQ            loc_6054",
                    "376": "B               loc_6060",
                    "377": "LDR             W24, [X20]",
                    "378": "TBZ             W24, #2, loc_606C",
                    "379": "B               loc_6310",
                    "380": "ADD             X3, X19, #0x268",
                    "381": "MOV             X0, #0x20 ; ' '",
                    "382": "PRFM            #0x11, [X3]",
                    "383": "LDXR            X1, [X3]",
                    "384": "BIC             X1, X1, X0",
                    "385": "STXR            W2, X1, [X3]",
                    "386": "CBNZ            W2, loc_65B8",
                    "387": "B               loc_61C8",
                    "388": "MOV             W22, #0xFFFFFFA1",
                    "389": "B               loc_61E8",
                    "390": "STP             X25, X26, [SP,#0x80+var_40]",
                    "391": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "file.f2fs_setattr.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 0A0h",
                    "8": "mov     [rsp+0D0h+var_A8], rdx",
                    "9": "mov     rbx, rsi",
                    "10": "mov     [rsp+0D0h+var_88], rdi",
                    "11": "call    __msan_get_context_state; PIC mode",
                    "12": "mov     r13, rax",
                    "13": "mov     rax, [rax]",
                    "14": "mov     [rsp+0D0h+var_90], rax",
                    "15": "mov     rax, [r13+8]",
                    "16": "mov     ecx, [r13+0C90h]",
                    "17": "mov     [rsp+0D0h+var_74], ecx",
                    "18": "mov     rcx, [r13+10h]",
                    "19": "mov     [rsp+0D0h+var_C0], rcx",
                    "20": "mov     ecx, [r13+0C98h]",
                    "21": "mov     [rsp+0D0h+var_CC], ecx",
                    "22": "mov     ecx, [r13+0C88h]",
                    "23": "mov     [rsp+0D0h+var_AC], ecx",
                    "24": "mov     [rsp+0D0h+var_40], rbx",
                    "25": "lea     rbp, [rbx+30h]",
                    "26": "mov     [rsp+0D0h+var_50], rax",
                    "27": "test    rax, rax",
                    "28": "jnz     INSTR1242",
                    "29": "mov     rbx, [rbp+0]",
                    "30": "mov     [rsp+0D0h+var_98], rbp",
                    "31": "mov     rdi, rbp",
                    "32": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "33": "mov     r12, [rax]",
                    "34": "mov     r14d, [rdx]",
                    "35": "mov     [rsp+0D0h+var_B8], rbx",
                    "36": "lea     r15, [rbx+28h]",
                    "37": "test    r12, r12",
                    "38": "jnz     INSTR1245",
                    "39": "mov     ebx, 368h",
                    "40": "add     rbx, [r15]",
                    "41": "mov     rdi, r15",
                    "42": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "43": "cmp     qword ptr [rax], 0",
                    "44": "jnz     INSTR1248",
                    "45": "mov     ebp, 120h",
                    "46": "add     rbp, [rbx]",
                    "47": "mov     rdi, rbx",
                    "48": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "49": "cmp     qword ptr [rax], 0",
                    "50": "jnz     INSTR1251",
                    "51": "mov     ebx, 84h",
                    "52": "add     rbx, [rbp+0]",
                    "53": "mov     rdi, rbp",
                    "54": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "55": "cmp     qword ptr [rax], 0",
                    "56": "jnz     INSTR1254",
                    "57": "mov     ebp, [rbx]",
                    "58": "mov     rdi, rbx",
                    "59": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "60": "mov     eax, [rax]",
                    "61": "and     ebp, 8",
                    "62": "test    al, 8",
                    "63": "jz      short INSTR67",
                    "64": "not     eax",
                    "65": "and     eax, ebp",
                    "66": "jz      INSTR1257",
                    "67": "test    ebp, ebp",
                    "68": "jnz     INSTR1261",
                    "69": "mov     [rsp+0D0h+var_70], r13",
                    "70": "mov     rax, [rsp+0D0h+var_B8]",
                    "71": "lea     rbx, [rax+0Ch]",
                    "72": "test    r12, r12",
                    "73": "jnz     INSTR1263",
                    "74": "mov     [rsp+0D0h+var_D0], r14d",
                    "75": "mov     r13d, [rbx]",
                    "76": "mov     rdi, rbx",
                    "77": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "78": "mov     ebx, [rax]",
                    "79": "mov     eax, [rdx]",
                    "80": "mov     dword ptr [rsp+0D0h+var_A0], eax",
                    "81": "mov     ebp, r13d",
                    "82": "and     ebp, 8",
                    "83": "mov     r14d, ebx",
                    "84": "not     r14d",
                    "85": "test    bl, 8",
                    "86": "jz      short INSTR90",
                    "87": "mov     eax, r14d",
                    "88": "and     eax, ebp",
                    "89": "jz      INSTR1266",
                    "90": "test    ebp, ebp",
                    "91": "jnz     INSTR1270",
                    "92": "mov     [rsp+0D0h+var_C8], r12",
                    "93": "mov     [rsp+0D0h+var_80], r15",
                    "94": "and     r13d, 4",
                    "95": "shr     bl, 2",
                    "96": "test    r14d, r13d",
                    "97": "setz    r12b",
                    "98": "and     r12b, bl",
                    "99": "cmp     [rsp+0D0h+var_C0], 0",
                    "100": "jnz     INSTR1275",
                    "101": "mov     rdi, [rsp+0D0h+var_A8]",
                    "102": "mov     r15d, [rdi]",
                    "103": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "104": "mov     ebp, [rax]",
                    "105": "mov     eax, r15d",
                    "106": "and     eax, 10007h",
                    "107": "test    ebp, 10007h",
                    "108": "setnz   bl",
                    "109": "mov     r14d, ebp",
                    "110": "not     r14d",
                    "111": "test    r14d, eax",
                    "112": "setz    cl",
                    "113": "and     cl, bl",
                    "114": "test    eax, eax",
                    "115": "setz    sil",
                    "116": "setnz   al",
                    "117": "test    r13d, r13d",
                    "118": "setz    bl",
                    "119": "mov     edi, [rdx]",
                    "120": "cmovnz  r13d, edi",
                    "121": "setnz   dl",
                    "122": "and     dl, cl",
                    "123": "or      al, cl",
                    "124": "movzx   ecx, dl",
                    "125": "movzx   eax, al",
                    "126": "test    r12b, r12b",
                    "127": "cmovz   eax, ecx",
                    "128": "cmovnz  r13d, dword ptr [rsp+0D0h+var_A0]",
                    "129": "or      bl, sil",
                    "130": "cmp     al, 1",
                    "131": "jz      INSTR1278",
                    "132": "test    bl, bl",
                    "133": "mov     r12, [rsp+0D0h+var_C8]",
                    "134": "jz      INSTR1270",
                    "135": "and     r15d, 8",
                    "136": "test    bpl, 8",
                    "137": "mov     r13, [rsp+0D0h+var_70]",
                    "138": "jz      short INSTR141",
                    "139": "and     r14d, r15d",
                    "140": "jz      INSTR1283",
                    "141": "test    r15d, r15d",
                    "142": "jnz     INSTR1286",
                    "143": "mov     rax, [rsp+0D0h+var_90]",
                    "144": "mov     [r13+0], rax",
                    "145": "mov     eax, [rsp+0D0h+var_AC]",
                    "146": "mov     [r13+0C88h], eax",
                    "147": "mov     rax, [rsp+0D0h+var_50]",
                    "148": "mov     [r13+8], rax",
                    "149": "mov     eax, [rsp+0D0h+var_74]",
                    "150": "mov     [r13+0C90h], eax",
                    "151": "mov     rax, [rsp+0D0h+var_C0]",
                    "152": "mov     [r13+10h], rax",
                    "153": "mov     eax, [rsp+0D0h+var_CC]",
                    "154": "mov     [r13+0C98h], eax",
                    "155": "mov     dword ptr [r13+320h], 0",
                    "156": "mov     rdi, [rsp+0D0h+var_88]",
                    "157": "mov     rsi, [rsp+0D0h+var_40]",
                    "158": "mov     rdx, [rsp+0D0h+var_A8]",
                    "159": "call    setattr_prepare; PIC mode",
                    "160": "mov     r15d, eax",
                    "161": "mov     ebx, [r13+320h]",
                    "162": "mov     r12d, [r13+0FA8h]",
                    "163": "test    ebx, ebx",
                    "164": "jz      short INSTR169",
                    "165": "mov     eax, ebx",
                    "166": "not     eax",
                    "167": "and     eax, r15d",
                    "168": "jz      INSTR1366",
                    "169": "test    r15d, r15d",
                    "170": "jnz     INSTR1355",
                    "171": "cmp     [rsp+0D0h+var_50], 0",
                    "172": "jnz     INSTR1374",
                    "173": "mov     rdi, [rsp+0D0h+var_98]",
                    "174": "mov     rbx, [rdi]",
                    "175": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "176": "add     rbx, 0Ch",
                    "177": "cmp     qword ptr [rax], 0",
                    "178": "jnz     INSTR1377",
                    "179": "mov     ebp, 14000h",
                    "180": "and     ebp, [rbx]",
                    "181": "mov     rdi, rbx",
                    "182": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "183": "mov     eax, [rax]",
                    "184": "test    eax, 14000h",
                    "185": "jz      short INSTR189",
                    "186": "not     eax",
                    "187": "and     eax, ebp",
                    "188": "jz      INSTR1380",
                    "189": "mov     r15d, 0FFFFFFA1h",
                    "190": "mov     ebx, 0",
                    "191": "mov     r12d, 0",
                    "192": "test    ebp, ebp",
                    "193": "jnz     INSTR1355",
                    "194": "cmp     [rsp+0D0h+var_C0], 0",
                    "195": "jnz     INSTR1400",
                    "196": "mov     rdi, [rsp+0D0h+var_A8]",
                    "197": "mov     r15d, [rdi]",
                    "198": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "199": "mov     r12d, [rax]",
                    "200": "mov     r14d, [rdx]",
                    "201": "mov     ebp, r15d",
                    "202": "and     ebp, 8",
                    "203": "mov     ebx, r12d",
                    "204": "not     ebx",
                    "205": "test    r12b, 8",
                    "206": "jz      short INSTR210",
                    "207": "mov     eax, ebx",
                    "208": "and     eax, ebp",
                    "209": "jz      INSTR1403",
                    "210": "test    ebp, ebp",
                    "211": "jnz     INSTR405",
                    "212": "mov     ebp, r15d",
                    "213": "and     ebp, 2",
                    "214": "test    r12b, 2",
                    "215": "jz      short INSTR218",
                    "216": "and     ebx, ebp",
                    "217": "jz      INSTR1419",
                    "218": "test    ebp, ebp",
                    "219": "jz      INSTR312",
                    "220": "cmp     [rsp+0D0h+var_C8], 0",
                    "221": "mov     rbx, [rsp+0D0h+var_B8]",
                    "222": "jnz     INSTR1465",
                    "223": "mov     ebp, 450h",
                    "224": "mov     rdi, [rsp+0D0h+var_80]",
                    "225": "add     rbp, [rdi]",
                    "226": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "227": "cmp     qword ptr [rax], 0",
                    "228": "jnz     INSTR1468",
                    "229": "mov     r14, [rbp+0]",
                    "230": "mov     rdi, rbp",
                    "231": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "232": "lea     rbp, [rbx+4]",
                    "233": "mov     r15, [rax]",
                    "234": "mov     r12d, [rdx]",
                    "235": "cmp     [rsp+0D0h+var_C8], 0",
                    "236": "jnz     INSTR1471",
                    "237": "mov     ebx, [rbp+0]",
                    "238": "mov     rdi, rbp",
                    "239": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "240": "mov     eax, [rax]",
                    "241": "mov     ecx, [rdx]",
                    "242": "mov     rdx, [rsp+0D0h+var_90]",
                    "243": "mov     [r13+0], rdx",
                    "244": "mov     edx, [rsp+0D0h+var_AC]",
                    "245": "mov     [r13+0C88h], edx",
                    "246": "mov     [r13+8], r15",
                    "247": "mov     [r13+0C90h], r12d",
                    "248": "mov     [r13+10h], eax",
                    "249": "mov     [r13+0C98h], ecx",
                    "250": "mov     dword ptr [r13+320h], 0",
                    "251": "mov     rdi, [rsp+0D0h+var_88]",
                    "252": "mov     rsi, r14",
                    "253": "mov     edx, ebx",
                    "254": "call    make_vfsuid; PIC mode",
                    "255": "mov     r14d, eax",
                    "256": "mov     rax, [rsp+0D0h+var_A8]",
                    "257": "lea     rbp, [rax+8]",
                    "258": "mov     r15d, [r13+320h]",
                    "259": "mov     r12d, [r13+0FA8h]",
                    "260": "cmp     [rsp+0D0h+var_C0], 0",
                    "261": "jnz     INSTR1474",
                    "262": "mov     ebx, [rbp+0]",
                    "263": "mov     rdi, rbp",
                    "264": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "265": "mov     esi, [rax]",
                    "266": "mov     ebp, [rdx]",
                    "267": "mov     edx, ebx",
                    "268": "not     edx",
                    "269": "test    esi, esi",
                    "270": "setnz   r8b",
                    "271": "mov     edi, esi",
                    "272": "not     edi",
                    "273": "test    edi, edx",
                    "274": "setz    r9b",
                    "275": "mov     edi, ebx",
                    "276": "xor     edi, r14d",
                    "277": "or      esi, r15d",
                    "278": "setnz   cl",
                    "279": "not     esi",
                    "280": "test    esi, edi",
                    "281": "setz    dl",
                    "282": "and     dl, cl",
                    "283": "test    r15d, r15d",
                    "284": "cmovz   r12d, ebp",
                    "285": "cmp     ebx, r14d",
                    "286": "setnz   sil",
                    "287": "setz    cl",
                    "288": "xor     edi, edi",
                    "289": "cmp     ebx, 0FFFFFFFFh",
                    "290": "setz    bl",
                    "291": "cmovnz  edi, r12d",
                    "292": "setnz   al",
                    "293": "and     al, dl",
                    "294": "or      cl, dl",
                    "295": "movzx   eax, al",
                    "296": "movzx   ecx, cl",
                    "297": "test    r8b, r9b",
                    "298": "cmovz   ecx, eax",
                    "299": "cmovnz  edi, ebp",
                    "300": "or      bl, sil",
                    "301": "cmp     cl, 1",
                    "302": "jz      INSTR1477",
                    "303": "test    bl, bl",
                    "304": "jnz     INSTR405",
                    "305": "cmp     [rsp+0D0h+var_C0], 0",
                    "306": "jnz     INSTR1563",
                    "307": "mov     rdi, [rsp+0D0h+var_A8]",
                    "308": "mov     r15d, [rdi]",
                    "309": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "310": "mov     r12d, [rax]",
                    "311": "mov     r14d, [rdx]",
                    "312": "and     r15d, 4",
                    "313": "test    r12b, 4",
                    "314": "jz      short INSTR318",
                    "315": "not     r12d",
                    "316": "and     r12d, r15d",
                    "317": "jz      INSTR1429",
                    "318": "test    r15d, r15d",
                    "319": "jz      INSTR423",
                    "320": "cmp     [rsp+0D0h+var_C8], 0",
                    "321": "jnz     INSTR1512",
                    "322": "mov     ebp, 450h",
                    "323": "mov     rdi, [rsp+0D0h+var_80]",
                    "324": "add     rbp, [rdi]",
                    "325": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "326": "cmp     qword ptr [rax], 0",
                    "327": "mov     rbx, [rsp+0D0h+var_B8]",
                    "328": "jnz     INSTR1515",
                    "329": "mov     r14, [rbp+0]",
                    "330": "mov     rdi, rbp",
                    "331": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "332": "lea     rbp, [rbx+8]",
                    "333": "mov     r15, [rax]",
                    "334": "mov     r12d, [rdx]",
                    "335": "cmp     [rsp+0D0h+var_C8], 0",
                    "336": "jnz     INSTR1518",
                    "337": "mov     ebx, [rbp+0]",
                    "338": "mov     rdi, rbp",
                    "339": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "340": "mov     eax, [rax]",
                    "341": "mov     ecx, [rdx]",
                    "342": "mov     rdx, [rsp+0D0h+var_90]",
                    "343": "mov     [r13+0], rdx",
                    "344": "mov     edx, [rsp+0D0h+var_AC]",
                    "345": "mov     [r13+0C88h], edx",
                    "346": "mov     [r13+8], r15",
                    "347": "mov     [r13+0C90h], r12d",
                    "348": "mov     [r13+10h], eax",
                    "349": "mov     [r13+0C98h], ecx",
                    "350": "mov     dword ptr [r13+320h], 0",
                    "351": "mov     rdi, [rsp+0D0h+var_88]",
                    "352": "mov     rsi, r14",
                    "353": "mov     edx, ebx",
                    "354": "call    make_vfsgid; PIC mode",
                    "355": "mov     r14d, eax",
                    "356": "mov     rax, [rsp+0D0h+var_A8]",
                    "357": "lea     rbp, [rax+0Ch]",
                    "358": "mov     r15d, [r13+320h]",
                    "359": "mov     r12d, [r13+0FA8h]",
                    "360": "cmp     [rsp+0D0h+var_C0], 0",
                    "361": "jnz     INSTR1521",
                    "362": "mov     ebx, [rbp+0]",
                    "363": "mov     rdi, rbp",
                    "364": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "365": "mov     esi, [rax]",
                    "366": "mov     ebp, [rdx]",
                    "367": "mov     edx, ebx",
                    "368": "not     edx",
                    "369": "test    esi, esi",
                    "370": "setnz   r8b",
                    "371": "mov     edi, esi",
                    "372": "not     edi",
                    "373": "test    edi, edx",
                    "374": "setz    r9b",
                    "375": "mov     edi, ebx",
                    "376": "xor     edi, r14d",
                    "377": "or      esi, r15d",
                    "378": "setnz   cl",
                    "379": "not     esi",
                    "380": "test    esi, edi",
                    "381": "setz    dl",
                    "382": "and     dl, cl",
                    "383": "test    r15d, r15d",
                    "384": "cmovz   r12d, ebp",
                    "385": "cmp     ebx, r14d",
                    "386": "setnz   sil",
                    "387": "setz    cl",
                    "388": "xor     edi, edi",
                    "389": "cmp     ebx, 0FFFFFFFFh",
                    "390": "setz    bl",
                    "391": "cmovnz  edi, r12d",
                    "392": "setnz   al",
                    "393": "and     al, dl",
                    "394": "or      cl, dl",
                    "395": "movzx   eax, al",
                    "396": "movzx   ecx, cl",
                    "397": "test    r8b, r9b",
                    "398": "cmovz   ecx, eax",
                    "399": "cmovnz  edi, ebp",
                    "400": "or      bl, sil",
                    "401": "cmp     cl, 1",
                    "402": "jz      INSTR1524",
                    "403": "test    bl, bl",
                    "404": "jz      short INSTR423",
                    "405": "mov     rax, [rsp+0D0h+var_C8]",
                    "406": "mov     [r13+0], rax",
                    "407": "mov     eax, [rsp+0D0h+var_D0]",
                    "408": "mov     [r13+0C88h], eax",
                    "409": "mov     dword ptr [r13+320h], 0",
                    "410": "mov     rdi, [rsp+0D0h+var_B8]",
                    "411": "call    f2fs_dquot_initialize; PIC mode",
                    "412": "mov     r15d, eax",
                    "413": "mov     ebx, [r13+320h]",
                    "414": "mov     r12d, [r13+0FA8h]",
                    "415": "test    ebx, ebx",
                    "416": "jz      short INSTR421",
                    "417": "mov     eax, ebx",
                    "418": "not     eax",
                    "419": "and     eax, r15d",
                    "420": "jz      INSTR1408",
                    "421": "test    r15d, r15d",
                    "422": "jnz     INSTR1355",
                    "423": "cmp     [rsp+0D0h+var_C0], 0",
                    "424": "jnz     INSTR1413",
                    "425": "mov     rdi, [rsp+0D0h+var_A8]",
                    "426": "mov     ebx, [rdi]",
                    "427": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "428": "mov     eax, [rax]",
                    "429": "and     ebx, 2",
                    "430": "test    al, 2",
                    "431": "jz      short INSTR435",
                    "432": "not     eax",
                    "433": "and     eax, ebx",
                    "434": "jz      INSTR1416",
                    "435": "test    ebx, ebx",
                    "436": "mov     r15, [rsp+0D0h+var_80]",
                    "437": "mov     r14d, [rsp+0D0h+var_D0]",
                    "438": "mov     r12, [rsp+0D0h+var_C8]",
                    "439": "jz      INSTR528",
                    "440": "test    r12, r12",
                    "441": "jnz     INSTR1451",
                    "442": "mov     ebp, 450h",
                    "443": "add     rbp, [r15]",
                    "444": "mov     rdi, r15",
                    "445": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "446": "cmp     qword ptr [rax], 0",
                    "447": "jnz     INSTR1454",
                    "448": "mov     r14, [rbp+0]",
                    "449": "mov     rdi, rbp",
                    "450": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "451": "mov     rcx, [rsp+0D0h+var_B8]",
                    "452": "lea     rbp, [rcx+4]",
                    "453": "mov     r15, [rax]",
                    "454": "mov     r12d, [rdx]",
                    "455": "cmp     [rsp+0D0h+var_C8], 0",
                    "456": "jnz     INSTR1457",
                    "457": "mov     ebx, [rbp+0]",
                    "458": "mov     rdi, rbp",
                    "459": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "460": "mov     eax, [rax]",
                    "461": "mov     ecx, [rdx]",
                    "462": "mov     rdx, [rsp+0D0h+var_90]",
                    "463": "mov     [r13+0], rdx",
                    "464": "mov     edx, [rsp+0D0h+var_AC]",
                    "465": "mov     [r13+0C88h], edx",
                    "466": "mov     [r13+8], r15",
                    "467": "mov     [r13+0C90h], r12d",
                    "468": "mov     [r13+10h], eax",
                    "469": "mov     [r13+0C98h], ecx",
                    "470": "mov     dword ptr [r13+320h], 0",
                    "471": "mov     rdi, [rsp+0D0h+var_88]",
                    "472": "mov     rsi, r14",
                    "473": "mov     edx, ebx",
                    "474": "call    make_vfsuid; PIC mode",
                    "475": "mov     r14d, eax",
                    "476": "mov     rax, [rsp+0D0h+var_A8]",
                    "477": "lea     rbp, [rax+8]",
                    "478": "mov     r15d, [r13+320h]",
                    "479": "mov     r12d, [r13+0FA8h]",
                    "480": "cmp     [rsp+0D0h+var_C0], 0",
                    "481": "jnz     INSTR1460",
                    "482": "mov     ebx, [rbp+0]",
                    "483": "mov     rdi, rbp",
                    "484": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "485": "mov     esi, [rax]",
                    "486": "mov     ebp, [rdx]",
                    "487": "mov     edx, ebx",
                    "488": "not     edx",
                    "489": "test    esi, esi",
                    "490": "setnz   r8b",
                    "491": "mov     edi, esi",
                    "492": "not     edi",
                    "493": "test    edi, edx",
                    "494": "setz    r9b",
                    "495": "mov     edi, ebx",
                    "496": "xor     edi, r14d",
                    "497": "or      esi, r15d",
                    "498": "setnz   cl",
                    "499": "not     esi",
                    "500": "test    esi, edi",
                    "501": "setz    dl",
                    "502": "and     dl, cl",
                    "503": "test    r15d, r15d",
                    "504": "cmovz   r12d, ebp",
                    "505": "cmp     ebx, r14d",
                    "506": "setnz   sil",
                    "507": "setz    cl",
                    "508": "xor     edi, edi",
                    "509": "cmp     ebx, 0FFFFFFFFh",
                    "510": "setz    bl",
                    "511": "cmovnz  edi, r12d",
                    "512": "setnz   al",
                    "513": "and     al, dl",
                    "514": "or      cl, dl",
                    "515": "movzx   eax, al",
                    "516": "movzx   ecx, cl",
                    "517": "test    r8b, r9b",
                    "518": "cmovz   ecx, eax",
                    "519": "cmovnz  edi, ebp",
                    "520": "or      bl, sil",
                    "521": "cmp     cl, 1",
                    "522": "jz      INSTR1463",
                    "523": "test    bl, bl",
                    "524": "mov     r15, [rsp+0D0h+var_80]",
                    "525": "mov     r14d, [rsp+0D0h+var_D0]",
                    "526": "mov     r12, [rsp+0D0h+var_C8]",
                    "527": "jnz     short INSTR548",
                    "528": "mov     rax, [rsp+0D0h+var_90]",
                    "529": "mov     [r13+0], rax",
                    "530": "mov     eax, [rsp+0D0h+var_AC]",
                    "531": "mov     [r13+0C88h], eax",
                    "532": "mov     rax, [rsp+0D0h+var_C0]",
                    "533": "mov     [r13+8], rax",
                    "534": "mov     eax, [rsp+0D0h+var_CC]",
                    "535": "mov     [r13+0C90h], eax",
                    "536": "mov     [r13+10h], r12",
                    "537": "mov     [r13+0C98h], r14d",
                    "538": "mov     byte ptr [r13+320h], 0",
                    "539": "mov     rdi, [rsp+0D0h+var_88]",
                    "540": "mov     rsi, [rsp+0D0h+var_A8]",
                    "541": "mov     rdx, [rsp+0D0h+var_B8]",
                    "542": "call    i_gid_needs_update",
                    "543": "mov     ebx, eax",
                    "544": "cmp     byte ptr [r13+320h], 1",
                    "545": "jz      INSTR1424",
                    "546": "test    bl, bl",
                    "547": "jz      INSTR794",
                    "548": "test    r12, r12",
                    "549": "jnz     INSTR1434",
                    "550": "mov     ebx, 368h",
                    "551": "add     rbx, [r15]",
                    "552": "mov     rdi, r15",
                    "553": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "554": "cmp     qword ptr [rax], 0",
                    "555": "jnz     INSTR1437",
                    "556": "mov     ebp, 178h",
                    "557": "add     rbp, [rbx]",
                    "558": "mov     rdi, rbx",
                    "559": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "560": "mov     rax, [rax]",
                    "561": "mov     ecx, [rdx]",
                    "562": "mov     [r13+0], rax",
                    "563": "mov     [r13+0C88h], ecx",
                    "564": "mov     rdi, rbp",
                    "565": "call    f2fs_down_read",
                    "566": "mov     rax, [rsp+0D0h+var_90]",
                    "567": "mov     [r13+0], rax",
                    "568": "mov     eax, [rsp+0D0h+var_AC]",
                    "569": "mov     [r13+0C88h], eax",
                    "570": "mov     [r13+8], r12",
                    "571": "mov     [r13+0C90h], r14d",
                    "572": "mov     rbx, [rsp+0D0h+var_C0]",
                    "573": "mov     [r13+10h], rbx",
                    "574": "mov     eax, [rsp+0D0h+var_CC]",
                    "575": "mov     [r13+0C98h], eax",
                    "576": "mov     dword ptr [r13+320h], 0",
                    "577": "mov     rdi, [rsp+0D0h+var_88]",
                    "578": "mov     rsi, [rsp+0D0h+var_B8]",
                    "579": "mov     rdx, [rsp+0D0h+var_A8]",
                    "580": "call    dquot_transfer; PIC mode",
                    "581": "mov     ebp, eax",
                    "582": "mov     eax, [r13+320h]",
                    "583": "mov     r12d, [r13+0FA8h]",
                    "584": "mov     dword ptr [rsp+0D0h+var_A0], eax",
                    "585": "test    eax, eax",
                    "586": "jz      short INSTR591",
                    "587": "mov     eax, dword ptr [rsp+0D0h+var_A0]",
                    "588": "not     eax",
                    "589": "and     eax, ebp",
                    "590": "jz      INSTR1440",
                    "591": "mov     dword ptr [rsp+0D0h+var_98], ebp",
                    "592": "test    ebp, ebp",
                    "593": "jz      INSTR636",
                    "594": "cmp     [rsp+0D0h+var_C8], 0",
                    "595": "jnz     INSTR1481",
                    "596": "mov     ebp, 368h",
                    "597": "add     rbp, [r15]",
                    "598": "mov     rdi, r15",
                    "599": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "600": "cmp     qword ptr [rax], 0",
                    "601": "jnz     INSTR1484",
                    "602": "mov     rbx, [rbp+0]",
                    "603": "mov     rdi, rbp",
                    "604": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "605": "mov     rbp, [rax]",
                    "606": "mov     r14d, [rdx]",
                    "607": "add     rbx, 61h ; 'a'",
                    "608": "mov     esi, 1",
                    "609": "mov     rdi, rbx",
                    "610": "call    __msan_instrument_asm_store; PIC mode",
                    "611": "test    rbp, rbp",
                    "612": "jnz     INSTR1487",
                    "613": "test    rbp, rbp",
                    "614": "jnz     INSTR1491",
                    "615": "lock or byte ptr [rbx], 10h",
                    "616": "cmp     [rsp+0D0h+var_C8], 0",
                    "617": "jnz     INSTR1494",
                    "618": "mov     r14d, 368h",
                    "619": "add     r14, [r15]",
                    "620": "mov     rdi, r15",
                    "621": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "622": "cmp     qword ptr [rax], 0",
                    "623": "mov     ebx, dword ptr [rsp+0D0h+var_A0]",
                    "624": "jnz     INSTR1497",
                    "625": "mov     ebp, 178h",
                    "626": "add     rbp, [r14]",
                    "627": "mov     rdi, r14",
                    "628": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "629": "mov     rax, [rax]",
                    "630": "mov     ecx, [rdx]",
                    "631": "mov     [r13+0], rax",
                    "632": "mov     [r13+0C88h], ecx",
                    "633": "mov     rdi, rbp",
                    "634": "call    up_read; PIC mode",
                    "635": "jmp     INSTR1240",
                    "636": "test    rbx, rbx",
                    "637": "jnz     INSTR1544",
                    "638": "mov     rdi, [rsp+0D0h+var_A8]",
                    "639": "mov     r15d, [rdi]",
                    "640": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "641": "mov     ebx, [rax]",
                    "642": "mov     r14d, [rdx]",
                    "643": "mov     ebp, r15d",
                    "644": "and     ebp, 2",
                    "645": "test    bl, 2",
                    "646": "mov     r12, [rsp+0D0h+var_C8]",
                    "647": "jz      short INSTR652",
                    "648": "mov     eax, ebx",
                    "649": "not     eax",
                    "650": "and     eax, ebp",
                    "651": "jz      INSTR1547",
                    "652": "test    ebp, ebp",
                    "653": "jz      INSTR710",
                    "654": "test    r12, r12",
                    "655": "jnz     INSTR1603",
                    "656": "mov     ebp, 450h",
                    "657": "mov     rdi, [rsp+0D0h+var_80]",
                    "658": "add     rbp, [rdi]",
                    "659": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "660": "cmp     qword ptr [rax], 0",
                    "661": "mov     rbx, [rsp+0D0h+var_A8]",
                    "662": "jnz     INSTR1606",
                    "663": "mov     r14, [rbp+0]",
                    "664": "mov     rdi, rbp",
                    "665": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "666": "lea     rbp, [rbx+8]",
                    "667": "mov     r15, [rax]",
                    "668": "mov     r12d, [rdx]",
                    "669": "cmp     [rsp+0D0h+var_C0], 0",
                    "670": "jnz     INSTR1609",
                    "671": "mov     ebx, [rbp+0]",
                    "672": "mov     rdi, rbp",
                    "673": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "674": "mov     eax, [rax]",
                    "675": "mov     ecx, [rdx]",
                    "676": "mov     rdx, [rsp+0D0h+var_90]",
                    "677": "mov     [r13+0], rdx",
                    "678": "mov     edx, [rsp+0D0h+var_AC]",
                    "679": "mov     [r13+0C88h], edx",
                    "680": "mov     [r13+8], r15",
                    "681": "mov     [r13+0C90h], r12d",
                    "682": "mov     [r13+10h], eax",
                    "683": "mov     [r13+0C98h], ecx",
                    "684": "mov     dword ptr [r13+320h], 0",
                    "685": "mov     rdi, [rsp+0D0h+var_88]",
                    "686": "mov     rsi, r14",
                    "687": "mov     edx, ebx",
                    "688": "call    from_vfsuid; PIC mode",
                    "689": "mov     r15d, eax",
                    "690": "mov     rax, [rsp+0D0h+var_B8]",
                    "691": "lea     rbp, [rax+4]",
                    "692": "mov     ebx, [r13+320h]",
                    "693": "mov     r14d, [r13+0FA8h]",
                    "694": "cmp     [rsp+0D0h+var_C8], 0",
                    "695": "jnz     INSTR1612",
                    "696": "mov     rdi, rbp",
                    "697": "call    __msan_metadata_ptr_for_store_4; PIC mode",
                    "698": "mov     [rax], ebx",
                    "699": "test    ebx, ebx",
                    "700": "jnz     INSTR1615",
                    "701": "mov     [rbp+0], r15d",
                    "702": "cmp     [rsp+0D0h+var_C0], 0",
                    "703": "jnz     INSTR1620",
                    "704": "mov     rdi, [rsp+0D0h+var_A8]",
                    "705": "mov     r15d, [rdi]",
                    "706": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "707": "mov     ebx, [rax]",
                    "708": "mov     r14d, [rdx]",
                    "709": "mov     r12, [rsp+0D0h+var_C8]",
                    "710": "and     r15d, 4",
                    "711": "test    bl, 4",
                    "712": "jz      short INSTR716",
                    "713": "not     ebx",
                    "714": "and     ebx, r15d",
                    "715": "jz      INSTR1552",
                    "716": "test    r15d, r15d",
                    "717": "jz      INSTR768",
                    "718": "test    r12, r12",
                    "719": "mov     rbx, [rsp+0D0h+var_80]",
                    "720": "jnz     INSTR1623",
                    "721": "mov     ebp, 450h",
                    "722": "add     rbp, [rbx]",
                    "723": "mov     rdi, rbx",
                    "724": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "725": "cmp     qword ptr [rax], 0",
                    "726": "mov     rbx, [rsp+0D0h+var_A8]",
                    "727": "jnz     INSTR1626",
                    "728": "mov     r14, [rbp+0]",
                    "729": "mov     rdi, rbp",
                    "730": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "731": "lea     rbp, [rbx+0Ch]",
                    "732": "mov     r15, [rax]",
                    "733": "mov     r12d, [rdx]",
                    "734": "cmp     [rsp+0D0h+var_C0], 0",
                    "735": "jnz     INSTR1629",
                    "736": "mov     ebx, [rbp+0]",
                    "737": "mov     rdi, rbp",
                    "738": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "739": "mov     eax, [rax]",
                    "740": "mov     ecx, [rdx]",
                    "741": "mov     rdx, [rsp+0D0h+var_90]",
                    "742": "mov     [r13+0], rdx",
                    "743": "mov     edx, [rsp+0D0h+var_AC]",
                    "744": "mov     [r13+0C88h], edx",
                    "745": "mov     [r13+8], r15",
                    "746": "mov     [r13+0C90h], r12d",
                    "747": "mov     [r13+10h], eax",
                    "748": "mov     [r13+0C98h], ecx",
                    "749": "mov     dword ptr [r13+320h], 0",
                    "750": "mov     rdi, [rsp+0D0h+var_88]",
                    "751": "mov     rsi, r14",
                    "752": "mov     edx, ebx",
                    "753": "call    from_vfsgid; PIC mode",
                    "754": "mov     r15d, eax",
                    "755": "mov     rax, [rsp+0D0h+var_B8]",
                    "756": "lea     rbp, [rax+8]",
                    "757": "mov     ebx, [r13+320h]",
                    "758": "mov     r14d, [r13+0FA8h]",
                    "759": "cmp     [rsp+0D0h+var_C8], 0",
                    "760": "jnz     INSTR1632",
                    "761": "mov     rdi, rbp",
                    "762": "call    __msan_metadata_ptr_for_store_4; PIC mode",
                    "763": "mov     [rax], ebx",
                    "764": "test    ebx, ebx",
                    "765": "jnz     INSTR1635",
                    "766": "mov     [rbp+0], r15d",
                    "767": "mov     r12, [rsp+0D0h+var_C8]",
                    "768": "mov     [r13+0], r12",
                    "769": "mov     r14d, [rsp+0D0h+var_D0]",
                    "770": "mov     [r13+0C88h], r14d",
                    "771": "mov     byte ptr [r13+8], 0",
                    "772": "mov     rdi, [rsp+0D0h+var_B8]",
                    "773": "mov     esi, 1",
                    "774": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "775": "test    r12, r12",
                    "776": "mov     r15, [rsp+0D0h+var_80]",
                    "777": "jnz     INSTR1557",
                    "778": "mov     ebx, 368h",
                    "779": "add     rbx, [r15]",
                    "780": "mov     rdi, r15",
                    "781": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "782": "cmp     qword ptr [rax], 0",
                    "783": "jnz     INSTR1560",
                    "784": "mov     ebp, 178h",
                    "785": "add     rbp, [rbx]",
                    "786": "mov     rdi, rbx",
                    "787": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "788": "mov     rax, [rax]",
                    "789": "mov     ecx, [rdx]",
                    "790": "mov     [r13+0], rax",
                    "791": "mov     [r13+0C88h], ecx",
                    "792": "mov     rdi, rbp",
                    "793": "call    up_read; PIC mode",
                    "794": "cmp     [rsp+0D0h+var_C0], 0",
                    "795": "jnz     INSTR1443",
                    "796": "mov     rdi, [rsp+0D0h+var_A8]",
                    "797": "mov     ebx, [rdi]",
                    "798": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "799": "mov     eax, [rax]",
                    "800": "and     ebx, 8",
                    "801": "test    al, 8",
                    "802": "jz      short INSTR806",
                    "803": "not     eax",
                    "804": "and     eax, ebx",
                    "805": "jz      INSTR1446",
                    "806": "test    ebx, ebx",
                    "807": "jz      INSTR1072",
                    "808": "mov     r15, [rsp+0D0h+var_B8]",
                    "809": "lea     rbp, [r15+50h]",
                    "810": "test    r12, r12",
                    "811": "jnz     INSTR1528",
                    "812": "mov     rax, [rbp+0]",
                    "813": "mov     [rsp+0D0h+var_68], rax",
                    "814": "mov     rdi, rbp",
                    "815": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "816": "mov     rax, [rax]",
                    "817": "mov     [rsp+0D0h+var_A0], rax",
                    "818": "mov     eax, [rdx]",
                    "819": "mov     dword ptr [rsp+0D0h+var_98], eax",
                    "820": "mov     rax, [rsp+0D0h+var_A8]",
                    "821": "lea     rbx, [rax+10h]",
                    "822": "cmp     [rsp+0D0h+var_C0], 0",
                    "823": "jnz     INSTR1531",
                    "824": "mov     [rsp+0D0h+var_38], rbp",
                    "825": "mov     rax, [rbx]",
                    "826": "mov     [rsp+0D0h+var_58], rax",
                    "827": "mov     [rsp+0D0h+var_48], rbx",
                    "828": "mov     rdi, rbx",
                    "829": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "830": "lea     r14, [r15+410h]",
                    "831": "mov     r13, [rax]",
                    "832": "mov     eax, [rdx]",
                    "833": "mov     dword ptr [rsp+0D0h+var_60], eax",
                    "834": "test    r12, r12",
                    "835": "jnz     INSTR1534",
                    "836": "mov     ebp, [r15+410h]",
                    "837": "mov     rdi, r14",
                    "838": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "839": "mov     eax, [rax]",
                    "840": "sar     eax, 2",
                    "841": "sar     ebp, 2",
                    "842": "lea     r14, [r15+418h]",
                    "843": "mov     r15d, [rdx]",
                    "844": "movsxd  rbx, eax",
                    "845": "test    r12, r12",
                    "846": "jnz     INSTR1537",
                    "847": "movsxd  r12, ebp",
                    "848": "movsxd  rbp, dword ptr [r14]",
                    "849": "mov     rdi, r14",
                    "850": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "851": "movsxd  rax, dword ptr [rax]",
                    "852": "or      rbx, rax",
                    "853": "test    rax, rax",
                    "854": "jz      short INSTR856",
                    "855": "mov     r15d, [rdx]",
                    "856": "add     r12, rbp",
                    "857": "shl     rbx, 2",
                    "858": "shl     r12, 2",
                    "859": "mov     ebp, 0E68h",
                    "860": "sub     rbp, r12",
                    "861": "test    rbx, rbx",
                    "862": "mov     edi, dword ptr [rsp+0D0h+var_60]",
                    "863": "cmovz   r15d, edi",
                    "864": "or      rbx, r13",
                    "865": "mov     r12d, [rsp+0D0h+var_D0]",
                    "866": "mov     r14d, dword ptr [rsp+0D0h+var_98]",
                    "867": "jnz     INSTR1540",
                    "868": "mov     rbx, [rsp+0D0h+var_58]",
                    "869": "cmp     rbx, rbp",
                    "870": "mov     r15, [rsp+0D0h+var_C8]",
                    "871": "mov     rbp, [rsp+0D0h+var_B8]",
                    "872": "jbe     short INSTR900",
                    "873": "mov     r13, [rsp+0D0h+var_70]",
                    "874": "mov     [r13+0], r15",
                    "875": "mov     [r13+0C88h], r12d",
                    "876": "mov     dword ptr [r13+320h], 0",
                    "877": "mov     rdi, rbp",
                    "878": "call    f2fs_convert_inline_inode; PIC mode",
                    "879": "mov     r15d, eax",
                    "880": "mov     ebx, [r13+320h]",
                    "881": "mov     r12d, [r13+0FA8h]",
                    "882": "test    ebx, ebx",
                    "883": "jz      short INSTR888",
                    "884": "mov     eax, ebx",
                    "885": "not     eax",
                    "886": "and     eax, r15d",
                    "887": "jz      INSTR1598",
                    "888": "test    r15d, r15d",
                    "889": "jnz     INSTR1355",
                    "890": "cmp     [rsp+0D0h+var_C0], 0",
                    "891": "jnz     INSTR1688",
                    "892": "mov     rdi, [rsp+0D0h+var_48]",
                    "893": "mov     rbx, [rdi]",
                    "894": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "895": "mov     r13, [rax]",
                    "896": "mov     edi, [rdx]",
                    "897": "mov     r12d, [rsp+0D0h+var_D0]",
                    "898": "mov     r15, [rsp+0D0h+var_C8]",
                    "899": "mov     rbp, [rsp+0D0h+var_B8]",
                    "900": "mov     rax, [rsp+0D0h+var_A0]",
                    "901": "test    rax, rax",
                    "902": "cmovnz  edi, r14d",
                    "903": "or      r13, rax",
                    "904": "jnz     INSTR1566",
                    "905": "cmp     rbx, [rsp+0D0h+var_68]",
                    "906": "mov     r13, [rsp+0D0h+var_70]",
                    "907": "jge     short INSTR912",
                    "908": "mov     [r13+0], r15",
                    "909": "mov     [r13+0C88h], r12d",
                    "910": "mov     rdi, rbp",
                    "911": "call    inode_dio_wait; PIC mode",
                    "912": "lea     rdi, [rbp+390h]",
                    "913": "mov     [r13+0], r15",
                    "914": "mov     [r13+0C88h], r12d",
                    "915": "mov     [rsp+0D0h+var_60], rdi",
                    "916": "call    down_write; PIC mode",
                    "917": "add     rbp, 30h ; '0'",
                    "918": "test    r15, r15",
                    "919": "jnz     INSTR1568",
                    "920": "mov     rbx, [rbp+0]",
                    "921": "mov     [rsp+0D0h+var_58], rbp",
                    "922": "mov     rdi, rbp",
                    "923": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "924": "mov     rax, [rax]",
                    "925": "mov     ecx, [rdx]",
                    "926": "add     rbx, 18h",
                    "927": "mov     [r13+0], rax",
                    "928": "mov     [r13+0C88h], ecx",
                    "929": "mov     rdi, rbx",
                    "930": "call    down_write; PIC mode",
                    "931": "mov     rbx, [rsp+0D0h+var_C0]",
                    "932": "test    rbx, rbx",
                    "933": "jnz     INSTR1571",
                    "934": "mov     r14, [rsp+0D0h+var_48]",
                    "935": "mov     r12, [r14]",
                    "936": "mov     rdi, r14",
                    "937": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "938": "mov     rax, [rax]",
                    "939": "mov     ecx, [rdx]",
                    "940": "mov     [r13+0], r15",
                    "941": "mov     edx, [rsp+0D0h+var_D0]",
                    "942": "mov     [r13+0C88h], edx",
                    "943": "mov     [r13+8], rax",
                    "944": "mov     [r13+0C90h], ecx",
                    "945": "mov     rbp, [rsp+0D0h+var_B8]",
                    "946": "mov     rdi, rbp",
                    "947": "mov     rsi, r12",
                    "948": "call    truncate_setsize; PIC mode",
                    "949": "test    rbx, rbx",
                    "950": "jnz     INSTR1574",
                    "951": "mov     rbx, [r14]",
                    "952": "mov     rdi, r14",
                    "953": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "954": "cmp     [rsp+0D0h+var_A0], 0",
                    "955": "mov     edi, dword ptr [rsp+0D0h+var_98]",
                    "956": "jnz     short INSTR958",
                    "957": "mov     edi, [rdx]",
                    "958": "mov     rcx, [rsp+0D0h+var_A0]",
                    "959": "or      rcx, [rax]",
                    "960": "jnz     INSTR1577",
                    "961": "mov     dword ptr [rsp+0D0h+var_A0], 0",
                    "962": "mov     r12d, 0",
                    "963": "mov     r15d, 0",
                    "964": "cmp     rbx, [rsp+0D0h+var_68]",
                    "965": "jg      short INSTR977",
                    "966": "mov     rax, [rsp+0D0h+var_C8]",
                    "967": "mov     [r13+0], rax",
                    "968": "mov     eax, [rsp+0D0h+var_D0]",
                    "969": "mov     [r13+0C88h], eax",
                    "970": "mov     dword ptr [r13+320h], 0",
                    "971": "mov     rdi, rbp",
                    "972": "call    f2fs_truncate; PIC mode",
                    "973": "mov     r15d, eax",
                    "974": "mov     eax, [r13+320h]",
                    "975": "mov     dword ptr [rsp+0D0h+var_A0], eax",
                    "976": "mov     r12d, [r13+0FA8h]",
                    "977": "mov     rbp, [rsp+0D0h+var_C8]",
                    "978": "test    rbp, rbp",
                    "979": "jnz     INSTR1579",
                    "980": "mov     rdi, [rsp+0D0h+var_58]",
                    "981": "mov     rbx, [rdi]",
                    "982": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "983": "mov     rax, [rax]",
                    "984": "mov     ecx, [rdx]",
                    "985": "add     rbx, 18h",
                    "986": "mov     [r13+0], rax",
                    "987": "mov     [r13+0C88h], ecx",
                    "988": "mov     rdi, rbx",
                    "989": "call    up_write; PIC mode",
                    "990": "mov     [r13+0], rbp",
                    "991": "mov     eax, [rsp+0D0h+var_D0]",
                    "992": "mov     [r13+0C88h], eax",
                    "993": "mov     rdi, [rsp+0D0h+var_60]",
                    "994": "call    f2fs_up_write",
                    "995": "mov     ebx, dword ptr [rsp+0D0h+var_A0]",
                    "996": "test    ebx, ebx",
                    "997": "jz      short INSTR1002",
                    "998": "mov     eax, ebx",
                    "999": "not     eax",
                    "1000": "and     eax, r15d",
                    "1001": "jz      INSTR1582",
                    "1002": "test    r15d, r15d",
                    "1003": "jnz     INSTR1355",
                    "1004": "mov     rbp, [rsp+0D0h+var_B8]",
                    "1005": "lea     rdi, [rbp+2E8h]",
                    "1006": "mov     r15, [rsp+0D0h+var_C8]",
                    "1007": "mov     [r13+0], r15",
                    "1008": "mov     ebx, [rsp+0D0h+var_D0]",
                    "1009": "mov     [r13+0C88h], ebx",
                    "1010": "mov     [rsp+0D0h+var_A0], rdi",
                    "1011": "call    _raw_spin_lock; PIC mode",
                    "1012": "mov     [r13+0], r15",
                    "1013": "mov     [r13+0C88h], ebx",
                    "1014": "mov     qword ptr [r13+320h], 0",
                    "1015": "mov     qword ptr [r13+328h], 0",
                    "1016": "mov     rdi, rbp",
                    "1017": "call    inode_set_ctime_current; PIC mode",
                    "1018": "mov     [rsp+0D0h+var_98], rax",
                    "1019": "mov     rax, r13",
                    "1020": "mov     r13, rdx",
                    "1021": "lea     rbx, [rbp+60h]",
                    "1022": "mov     r12, [rax+320h]",
                    "1023": "mov     r14, [rax+328h]",
                    "1024": "mov     eax, [rax+0FA8h]",
                    "1025": "mov     dword ptr [rsp+0D0h+var_68], eax",
                    "1026": "test    r15, r15",
                    "1027": "jnz     INSTR1653",
                    "1028": "mov     rdi, rbx",
                    "1029": "call    __msan_metadata_ptr_for_store_8; PIC mode",
                    "1030": "mov     [rax], r12",
                    "1031": "test    r12, r12",
                    "1032": "jnz     INSTR1656",
                    "1033": "mov     rax, [rsp+0D0h+var_B8]",
                    "1034": "lea     rbx, [rax+74h]",
                    "1035": "mov     rcx, [rsp+0D0h+var_98]",
                    "1036": "mov     [rax+60h], rcx",
                    "1037": "mov     rbp, [rsp+0D0h+var_C8]",
                    "1038": "test    rbp, rbp",
                    "1039": "jnz     INSTR1665",
                    "1040": "mov     rdi, rbx",
                    "1041": "call    __msan_metadata_ptr_for_store_4; PIC mode",
                    "1042": "mov     [rax], r14d",
                    "1043": "test    r14d, r14d",
                    "1044": "jnz     INSTR1668",
                    "1045": "mov     [rbx], r13d",
                    "1046": "test    rbp, rbp",
                    "1047": "mov     r14, rbp",
                    "1048": "jnz     INSTR1673",
                    "1049": "mov     rbx, [rsp+0D0h+var_B8]",
                    "1050": "mov     r13, [rbx+50h]",
                    "1051": "mov     rdi, [rsp+0D0h+var_38]",
                    "1052": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1053": "mov     rbp, [rax]",
                    "1054": "mov     r12d, [rdx]",
                    "1055": "add     rbx, 2E0h",
                    "1056": "test    r14, r14",
                    "1057": "jnz     INSTR1676",
                    "1058": "mov     rdi, rbx",
                    "1059": "call    __msan_metadata_ptr_for_store_8; PIC mode",
                    "1060": "mov     [rax], rbp",
                    "1061": "test    rbp, rbp",
                    "1062": "jnz     INSTR1679",
                    "1063": "mov     [rbx], r13",
                    "1064": "mov     r13, [rsp+0D0h+var_70]",
                    "1065": "mov     r12, [rsp+0D0h+var_C8]",
                    "1066": "mov     [r13+0], r12",
                    "1067": "mov     r14d, [rsp+0D0h+var_D0]",
                    "1068": "mov     [r13+0C88h], r14d",
                    "1069": "mov     rdi, [rsp+0D0h+var_A0]",
                    "1070": "call    _raw_spin_unlock; PIC mode",
                    "1071": "mov     r15, [rsp+0D0h+var_80]",
                    "1072": "mov     rax, [rsp+0D0h+var_90]",
                    "1073": "mov     [r13+0], rax",
                    "1074": "mov     eax, [rsp+0D0h+var_AC]",
                    "1075": "mov     [r13+0C88h], eax",
                    "1076": "mov     [r13+8], r12",
                    "1077": "mov     [r13+0C90h], r14d",
                    "1078": "mov     rbx, [rsp+0D0h+var_C0]",
                    "1079": "mov     [r13+10h], rbx",
                    "1080": "mov     r12d, [rsp+0D0h+var_CC]",
                    "1081": "mov     [r13+0C98h], r12d",
                    "1082": "mov     rdi, [rsp+0D0h+var_88]",
                    "1083": "mov     rsi, [rsp+0D0h+var_B8]",
                    "1084": "mov     rbp, [rsp+0D0h+var_A8]",
                    "1085": "mov     rdx, rbp",
                    "1086": "call    __setattr_copy",
                    "1087": "test    rbx, rbx",
                    "1088": "jnz     INSTR1500",
                    "1089": "mov     ebx, [rbp+0]",
                    "1090": "mov     rdi, rbp",
                    "1091": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "1092": "mov     eax, [rax]",
                    "1093": "and     ebx, 1",
                    "1094": "test    al, 1",
                    "1095": "jz      short INSTR1099",
                    "1096": "not     eax",
                    "1097": "and     eax, ebx",
                    "1098": "jz      INSTR1503",
                    "1099": "mov     dword ptr [rsp+0D0h+var_A0], 0",
                    "1100": "mov     r12d, 0",
                    "1101": "mov     dword ptr [rsp+0D0h+var_98], 0",
                    "1102": "test    ebx, ebx",
                    "1103": "jz      INSTR1213",
                    "1104": "mov     rbp, [rsp+0D0h+var_B8]",
                    "1105": "lea     rbx, [rbp+268h]",
                    "1106": "mov     r12, [rsp+0D0h+var_C8]",
                    "1107": "test    r12, r12",
                    "1108": "jnz     INSTR1587",
                    "1109": "mov     r14, [rbp+268h]",
                    "1110": "mov     [rsp+0D0h+var_A8], rbx",
                    "1111": "mov     rdi, rbx",
                    "1112": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1113": "mov     rax, [rax]",
                    "1114": "and     r14d, 20h",
                    "1115": "mov     ecx, eax",
                    "1116": "shr     cl, 5",
                    "1117": "not     eax",
                    "1118": "test    eax, r14d",
                    "1119": "setz    sil",
                    "1120": "lea     rbx, [rbp+264h]",
                    "1121": "mov     rax, r12",
                    "1122": "mov     edi, [rsp+0D0h+var_D0]",
                    "1123": "test    cl, sil",
                    "1124": "jz      short INSTR1129",
                    "1125": "mov     rax, rbp",
                    "1126": "xor     rax, rbx",
                    "1127": "or      rax, r12",
                    "1128": "mov     edi, [rdx]",
                    "1129": "test    r14, r14",
                    "1130": "mov     [rsp+0D0h+var_C0], rbx",
                    "1131": "cmovz   rbx, rbp",
                    "1132": "test    rax, rax",
                    "1133": "jnz     INSTR1590",
                    "1134": "movzx   ebp, word ptr [rbx]",
                    "1135": "mov     rdi, rbx",
                    "1136": "call    __msan_metadata_ptr_for_load_2; PIC mode",
                    "1137": "movzx   eax, word ptr [rax]",
                    "1138": "mov     ecx, [rdx]",
                    "1139": "mov     rdx, [rsp+0D0h+var_90]",
                    "1140": "mov     [r13+0], rdx",
                    "1141": "mov     edx, [rsp+0D0h+var_AC]",
                    "1142": "mov     [r13+0C88h], edx",
                    "1143": "mov     rdx, [rsp+0D0h+var_50]",
                    "1144": "mov     [r13+8], rdx",
                    "1145": "mov     edx, [rsp+0D0h+var_74]",
                    "1146": "mov     [r13+0C90h], edx",
                    "1147": "mov     [r13+10h], ax",
                    "1148": "mov     [r13+0C98h], ecx",
                    "1149": "mov     dword ptr [r13+320h], 0",
                    "1150": "mov     rdi, [rsp+0D0h+var_88]",
                    "1151": "mov     rsi, [rsp+0D0h+var_40]",
                    "1152": "mov     edx, ebp",
                    "1153": "call    posix_acl_chmod; PIC mode",
                    "1154": "mov     dword ptr [rsp+0D0h+var_98], eax",
                    "1155": "mov     eax, [r13+320h]",
                    "1156": "mov     dword ptr [rsp+0D0h+var_A0], eax",
                    "1157": "mov     r12d, [r13+0FA8h]",
                    "1158": "cmp     [rsp+0D0h+var_C8], 0",
                    "1159": "mov     rbp, [rsp+0D0h+var_A8]",
                    "1160": "jnz     INSTR1592",
                    "1161": "mov     rbx, [rbp+0]",
                    "1162": "mov     rdi, rbp",
                    "1163": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1164": "mov     rax, [rax]",
                    "1165": "and     ebx, 20h",
                    "1166": "test    al, 20h",
                    "1167": "jz      short INSTR1173",
                    "1168": "not     eax",
                    "1169": "mov     ecx, ebx",
                    "1170": "and     ecx, eax",
                    "1171": "test    rcx, rcx",
                    "1172": "jz      INSTR1595",
                    "1173": "test    rbx, rbx",
                    "1174": "mov     rdi, [rsp+0D0h+var_C0]",
                    "1175": "jz      INSTR1212",
                    "1176": "cmp     dword ptr [rsp+0D0h+var_A0], 0",
                    "1177": "jz      short INSTR1182",
                    "1178": "mov     eax, dword ptr [rsp+0D0h+var_A0]",
                    "1179": "not     eax",
                    "1180": "and     eax, dword ptr [rsp+0D0h+var_98]",
                    "1181": "jz      INSTR1640",
                    "1182": "cmp     dword ptr [rsp+0D0h+var_98], 0",
                    "1183": "jnz     short INSTR1203",
                    "1184": "mov     r14, [rsp+0D0h+var_C8]",
                    "1185": "test    r14, r14",
                    "1186": "jnz     INSTR1691",
                    "1187": "movzx   r15d, word ptr [rdi]",
                    "1188": "call    __msan_metadata_ptr_for_load_2; PIC mode",
                    "1189": "movzx   ebx, word ptr [rax]",
                    "1190": "mov     eax, [rdx]",
                    "1191": "mov     dword ptr [rsp+0D0h+var_C0], eax",
                    "1192": "test    r14, r14",
                    "1193": "jnz     INSTR1695",
                    "1194": "mov     r14, [rsp+0D0h+var_B8]",
                    "1195": "mov     rdi, r14",
                    "1196": "call    __msan_metadata_ptr_for_store_2; PIC mode",
                    "1197": "mov     [rax], bx",
                    "1198": "test    bx, bx",
                    "1199": "jnz     INSTR1698",
                    "1200": "mov     [r14], r15w",
                    "1201": "mov     r13, [rsp+0D0h+var_70]",
                    "1202": "mov     r15, [rsp+0D0h+var_80]",
                    "1203": "mov     esi, 1",
                    "1204": "mov     rdi, rbp",
                    "1205": "call    __msan_instrument_asm_store; PIC mode",
                    "1206": "mov     rbx, [rsp+0D0h+var_C8]",
                    "1207": "test    rbx, rbx",
                    "1208": "jnz     INSTR1646",
                    "1209": "test    rbx, rbx",
                    "1210": "jnz     INSTR1650",
                    "1211": "lock and byte ptr [rbp+0], 0DFh",
                    "1212": "mov     r14d, [rsp+0D0h+var_D0]",
                    "1213": "mov     rbx, [rsp+0D0h+var_C8]",
                    "1214": "mov     [r13+0], rbx",
                    "1215": "mov     [r13+0C88h], r14d",
                    "1216": "mov     byte ptr [r13+8], 0",
                    "1217": "mov     rdi, [rsp+0D0h+var_B8]",
                    "1218": "mov     esi, 1",
                    "1219": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "1220": "test    rbx, rbx",
                    "1221": "jnz     INSTR1506",
                    "1222": "mov     ebx, 368h",
                    "1223": "add     rbx, [r15]",
                    "1224": "mov     rdi, r15",
                    "1225": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1226": "cmp     qword ptr [rax], 0",
                    "1227": "jnz     INSTR1509",
                    "1228": "mov     rbp, [rbx]",
                    "1229": "mov     rdi, rbx",
                    "1230": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1231": "mov     rax, [rax]",
                    "1232": "mov     ecx, [rdx]",
                    "1233": "mov     [r13+0], rax",
                    "1234": "mov     [r13+0C88h], ecx",
                    "1235": "mov     byte ptr [r13+8], 0",
                    "1236": "mov     rdi, rbp",
                    "1237": "mov     esi, 1",
                    "1238": "call    f2fs_balance_fs; PIC mode",
                    "1239": "mov     ebx, dword ptr [rsp+0D0h+var_A0]",
                    "1240": "mov     r15d, dword ptr [rsp+0D0h+var_98]",
                    "1241": "jmp     INSTR1355",
                    "1242": "mov     edi, [rsp+0D0h+var_74]",
                    "1243": "call    __msan_warning; PIC mode",
                    "1244": "jmp     INSTR29",
                    "1245": "mov     edi, r14d",
                    "1246": "call    __msan_warning; PIC mode",
                    "1247": "jmp     INSTR39",
                    "1248": "mov     edi, [rdx]",
                    "1249": "call    __msan_warning; PIC mode",
                    "1250": "jmp     INSTR45",
                    "1251": "mov     edi, [rdx]",
                    "1252": "call    __msan_warning; PIC mode",
                    "1253": "jmp     INSTR51",
                    "1254": "mov     edi, [rdx]",
                    "1255": "call    __msan_warning; PIC mode",
                    "1256": "jmp     INSTR57",
                    "1257": "mov     edi, [rdx]",
                    "1258": "call    __msan_warning; PIC mode",
                    "1259": "test    ebp, ebp",
                    "1260": "jz      INSTR69",
                    "1261": "mov     r15d, 0FFFFFFFBh",
                    "1262": "jmp     INSTR1353",
                    "1263": "mov     edi, r14d",
                    "1264": "call    __msan_warning; PIC mode",
                    "1265": "jmp     INSTR74",
                    "1266": "mov     edi, dword ptr [rsp+0D0h+var_A0]",
                    "1267": "call    __msan_warning; PIC mode",
                    "1268": "test    ebp, ebp",
                    "1269": "jz      INSTR92",
                    "1270": "xor     r12d, r12d",
                    "1271": "mov     r13, [rsp+0D0h+var_70]",
                    "1272": "xor     ebx, ebx",
                    "1273": "mov     r15d, 0FFFFFFFFh",
                    "1274": "jmp     INSTR1355",
                    "1275": "mov     edi, [rsp+0D0h+var_CC]",
                    "1276": "call    __msan_warning; PIC mode",
                    "1277": "jmp     INSTR101",
                    "1278": "mov     r12d, edi",
                    "1279": "mov     edi, r13d",
                    "1280": "call    __msan_warning; PIC mode",
                    "1281": "mov     edi, r12d",
                    "1282": "jmp     INSTR132",
                    "1283": "call    __msan_warning; PIC mode",
                    "1284": "test    r15d, r15d",
                    "1285": "jz      INSTR143",
                    "1286": "mov     [r13+0], r12",
                    "1287": "mov     r14d, [rsp+0D0h+var_D0]",
                    "1288": "mov     [r13+0C88h], r14d",
                    "1289": "mov     byte ptr [r13+320h], 0",
                    "1290": "mov     rbp, [rsp+0D0h+var_B8]",
                    "1291": "mov     rdi, rbp",
                    "1292": "call    f2fs_is_compress_backend_ready; PIC mode",
                    "1293": "mov     ebx, eax",
                    "1294": "cmp     byte ptr [r13+320h], 1",
                    "1295": "jz      INSTR1371",
                    "1296": "mov     r15d, 0FFFFFFA1h",
                    "1297": "test    bl, bl",
                    "1298": "jz      INSTR1353",
                    "1299": "lea     rbx, [rbp+268h]",
                    "1300": "test    r12, r12",
                    "1301": "jnz     INSTR1383",
                    "1302": "mov     rbp, [rbx]",
                    "1303": "mov     rdi, rbx",
                    "1304": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1305": "mov     rax, [rax]",
                    "1306": "and     ebp, 40000000h",
                    "1307": "test    eax, 40000000h",
                    "1308": "jz      short INSTR1314",
                    "1309": "not     eax",
                    "1310": "mov     ecx, ebp",
                    "1311": "and     ecx, eax",
                    "1312": "test    rcx, rcx",
                    "1313": "jz      INSTR1386",
                    "1314": "test    rbp, rbp",
                    "1315": "jz      INSTR143",
                    "1316": "mov     rax, [rsp+0D0h+var_A8]",
                    "1317": "lea     rbx, [rax+10h]",
                    "1318": "cmp     [rsp+0D0h+var_C0], 0",
                    "1319": "jnz     INSTR1391",
                    "1320": "mov     r15, [rbx]",
                    "1321": "mov     rdi, rbx",
                    "1322": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1323": "mov     rcx, [rsp+0D0h+var_B8]",
                    "1324": "lea     rbp, [rcx+468h]",
                    "1325": "mov     r14, [rax]",
                    "1326": "mov     r12d, [rdx]",
                    "1327": "cmp     [rsp+0D0h+var_C8], 0",
                    "1328": "jnz     INSTR1394",
                    "1329": "mov     ebx, [rbp+0]",
                    "1330": "mov     rdi, rbp",
                    "1331": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "1332": "mov     eax, [rax]",
                    "1333": "shl     eax, 0Ch",
                    "1334": "shl     ebx, 0Ch",
                    "1335": "add     rbx, 0FFFFFFFFFFFFFFFFh",
                    "1336": "mov     ecx, r15d",
                    "1337": "and     ecx, eax",
                    "1338": "or      rax, rbx",
                    "1339": "and     rax, r14",
                    "1340": "or      rax, rcx",
                    "1341": "test    r14, r14",
                    "1342": "jnz     short INSTR1344",
                    "1343": "mov     r12d, [rdx]",
                    "1344": "and     rbx, r15",
                    "1345": "test    rax, rax",
                    "1346": "jz      short INSTR1350",
                    "1347": "not     rax",
                    "1348": "and     rax, rbx",
                    "1349": "jz      INSTR1397",
                    "1350": "mov     r15d, 0FFFFFFEAh",
                    "1351": "test    rbx, rbx",
                    "1352": "jz      INSTR143",
                    "1353": "xor     r12d, r12d",
                    "1354": "xor     ebx, ebx",
                    "1355": "mov     [r13+320h], ebx",
                    "1356": "mov     [r13+0FA8h], r12d",
                    "1357": "mov     eax, r15d",
                    "1358": "add     rsp, 0A0h",
                    "1359": "pop     rbx",
                    "1360": "pop     r12",
                    "1361": "pop     r13",
                    "1362": "pop     r14",
                    "1363": "pop     r15",
                    "1364": "pop     rbp",
                    "1365": "retn",
                    "1366": "mov     edi, r12d",
                    "1367": "call    __msan_warning; PIC mode",
                    "1368": "test    r15d, r15d",
                    "1369": "jnz     short INSTR1355",
                    "1370": "jmp     INSTR171",
                    "1371": "mov     edi, [r13+0FA8h]",
                    "1372": "call    __msan_warning; PIC mode",
                    "1373": "jmp     INSTR1296",
                    "1374": "mov     edi, [rsp+0D0h+var_74]",
                    "1375": "call    __msan_warning; PIC mode",
                    "1376": "jmp     INSTR173",
                    "1377": "mov     edi, [rdx]",
                    "1378": "call    __msan_warning; PIC mode",
                    "1379": "jmp     INSTR179",
                    "1380": "mov     edi, [rdx]",
                    "1381": "call    __msan_warning; PIC mode",
                    "1382": "jmp     INSTR189",
                    "1383": "mov     edi, r14d",
                    "1384": "call    __msan_warning; PIC mode",
                    "1385": "jmp     INSTR1302",
                    "1386": "mov     edi, [rdx]",
                    "1387": "call    __msan_warning; PIC mode",
                    "1388": "test    rbp, rbp",
                    "1389": "jz      INSTR143",
                    "1390": "jmp     INSTR1316",
                    "1391": "mov     edi, [rsp+0D0h+var_CC]",
                    "1392": "call    __msan_warning; PIC mode",
                    "1393": "jmp     INSTR1320",
                    "1394": "mov     edi, [rsp+0D0h+var_D0]",
                    "1395": "call    __msan_warning; PIC mode",
                    "1396": "jmp     INSTR1329",
                    "1397": "mov     edi, r12d",
                    "1398": "call    __msan_warning; PIC mode",
                    "1399": "jmp     INSTR1350",
                    "1400": "mov     edi, [rsp+0D0h+var_CC]",
                    "1401": "call    __msan_warning; PIC mode",
                    "1402": "jmp     INSTR196",
                    "1403": "mov     edi, r14d",
                    "1404": "call    __msan_warning; PIC mode",
                    "1405": "test    ebp, ebp",
                    "1406": "jz      INSTR212",
                    "1407": "jmp     INSTR405",
                    "1408": "mov     edi, r12d",
                    "1409": "call    __msan_warning; PIC mode",
                    "1410": "test    r15d, r15d",
                    "1411": "jnz     INSTR1355",
                    "1412": "jmp     INSTR423",
                    "1413": "mov     edi, [rsp+0D0h+var_CC]",
                    "1414": "call    __msan_warning; PIC mode",
                    "1415": "jmp     INSTR425",
                    "1416": "mov     edi, [rdx]",
                    "1417": "call    __msan_warning; PIC mode",
                    "1418": "jmp     INSTR435",
                    "1419": "mov     edi, r14d",
                    "1420": "call    __msan_warning; PIC mode",
                    "1421": "test    ebp, ebp",
                    "1422": "jnz     INSTR220",
                    "1423": "jmp     INSTR312",
                    "1424": "mov     edi, [r13+0FA8h]",
                    "1425": "call    __msan_warning; PIC mode",
                    "1426": "test    bl, bl",
                    "1427": "jnz     INSTR548",
                    "1428": "jmp     INSTR794",
                    "1429": "mov     edi, r14d",
                    "1430": "call    __msan_warning; PIC mode",
                    "1431": "test    r15d, r15d",
                    "1432": "jnz     INSTR320",
                    "1433": "jmp     INSTR423",
                    "1434": "mov     edi, r14d",
                    "1435": "call    __msan_warning; PIC mode",
                    "1436": "jmp     INSTR550",
                    "1437": "mov     edi, [rdx]",
                    "1438": "call    __msan_warning; PIC mode",
                    "1439": "jmp     INSTR556",
                    "1440": "mov     edi, r12d",
                    "1441": "call    __msan_warning; PIC mode",
                    "1442": "jmp     INSTR591",
                    "1443": "mov     edi, [rsp+0D0h+var_CC]",
                    "1444": "call    __msan_warning; PIC mode",
                    "1445": "jmp     INSTR796",
                    "1446": "mov     edi, [rdx]",
                    "1447": "call    __msan_warning; PIC mode",
                    "1448": "test    ebx, ebx",
                    "1449": "jnz     INSTR808",
                    "1450": "jmp     INSTR1072",
                    "1451": "mov     edi, r14d",
                    "1452": "call    __msan_warning; PIC mode",
                    "1453": "jmp     INSTR442",
                    "1454": "mov     edi, [rdx]",
                    "1455": "call    __msan_warning; PIC mode",
                    "1456": "jmp     INSTR448",
                    "1457": "mov     edi, [rsp+0D0h+var_D0]",
                    "1458": "call    __msan_warning; PIC mode",
                    "1459": "jmp     INSTR457",
                    "1460": "mov     edi, [rsp+0D0h+var_CC]",
                    "1461": "call    __msan_warning; PIC mode",
                    "1462": "jmp     INSTR482",
                    "1463": "call    __msan_warning; PIC mode",
                    "1464": "jmp     INSTR523",
                    "1465": "mov     edi, [rsp+0D0h+var_D0]",
                    "1466": "call    __msan_warning; PIC mode",
                    "1467": "jmp     INSTR223",
                    "1468": "mov     edi, [rdx]",
                    "1469": "call    __msan_warning; PIC mode",
                    "1470": "jmp     INSTR229",
                    "1471": "mov     edi, [rsp+0D0h+var_D0]",
                    "1472": "call    __msan_warning; PIC mode",
                    "1473": "jmp     INSTR237",
                    "1474": "mov     edi, [rsp+0D0h+var_CC]",
                    "1475": "call    __msan_warning; PIC mode",
                    "1476": "jmp     INSTR262",
                    "1477": "call    __msan_warning; PIC mode",
                    "1478": "test    bl, bl",
                    "1479": "jz      INSTR305",
                    "1480": "jmp     INSTR405",
                    "1481": "mov     edi, r14d",
                    "1482": "call    __msan_warning; PIC mode",
                    "1483": "jmp     INSTR596",
                    "1484": "mov     edi, [rdx]",
                    "1485": "call    __msan_warning; PIC mode",
                    "1486": "jmp     INSTR602",
                    "1487": "mov     edi, r14d",
                    "1488": "call    __msan_warning; PIC mode",
                    "1489": "test    rbp, rbp",
                    "1490": "jz      INSTR615",
                    "1491": "mov     edi, r14d",
                    "1492": "call    __msan_warning; PIC mode",
                    "1493": "jmp     INSTR615",
                    "1494": "mov     edi, [rsp+0D0h+var_D0]",
                    "1495": "call    __msan_warning; PIC mode",
                    "1496": "jmp     INSTR618",
                    "1497": "mov     edi, [rdx]",
                    "1498": "call    __msan_warning; PIC mode",
                    "1499": "jmp     INSTR625",
                    "1500": "mov     edi, r12d",
                    "1501": "call    __msan_warning; PIC mode",
                    "1502": "jmp     INSTR1089",
                    "1503": "mov     edi, [rdx]",
                    "1504": "call    __msan_warning; PIC mode",
                    "1505": "jmp     INSTR1099",
                    "1506": "mov     edi, r14d",
                    "1507": "call    __msan_warning; PIC mode",
                    "1508": "jmp     INSTR1222",
                    "1509": "mov     edi, [rdx]",
                    "1510": "call    __msan_warning; PIC mode",
                    "1511": "jmp     INSTR1228",
                    "1512": "mov     edi, [rsp+0D0h+var_D0]",
                    "1513": "call    __msan_warning; PIC mode",
                    "1514": "jmp     INSTR322",
                    "1515": "mov     edi, [rdx]",
                    "1516": "call    __msan_warning; PIC mode",
                    "1517": "jmp     INSTR329",
                    "1518": "mov     edi, [rsp+0D0h+var_D0]",
                    "1519": "call    __msan_warning; PIC mode",
                    "1520": "jmp     INSTR337",
                    "1521": "mov     edi, [rsp+0D0h+var_CC]",
                    "1522": "call    __msan_warning; PIC mode",
                    "1523": "jmp     INSTR362",
                    "1524": "call    __msan_warning; PIC mode",
                    "1525": "test    bl, bl",
                    "1526": "jnz     INSTR405",
                    "1527": "jmp     INSTR423",
                    "1528": "mov     edi, r14d",
                    "1529": "call    __msan_warning; PIC mode",
                    "1530": "jmp     INSTR812",
                    "1531": "mov     edi, [rsp+0D0h+var_CC]",
                    "1532": "call    __msan_warning; PIC mode",
                    "1533": "jmp     INSTR824",
                    "1534": "mov     edi, [rsp+0D0h+var_D0]",
                    "1535": "call    __msan_warning; PIC mode",
                    "1536": "jmp     INSTR836",
                    "1537": "mov     edi, [rsp+0D0h+var_D0]",
                    "1538": "call    __msan_warning; PIC mode",
                    "1539": "jmp     INSTR847",
                    "1540": "mov     edi, r15d",
                    "1541": "call    __msan_warning; PIC mode",
                    "1542": "mov     edi, dword ptr [rsp+0D0h+var_60]",
                    "1543": "jmp     INSTR868",
                    "1544": "mov     edi, [rsp+0D0h+var_CC]",
                    "1545": "call    __msan_warning; PIC mode",
                    "1546": "jmp     INSTR638",
                    "1547": "mov     edi, r14d",
                    "1548": "call    __msan_warning; PIC mode",
                    "1549": "test    ebp, ebp",
                    "1550": "jnz     INSTR654",
                    "1551": "jmp     INSTR710",
                    "1552": "mov     edi, r14d",
                    "1553": "call    __msan_warning; PIC mode",
                    "1554": "test    r15d, r15d",
                    "1555": "jnz     INSTR718",
                    "1556": "jmp     INSTR768",
                    "1557": "mov     edi, r14d",
                    "1558": "call    __msan_warning; PIC mode",
                    "1559": "jmp     INSTR778",
                    "1560": "mov     edi, [rdx]",
                    "1561": "call    __msan_warning; PIC mode",
                    "1562": "jmp     INSTR784",
                    "1563": "mov     edi, [rsp+0D0h+var_CC]",
                    "1564": "call    __msan_warning; PIC mode",
                    "1565": "jmp     INSTR307",
                    "1566": "call    __msan_warning; PIC mode",
                    "1567": "jmp     INSTR905",
                    "1568": "mov     edi, [rsp+0D0h+var_D0]",
                    "1569": "call    __msan_warning; PIC mode",
                    "1570": "jmp     INSTR920",
                    "1571": "mov     edi, [rsp+0D0h+var_CC]",
                    "1572": "call    __msan_warning; PIC mode",
                    "1573": "jmp     INSTR934",
                    "1574": "mov     edi, [rsp+0D0h+var_CC]",
                    "1575": "call    __msan_warning; PIC mode",
                    "1576": "jmp     INSTR951",
                    "1577": "call    __msan_warning; PIC mode",
                    "1578": "jmp     INSTR961",
                    "1579": "mov     edi, [rsp+0D0h+var_D0]",
                    "1580": "call    __msan_warning; PIC mode",
                    "1581": "jmp     INSTR980",
                    "1582": "mov     edi, r12d",
                    "1583": "call    __msan_warning; PIC mode",
                    "1584": "test    r15d, r15d",
                    "1585": "jnz     INSTR1355",
                    "1586": "jmp     INSTR1004",
                    "1587": "mov     edi, [rsp+0D0h+var_D0]",
                    "1588": "call    __msan_warning; PIC mode",
                    "1589": "jmp     INSTR1109",
                    "1590": "call    __msan_warning; PIC mode",
                    "1591": "jmp     INSTR1134",
                    "1592": "mov     edi, [rsp+0D0h+var_D0]",
                    "1593": "call    __msan_warning; PIC mode",
                    "1594": "jmp     INSTR1161",
                    "1595": "mov     edi, [rdx]",
                    "1596": "call    __msan_warning; PIC mode",
                    "1597": "jmp     INSTR1173",
                    "1598": "mov     edi, r12d",
                    "1599": "call    __msan_warning; PIC mode",
                    "1600": "test    r15d, r15d",
                    "1601": "jnz     INSTR1355",
                    "1602": "jmp     INSTR890",
                    "1603": "mov     edi, [rsp+0D0h+var_D0]",
                    "1604": "call    __msan_warning; PIC mode",
                    "1605": "jmp     INSTR656",
                    "1606": "mov     edi, [rdx]",
                    "1607": "call    __msan_warning; PIC mode",
                    "1608": "jmp     INSTR663",
                    "1609": "mov     edi, [rsp+0D0h+var_CC]",
                    "1610": "call    __msan_warning; PIC mode",
                    "1611": "jmp     INSTR671",
                    "1612": "mov     edi, [rsp+0D0h+var_D0]",
                    "1613": "call    __msan_warning; PIC mode",
                    "1614": "jmp     INSTR696",
                    "1615": "mov     r12, rdx",
                    "1616": "mov     edi, r14d",
                    "1617": "call    __msan_chain_origin; PIC mode",
                    "1618": "mov     [r12], eax",
                    "1619": "jmp     INSTR701",
                    "1620": "mov     edi, [rsp+0D0h+var_CC]",
                    "1621": "call    __msan_warning; PIC mode",
                    "1622": "jmp     INSTR704",
                    "1623": "mov     edi, [rsp+0D0h+var_D0]",
                    "1624": "call    __msan_warning; PIC mode",
                    "1625": "jmp     INSTR721",
                    "1626": "mov     edi, [rdx]",
                    "1627": "call    __msan_warning; PIC mode",
                    "1628": "jmp     INSTR728",
                    "1629": "mov     edi, [rsp+0D0h+var_CC]",
                    "1630": "call    __msan_warning; PIC mode",
                    "1631": "jmp     INSTR736",
                    "1632": "mov     edi, [rsp+0D0h+var_D0]",
                    "1633": "call    __msan_warning; PIC mode",
                    "1634": "jmp     INSTR761",
                    "1635": "mov     r12, rdx",
                    "1636": "mov     edi, r14d",
                    "1637": "call    __msan_chain_origin; PIC mode",
                    "1638": "mov     [r12], eax",
                    "1639": "jmp     INSTR766",
                    "1640": "mov     edi, r12d",
                    "1641": "call    __msan_warning; PIC mode",
                    "1642": "mov     rdi, [rsp+0D0h+var_C0]",
                    "1643": "cmp     dword ptr [rsp+0D0h+var_98], 0",
                    "1644": "jnz     INSTR1203",
                    "1645": "jmp     INSTR1184",
                    "1646": "mov     edi, [rsp+0D0h+var_D0]",
                    "1647": "call    __msan_warning; PIC mode",
                    "1648": "test    rbx, rbx",
                    "1649": "jz      INSTR1211",
                    "1650": "mov     edi, [rsp+0D0h+var_D0]",
                    "1651": "call    __msan_warning; PIC mode",
                    "1652": "jmp     INSTR1211",
                    "1653": "mov     edi, [rsp+0D0h+var_D0]",
                    "1654": "call    __msan_warning; PIC mode",
                    "1655": "jmp     INSTR1028",
                    "1656": "mov     rbx, rdx",
                    "1657": "mov     edi, dword ptr [rsp+0D0h+var_68]",
                    "1658": "call    __msan_chain_origin; PIC mode",
                    "1659": "mov     eax, eax",
                    "1660": "mov     rcx, rax",
                    "1661": "shl     rcx, 20h",
                    "1662": "or      rcx, rax",
                    "1663": "mov     [rbx], rcx",
                    "1664": "jmp     INSTR1033",
                    "1665": "mov     edi, [rsp+0D0h+var_D0]",
                    "1666": "call    __msan_warning; PIC mode",
                    "1667": "jmp     INSTR1040",
                    "1668": "mov     r15, rdx",
                    "1669": "mov     edi, dword ptr [rsp+0D0h+var_68]",
                    "1670": "call    __msan_chain_origin; PIC mode",
                    "1671": "mov     [r15], eax",
                    "1672": "jmp     INSTR1045",
                    "1673": "mov     edi, [rsp+0D0h+var_D0]",
                    "1674": "call    __msan_warning; PIC mode",
                    "1675": "jmp     INSTR1049",
                    "1676": "mov     edi, [rsp+0D0h+var_D0]",
                    "1677": "call    __msan_warning; PIC mode",
                    "1678": "jmp     INSTR1058",
                    "1679": "mov     r15, rdx",
                    "1680": "mov     edi, r12d",
                    "1681": "call    __msan_chain_origin; PIC mode",
                    "1682": "mov     eax, eax",
                    "1683": "mov     rcx, rax",
                    "1684": "shl     rcx, 20h",
                    "1685": "or      rcx, rax",
                    "1686": "mov     [r15], rcx",
                    "1687": "jmp     INSTR1063",
                    "1688": "mov     edi, [rsp+0D0h+var_CC]",
                    "1689": "call    __msan_warning; PIC mode",
                    "1690": "jmp     INSTR892",
                    "1691": "mov     edi, [rsp+0D0h+var_D0]",
                    "1692": "call    __msan_warning; PIC mode",
                    "1693": "mov     rdi, [rsp+0D0h+var_C0]",
                    "1694": "jmp     INSTR1187",
                    "1695": "mov     edi, [rsp+0D0h+var_D0]",
                    "1696": "call    __msan_warning; PIC mode",
                    "1697": "jmp     INSTR1194",
                    "1698": "mov     r13, rdx",
                    "1699": "mov     edi, dword ptr [rsp+0D0h+var_C0]",
                    "1700": "call    __msan_chain_origin; PIC mode",
                    "1701": "mov     [r13+0], eax",
                    "1702": "jmp     INSTR1200"
                }
            },
            {
                "filename": "file.f2fs_setattr.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    rbp",
                    "2": "mov     rbp, rsp",
                    "3": "push    r15",
                    "4": "push    r14",
                    "5": "push    r13",
                    "6": "push    r12",
                    "7": "push    rbx",
                    "8": "sub     rsp, 48h",
                    "9": "mov     r13, [rsi+30h]",
                    "10": "mov     rax, gs:28h",
                    "11": "mov     [rsp+70h+var_30], rax",
                    "12": "xor     eax, eax",
                    "13": "mov     rax, [r13+28h]",
                    "14": "mov     rax, [rax+368h]",
                    "15": "mov     rax, [rax+120h]",
                    "16": "test    byte ptr [rax+84h], 8",
                    "17": "jnz     INSTR291",
                    "18": "mov     eax, [r13+0Ch]",
                    "19": "test    al, 8",
                    "20": "jnz     INSTR295",
                    "21": "mov     rbx, rdx",
                    "22": "mov     r14, rdi",
                    "23": "mov     edx, [rdx]",
                    "24": "mov     r12, rsi",
                    "25": "test    al, 4",
                    "26": "jnz     INSTR293",
                    "27": "and     edx, 8",
                    "28": "jnz     INSTR174",
                    "29": "mov     rdx, rbx",
                    "30": "mov     rsi, r12",
                    "31": "mov     rdi, r14",
                    "32": "call    setattr_prepare; PIC mode",
                    "33": "mov     [rsp+70h+var_5C], eax",
                    "34": "test    eax, eax",
                    "35": "jnz     INSTR162",
                    "36": "mov     rax, [r12+30h]",
                    "37": "test    dword ptr [rax+0Ch], 14000h",
                    "38": "jnz     INSTR387",
                    "39": "mov     eax, [rbx]",
                    "40": "test    al, 8",
                    "41": "jz      INSTR188",
                    "42": "mov     rdi, r13",
                    "43": "call    f2fs_dquot_initialize; PIC mode",
                    "44": "test    eax, eax",
                    "45": "jnz     INSTR247",
                    "46": "mov     r15d, [rbx]",
                    "47": "test    r15b, 2",
                    "48": "jnz     INSTR249",
                    "49": "test    r15b, 4",
                    "50": "jnz     INSTR198",
                    "51": "test    r15b, 8",
                    "52": "jz      INSTR104",
                    "53": "mov     r15, [r13+50h]",
                    "54": "movsxd  rdx, dword ptr [r13+418h]",
                    "55": "mov     eax, 39Ah",
                    "56": "mov     rcx, [rbx+10h]",
                    "57": "sub     rax, rdx",
                    "58": "movsxd  rdx, dword ptr [r13+410h]",
                    "59": "sar     rdx, 2",
                    "60": "sub     rax, rdx",
                    "61": "shl     rax, 2",
                    "62": "cmp     rcx, rax",
                    "63": "ja      INSTR241",
                    "64": "cmp     r15, rcx",
                    "65": "jg      INSTR357",
                    "66": "lea     r9, [r13+390h]",
                    "67": "mov     rdi, r9",
                    "68": "mov     [rsp+70h+var_68], r9",
                    "69": "call    down_write; PIC mode",
                    "70": "mov     rax, [r13+30h]",
                    "71": "lea     rdi, [rax+18h]",
                    "72": "call    down_write; PIC mode",
                    "73": "mov     rsi, [rbx+10h]",
                    "74": "mov     rdi, r13",
                    "75": "call    truncate_setsize; PIC mode",
                    "76": "lea     r10, [r13+3B8h]",
                    "77": "cmp     [rbx+10h], r15",
                    "78": "mov     r9, [rsp+70h+var_68]",
                    "79": "mov     [rsp+70h+var_70], r10",
                    "80": "jle     INSTR297",
                    "81": "mov     rax, [r13+30h]",
                    "82": "mov     [rsp+70h+var_68], r9",
                    "83": "lea     rdi, [rax+18h]",
                    "84": "call    up_write; PIC mode",
                    "85": "mov     rdi, [rsp+70h+var_68]",
                    "86": "call    up_write; PIC mode",
                    "87": "mov     rdi, [rsp+70h+var_70]",
                    "88": "xor     ecx, ecx",
                    "89": "xor     edx, edx",
                    "90": "mov     esi, 3",
                    "91": "call    __wake_up; PIC mode",
                    "92": "lea     r15, [r13+2E8h]",
                    "93": "mov     rdi, r15",
                    "94": "call    _raw_spin_lock; PIC mode",
                    "95": "mov     rdi, r13",
                    "96": "call    inode_set_ctime_current; PIC mode",
                    "97": "mov     [r13+60h], rax",
                    "98": "mov     rax, [r13+50h]",
                    "99": "mov     [r13+74h], edx",
                    "100": "mov     [r13+2E0h], rax",
                    "101": "mov     rdi, r15",
                    "102": "call    _raw_spin_unlock; PIC mode",
                    "103": "mov     r15d, [rbx]",
                    "104": "mov     eax, r15d",
                    "105": "test    r15b, 2",
                    "106": "jz      short INSTR114",
                    "107": "mov     rax, [r13+28h]",
                    "108": "mov     edx, [rbx+8]",
                    "109": "mov     rdi, r14",
                    "110": "mov     rsi, [rax+450h]",
                    "111": "call    from_vfsuid; PIC mode",
                    "112": "mov     [r13+4], eax",
                    "113": "mov     eax, [rbx]",
                    "114": "test    al, 4",
                    "115": "jnz     INSTR350",
                    "116": "test    r15b, 10h",
                    "117": "jz      short INSTR122",
                    "118": "mov     rdx, [rbx+18h]",
                    "119": "mov     rax, [rbx+20h]",
                    "120": "mov     [r13+58h], rdx",
                    "121": "mov     [r13+70h], eax",
                    "122": "test    r15b, 20h",
                    "123": "jz      short INSTR128",
                    "124": "mov     rdx, [rbx+28h]",
                    "125": "mov     rax, [rbx+30h]",
                    "126": "mov     [r13+60h], rdx",
                    "127": "mov     [r13+74h], eax",
                    "128": "test    r15b, 40h",
                    "129": "jz      short INSTR134",
                    "130": "mov     rdx, [rbx+38h]",
                    "131": "mov     rax, [rbx+40h]",
                    "132": "mov     [r13+68h], rdx",
                    "133": "mov     [r13+78h], eax",
                    "134": "and     r15d, 1",
                    "135": "jnz     INSTR329",
                    "136": "test    byte ptr [rbx], 1",
                    "137": "jz      short INSTR155",
                    "138": "mov     rax, [r13+268h]",
                    "139": "test    al, 20h",
                    "140": "jnz     INSTR373",
                    "141": "movzx   edx, word ptr [r13+0]",
                    "142": "mov     rsi, r12",
                    "143": "mov     rdi, r14",
                    "144": "call    posix_acl_chmod; PIC mode",
                    "145": "mov     [rsp+70h+var_5C], eax",
                    "146": "mov     ecx, eax",
                    "147": "mov     rax, [r13+268h]",
                    "148": "test    al, 20h",
                    "149": "jz      short INSTR155",
                    "150": "test    ecx, ecx",
                    "151": "jnz     short INSTR154",
                    "152": "movzx   eax, word ptr [r13+264h]",
                    "153": "mov     [r13+0], ax",
                    "154": "lock and byte ptr [r13+268h], 0DFh",
                    "155": "mov     esi, 1",
                    "156": "mov     rdi, r13",
                    "157": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "158": "mov     rax, [r13+28h]",
                    "159": "mov     esi, 1",
                    "160": "mov     rdi, [rax+368h]",
                    "161": "call    f2fs_balance_fs; PIC mode",
                    "162": "mov     rax, [rsp+70h+var_30]",
                    "163": "sub     rax, gs:28h",
                    "164": "jnz     INSTR389",
                    "165": "mov     eax, [rsp+70h+var_5C]",
                    "166": "add     rsp, 48h",
                    "167": "pop     rbx",
                    "168": "pop     r12",
                    "169": "pop     r13",
                    "170": "pop     r14",
                    "171": "pop     r15",
                    "172": "pop     rbp",
                    "173": "jmp     __x86_return_thunk; PIC mode",
                    "174": "mov     rdi, r13",
                    "175": "call    f2fs_is_compress_backend_ready; PIC mode",
                    "176": "test    al, al",
                    "177": "jz      INSTR387",
                    "178": "mov     rax, [r13+268h]",
                    "179": "test    eax, 40000000h",
                    "180": "jz      INSTR29",
                    "181": "mov     eax, [r13+468h]",
                    "182": "shl     eax, 0Ch",
                    "183": "sub     rax, 1",
                    "184": "and     rax, [rbx+10h]",
                    "185": "jz      INSTR29",
                    "186": "mov     [rsp+70h+var_5C], 0FFFFFFEAh",
                    "187": "jmp     short INSTR162",
                    "188": "test    al, 2",
                    "189": "jnz     INSTR360",
                    "190": "test    al, 4",
                    "191": "jnz     INSTR375",
                    "192": "test    al, 2",
                    "193": "jnz     INSTR249",
                    "194": "mov     r15d, eax",
                    "195": "test    al, 8",
                    "196": "jnz     INSTR53",
                    "197": "jmp     INSTR114",
                    "198": "mov     rax, [r13+28h]",
                    "199": "mov     edx, [r13+8]",
                    "200": "mov     rdi, r14",
                    "201": "mov     rsi, [rax+450h]",
                    "202": "call    make_vfsgid; PIC mode",
                    "203": "mov     r9d, eax",
                    "204": "mov     eax, [rbx+0Ch]",
                    "205": "cmp     r9d, eax",
                    "206": "jnz     short INSTR209",
                    "207": "cmp     eax, 0FFFFFFFFh",
                    "208": "jnz     short INSTR237",
                    "209": "mov     rax, [r13+28h]",
                    "210": "mov     r15, [rax+368h]",
                    "211": "mov     [rsp+70h+var_68], r15",
                    "212": "lea     r15, [r15+178h]",
                    "213": "call    __SCT__might_resched; PIC mode",
                    "214": "mov     rdi, r15",
                    "215": "call    down_read_trylock; PIC mode",
                    "216": "test    eax, eax",
                    "217": "jz      INSTR271",
                    "218": "mov     rdx, rbx",
                    "219": "mov     rsi, r13",
                    "220": "mov     rdi, r14",
                    "221": "call    dquot_transfer; PIC mode",
                    "222": "mov     r15d, eax",
                    "223": "test    eax, eax",
                    "224": "jnz     INSTR262",
                    "225": "mov     eax, [rbx]",
                    "226": "test    al, 2",
                    "227": "jnz     INSTR321",
                    "228": "test    al, 4",
                    "229": "jnz     INSTR314",
                    "230": "mov     rdi, r13",
                    "231": "mov     esi, 1",
                    "232": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "233": "mov     rax, [r13+28h]",
                    "234": "mov     rdi, [rax+368h]",
                    "235": "add     rdi, 178h",
                    "236": "call    up_read; PIC mode",
                    "237": "mov     r15d, [rbx]",
                    "238": "test    r15b, 8",
                    "239": "jnz     INSTR53",
                    "240": "jmp     INSTR104",
                    "241": "mov     rdi, r13",
                    "242": "call    f2fs_convert_inline_inode; PIC mode",
                    "243": "test    eax, eax",
                    "244": "jnz     short INSTR247",
                    "245": "mov     rcx, [rbx+10h]",
                    "246": "jmp     INSTR64",
                    "247": "mov     [rsp+70h+var_5C], eax",
                    "248": "jmp     INSTR162",
                    "249": "mov     rax, [r13+28h]",
                    "250": "mov     edx, [r13+4]",
                    "251": "mov     rdi, r14",
                    "252": "mov     rsi, [rax+450h]",
                    "253": "call    make_vfsuid; PIC mode",
                    "254": "mov     r9d, eax",
                    "255": "mov     eax, [rbx+8]",
                    "256": "cmp     r9d, eax",
                    "257": "jnz     INSTR209",
                    "258": "cmp     eax, 0FFFFFFFFh",
                    "259": "jz      INSTR209",
                    "260": "mov     r15d, [rbx]",
                    "261": "jmp     INSTR49",
                    "262": "mov     rax, [r13+28h]",
                    "263": "mov     rax, [rax+368h]",
                    "264": "lock or byte ptr [rax+61h], 10h",
                    "265": "mov     rax, [r13+28h]",
                    "266": "mov     rdi, [rax+368h]",
                    "267": "add     rdi, 178h",
                    "268": "call    up_read; PIC mode",
                    "269": "mov     [rsp+70h+var_5C], r15d",
                    "270": "jmp     INSTR162",
                    "271": "xor     esi, esi",
                    "272": "lea     rdi, [rsp+70h+var_58]",
                    "273": "call    init_wait_entry; PIC mode",
                    "274": "mov     rax, [rsp+70h+var_68]",
                    "275": "add     rax, 1A0h",
                    "276": "mov     [rsp+70h+var_68], rax",
                    "277": "jmp     short INSTR279",
                    "278": "call    schedule; PIC mode",
                    "279": "mov     rdi, [rsp+70h+var_68]",
                    "280": "mov     edx, 2",
                    "281": "lea     rsi, [rsp+70h+var_58]",
                    "282": "call    prepare_to_wait_event; PIC mode",
                    "283": "mov     rdi, r15",
                    "284": "call    down_read_trylock; PIC mode",
                    "285": "test    eax, eax",
                    "286": "jz      short INSTR278",
                    "287": "mov     rdi, [rsp+70h+var_68]",
                    "288": "lea     rsi, [rsp+70h+var_58]",
                    "289": "call    finish_wait; PIC mode",
                    "290": "jmp     INSTR218",
                    "291": "mov     [rsp+70h+var_5C], 0FFFFFFFBh",
                    "292": "jmp     INSTR162",
                    "293": "test    edx, 10007h",
                    "294": "jz      INSTR27",
                    "295": "mov     [rsp+70h+var_5C], 0FFFFFFFFh",
                    "296": "jmp     INSTR162",
                    "297": "mov     rdi, r13",
                    "298": "call    f2fs_truncate; PIC mode",
                    "299": "mov     r15d, eax",
                    "300": "mov     rax, [r13+30h]",
                    "301": "lea     rdi, [rax+18h]",
                    "302": "call    up_write; PIC mode",
                    "303": "mov     rdi, [rsp+70h+var_68]",
                    "304": "call    up_write; PIC mode",
                    "305": "mov     rdi, [rsp+70h+var_70]",
                    "306": "xor     ecx, ecx",
                    "307": "xor     edx, edx",
                    "308": "mov     esi, 3",
                    "309": "call    __wake_up; PIC mode",
                    "310": "test    r15d, r15d",
                    "311": "jz      INSTR92",
                    "312": "mov     [rsp+70h+var_5C], r15d",
                    "313": "jmp     INSTR162",
                    "314": "mov     rax, [r13+28h]",
                    "315": "mov     edx, [rbx+0Ch]",
                    "316": "mov     rdi, r14",
                    "317": "mov     rsi, [rax+450h]",
                    "318": "call    from_vfsgid; PIC mode",
                    "319": "mov     [r13+8], eax",
                    "320": "jmp     INSTR230",
                    "321": "mov     rax, [r13+28h]",
                    "322": "mov     edx, [rbx+8]",
                    "323": "mov     rdi, r14",
                    "324": "mov     rsi, [rax+450h]",
                    "325": "call    from_vfsuid; PIC mode",
                    "326": "mov     [r13+4], eax",
                    "327": "mov     eax, [rbx]",
                    "328": "jmp     INSTR228",
                    "329": "mov     rax, [r13+28h]",
                    "330": "mov     edx, [r13+8]",
                    "331": "mov     rdi, r14",
                    "332": "movzx   r15d, word ptr [rbx+4]",
                    "333": "mov     rsi, [rax+450h]",
                    "334": "call    make_vfsgid; PIC mode",
                    "335": "mov     rsi, r13",
                    "336": "mov     rdi, r14",
                    "337": "mov     edx, eax",
                    "338": "call    in_group_or_capable; PIC mode",
                    "339": "mov     r9d, eax",
                    "340": "mov     eax, r15d",
                    "341": "and     ah, 0FBh",
                    "342": "test    r9b, r9b",
                    "343": "cmovz   r15d, eax",
                    "344": "mov     [r13+264h], r15w",
                    "345": "lock or byte ptr [r13+268h], 20h",
                    "346": "xor     esi, esi",
                    "347": "mov     rdi, r13",
                    "348": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "349": "jmp     INSTR136",
                    "350": "mov     rax, [r13+28h]",
                    "351": "mov     edx, [rbx+0Ch]",
                    "352": "mov     rdi, r14",
                    "353": "mov     rsi, [rax+450h]",
                    "354": "call    from_vfsgid; PIC mode",
                    "355": "mov     [r13+8], eax",
                    "356": "jmp     INSTR116",
                    "357": "mov     rdi, r13",
                    "358": "call    inode_dio_wait; PIC mode",
                    "359": "jmp     INSTR66",
                    "360": "mov     rax, [r13+28h]",
                    "361": "mov     edx, [r13+4]",
                    "362": "mov     rdi, r14",
                    "363": "mov     rsi, [rax+450h]",
                    "364": "call    make_vfsuid; PIC mode",
                    "365": "mov     r9d, eax",
                    "366": "mov     eax, [rbx+8]",
                    "367": "cmp     r9d, eax",
                    "368": "jnz     INSTR42",
                    "369": "cmp     eax, 0FFFFFFFFh",
                    "370": "jz      INSTR42",
                    "371": "mov     eax, [rbx]",
                    "372": "jmp     INSTR190",
                    "373": "movzx   edx, word ptr [r13+264h]",
                    "374": "jmp     INSTR142",
                    "375": "mov     rax, [r13+28h]",
                    "376": "mov     edx, [r13+8]",
                    "377": "mov     rdi, r14",
                    "378": "mov     rsi, [rax+450h]",
                    "379": "call    make_vfsgid; PIC mode",
                    "380": "mov     r9d, eax",
                    "381": "mov     eax, [rbx+0Ch]",
                    "382": "cmp     r9d, eax",
                    "383": "jnz     INSTR42",
                    "384": "cmp     eax, 0FFFFFFFFh",
                    "385": "jz      INSTR42",
                    "386": "jmp     INSTR46",
                    "387": "mov     [rsp+70h+var_5C], 0FFFFFFA1h",
                    "388": "jmp     INSTR162",
                    "389": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "file.f2fs_setattr.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    rbp",
                    "3": "mov     rbp, rsp",
                    "4": "push    r15",
                    "5": "push    r14",
                    "6": "mov     r14, rsi",
                    "7": "push    r13",
                    "8": "push    r12",
                    "9": "mov     r12, rdi",
                    "10": "push    rbx",
                    "11": "mov     rbx, rdx",
                    "12": "sub     rsp, 10h",
                    "13": "mov     r13, [rsi+30h]",
                    "14": "mov     rax, [r13+28h]",
                    "15": "mov     rax, [rax+368h]",
                    "16": "mov     rdi, [rax+120h]",
                    "17": "call    f2fs_cp_error_isra_0",
                    "18": "mov     r8d, eax",
                    "19": "mov     eax, 0FFFFFFFBh",
                    "20": "test    r8b, r8b",
                    "21": "jnz     INSTR279",
                    "22": "mov     esi, [r13+0Ch]",
                    "23": "or      eax, 0FFFFFFFFh",
                    "24": "test    sil, 8",
                    "25": "jnz     INSTR279",
                    "26": "and     sil, 4",
                    "27": "mov     edx, [rbx]",
                    "28": "jz      short INSTR31",
                    "29": "test    edx, 10007h",
                    "30": "jnz     INSTR279",
                    "31": "and     dl, 8",
                    "32": "jnz     short INSTR41",
                    "33": "mov     rdx, rbx",
                    "34": "mov     rsi, r14",
                    "35": "mov     rdi, r12",
                    "36": "call    setattr_prepare; PIC mode",
                    "37": "mov     [rsp+38h+var_2C], eax",
                    "38": "test    eax, eax",
                    "39": "jz      short INSTR57",
                    "40": "jmp     INSTR279",
                    "41": "mov     rdi, r13",
                    "42": "call    f2fs_is_compress_backend_ready; PIC mode",
                    "43": "test    al, al",
                    "44": "jnz     short INSTR47",
                    "45": "mov     eax, 0FFFFFFA1h",
                    "46": "jmp     INSTR279",
                    "47": "mov     rax, [r13+268h]",
                    "48": "bt      eax, 1Eh",
                    "49": "jnb     short INSTR33",
                    "50": "mov     edx, [r13+468h]",
                    "51": "mov     eax, 0FFFFFFEAh",
                    "52": "shl     edx, 0Ch",
                    "53": "dec     rdx",
                    "54": "and     rdx, [rbx+10h]",
                    "55": "jz      short INSTR33",
                    "56": "jmp     INSTR279",
                    "57": "mov     rax, [r14+30h]",
                    "58": "test    dword ptr [rax+0Ch], 14000h",
                    "59": "jnz     short INSTR45",
                    "60": "test    byte ptr [rbx], 8",
                    "61": "jz      short INSTR67",
                    "62": "mov     rdi, r13",
                    "63": "call    f2fs_dquot_initialize; PIC mode",
                    "64": "test    eax, eax",
                    "65": "jz      short INSTR79",
                    "66": "jmp     INSTR279",
                    "67": "mov     rdx, r13",
                    "68": "mov     rsi, rbx",
                    "69": "mov     rdi, r12",
                    "70": "call    i_uid_needs_update",
                    "71": "test    al, al",
                    "72": "jnz     short INSTR62",
                    "73": "mov     rdx, r13",
                    "74": "mov     rsi, rbx",
                    "75": "mov     rdi, r12",
                    "76": "call    i_gid_needs_update",
                    "77": "test    al, al",
                    "78": "jnz     short INSTR62",
                    "79": "mov     rdx, r13",
                    "80": "mov     rsi, rbx",
                    "81": "mov     rdi, r12",
                    "82": "call    i_uid_needs_update",
                    "83": "test    al, al",
                    "84": "jz      short INSTR105",
                    "85": "mov     rax, [r13+28h]",
                    "86": "mov     rdi, [rax+368h]",
                    "87": "add     rdi, 178h",
                    "88": "call    f2fs_down_read",
                    "89": "mov     rdx, rbx",
                    "90": "mov     rsi, r13",
                    "91": "mov     rdi, r12",
                    "92": "call    dquot_transfer; PIC mode",
                    "93": "test    eax, eax",
                    "94": "jz      short INSTR112",
                    "95": "mov     rdx, [r13+28h]",
                    "96": "mov     esi, 0Ch",
                    "97": "mov     [rsp+38h+var_2C], eax",
                    "98": "mov     rdi, [rdx+368h]",
                    "99": "call    set_sbi_flag",
                    "100": "mov     rdx, [r13+28h]",
                    "101": "mov     rdi, [rdx+368h]",
                    "102": "add     rdi, 178h",
                    "103": "call    up_read; PIC mode",
                    "104": "jmp     INSTR278",
                    "105": "mov     rdx, r13",
                    "106": "mov     rsi, rbx",
                    "107": "mov     rdi, r12",
                    "108": "call    i_gid_needs_update",
                    "109": "test    al, al",
                    "110": "jnz     short INSTR85",
                    "111": "jmp     short INSTR135",
                    "112": "test    byte ptr [rbx], 2",
                    "113": "jz      short INSTR120",
                    "114": "mov     rax, [r13+28h]",
                    "115": "mov     edx, [rbx+8]",
                    "116": "mov     rdi, r12",
                    "117": "mov     rsi, [rax+450h]",
                    "118": "call    from_vfsuid; PIC mode",
                    "119": "mov     [r13+4], eax",
                    "120": "test    byte ptr [rbx], 4",
                    "121": "jz      short INSTR128",
                    "122": "mov     rax, [r13+28h]",
                    "123": "mov     edx, [rbx+0Ch]",
                    "124": "mov     rdi, r12",
                    "125": "mov     rsi, [rax+450h]",
                    "126": "call    from_vfsgid; PIC mode",
                    "127": "mov     [r13+8], eax",
                    "128": "mov     rdi, r13",
                    "129": "mov     esi, 1",
                    "130": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "131": "mov     rax, [r13+28h]",
                    "132": "mov     rdi, [rax+368h]",
                    "133": "add     rdi, 178h",
                    "134": "call    up_read; PIC mode",
                    "135": "test    byte ptr [rbx], 8",
                    "136": "jz      INSTR192",
                    "137": "mov     r15, [r13+50h]",
                    "138": "movsxd  rdx, dword ptr [r13+418h]",
                    "139": "mov     eax, 39Ah",
                    "140": "sub     rax, rdx",
                    "141": "movsxd  rdx, dword ptr [r13+410h]",
                    "142": "sar     rdx, 2",
                    "143": "sub     rax, rdx",
                    "144": "shl     rax, 2",
                    "145": "cmp     [rbx+10h], rax",
                    "146": "ja      short INSTR152",
                    "147": "cmp     [rbx+10h], r15",
                    "148": "jge     short INSTR157",
                    "149": "mov     rdi, r13",
                    "150": "call    inode_dio_wait; PIC mode",
                    "151": "jmp     short INSTR157",
                    "152": "mov     rdi, r13",
                    "153": "call    f2fs_convert_inline_inode; PIC mode",
                    "154": "test    eax, eax",
                    "155": "jz      short INSTR147",
                    "156": "jmp     INSTR279",
                    "157": "lea     rax, [r13+390h]",
                    "158": "mov     rdi, rax",
                    "159": "mov     [rsp+38h+var_38], rax",
                    "160": "call    down_write; PIC mode",
                    "161": "mov     rax, [r13+30h]",
                    "162": "lea     rdi, [rax+18h]",
                    "163": "call    down_write; PIC mode",
                    "164": "mov     rsi, [rbx+10h]",
                    "165": "mov     rdi, r13",
                    "166": "call    truncate_setsize; PIC mode",
                    "167": "xor     eax, eax",
                    "168": "cmp     [rbx+10h], r15",
                    "169": "jg      short INSTR172",
                    "170": "mov     rdi, r13",
                    "171": "call    f2fs_truncate; PIC mode",
                    "172": "mov     [rsp+38h+var_30], eax",
                    "173": "mov     rax, [r13+30h]",
                    "174": "lea     rdi, [rax+18h]",
                    "175": "call    up_write; PIC mode",
                    "176": "mov     rdi, [rsp+38h+var_38]",
                    "177": "call    f2fs_up_write",
                    "178": "mov     eax, [rsp+38h+var_30]",
                    "179": "test    eax, eax",
                    "180": "jnz     INSTR279",
                    "181": "lea     r15, [r13+2E8h]",
                    "182": "mov     rdi, r15",
                    "183": "call    _raw_spin_lock; PIC mode",
                    "184": "mov     rdi, r13",
                    "185": "call    inode_set_ctime_current; PIC mode",
                    "186": "mov     [r13+60h], rax",
                    "187": "mov     rax, [r13+50h]",
                    "188": "mov     [r13+74h], edx",
                    "189": "mov     [r13+2E0h], rax",
                    "190": "mov     rdi, r15",
                    "191": "call    _raw_spin_unlock; PIC mode",
                    "192": "mov     r15d, [rbx]",
                    "193": "test    r15b, 2",
                    "194": "jz      short INSTR201",
                    "195": "mov     rax, [r13+28h]",
                    "196": "mov     edx, [rbx+8]",
                    "197": "mov     rdi, r12",
                    "198": "mov     rsi, [rax+450h]",
                    "199": "call    from_vfsuid; PIC mode",
                    "200": "mov     [r13+4], eax",
                    "201": "test    byte ptr [rbx], 4",
                    "202": "jz      short INSTR209",
                    "203": "mov     rax, [r13+28h]",
                    "204": "mov     edx, [rbx+0Ch]",
                    "205": "mov     rdi, r12",
                    "206": "mov     rsi, [rax+450h]",
                    "207": "call    from_vfsgid; PIC mode",
                    "208": "mov     [r13+8], eax",
                    "209": "test    r15b, 10h",
                    "210": "jz      short INSTR215",
                    "211": "mov     rdx, [rbx+18h]",
                    "212": "mov     rax, [rbx+20h]",
                    "213": "mov     [r13+58h], rdx",
                    "214": "mov     [r13+70h], eax",
                    "215": "test    r15b, 20h",
                    "216": "jz      short INSTR221",
                    "217": "mov     rdx, [rbx+28h]",
                    "218": "mov     rax, [rbx+30h]",
                    "219": "mov     [r13+60h], rdx",
                    "220": "mov     [r13+74h], eax",
                    "221": "test    r15b, 40h",
                    "222": "jz      short INSTR227",
                    "223": "mov     rdx, [rbx+38h]",
                    "224": "mov     rax, [rbx+40h]",
                    "225": "mov     [r13+68h], rdx",
                    "226": "mov     [r13+78h], eax",
                    "227": "and     r15b, 1",
                    "228": "jz      short INSTR249",
                    "229": "mov     rax, [r13+28h]",
                    "230": "mov     edx, [r13+8]",
                    "231": "mov     rdi, r12",
                    "232": "mov     r15d, [rbx+4]",
                    "233": "mov     rsi, [rax+450h]",
                    "234": "call    make_vfsgid; PIC mode",
                    "235": "mov     rsi, r13",
                    "236": "mov     rdi, r12",
                    "237": "mov     edx, eax",
                    "238": "call    in_group_or_capable; PIC mode",
                    "239": "test    al, al",
                    "240": "jnz     short INSTR242",
                    "241": "and     r15w, 0FBFFh",
                    "242": "mov     [r13+264h], r15w",
                    "243": "mov     esi, 5",
                    "244": "mov     rdi, r13",
                    "245": "call    set_inode_flag",
                    "246": "xor     esi, esi",
                    "247": "mov     rdi, r13",
                    "248": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "249": "test    byte ptr [rbx], 1",
                    "250": "jz      short INSTR271",
                    "251": "mov     rax, [r13+268h]",
                    "252": "test    al, 20h",
                    "253": "jz      short INSTR256",
                    "254": "movzx   edx, word ptr [r13+264h]",
                    "255": "jmp     short INSTR257",
                    "256": "movzx   edx, word ptr [r13+0]",
                    "257": "mov     rsi, r14",
                    "258": "mov     rdi, r12",
                    "259": "call    posix_acl_chmod; PIC mode",
                    "260": "mov     [rsp+38h+var_2C], eax",
                    "261": "mov     rax, [r13+268h]",
                    "262": "test    al, 20h",
                    "263": "jz      short INSTR271",
                    "264": "cmp     [rsp+38h+var_2C], 0",
                    "265": "jnz     short INSTR268",
                    "266": "mov     eax, [r13+264h]",
                    "267": "mov     [r13+0], ax",
                    "268": "mov     esi, 5",
                    "269": "mov     rdi, r13",
                    "270": "call    clear_inode_flag",
                    "271": "mov     esi, 1",
                    "272": "mov     rdi, r13",
                    "273": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "274": "mov     rax, [r13+28h]",
                    "275": "mov     esi, 1",
                    "276": "mov     rdi, [rax+368h]",
                    "277": "call    f2fs_balance_fs; PIC mode",
                    "278": "mov     eax, [rsp+38h+var_2C]",
                    "279": "pop     rdx",
                    "280": "pop     rcx",
                    "281": "pop     rbx",
                    "282": "pop     r12",
                    "283": "pop     r13",
                    "284": "pop     r14",
                    "285": "pop     r15",
                    "286": "pop     rbp",
                    "287": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "file.f2fs_setattr.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "sub     esp, 34h",
                    "7": "mov     [ebp+var_28], eax",
                    "8": "mov     ebx, [edx+20h]",
                    "9": "mov     [ebp+var_30], edx",
                    "10": "mov     eax, fs:__stack_chk_guard",
                    "11": "mov     [ebp+var_10], eax",
                    "12": "xor     eax, eax",
                    "13": "mov     eax, [ebx+1Ch]",
                    "14": "mov     eax, [eax+1FCh]",
                    "15": "mov     eax, [eax+0A0h]",
                    "16": "test    byte ptr [eax+84h], 8",
                    "17": "jnz     INSTR361",
                    "18": "mov     eax, [ebx+0Ch]",
                    "19": "test    al, 8",
                    "20": "jnz     INSTR368",
                    "21": "test    al, 4",
                    "22": "mov     edx, [ecx]",
                    "23": "mov     edi, ecx",
                    "24": "jnz     INSTR363",
                    "25": "test    dl, 8",
                    "26": "jnz     INSTR121",
                    "27": "mov     edx, [ebp+var_30]",
                    "28": "mov     ecx, edi",
                    "29": "mov     eax, [ebp+var_28]",
                    "30": "call    setattr_prepare",
                    "31": "mov     [ebp+var_2C], eax",
                    "32": "test    eax, eax",
                    "33": "jnz     INSTR111",
                    "34": "mov     eax, [ebp+var_30]",
                    "35": "mov     eax, [eax+20h]",
                    "36": "test    dword ptr [eax+0Ch], 14000h",
                    "37": "jnz     INSTR429",
                    "38": "mov     eax, [edi]",
                    "39": "test    al, 8",
                    "40": "jz      INSTR230",
                    "41": "mov     eax, ebx",
                    "42": "call    f2fs_dquot_initialize",
                    "43": "test    eax, eax",
                    "44": "jnz     INSTR316",
                    "45": "mov     esi, [edi]",
                    "46": "test    esi, 2",
                    "47": "jnz     INSTR318",
                    "48": "test    esi, 4",
                    "49": "jnz     INSTR274",
                    "50": "test    esi, 8",
                    "51": "jnz     INSTR142",
                    "52": "lea     esi, [esi+0]",
                    "53": "nop",
                    "54": "test    esi, 2",
                    "55": "mov     eax, esi",
                    "56": "jnz     INSTR266",
                    "57": "test    al, 4",
                    "58": "jnz     INSTR240",
                    "59": "test    esi, 10h",
                    "60": "jz      short INSTR67",
                    "61": "mov     eax, [edi+18h]",
                    "62": "mov     edx, [edi+1Ch]",
                    "63": "mov     ecx, [edi+20h]",
                    "64": "mov     [ebx+3Ch], eax",
                    "65": "mov     [ebx+40h], edx",
                    "66": "mov     [ebx+54h], ecx",
                    "67": "test    esi, 20h",
                    "68": "jz      short INSTR75",
                    "69": "mov     eax, [edi+24h]",
                    "70": "mov     edx, [edi+28h]",
                    "71": "mov     ecx, [edi+2Ch]",
                    "72": "mov     [ebx+44h], eax",
                    "73": "mov     [ebx+48h], edx",
                    "74": "mov     [ebx+58h], ecx",
                    "75": "test    esi, 40h",
                    "76": "jz      short INSTR83",
                    "77": "mov     eax, [edi+30h]",
                    "78": "mov     edx, [edi+34h]",
                    "79": "mov     ecx, [edi+38h]",
                    "80": "mov     [ebx+4Ch], eax",
                    "81": "mov     [ebx+50h], edx",
                    "82": "mov     [ebx+5Ch], ecx",
                    "83": "and     esi, 1",
                    "84": "jnz     INSTR247",
                    "85": "test    byte ptr [edi], 1",
                    "86": "jz      short INSTR104",
                    "87": "mov     eax, [ebx+19Ch]",
                    "88": "test    al, 20h",
                    "89": "jz      INSTR415",
                    "90": "movzx   ecx, word ptr [ebx+198h]",
                    "91": "mov     edx, [ebp+var_30]",
                    "92": "mov     eax, [ebp+var_28]",
                    "93": "call    posix_acl_chmod",
                    "94": "mov     [ebp+var_2C], eax",
                    "95": "mov     esi, eax",
                    "96": "mov     eax, [ebx+19Ch]",
                    "97": "test    al, 20h",
                    "98": "jz      short INSTR104",
                    "99": "test    esi, esi",
                    "100": "jnz     short INSTR103",
                    "101": "mov     eax, [ebx+198h]",
                    "102": "mov     [ebx], ax",
                    "103": "lock and byte ptr [ebx+19Ch], 0DFh",
                    "104": "mov     edx, 1",
                    "105": "mov     eax, ebx",
                    "106": "call    f2fs_mark_inode_dirty_sync",
                    "107": "mov     eax, [ebx+1Ch]",
                    "108": "mov     edx, 1",
                    "109": "mov     eax, [eax+1FCh]",
                    "110": "call    f2fs_balance_fs",
                    "111": "mov     eax, [ebp+var_10]",
                    "112": "sub     eax, fs:__stack_chk_guard",
                    "113": "jnz     INSTR431",
                    "114": "mov     eax, [ebp+var_2C]",
                    "115": "add     esp, 34h",
                    "116": "pop     ebx",
                    "117": "pop     esi",
                    "118": "pop     edi",
                    "119": "pop     ebp",
                    "120": "retn",
                    "121": "mov     eax, ebx",
                    "122": "call    f2fs_is_compress_backend_ready",
                    "123": "test    al, al",
                    "124": "jz      INSTR429",
                    "125": "mov     eax, [ebx+19Ch]",
                    "126": "test    eax, 40000000h",
                    "127": "jz      INSTR27",
                    "128": "mov     eax, [ebx+2D4h]",
                    "129": "xor     edx, edx",
                    "130": "mov     ecx, [edi+10h]",
                    "131": "shl     eax, 0Ch",
                    "132": "add     eax, 0FFFFFFFFh",
                    "133": "adc     edx, 0FFFFFFFFh",
                    "134": "and     ecx, eax",
                    "135": "mov     eax, [edi+14h]",
                    "136": "and     eax, edx",
                    "137": "or      eax, ecx",
                    "138": "jz      INSTR27",
                    "139": "mov     [ebp+var_2C], 0FFFFFFEAh",
                    "140": "jmp     short INSTR111",
                    "141": "pause",
                    "142": "mov     eax, [ebx+74h]",
                    "143": "test    al, 1",
                    "144": "jnz     short INSTR141",
                    "145": "mov     ecx, [ebx+34h]",
                    "146": "mov     esi, [ebx+38h]",
                    "147": "mov     edx, [ebx+74h]",
                    "148": "cmp     eax, edx",
                    "149": "jnz     short INSTR142",
                    "150": "mov     [ebp+var_34], ecx",
                    "151": "mov     eax, [ebx+298h]",
                    "152": "mov     ecx, 39Ah",
                    "153": "xor     edx, edx",
                    "154": "sub     ecx, eax",
                    "155": "mov     eax, [ebx+290h]",
                    "156": "shr     eax, 2",
                    "157": "sub     ecx, eax",
                    "158": "mov     eax, edx",
                    "159": "shl     ecx, 2",
                    "160": "cmp     ecx, [edi+10h]",
                    "161": "sbb     eax, [edi+14h]",
                    "162": "jge     short INSTR167",
                    "163": "mov     eax, ebx",
                    "164": "call    f2fs_convert_inline_inode",
                    "165": "test    eax, eax",
                    "166": "jnz     INSTR316",
                    "167": "lea     eax, [ebx+248h]",
                    "168": "mov     [ebp+var_38], eax",
                    "169": "call    down_write",
                    "170": "mov     eax, [ebx+20h]",
                    "171": "add     eax, 10h",
                    "172": "call    down_write",
                    "173": "mov     edx, [edi+10h]",
                    "174": "mov     eax, ebx",
                    "175": "mov     ecx, [edi+14h]",
                    "176": "call    truncate_setsize",
                    "177": "lea     eax, [ebx+260h]",
                    "178": "mov     [ebp+var_3C], eax",
                    "179": "mov     eax, [ebp+var_34]",
                    "180": "cmp     eax, [edi+10h]",
                    "181": "sbb     esi, [edi+14h]",
                    "182": "jge     INSTR385",
                    "183": "mov     eax, [ebx+20h]",
                    "184": "add     eax, 10h",
                    "185": "call    up_write",
                    "186": "mov     eax, [ebp+var_38]",
                    "187": "call    up_write",
                    "188": "mov     eax, [ebp+var_3C]",
                    "189": "xor     ecx, ecx",
                    "190": "mov     edx, 3",
                    "191": "mov     dword ptr [esp], 0",
                    "192": "call    __wake_up",
                    "193": "lea     esi, [ebx+1ECh]",
                    "194": "mov     eax, esi",
                    "195": "call    _raw_spin_lock",
                    "196": "lea     eax, [ebp+var_24]",
                    "197": "mov     edx, ebx",
                    "198": "call    inode_set_ctime_current",
                    "199": "mov     eax, [ebp+var_1C]",
                    "200": "mov     [ebp+var_34], edi",
                    "201": "mov     edx, [ebp+var_24]",
                    "202": "mov     edi, esi",
                    "203": "mov     ecx, [ebp+var_20]",
                    "204": "mov     [ebx+58h], eax",
                    "205": "mov     [ebx+44h], edx",
                    "206": "mov     [ebx+48h], ecx",
                    "207": "mov     eax, [ebx+74h]",
                    "208": "test    al, 1",
                    "209": "jz      short INSTR217",
                    "210": "mov     ecx, [ebp+var_34]",
                    "211": "xchg    ax, ax",
                    "212": "pause",
                    "213": "mov     eax, [ebx+74h]",
                    "214": "test    al, 1",
                    "215": "jnz     short INSTR212",
                    "216": "mov     [ebp+var_34], ecx",
                    "217": "mov     edx, [ebx+34h]",
                    "218": "mov     ecx, [ebx+38h]",
                    "219": "mov     esi, [ebx+74h]",
                    "220": "cmp     esi, eax",
                    "221": "jnz     short INSTR207",
                    "222": "mov     [ebx+1E4h], edx",
                    "223": "mov     esi, edi",
                    "224": "mov     edi, [ebp+var_34]",
                    "225": "mov     [ebx+1E8h], ecx",
                    "226": "mov     eax, esi",
                    "227": "call    _raw_spin_unlock",
                    "228": "mov     esi, [edi]",
                    "229": "jmp     INSTR54",
                    "230": "test    al, 2",
                    "231": "jnz     INSTR402",
                    "232": "test    al, 4",
                    "233": "jnz     INSTR417",
                    "234": "test    al, 2",
                    "235": "jnz     INSTR318",
                    "236": "test    al, 8",
                    "237": "mov     esi, eax",
                    "238": "jz      INSTR57",
                    "239": "jmp     INSTR142",
                    "240": "mov     eax, [ebx+1Ch]",
                    "241": "mov     ecx, [edi+0Ch]",
                    "242": "mov     edx, [eax+2ACh]",
                    "243": "mov     eax, [ebp+var_28]",
                    "244": "call    from_vfsgid",
                    "245": "mov     [ebx+8], eax",
                    "246": "jmp     INSTR59",
                    "247": "mov     eax, [ebx+1Ch]",
                    "248": "mov     ecx, [ebx+8]",
                    "249": "movzx   esi, word ptr [edi+4]",
                    "250": "mov     edx, [eax+2ACh]",
                    "251": "mov     eax, [ebp+var_28]",
                    "252": "call    make_vfsgid",
                    "253": "mov     edx, ebx",
                    "254": "mov     ecx, eax",
                    "255": "mov     eax, [ebp+var_28]",
                    "256": "call    in_group_or_capable",
                    "257": "test    al, al",
                    "258": "jnz     short INSTR260",
                    "259": "and     esi, 0FBFFh",
                    "260": "mov     [ebx+198h], si",
                    "261": "lock or byte ptr [ebx+19Ch], 20h",
                    "262": "xor     edx, edx",
                    "263": "mov     eax, ebx",
                    "264": "call    f2fs_mark_inode_dirty_sync",
                    "265": "jmp     INSTR85",
                    "266": "mov     eax, [ebx+1Ch]",
                    "267": "mov     ecx, [edi+8]",
                    "268": "mov     edx, [eax+2ACh]",
                    "269": "mov     eax, [ebp+var_28]",
                    "270": "call    from_vfsuid",
                    "271": "mov     [ebx+4], eax",
                    "272": "mov     eax, [edi]",
                    "273": "jmp     INSTR57",
                    "274": "mov     eax, [ebx+1Ch]",
                    "275": "mov     ecx, [ebx+8]",
                    "276": "mov     edx, [eax+2ACh]",
                    "277": "mov     eax, [ebp+var_28]",
                    "278": "call    make_vfsgid",
                    "279": "mov     edx, eax",
                    "280": "mov     eax, [edi+0Ch]",
                    "281": "cmp     edx, eax",
                    "282": "jnz     short INSTR285",
                    "283": "inc     eax",
                    "284": "jnz     short INSTR312",
                    "285": "mov     eax, [ebx+1Ch]",
                    "286": "mov     esi, [eax+1FCh]",
                    "287": "call    __SCT__might_resched",
                    "288": "lea     eax, [esi+0D4h]",
                    "289": "mov     [ebp+var_34], eax",
                    "290": "call    down_read_trylock",
                    "291": "test    eax, eax",
                    "292": "jz      INSTR340",
                    "293": "mov     eax, [ebp+var_28]",
                    "294": "mov     ecx, edi",
                    "295": "mov     edx, ebx",
                    "296": "call    dquot_transfer",
                    "297": "test    eax, eax",
                    "298": "mov     esi, eax",
                    "299": "jnz     INSTR331",
                    "300": "mov     eax, [edi]",
                    "301": "test    al, 2",
                    "302": "jnz     INSTR370",
                    "303": "test    al, 4",
                    "304": "jnz     INSTR378",
                    "305": "mov     eax, ebx",
                    "306": "mov     edx, 1",
                    "307": "call    f2fs_mark_inode_dirty_sync",
                    "308": "mov     eax, [ebx+1Ch]",
                    "309": "mov     eax, [eax+1FCh]",
                    "310": "add     eax, 0D4h",
                    "311": "call    up_read",
                    "312": "mov     esi, [edi]",
                    "313": "test    esi, 8",
                    "314": "jz      INSTR54",
                    "315": "jmp     INSTR142",
                    "316": "mov     [ebp+var_2C], eax",
                    "317": "jmp     INSTR111",
                    "318": "mov     eax, [ebx+1Ch]",
                    "319": "mov     ecx, [ebx+4]",
                    "320": "mov     edx, [eax+2ACh]",
                    "321": "mov     eax, [ebp+var_28]",
                    "322": "call    make_vfsuid",
                    "323": "mov     edx, eax",
                    "324": "mov     eax, [edi+8]",
                    "325": "cmp     edx, eax",
                    "326": "jnz     INSTR285",
                    "327": "inc     eax",
                    "328": "jz      INSTR285",
                    "329": "mov     esi, [edi]",
                    "330": "jmp     INSTR48",
                    "331": "mov     eax, [ebx+1Ch]",
                    "332": "mov     eax, [eax+1FCh]",
                    "333": "lock or byte ptr [eax+35h], 10h",
                    "334": "mov     eax, [ebx+1Ch]",
                    "335": "mov     eax, [eax+1FCh]",
                    "336": "add     eax, 0D4h",
                    "337": "call    up_read",
                    "338": "mov     [ebp+var_2C], esi",
                    "339": "jmp     INSTR111",
                    "340": "xor     edx, edx",
                    "341": "add     esi, 0ECh",
                    "342": "lea     eax, [ebp+var_24]",
                    "343": "call    init_wait_entry",
                    "344": "mov     [ebp+var_38], ebx",
                    "345": "mov     ebx, [ebp+var_34]",
                    "346": "jmp     short INSTR348",
                    "347": "call    schedule",
                    "348": "mov     ecx, 2",
                    "349": "mov     eax, esi",
                    "350": "lea     edx, [ebp+var_24]",
                    "351": "call    prepare_to_wait_event",
                    "352": "mov     eax, ebx",
                    "353": "call    down_read_trylock",
                    "354": "test    eax, eax",
                    "355": "jz      short INSTR347",
                    "356": "lea     edx, [ebp+var_24]",
                    "357": "mov     eax, esi",
                    "358": "mov     ebx, [ebp+var_38]",
                    "359": "call    finish_wait",
                    "360": "jmp     INSTR293",
                    "361": "mov     [ebp+var_2C], 0FFFFFFFBh",
                    "362": "jmp     INSTR111",
                    "363": "test    edx, 10007h",
                    "364": "jz      INSTR25",
                    "365": "lea     esi, [esi+0]",
                    "366": "lea     esi, [esi+0]",
                    "367": "nop",
                    "368": "mov     [ebp+var_2C], 0FFFFFFFFh",
                    "369": "jmp     INSTR111",
                    "370": "mov     eax, [ebx+1Ch]",
                    "371": "mov     ecx, [edi+8]",
                    "372": "mov     edx, [eax+2ACh]",
                    "373": "mov     eax, [ebp+var_28]",
                    "374": "call    from_vfsuid",
                    "375": "mov     [ebx+4], eax",
                    "376": "mov     eax, [edi]",
                    "377": "jmp     INSTR303",
                    "378": "mov     eax, [ebx+1Ch]",
                    "379": "mov     ecx, [edi+0Ch]",
                    "380": "mov     edx, [eax+2ACh]",
                    "381": "mov     eax, [ebp+var_28]",
                    "382": "call    from_vfsgid",
                    "383": "mov     [ebx+8], eax",
                    "384": "jmp     INSTR305",
                    "385": "mov     eax, ebx",
                    "386": "call    f2fs_truncate",
                    "387": "mov     esi, eax",
                    "388": "mov     eax, [ebx+20h]",
                    "389": "add     eax, 10h",
                    "390": "call    up_write",
                    "391": "mov     eax, [ebp+var_38]",
                    "392": "call    up_write",
                    "393": "mov     eax, [ebp+var_3C]",
                    "394": "xor     ecx, ecx",
                    "395": "mov     edx, 3",
                    "396": "mov     dword ptr [esp], 0",
                    "397": "call    __wake_up",
                    "398": "test    esi, esi",
                    "399": "jz      INSTR193",
                    "400": "mov     [ebp+var_2C], esi",
                    "401": "jmp     INSTR111",
                    "402": "mov     eax, [ebx+1Ch]",
                    "403": "mov     ecx, [ebx+4]",
                    "404": "mov     edx, [eax+2ACh]",
                    "405": "mov     eax, [ebp+var_28]",
                    "406": "call    make_vfsuid",
                    "407": "mov     edx, eax",
                    "408": "mov     eax, [edi+8]",
                    "409": "cmp     edx, eax",
                    "410": "jnz     INSTR41",
                    "411": "inc     eax",
                    "412": "jz      INSTR41",
                    "413": "mov     eax, [edi]",
                    "414": "jmp     INSTR232",
                    "415": "movzx   ecx, word ptr [ebx]",
                    "416": "jmp     INSTR91",
                    "417": "mov     eax, [ebx+1Ch]",
                    "418": "mov     ecx, [ebx+8]",
                    "419": "mov     edx, [eax+2ACh]",
                    "420": "mov     eax, [ebp+var_28]",
                    "421": "call    make_vfsgid",
                    "422": "mov     edx, eax",
                    "423": "mov     eax, [edi+0Ch]",
                    "424": "cmp     edx, eax",
                    "425": "jnz     INSTR41",
                    "426": "inc     eax",
                    "427": "jz      INSTR41",
                    "428": "jmp     INSTR45",
                    "429": "mov     [ebp+var_2C], 0FFFFFFA1h",
                    "430": "jmp     INSTR111",
                    "431": "call    __stack_chk_fail"
                }
            },
            {
                "filename": "file.f2fs_setattr.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_80]!",
                    "3": "MRS             X3, SP_EL0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X21, X22, [SP,#0x80+var_60]",
                    "6": "MOV             X21, X1",
                    "7": "STP             X19, X20, [SP,#0x80+var_70]",
                    "8": "STP             X23, X24, [SP,#0x80+var_50]",
                    "9": "MOV             X23, X0",
                    "10": "LDR             X19, [X21,#0x30]",
                    "11": "LDR             X1, [X3,#0x550]",
                    "12": "STR             X1, [SP,#0x80+var_8]",
                    "13": "MOV             X1, #0",
                    "14": "LDR             X0, [X19,#0x28]",
                    "15": "LDR             X0, [X0,#0x368]",
                    "16": "LDR             X0, [X0,#0x120]",
                    "17": "LDR             W0, [X0,#0x84]",
                    "18": "TBNZ            W0, #3, loc_64C0",
                    "19": "LDR             W0, [X19,#0xC]",
                    "20": "TBNZ            W0, #3, loc_6378",
                    "21": "LDR             W1, [X2]",
                    "22": "MOV             X20, X2",
                    "23": "TBNZ            W0, #2, loc_636C",
                    "24": "TBNZ            W1, #3, loc_628C",
                    "25": "MOV             X2, X20",
                    "26": "MOV             X1, X21",
                    "27": "MOV             X0, X23",
                    "28": "BL              setattr_prepare",
                    "29": "MOV             W22, W0",
                    "30": "CBNZ            W0, loc_6258",
                    "31": "LDR             X0, [X21,#0x30]",
                    "32": "LDR             W0, [X0,#0xC]",
                    "33": "AND             W0, W0, #0x1C000",
                    "34": "AND             W0, W0, #0xFFFF7FFF",
                    "35": "CBNZ            W0, loc_6614",
                    "36": "LDR             W0, [X20]",
                    "37": "TBZ             W0, #3, loc_62C8",
                    "38": "MOV             X0, X19",
                    "39": "BL              f2fs_dquot_initialize",
                    "40": "CBNZ            W0, loc_6440",
                    "41": "LDR             W24, [X20]",
                    "42": "TBNZ            W24, #1, loc_62E0",
                    "43": "TBNZ            W24, #2, loc_6380",
                    "44": "TBZ             W24, #3, loc_61A4",
                    "45": "ADD             X0, X19, #0x50 ; 'P'",
                    "46": "LDAR            X24, [X0]",
                    "47": "LDRSW           X0, [X19,#0x410]",
                    "48": "MOV             X1, #0x39A",
                    "49": "LDRSW           X3, [X19,#0x418]",
                    "50": "LDR             X2, [X20,#0x10]",
                    "51": "SUB             X1, X1, X3",
                    "52": "SUB             X0, X1, X0,ASR#2",
                    "53": "CMP             X2, X0,LSL#2",
                    "54": "B.LS            loc_610C",
                    "55": "MOV             X0, X19",
                    "56": "BL              f2fs_convert_inline_inode",
                    "57": "CBNZ            W0, loc_6440",
                    "58": "STP             X25, X26, [SP,#0x80+var_40]",
                    "59": "ADD             X25, X19, #0x390",
                    "60": "MOV             X0, X25",
                    "61": "BL              down_write",
                    "62": "ADD             X26, X19, #0x3B8",
                    "63": "LDR             X0, [X19,#0x30]",
                    "64": "ADD             X0, X0, #0x18",
                    "65": "BL              down_write",
                    "66": "LDR             X1, [X20,#0x10]",
                    "67": "MOV             X0, X19",
                    "68": "BL              truncate_setsize",
                    "69": "LDR             X0, [X20,#0x10]",
                    "70": "CMP             X0, X24",
                    "71": "B.LE            loc_64C8",
                    "72": "LDR             X0, [X19,#0x30]",
                    "73": "ADD             X0, X0, #0x18",
                    "74": "BL              up_write",
                    "75": "MOV             X0, X25",
                    "76": "BL              up_write",
                    "77": "MOV             X0, X26",
                    "78": "MOV             X3, #0",
                    "79": "MOV             W2, #0",
                    "80": "MOV             W1, #3",
                    "81": "BL              __wake_up",
                    "82": "ADD             X24, X19, #0x2E8",
                    "83": "MOV             X0, X24",
                    "84": "BL              _raw_spin_lock",
                    "85": "MOV             X0, X19",
                    "86": "BL              inode_set_ctime_current",
                    "87": "STR             X0, [X19,#0x60]",
                    "88": "ADD             X0, X19, #0x50 ; 'P'",
                    "89": "STR             W1, [X19,#0x74]",
                    "90": "LDAR            X0, [X0]",
                    "91": "STR             X0, [X19,#0x2E0]",
                    "92": "MOV             X0, X24",
                    "93": "BL              _raw_spin_unlock",
                    "94": "LDR             W24, [X20]",
                    "95": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "96": "AND             W0, W24, #4",
                    "97": "TBNZ            W24, #1, loc_63E8",
                    "98": "CBNZ            W0, loc_63CC",
                    "99": "TBZ             W24, #4, loc_61C0",
                    "100": "LDP             X1, X0, [X20,#0x18]",
                    "101": "STR             X1, [X19,#0x58]",
                    "102": "STR             W0, [X19,#0x70]",
                    "103": "TBZ             W24, #5, loc_61D0",
                    "104": "LDP             X1, X0, [X20,#0x28]",
                    "105": "STR             X1, [X19,#0x60]",
                    "106": "STR             W0, [X19,#0x74]",
                    "107": "TBZ             W24, #6, loc_61E0",
                    "108": "LDP             X1, X0, [X20,#0x38]",
                    "109": "STR             X1, [X19,#0x68]",
                    "110": "STR             W0, [X19,#0x78]",
                    "111": "TBNZ            W24, #0, loc_6528",
                    "112": "LDR             W0, [X20]",
                    "113": "TBZ             W0, #0, loc_6238",
                    "114": "LDR             X0, [X19,#0x268]",
                    "115": "TST             W0, #0x20",
                    "116": "B.NE            loc_659C",
                    "117": "LDRH            W2, [X19]",
                    "118": "MOV             X1, X21",
                    "119": "MOV             X0, X23",
                    "120": "BL              posix_acl_chmod",
                    "121": "MOV             W22, W0",
                    "122": "LDR             X1, [X19,#0x268]",
                    "123": "TST             W1, #0x20",
                    "124": "B.EQ            loc_6238",
                    "125": "CBNZ            W0, loc_6224",
                    "126": "LDRH            W0, [X19,#0x264]",
                    "127": "STRH            W0, [X19]",
                    "128": "B               loc_65F4",
                    "129": "MOV             X0, #0x20 ; ' '",
                    "130": "ADD             X1, X19, #0x268",
                    "131": "STCLR           X0, [X1]",
                    "132": "NOP",
                    "133": "MOV             X0, X19",
                    "134": "MOV             W1, #1",
                    "135": "BL              f2fs_mark_inode_dirty_sync",
                    "136": "LDR             X0, [X19,#0x28]",
                    "137": "MOV             W1, #1",
                    "138": "LDR             X0, [X0,#0x368]",
                    "139": "BL              f2fs_balance_fs",
                    "140": "NOP",
                    "141": "MRS             X0, SP_EL0",
                    "142": "LDR             X2, [SP,#0x80+var_8]",
                    "143": "LDR             X1, [X0,#0x550]",
                    "144": "SUBS            X2, X2, X1",
                    "145": "MOV             X1, #0",
                    "146": "B.NE            loc_661C",
                    "147": "MOV             W0, W22",
                    "148": "LDP             X19, X20, [SP,#0x80+var_70]",
                    "149": "LDP             X21, X22, [SP,#0x80+var_60]",
                    "150": "LDP             X23, X24, [SP,#0x80+var_50]",
                    "151": "LDP             X29, X30, [SP+0x80+var_80],#0x80",
                    "152": "AUTIASP",
                    "153": "RET",
                    "154": "MOV             X0, X19",
                    "155": "BL              f2fs_is_compress_backend_ready",
                    "156": "TST             W0, #0xFF",
                    "157": "B.EQ            loc_6614",
                    "158": "LDR             X0, [X19,#0x268]",
                    "159": "TST             W0, #0x40000000",
                    "160": "B.EQ            loc_6088",
                    "161": "LDR             W0, [X19,#0x468]",
                    "162": "LDR             X1, [X20,#0x10]",
                    "163": "LSL             W0, W0, #0xC",
                    "164": "SUB             X0, X0, #1",
                    "165": "TST             X0, X1",
                    "166": "B.EQ            loc_6088",
                    "167": "MOV             W22, #0xFFFFFFEA",
                    "168": "B               loc_6258",
                    "169": "TBNZ            W0, #1, loc_6410",
                    "170": "TBNZ            W0, #2, loc_65C0",
                    "171": "TBNZ            W0, #1, loc_62E0",
                    "172": "MOV             W24, W0",
                    "173": "TBNZ            W0, #3, loc_60D8",
                    "174": "B               loc_61B0",
                    "175": "LDR             X1, [X19,#0x28]",
                    "176": "MOV             X0, X23",
                    "177": "LDR             W2, [X19,#4]",
                    "178": "LDR             X1, [X1,#0x450]",
                    "179": "BL              make_vfsuid",
                    "180": "LDR             W1, [X20,#8]",
                    "181": "CMP             W0, W1",
                    "182": "CCMN            W1, #1, #4, EQ",
                    "183": "B.NE            loc_65E8",
                    "184": "STP             X25, X26, [SP,#0x80+var_40]",
                    "185": "LDR             X0, [X19,#0x28]",
                    "186": "LDR             X24, [X0,#0x368]",
                    "187": "BL              dynamic_might_resched",
                    "188": "ADD             X25, X24, #0x178",
                    "189": "MOV             X0, X25",
                    "190": "BL              down_read_trylock",
                    "191": "CBZ             W0, loc_647C",
                    "192": "MOV             X2, X20",
                    "193": "MOV             X1, X19",
                    "194": "MOV             X0, X23",
                    "195": "BL              dquot_transfer",
                    "196": "CBNZ            W0, loc_6448",
                    "197": "LDR             W0, [X20]",
                    "198": "TBNZ            W0, #1, loc_63AC",
                    "199": "TBNZ            W0, #2, loc_650C",
                    "200": "MOV             X0, X19",
                    "201": "MOV             W1, #1",
                    "202": "BL              f2fs_mark_inode_dirty_sync",
                    "203": "LDR             X0, [X19,#0x28]",
                    "204": "LDR             X0, [X0,#0x368]",
                    "205": "ADD             X0, X0, #0x178",
                    "206": "BL              up_read",
                    "207": "LDR             W24, [X20]",
                    "208": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "209": "B               loc_60D4",
                    "210": "AND             W0, W1, #0x1FFFF",
                    "211": "AND             W0, W0, #0xFFFF0007",
                    "212": "CBZ             W0, loc_6084",
                    "213": "MOV             W22, #0xFFFFFFFF",
                    "214": "B               loc_6258",
                    "215": "LDR             X1, [X19,#0x28]",
                    "216": "MOV             X0, X23",
                    "217": "LDR             W2, [X19,#8]",
                    "218": "LDR             X1, [X1,#0x450]",
                    "219": "BL              make_vfsgid",
                    "220": "LDR             W1, [X20,#0xC]",
                    "221": "CMP             W0, W1",
                    "222": "CCMN            W1, #1, #4, EQ",
                    "223": "B.EQ            loc_6304",
                    "224": "LDR             W24, [X20]",
                    "225": "B               loc_60D4",
                    "226": "LDR             X1, [X19,#0x28]",
                    "227": "MOV             X0, X23",
                    "228": "LDR             W2, [X20,#8]",
                    "229": "LDR             X1, [X1,#0x450]",
                    "230": "BL              from_vfsuid",
                    "231": "STR             W0, [X19,#4]",
                    "232": "LDR             W0, [X20]",
                    "233": "B               loc_6340",
                    "234": "LDR             X1, [X19,#0x28]",
                    "235": "MOV             X0, X23",
                    "236": "LDR             W2, [X20,#0xC]",
                    "237": "LDR             X1, [X1,#0x450]",
                    "238": "BL              from_vfsgid",
                    "239": "STR             W0, [X19,#8]",
                    "240": "B               loc_61B0",
                    "241": "LDR             X1, [X19,#0x28]",
                    "242": "MOV             X0, X23",
                    "243": "LDR             W2, [X20,#8]",
                    "244": "LDR             X1, [X1,#0x450]",
                    "245": "BL              from_vfsuid",
                    "246": "STR             W0, [X19,#4]",
                    "247": "LDR             W0, [X20]",
                    "248": "AND             W0, W0, #4",
                    "249": "CBZ             W0, loc_61B0",
                    "250": "B               loc_63CC",
                    "251": "LDR             X1, [X19,#0x28]",
                    "252": "MOV             X0, X23",
                    "253": "LDR             W2, [X19,#4]",
                    "254": "LDR             X1, [X1,#0x450]",
                    "255": "BL              make_vfsuid",
                    "256": "LDR             W1, [X20,#8]",
                    "257": "CMP             W0, W1",
                    "258": "CCMN            W1, #1, #4, EQ",
                    "259": "B.EQ            loc_60BC",
                    "260": "LDR             W0, [X20]",
                    "261": "TBZ             W0, #2, loc_62D0",
                    "262": "B               loc_65C0",
                    "263": "MOV             W22, W0",
                    "264": "B               loc_6258",
                    "265": "LDR             X1, [X19,#0x28]",
                    "266": "LDR             X1, [X1,#0x368]",
                    "267": "B               loc_6580",
                    "268": "MOV             X2, #0x1000",
                    "269": "ADD             X1, X1, #0x60 ; '`'",
                    "270": "STSET           X2, [X1]",
                    "271": "LDR             X1, [X19,#0x28]",
                    "272": "MOV             W22, W0",
                    "273": "LDR             X0, [X1,#0x368]",
                    "274": "ADD             X0, X0, #0x178",
                    "275": "BL              up_read",
                    "276": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "277": "B               loc_6258",
                    "278": "ADD             X24, X24, #0x1A0",
                    "279": "ADD             X0, SP, #0x80+var_30",
                    "280": "MOV             W1, #0",
                    "281": "BL              init_wait_entry",
                    "282": "B               loc_6494",
                    "283": "BL              schedule",
                    "284": "ADD             X1, SP, #0x80+var_30",
                    "285": "MOV             W2, #2",
                    "286": "MOV             X0, X24",
                    "287": "BL              prepare_to_wait_event",
                    "288": "MOV             X0, X25",
                    "289": "BL              down_read_trylock",
                    "290": "CBZ             W0, loc_6490",
                    "291": "ADD             X1, SP, #0x80+var_30",
                    "292": "MOV             X0, X24",
                    "293": "BL              finish_wait",
                    "294": "B               loc_6324",
                    "295": "MOV             W22, #0xFFFFFFFB",
                    "296": "B               loc_6258",
                    "297": "MOV             X0, X19",
                    "298": "BL              f2fs_truncate",
                    "299": "LDR             X1, [X19,#0x30]",
                    "300": "MOV             W24, W0",
                    "301": "ADD             X0, X1, #0x18",
                    "302": "BL              up_write",
                    "303": "MOV             X0, X25",
                    "304": "BL              up_write",
                    "305": "MOV             X0, X26",
                    "306": "MOV             X3, #0",
                    "307": "MOV             W2, #0",
                    "308": "MOV             W1, #3",
                    "309": "BL              __wake_up",
                    "310": "CBZ             W24, loc_616C",
                    "311": "MOV             W22, W24",
                    "312": "LDP             X25, X26, [SP,#0x80+var_40]",
                    "313": "B               loc_6258",
                    "314": "LDR             X1, [X19,#0x28]",
                    "315": "MOV             X0, X23",
                    "316": "LDR             W2, [X20,#0xC]",
                    "317": "LDR             X1, [X1,#0x450]",
                    "318": "BL              from_vfsgid",
                    "319": "STR             W0, [X19,#8]",
                    "320": "B               loc_6344",
                    "321": "LDR             X1, [X19,#0x28]",
                    "322": "MOV             X0, X23",
                    "323": "LDR             W2, [X19,#8]",
                    "324": "LDRH            W24, [X20,#4]",
                    "325": "LDR             X1, [X1,#0x450]",
                    "326": "BL              make_vfsgid",
                    "327": "MOV             W2, W0",
                    "328": "MOV             X1, X19",
                    "329": "MOV             X0, X23",
                    "330": "BL              in_group_or_capable",
                    "331": "TST             W0, #0xFF",
                    "332": "AND             W1, W24, #0xFFFFFBFF",
                    "333": "CSEL            W24, W1, W24, EQ",
                    "334": "STRH            W24, [X19,#0x264]",
                    "335": "B               loc_65A4",
                    "336": "MOV             X0, #0x20 ; ' '",
                    "337": "ADD             X1, X19, #0x268",
                    "338": "STSET           X0, [X1]",
                    "339": "MOV             X0, X19",
                    "340": "MOV             W1, #0",
                    "341": "BL              f2fs_mark_inode_dirty_sync",
                    "342": "B               loc_61E4",
                    "343": "ADD             X1, X1, #0x60 ; '`'",
                    "344": "PRFM            #0x11, [X1]",
                    "345": "LDXR            X2, [X1]",
                    "346": "ORR             X2, X2, #0x1000",
                    "347": "STXR            W3, X2, [X1]",
                    "348": "CBNZ            W3, loc_6588",
                    "349": "B               loc_6460",
                    "350": "LDRH            W2, [X19,#0x264]",
                    "351": "B               loc_61FC",
                    "352": "ADD             X2, X19, #0x268",
                    "353": "PRFM            #0x11, [X2]",
                    "354": "LDXR            X0, [X2]",
                    "355": "ORR             X0, X0, #0x20 ; ' '",
                    "356": "STXR            W1, X0, [X2]",
                    "357": "CBNZ            W1, loc_65AC",
                    "358": "B               loc_6570",
                    "359": "LDR             X1, [X19,#0x28]",
                    "360": "MOV             X0, X23",
                    "361": "LDR             W2, [X19,#8]",
                    "362": "LDR             X1, [X1,#0x450]",
                    "363": "BL              make_vfsgid",
                    "364": "LDR             W1, [X20,#0xC]",
                    "365": "CMP             W0, W1",
                    "366": "CCMN            W1, #1, #4, EQ",
                    "367": "B.EQ            loc_60BC",
                    "368": "B               loc_60C8",
                    "369": "LDR             W24, [X20]",
                    "370": "TBZ             W24, #2, loc_60D4",
                    "371": "B               loc_6380",
                    "372": "ADD             X3, X19, #0x268",
                    "373": "MOV             X0, #0x20 ; ' '",
                    "374": "PRFM            #0x11, [X3]",
                    "375": "LDXR            X1, [X3]",
                    "376": "BIC             X1, X1, X0",
                    "377": "STXR            W2, X1, [X3]",
                    "378": "CBNZ            W2, loc_6600",
                    "379": "B               loc_6238",
                    "380": "MOV             W22, #0xFFFFFFA1",
                    "381": "B               loc_6258",
                    "382": "STP             X25, X26, [SP,#0x80+var_40]",
                    "383": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "file.f2fs_setattr.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 0A8h",
                    "8": "mov     [rsp+0D8h+var_C8], rdx",
                    "9": "mov     rbx, rsi",
                    "10": "mov     [rsp+0D8h+var_90], rdi",
                    "11": "call    __msan_get_context_state; PIC mode",
                    "12": "mov     r13, rax",
                    "13": "mov     rax, [rax]",
                    "14": "mov     [rsp+0D8h+var_98], rax",
                    "15": "mov     rax, [r13+8]",
                    "16": "mov     ecx, [r13+0C90h]",
                    "17": "mov     [rsp+0D8h+var_7C], ecx",
                    "18": "mov     rcx, [r13+10h]",
                    "19": "mov     [rsp+0D8h+var_B0], rcx",
                    "20": "mov     ecx, [r13+0C98h]",
                    "21": "mov     [rsp+0D8h+var_D4], ecx",
                    "22": "mov     ecx, [r13+0C88h]",
                    "23": "mov     [rsp+0D8h+var_B4], ecx",
                    "24": "mov     [rsp+0D8h+var_58], rbx",
                    "25": "lea     rbp, [rbx+30h]",
                    "26": "mov     [rsp+0D8h+var_60], rax",
                    "27": "test    rax, rax",
                    "28": "jnz     INSTR1217",
                    "29": "mov     rbx, [rbp+0]",
                    "30": "mov     [rsp+0D8h+var_A0], rbp",
                    "31": "mov     rdi, rbp",
                    "32": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "33": "mov     r12, [rax]",
                    "34": "mov     r14d, [rdx]",
                    "35": "mov     [rsp+0D8h+var_C0], rbx",
                    "36": "lea     r15, [rbx+28h]",
                    "37": "test    r12, r12",
                    "38": "jnz     INSTR1220",
                    "39": "mov     ebx, 368h",
                    "40": "add     rbx, [r15]",
                    "41": "mov     rdi, r15",
                    "42": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "43": "cmp     qword ptr [rax], 0",
                    "44": "jnz     INSTR1223",
                    "45": "mov     ebp, 120h",
                    "46": "add     rbp, [rbx]",
                    "47": "mov     rdi, rbx",
                    "48": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "49": "cmp     qword ptr [rax], 0",
                    "50": "jnz     INSTR1226",
                    "51": "mov     ebx, 84h",
                    "52": "add     rbx, [rbp+0]",
                    "53": "mov     rdi, rbp",
                    "54": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "55": "cmp     qword ptr [rax], 0",
                    "56": "jnz     INSTR1229",
                    "57": "mov     ebp, [rbx]",
                    "58": "mov     rdi, rbx",
                    "59": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "60": "mov     eax, [rax]",
                    "61": "and     ebp, 8",
                    "62": "test    al, 8",
                    "63": "jz      short INSTR67",
                    "64": "not     eax",
                    "65": "and     eax, ebp",
                    "66": "jz      INSTR1232",
                    "67": "test    ebp, ebp",
                    "68": "jnz     INSTR1236",
                    "69": "mov     [rsp+0D8h+var_78], r13",
                    "70": "mov     rax, [rsp+0D8h+var_C0]",
                    "71": "lea     rbx, [rax+0Ch]",
                    "72": "test    r12, r12",
                    "73": "jnz     INSTR1238",
                    "74": "mov     [rsp+0D8h+var_D8], r14d",
                    "75": "mov     r13d, [rbx]",
                    "76": "mov     rdi, rbx",
                    "77": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "78": "mov     ebx, [rax]",
                    "79": "mov     eax, [rdx]",
                    "80": "mov     dword ptr [rsp+0D8h+var_A8], eax",
                    "81": "mov     ebp, r13d",
                    "82": "and     ebp, 8",
                    "83": "mov     r14d, ebx",
                    "84": "not     r14d",
                    "85": "test    bl, 8",
                    "86": "jz      short INSTR90",
                    "87": "mov     eax, r14d",
                    "88": "and     eax, ebp",
                    "89": "jz      INSTR1241",
                    "90": "test    ebp, ebp",
                    "91": "jnz     INSTR1245",
                    "92": "mov     [rsp+0D8h+var_D0], r12",
                    "93": "mov     [rsp+0D8h+var_88], r15",
                    "94": "and     r13d, 4",
                    "95": "shr     bl, 2",
                    "96": "test    r14d, r13d",
                    "97": "setz    r12b",
                    "98": "and     r12b, bl",
                    "99": "cmp     [rsp+0D8h+var_B0], 0",
                    "100": "jnz     INSTR1250",
                    "101": "mov     rdi, [rsp+0D8h+var_C8]",
                    "102": "mov     r14d, [rdi]",
                    "103": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "104": "mov     ebp, [rax]",
                    "105": "mov     eax, r14d",
                    "106": "and     eax, 10007h",
                    "107": "test    ebp, 10007h",
                    "108": "setnz   bl",
                    "109": "mov     r15d, ebp",
                    "110": "not     r15d",
                    "111": "test    r15d, eax",
                    "112": "setz    cl",
                    "113": "and     cl, bl",
                    "114": "test    eax, eax",
                    "115": "setz    sil",
                    "116": "setnz   al",
                    "117": "test    r13d, r13d",
                    "118": "setz    bl",
                    "119": "mov     edi, [rdx]",
                    "120": "cmovnz  r13d, edi",
                    "121": "setnz   dl",
                    "122": "and     dl, cl",
                    "123": "or      al, cl",
                    "124": "movzx   ecx, dl",
                    "125": "movzx   eax, al",
                    "126": "test    r12b, r12b",
                    "127": "cmovz   eax, ecx",
                    "128": "cmovnz  r13d, dword ptr [rsp+0D8h+var_A8]",
                    "129": "or      bl, sil",
                    "130": "cmp     al, 1",
                    "131": "jz      INSTR1253",
                    "132": "test    bl, bl",
                    "133": "mov     r12, [rsp+0D8h+var_D0]",
                    "134": "jz      INSTR1245",
                    "135": "and     r14d, 8",
                    "136": "test    bpl, 8",
                    "137": "mov     r13, [rsp+0D8h+var_78]",
                    "138": "jz      short INSTR141",
                    "139": "and     r15d, r14d",
                    "140": "jz      INSTR1258",
                    "141": "test    r14d, r14d",
                    "142": "jnz     INSTR1261",
                    "143": "mov     rax, [rsp+0D8h+var_98]",
                    "144": "mov     [r13+0], rax",
                    "145": "mov     eax, [rsp+0D8h+var_B4]",
                    "146": "mov     [r13+0C88h], eax",
                    "147": "mov     rax, [rsp+0D8h+var_60]",
                    "148": "mov     [r13+8], rax",
                    "149": "mov     eax, [rsp+0D8h+var_7C]",
                    "150": "mov     [r13+0C90h], eax",
                    "151": "mov     rax, [rsp+0D8h+var_B0]",
                    "152": "mov     [r13+10h], rax",
                    "153": "mov     eax, [rsp+0D8h+var_D4]",
                    "154": "mov     [r13+0C98h], eax",
                    "155": "mov     dword ptr [r13+320h], 0",
                    "156": "mov     rdi, [rsp+0D8h+var_90]",
                    "157": "mov     rsi, [rsp+0D8h+var_58]",
                    "158": "mov     rdx, [rsp+0D8h+var_C8]",
                    "159": "call    setattr_prepare; PIC mode",
                    "160": "mov     r15d, eax",
                    "161": "mov     ebx, [r13+320h]",
                    "162": "mov     r12d, [r13+0FA8h]",
                    "163": "test    ebx, ebx",
                    "164": "jz      short INSTR169",
                    "165": "mov     eax, ebx",
                    "166": "not     eax",
                    "167": "and     eax, r15d",
                    "168": "jz      INSTR1341",
                    "169": "test    r15d, r15d",
                    "170": "jnz     INSTR1330",
                    "171": "cmp     [rsp+0D8h+var_60], 0",
                    "172": "jnz     INSTR1349",
                    "173": "mov     rdi, [rsp+0D8h+var_A0]",
                    "174": "mov     rbx, [rdi]",
                    "175": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "176": "add     rbx, 0Ch",
                    "177": "cmp     qword ptr [rax], 0",
                    "178": "jnz     INSTR1352",
                    "179": "mov     ebp, 14000h",
                    "180": "and     ebp, [rbx]",
                    "181": "mov     rdi, rbx",
                    "182": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "183": "mov     eax, [rax]",
                    "184": "test    eax, 14000h",
                    "185": "jz      short INSTR189",
                    "186": "not     eax",
                    "187": "and     eax, ebp",
                    "188": "jz      INSTR1355",
                    "189": "mov     r15d, 0FFFFFFA1h",
                    "190": "mov     ebx, 0",
                    "191": "mov     r12d, 0",
                    "192": "test    ebp, ebp",
                    "193": "jnz     INSTR1330",
                    "194": "cmp     [rsp+0D8h+var_B0], 0",
                    "195": "jnz     INSTR1375",
                    "196": "mov     rdi, [rsp+0D8h+var_C8]",
                    "197": "mov     r15d, [rdi]",
                    "198": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "199": "mov     r12d, [rax]",
                    "200": "mov     r14d, [rdx]",
                    "201": "mov     ebp, r15d",
                    "202": "and     ebp, 8",
                    "203": "mov     ebx, r12d",
                    "204": "not     ebx",
                    "205": "test    r12b, 8",
                    "206": "jz      short INSTR210",
                    "207": "mov     eax, ebx",
                    "208": "and     eax, ebp",
                    "209": "jz      INSTR1378",
                    "210": "test    ebp, ebp",
                    "211": "jnz     INSTR405",
                    "212": "mov     ebp, r15d",
                    "213": "and     ebp, 2",
                    "214": "test    r12b, 2",
                    "215": "jz      short INSTR218",
                    "216": "and     ebx, ebp",
                    "217": "jz      INSTR1394",
                    "218": "test    ebp, ebp",
                    "219": "jz      INSTR312",
                    "220": "cmp     [rsp+0D8h+var_D0], 0",
                    "221": "mov     rbx, [rsp+0D8h+var_C0]",
                    "222": "jnz     INSTR1440",
                    "223": "mov     ebp, 450h",
                    "224": "mov     rdi, [rsp+0D8h+var_88]",
                    "225": "add     rbp, [rdi]",
                    "226": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "227": "cmp     qword ptr [rax], 0",
                    "228": "jnz     INSTR1443",
                    "229": "mov     r14, [rbp+0]",
                    "230": "mov     rdi, rbp",
                    "231": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "232": "lea     rbp, [rbx+4]",
                    "233": "mov     r15, [rax]",
                    "234": "mov     r12d, [rdx]",
                    "235": "cmp     [rsp+0D8h+var_D0], 0",
                    "236": "jnz     INSTR1446",
                    "237": "mov     ebx, [rbp+0]",
                    "238": "mov     rdi, rbp",
                    "239": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "240": "mov     eax, [rax]",
                    "241": "mov     ecx, [rdx]",
                    "242": "mov     rdx, [rsp+0D8h+var_98]",
                    "243": "mov     [r13+0], rdx",
                    "244": "mov     edx, [rsp+0D8h+var_B4]",
                    "245": "mov     [r13+0C88h], edx",
                    "246": "mov     [r13+8], r15",
                    "247": "mov     [r13+0C90h], r12d",
                    "248": "mov     [r13+10h], eax",
                    "249": "mov     [r13+0C98h], ecx",
                    "250": "mov     dword ptr [r13+320h], 0",
                    "251": "mov     rdi, [rsp+0D8h+var_90]",
                    "252": "mov     rsi, r14",
                    "253": "mov     edx, ebx",
                    "254": "call    make_vfsuid; PIC mode",
                    "255": "mov     r14d, eax",
                    "256": "mov     rax, [rsp+0D8h+var_C8]",
                    "257": "lea     rbp, [rax+8]",
                    "258": "mov     r15d, [r13+320h]",
                    "259": "mov     r12d, [r13+0FA8h]",
                    "260": "cmp     [rsp+0D8h+var_B0], 0",
                    "261": "jnz     INSTR1449",
                    "262": "mov     ebx, [rbp+0]",
                    "263": "mov     rdi, rbp",
                    "264": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "265": "mov     esi, [rax]",
                    "266": "mov     ebp, [rdx]",
                    "267": "mov     edx, ebx",
                    "268": "not     edx",
                    "269": "test    esi, esi",
                    "270": "setnz   r8b",
                    "271": "mov     edi, esi",
                    "272": "not     edi",
                    "273": "test    edi, edx",
                    "274": "setz    r9b",
                    "275": "mov     edi, ebx",
                    "276": "xor     edi, r14d",
                    "277": "or      esi, r15d",
                    "278": "setnz   cl",
                    "279": "not     esi",
                    "280": "test    esi, edi",
                    "281": "setz    dl",
                    "282": "and     dl, cl",
                    "283": "test    r15d, r15d",
                    "284": "cmovz   r12d, ebp",
                    "285": "cmp     ebx, r14d",
                    "286": "setnz   sil",
                    "287": "setz    cl",
                    "288": "xor     edi, edi",
                    "289": "cmp     ebx, 0FFFFFFFFh",
                    "290": "setz    bl",
                    "291": "cmovnz  edi, r12d",
                    "292": "setnz   al",
                    "293": "and     al, dl",
                    "294": "or      cl, dl",
                    "295": "movzx   eax, al",
                    "296": "movzx   ecx, cl",
                    "297": "test    r8b, r9b",
                    "298": "cmovz   ecx, eax",
                    "299": "cmovnz  edi, ebp",
                    "300": "or      bl, sil",
                    "301": "cmp     cl, 1",
                    "302": "jz      INSTR1452",
                    "303": "test    bl, bl",
                    "304": "jnz     INSTR405",
                    "305": "cmp     [rsp+0D8h+var_B0], 0",
                    "306": "jnz     INSTR1538",
                    "307": "mov     rdi, [rsp+0D8h+var_C8]",
                    "308": "mov     r15d, [rdi]",
                    "309": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "310": "mov     r12d, [rax]",
                    "311": "mov     r14d, [rdx]",
                    "312": "and     r15d, 4",
                    "313": "test    r12b, 4",
                    "314": "jz      short INSTR318",
                    "315": "not     r12d",
                    "316": "and     r12d, r15d",
                    "317": "jz      INSTR1404",
                    "318": "test    r15d, r15d",
                    "319": "jz      INSTR423",
                    "320": "cmp     [rsp+0D8h+var_D0], 0",
                    "321": "jnz     INSTR1487",
                    "322": "mov     ebp, 450h",
                    "323": "mov     rdi, [rsp+0D8h+var_88]",
                    "324": "add     rbp, [rdi]",
                    "325": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "326": "cmp     qword ptr [rax], 0",
                    "327": "mov     rbx, [rsp+0D8h+var_C0]",
                    "328": "jnz     INSTR1490",
                    "329": "mov     r14, [rbp+0]",
                    "330": "mov     rdi, rbp",
                    "331": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "332": "lea     rbp, [rbx+8]",
                    "333": "mov     r15, [rax]",
                    "334": "mov     r12d, [rdx]",
                    "335": "cmp     [rsp+0D8h+var_D0], 0",
                    "336": "jnz     INSTR1493",
                    "337": "mov     ebx, [rbp+0]",
                    "338": "mov     rdi, rbp",
                    "339": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "340": "mov     eax, [rax]",
                    "341": "mov     ecx, [rdx]",
                    "342": "mov     rdx, [rsp+0D8h+var_98]",
                    "343": "mov     [r13+0], rdx",
                    "344": "mov     edx, [rsp+0D8h+var_B4]",
                    "345": "mov     [r13+0C88h], edx",
                    "346": "mov     [r13+8], r15",
                    "347": "mov     [r13+0C90h], r12d",
                    "348": "mov     [r13+10h], eax",
                    "349": "mov     [r13+0C98h], ecx",
                    "350": "mov     dword ptr [r13+320h], 0",
                    "351": "mov     rdi, [rsp+0D8h+var_90]",
                    "352": "mov     rsi, r14",
                    "353": "mov     edx, ebx",
                    "354": "call    make_vfsgid; PIC mode",
                    "355": "mov     r14d, eax",
                    "356": "mov     rax, [rsp+0D8h+var_C8]",
                    "357": "lea     rbp, [rax+0Ch]",
                    "358": "mov     r15d, [r13+320h]",
                    "359": "mov     r12d, [r13+0FA8h]",
                    "360": "cmp     [rsp+0D8h+var_B0], 0",
                    "361": "jnz     INSTR1496",
                    "362": "mov     ebx, [rbp+0]",
                    "363": "mov     rdi, rbp",
                    "364": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "365": "mov     esi, [rax]",
                    "366": "mov     ebp, [rdx]",
                    "367": "mov     edx, ebx",
                    "368": "not     edx",
                    "369": "test    esi, esi",
                    "370": "setnz   r8b",
                    "371": "mov     edi, esi",
                    "372": "not     edi",
                    "373": "test    edi, edx",
                    "374": "setz    r9b",
                    "375": "mov     edi, ebx",
                    "376": "xor     edi, r14d",
                    "377": "or      esi, r15d",
                    "378": "setnz   cl",
                    "379": "not     esi",
                    "380": "test    esi, edi",
                    "381": "setz    dl",
                    "382": "and     dl, cl",
                    "383": "test    r15d, r15d",
                    "384": "cmovz   r12d, ebp",
                    "385": "cmp     ebx, r14d",
                    "386": "setnz   sil",
                    "387": "setz    cl",
                    "388": "xor     edi, edi",
                    "389": "cmp     ebx, 0FFFFFFFFh",
                    "390": "setz    bl",
                    "391": "cmovnz  edi, r12d",
                    "392": "setnz   al",
                    "393": "and     al, dl",
                    "394": "or      cl, dl",
                    "395": "movzx   eax, al",
                    "396": "movzx   ecx, cl",
                    "397": "test    r8b, r9b",
                    "398": "cmovz   ecx, eax",
                    "399": "cmovnz  edi, ebp",
                    "400": "or      bl, sil",
                    "401": "cmp     cl, 1",
                    "402": "jz      INSTR1499",
                    "403": "test    bl, bl",
                    "404": "jz      short INSTR423",
                    "405": "mov     rax, [rsp+0D8h+var_D0]",
                    "406": "mov     [r13+0], rax",
                    "407": "mov     eax, [rsp+0D8h+var_D8]",
                    "408": "mov     [r13+0C88h], eax",
                    "409": "mov     dword ptr [r13+320h], 0",
                    "410": "mov     rdi, [rsp+0D8h+var_C0]",
                    "411": "call    f2fs_dquot_initialize; PIC mode",
                    "412": "mov     r15d, eax",
                    "413": "mov     ebx, [r13+320h]",
                    "414": "mov     r12d, [r13+0FA8h]",
                    "415": "test    ebx, ebx",
                    "416": "jz      short INSTR421",
                    "417": "mov     eax, ebx",
                    "418": "not     eax",
                    "419": "and     eax, r15d",
                    "420": "jz      INSTR1383",
                    "421": "test    r15d, r15d",
                    "422": "jnz     INSTR1330",
                    "423": "cmp     [rsp+0D8h+var_B0], 0",
                    "424": "jnz     INSTR1388",
                    "425": "mov     rdi, [rsp+0D8h+var_C8]",
                    "426": "mov     ebx, [rdi]",
                    "427": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "428": "mov     eax, [rax]",
                    "429": "and     ebx, 2",
                    "430": "test    al, 2",
                    "431": "jz      short INSTR435",
                    "432": "not     eax",
                    "433": "and     eax, ebx",
                    "434": "jz      INSTR1391",
                    "435": "test    ebx, ebx",
                    "436": "mov     r15, [rsp+0D8h+var_88]",
                    "437": "mov     r14d, [rsp+0D8h+var_D8]",
                    "438": "mov     r12, [rsp+0D8h+var_D0]",
                    "439": "jz      INSTR528",
                    "440": "test    r12, r12",
                    "441": "jnz     INSTR1426",
                    "442": "mov     ebp, 450h",
                    "443": "add     rbp, [r15]",
                    "444": "mov     rdi, r15",
                    "445": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "446": "cmp     qword ptr [rax], 0",
                    "447": "jnz     INSTR1429",
                    "448": "mov     r14, [rbp+0]",
                    "449": "mov     rdi, rbp",
                    "450": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "451": "mov     rcx, [rsp+0D8h+var_C0]",
                    "452": "lea     rbp, [rcx+4]",
                    "453": "mov     r15, [rax]",
                    "454": "mov     r12d, [rdx]",
                    "455": "cmp     [rsp+0D8h+var_D0], 0",
                    "456": "jnz     INSTR1432",
                    "457": "mov     ebx, [rbp+0]",
                    "458": "mov     rdi, rbp",
                    "459": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "460": "mov     eax, [rax]",
                    "461": "mov     ecx, [rdx]",
                    "462": "mov     rdx, [rsp+0D8h+var_98]",
                    "463": "mov     [r13+0], rdx",
                    "464": "mov     edx, [rsp+0D8h+var_B4]",
                    "465": "mov     [r13+0C88h], edx",
                    "466": "mov     [r13+8], r15",
                    "467": "mov     [r13+0C90h], r12d",
                    "468": "mov     [r13+10h], eax",
                    "469": "mov     [r13+0C98h], ecx",
                    "470": "mov     dword ptr [r13+320h], 0",
                    "471": "mov     rdi, [rsp+0D8h+var_90]",
                    "472": "mov     rsi, r14",
                    "473": "mov     edx, ebx",
                    "474": "call    make_vfsuid; PIC mode",
                    "475": "mov     r14d, eax",
                    "476": "mov     rax, [rsp+0D8h+var_C8]",
                    "477": "lea     rbp, [rax+8]",
                    "478": "mov     r15d, [r13+320h]",
                    "479": "mov     r12d, [r13+0FA8h]",
                    "480": "cmp     [rsp+0D8h+var_B0], 0",
                    "481": "jnz     INSTR1435",
                    "482": "mov     ebx, [rbp+0]",
                    "483": "mov     rdi, rbp",
                    "484": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "485": "mov     esi, [rax]",
                    "486": "mov     ebp, [rdx]",
                    "487": "mov     edx, ebx",
                    "488": "not     edx",
                    "489": "test    esi, esi",
                    "490": "setnz   r8b",
                    "491": "mov     edi, esi",
                    "492": "not     edi",
                    "493": "test    edi, edx",
                    "494": "setz    r9b",
                    "495": "mov     edi, ebx",
                    "496": "xor     edi, r14d",
                    "497": "or      esi, r15d",
                    "498": "setnz   cl",
                    "499": "not     esi",
                    "500": "test    esi, edi",
                    "501": "setz    dl",
                    "502": "and     dl, cl",
                    "503": "test    r15d, r15d",
                    "504": "cmovz   r12d, ebp",
                    "505": "cmp     ebx, r14d",
                    "506": "setnz   sil",
                    "507": "setz    cl",
                    "508": "xor     edi, edi",
                    "509": "cmp     ebx, 0FFFFFFFFh",
                    "510": "setz    bl",
                    "511": "cmovnz  edi, r12d",
                    "512": "setnz   al",
                    "513": "and     al, dl",
                    "514": "or      cl, dl",
                    "515": "movzx   eax, al",
                    "516": "movzx   ecx, cl",
                    "517": "test    r8b, r9b",
                    "518": "cmovz   ecx, eax",
                    "519": "cmovnz  edi, ebp",
                    "520": "or      bl, sil",
                    "521": "cmp     cl, 1",
                    "522": "jz      INSTR1438",
                    "523": "test    bl, bl",
                    "524": "mov     r15, [rsp+0D8h+var_88]",
                    "525": "mov     r14d, [rsp+0D8h+var_D8]",
                    "526": "mov     r12, [rsp+0D8h+var_D0]",
                    "527": "jnz     short INSTR548",
                    "528": "mov     rax, [rsp+0D8h+var_98]",
                    "529": "mov     [r13+0], rax",
                    "530": "mov     eax, [rsp+0D8h+var_B4]",
                    "531": "mov     [r13+0C88h], eax",
                    "532": "mov     rax, [rsp+0D8h+var_B0]",
                    "533": "mov     [r13+8], rax",
                    "534": "mov     eax, [rsp+0D8h+var_D4]",
                    "535": "mov     [r13+0C90h], eax",
                    "536": "mov     [r13+10h], r12",
                    "537": "mov     [r13+0C98h], r14d",
                    "538": "mov     byte ptr [r13+320h], 0",
                    "539": "mov     rdi, [rsp+0D8h+var_90]",
                    "540": "mov     rsi, [rsp+0D8h+var_C8]",
                    "541": "mov     rdx, [rsp+0D8h+var_C0]",
                    "542": "call    i_gid_needs_update",
                    "543": "mov     ebx, eax",
                    "544": "cmp     byte ptr [r13+320h], 1",
                    "545": "jz      INSTR1399",
                    "546": "test    bl, bl",
                    "547": "jz      INSTR794",
                    "548": "test    r12, r12",
                    "549": "jnz     INSTR1409",
                    "550": "mov     ebx, 368h",
                    "551": "add     rbx, [r15]",
                    "552": "mov     rdi, r15",
                    "553": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "554": "cmp     qword ptr [rax], 0",
                    "555": "jnz     INSTR1412",
                    "556": "mov     ebp, 178h",
                    "557": "add     rbp, [rbx]",
                    "558": "mov     rdi, rbx",
                    "559": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "560": "mov     rax, [rax]",
                    "561": "mov     ecx, [rdx]",
                    "562": "mov     [r13+0], rax",
                    "563": "mov     [r13+0C88h], ecx",
                    "564": "mov     rdi, rbp",
                    "565": "call    f2fs_down_read",
                    "566": "mov     rax, [rsp+0D8h+var_98]",
                    "567": "mov     [r13+0], rax",
                    "568": "mov     eax, [rsp+0D8h+var_B4]",
                    "569": "mov     [r13+0C88h], eax",
                    "570": "mov     [r13+8], r12",
                    "571": "mov     [r13+0C90h], r14d",
                    "572": "mov     rbx, [rsp+0D8h+var_B0]",
                    "573": "mov     [r13+10h], rbx",
                    "574": "mov     eax, [rsp+0D8h+var_D4]",
                    "575": "mov     [r13+0C98h], eax",
                    "576": "mov     dword ptr [r13+320h], 0",
                    "577": "mov     rdi, [rsp+0D8h+var_90]",
                    "578": "mov     rsi, [rsp+0D8h+var_C0]",
                    "579": "mov     rdx, [rsp+0D8h+var_C8]",
                    "580": "call    dquot_transfer; PIC mode",
                    "581": "mov     ebp, eax",
                    "582": "mov     eax, [r13+320h]",
                    "583": "mov     r12d, [r13+0FA8h]",
                    "584": "mov     dword ptr [rsp+0D8h+var_A8], eax",
                    "585": "test    eax, eax",
                    "586": "jz      short INSTR591",
                    "587": "mov     eax, dword ptr [rsp+0D8h+var_A8]",
                    "588": "not     eax",
                    "589": "and     eax, ebp",
                    "590": "jz      INSTR1415",
                    "591": "mov     dword ptr [rsp+0D8h+var_A0], ebp",
                    "592": "test    ebp, ebp",
                    "593": "jz      INSTR636",
                    "594": "cmp     [rsp+0D8h+var_D0], 0",
                    "595": "jnz     INSTR1456",
                    "596": "mov     ebp, 368h",
                    "597": "add     rbp, [r15]",
                    "598": "mov     rdi, r15",
                    "599": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "600": "cmp     qword ptr [rax], 0",
                    "601": "jnz     INSTR1459",
                    "602": "mov     rbx, [rbp+0]",
                    "603": "mov     rdi, rbp",
                    "604": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "605": "mov     rbp, [rax]",
                    "606": "mov     r14d, [rdx]",
                    "607": "add     rbx, 61h ; 'a'",
                    "608": "mov     esi, 1",
                    "609": "mov     rdi, rbx",
                    "610": "call    __msan_instrument_asm_store; PIC mode",
                    "611": "test    rbp, rbp",
                    "612": "jnz     INSTR1462",
                    "613": "test    rbp, rbp",
                    "614": "jnz     INSTR1466",
                    "615": "lock or byte ptr [rbx], 10h",
                    "616": "cmp     [rsp+0D8h+var_D0], 0",
                    "617": "jnz     INSTR1469",
                    "618": "mov     r14d, 368h",
                    "619": "add     r14, [r15]",
                    "620": "mov     rdi, r15",
                    "621": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "622": "cmp     qword ptr [rax], 0",
                    "623": "mov     ebx, dword ptr [rsp+0D8h+var_A8]",
                    "624": "jnz     INSTR1472",
                    "625": "mov     ebp, 178h",
                    "626": "add     rbp, [r14]",
                    "627": "mov     rdi, r14",
                    "628": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "629": "mov     rax, [rax]",
                    "630": "mov     ecx, [rdx]",
                    "631": "mov     [r13+0], rax",
                    "632": "mov     [r13+0C88h], ecx",
                    "633": "mov     rdi, rbp",
                    "634": "call    up_read; PIC mode",
                    "635": "jmp     INSTR1215",
                    "636": "test    rbx, rbx",
                    "637": "jnz     INSTR1519",
                    "638": "mov     rdi, [rsp+0D8h+var_C8]",
                    "639": "mov     r15d, [rdi]",
                    "640": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "641": "mov     ebx, [rax]",
                    "642": "mov     r14d, [rdx]",
                    "643": "mov     ebp, r15d",
                    "644": "and     ebp, 2",
                    "645": "test    bl, 2",
                    "646": "mov     r12, [rsp+0D8h+var_D0]",
                    "647": "jz      short INSTR652",
                    "648": "mov     eax, ebx",
                    "649": "not     eax",
                    "650": "and     eax, ebp",
                    "651": "jz      INSTR1522",
                    "652": "test    ebp, ebp",
                    "653": "jz      INSTR710",
                    "654": "test    r12, r12",
                    "655": "jnz     INSTR1577",
                    "656": "mov     ebp, 450h",
                    "657": "mov     rdi, [rsp+0D8h+var_88]",
                    "658": "add     rbp, [rdi]",
                    "659": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "660": "cmp     qword ptr [rax], 0",
                    "661": "mov     rbx, [rsp+0D8h+var_C8]",
                    "662": "jnz     INSTR1580",
                    "663": "mov     r14, [rbp+0]",
                    "664": "mov     rdi, rbp",
                    "665": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "666": "lea     rbp, [rbx+8]",
                    "667": "mov     r15, [rax]",
                    "668": "mov     r12d, [rdx]",
                    "669": "cmp     [rsp+0D8h+var_B0], 0",
                    "670": "jnz     INSTR1583",
                    "671": "mov     ebx, [rbp+0]",
                    "672": "mov     rdi, rbp",
                    "673": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "674": "mov     eax, [rax]",
                    "675": "mov     ecx, [rdx]",
                    "676": "mov     rdx, [rsp+0D8h+var_98]",
                    "677": "mov     [r13+0], rdx",
                    "678": "mov     edx, [rsp+0D8h+var_B4]",
                    "679": "mov     [r13+0C88h], edx",
                    "680": "mov     [r13+8], r15",
                    "681": "mov     [r13+0C90h], r12d",
                    "682": "mov     [r13+10h], eax",
                    "683": "mov     [r13+0C98h], ecx",
                    "684": "mov     dword ptr [r13+320h], 0",
                    "685": "mov     rdi, [rsp+0D8h+var_90]",
                    "686": "mov     rsi, r14",
                    "687": "mov     edx, ebx",
                    "688": "call    from_vfsuid; PIC mode",
                    "689": "mov     r15d, eax",
                    "690": "mov     rax, [rsp+0D8h+var_C0]",
                    "691": "lea     rbp, [rax+4]",
                    "692": "mov     ebx, [r13+320h]",
                    "693": "mov     r14d, [r13+0FA8h]",
                    "694": "cmp     [rsp+0D8h+var_D0], 0",
                    "695": "jnz     INSTR1586",
                    "696": "mov     rdi, rbp",
                    "697": "call    __msan_metadata_ptr_for_store_4; PIC mode",
                    "698": "mov     [rax], ebx",
                    "699": "test    ebx, ebx",
                    "700": "jnz     INSTR1589",
                    "701": "mov     [rbp+0], r15d",
                    "702": "cmp     [rsp+0D8h+var_B0], 0",
                    "703": "jnz     INSTR1594",
                    "704": "mov     rdi, [rsp+0D8h+var_C8]",
                    "705": "mov     r15d, [rdi]",
                    "706": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "707": "mov     ebx, [rax]",
                    "708": "mov     r14d, [rdx]",
                    "709": "mov     r12, [rsp+0D8h+var_D0]",
                    "710": "and     r15d, 4",
                    "711": "test    bl, 4",
                    "712": "jz      short INSTR716",
                    "713": "not     ebx",
                    "714": "and     ebx, r15d",
                    "715": "jz      INSTR1527",
                    "716": "test    r15d, r15d",
                    "717": "jz      INSTR768",
                    "718": "test    r12, r12",
                    "719": "mov     rbx, [rsp+0D8h+var_88]",
                    "720": "jnz     INSTR1597",
                    "721": "mov     ebp, 450h",
                    "722": "add     rbp, [rbx]",
                    "723": "mov     rdi, rbx",
                    "724": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "725": "cmp     qword ptr [rax], 0",
                    "726": "mov     rbx, [rsp+0D8h+var_C8]",
                    "727": "jnz     INSTR1600",
                    "728": "mov     r14, [rbp+0]",
                    "729": "mov     rdi, rbp",
                    "730": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "731": "lea     rbp, [rbx+0Ch]",
                    "732": "mov     r15, [rax]",
                    "733": "mov     r12d, [rdx]",
                    "734": "cmp     [rsp+0D8h+var_B0], 0",
                    "735": "jnz     INSTR1603",
                    "736": "mov     ebx, [rbp+0]",
                    "737": "mov     rdi, rbp",
                    "738": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "739": "mov     eax, [rax]",
                    "740": "mov     ecx, [rdx]",
                    "741": "mov     rdx, [rsp+0D8h+var_98]",
                    "742": "mov     [r13+0], rdx",
                    "743": "mov     edx, [rsp+0D8h+var_B4]",
                    "744": "mov     [r13+0C88h], edx",
                    "745": "mov     [r13+8], r15",
                    "746": "mov     [r13+0C90h], r12d",
                    "747": "mov     [r13+10h], eax",
                    "748": "mov     [r13+0C98h], ecx",
                    "749": "mov     dword ptr [r13+320h], 0",
                    "750": "mov     rdi, [rsp+0D8h+var_90]",
                    "751": "mov     rsi, r14",
                    "752": "mov     edx, ebx",
                    "753": "call    from_vfsgid; PIC mode",
                    "754": "mov     r15d, eax",
                    "755": "mov     rax, [rsp+0D8h+var_C0]",
                    "756": "lea     rbp, [rax+8]",
                    "757": "mov     ebx, [r13+320h]",
                    "758": "mov     r14d, [r13+0FA8h]",
                    "759": "cmp     [rsp+0D8h+var_D0], 0",
                    "760": "jnz     INSTR1606",
                    "761": "mov     rdi, rbp",
                    "762": "call    __msan_metadata_ptr_for_store_4; PIC mode",
                    "763": "mov     [rax], ebx",
                    "764": "test    ebx, ebx",
                    "765": "jnz     INSTR1609",
                    "766": "mov     [rbp+0], r15d",
                    "767": "mov     r12, [rsp+0D8h+var_D0]",
                    "768": "mov     [r13+0], r12",
                    "769": "mov     r14d, [rsp+0D8h+var_D8]",
                    "770": "mov     [r13+0C88h], r14d",
                    "771": "mov     byte ptr [r13+8], 0",
                    "772": "mov     rdi, [rsp+0D8h+var_C0]",
                    "773": "mov     esi, 1",
                    "774": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "775": "test    r12, r12",
                    "776": "mov     r15, [rsp+0D8h+var_88]",
                    "777": "jnz     INSTR1532",
                    "778": "mov     ebx, 368h",
                    "779": "add     rbx, [r15]",
                    "780": "mov     rdi, r15",
                    "781": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "782": "cmp     qword ptr [rax], 0",
                    "783": "jnz     INSTR1535",
                    "784": "mov     ebp, 178h",
                    "785": "add     rbp, [rbx]",
                    "786": "mov     rdi, rbx",
                    "787": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "788": "mov     rax, [rax]",
                    "789": "mov     ecx, [rdx]",
                    "790": "mov     [r13+0], rax",
                    "791": "mov     [r13+0C88h], ecx",
                    "792": "mov     rdi, rbp",
                    "793": "call    up_read; PIC mode",
                    "794": "cmp     [rsp+0D8h+var_B0], 0",
                    "795": "jnz     INSTR1418",
                    "796": "mov     rdi, [rsp+0D8h+var_C8]",
                    "797": "mov     ebx, [rdi]",
                    "798": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "799": "mov     eax, [rax]",
                    "800": "and     ebx, 8",
                    "801": "test    al, 8",
                    "802": "jz      short INSTR806",
                    "803": "not     eax",
                    "804": "and     eax, ebx",
                    "805": "jz      INSTR1421",
                    "806": "test    ebx, ebx",
                    "807": "jz      INSTR1047",
                    "808": "mov     rbx, [rsp+0D8h+var_C0]",
                    "809": "lea     rbp, [rbx+50h]",
                    "810": "test    r12, r12",
                    "811": "jnz     INSTR1503",
                    "812": "mov     rax, [rbp+0]",
                    "813": "mov     [rsp+0D8h+var_38], rax",
                    "814": "mov     [rsp+0D8h+var_50], rbp",
                    "815": "mov     rdi, rbp",
                    "816": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "817": "mov     rax, [rax]",
                    "818": "mov     [rsp+0D8h+var_40], rax",
                    "819": "mov     eax, [rdx]",
                    "820": "mov     [rsp+0D8h+var_6C], eax",
                    "821": "mov     rax, [rsp+0D8h+var_C8]",
                    "822": "lea     rbp, [rax+10h]",
                    "823": "cmp     [rsp+0D8h+var_B0], 0",
                    "824": "jnz     INSTR1506",
                    "825": "mov     rax, [rbp+0]",
                    "826": "mov     [rsp+0D8h+var_A8], rax",
                    "827": "mov     [rsp+0D8h+var_48], rbp",
                    "828": "mov     rdi, rbp",
                    "829": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "830": "lea     r15, [rbx+410h]",
                    "831": "mov     rax, [rax]",
                    "832": "mov     [rsp+0D8h+var_68], rax",
                    "833": "mov     eax, [rdx]",
                    "834": "mov     dword ptr [rsp+0D8h+var_A0], eax",
                    "835": "test    r12, r12",
                    "836": "jnz     INSTR1509",
                    "837": "mov     ebp, [rbx+410h]",
                    "838": "mov     rdi, r15",
                    "839": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "840": "mov     eax, [rax]",
                    "841": "sar     eax, 2",
                    "842": "sar     ebp, 2",
                    "843": "lea     r13, [rbx+418h]",
                    "844": "mov     r15d, [rdx]",
                    "845": "movsxd  rbx, eax",
                    "846": "test    r12, r12",
                    "847": "jnz     INSTR1512",
                    "848": "movsxd  r14, ebp",
                    "849": "movsxd  rbp, dword ptr [r13+0]",
                    "850": "mov     rdi, r13",
                    "851": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "852": "movsxd  rax, dword ptr [rax]",
                    "853": "or      rbx, rax",
                    "854": "test    rax, rax",
                    "855": "jz      short INSTR857",
                    "856": "mov     r15d, [rdx]",
                    "857": "add     r14, rbp",
                    "858": "shl     rbx, 2",
                    "859": "shl     r14, 2",
                    "860": "mov     ebp, 0E68h",
                    "861": "sub     rbp, r14",
                    "862": "test    rbx, rbx",
                    "863": "mov     edi, dword ptr [rsp+0D8h+var_A0]",
                    "864": "cmovnz  edi, r15d",
                    "865": "or      [rsp+0D8h+var_68], rbx",
                    "866": "mov     r13, [rsp+0D8h+var_78]",
                    "867": "jnz     INSTR1515",
                    "868": "cmp     [rsp+0D8h+var_A8], rbp",
                    "869": "jbe     short INSTR888",
                    "870": "mov     rax, [rsp+0D8h+var_D0]",
                    "871": "mov     [r13+0], rax",
                    "872": "mov     eax, [rsp+0D8h+var_D8]",
                    "873": "mov     [r13+0C88h], eax",
                    "874": "mov     dword ptr [r13+320h], 0",
                    "875": "mov     rdi, [rsp+0D8h+var_C0]",
                    "876": "call    f2fs_convert_inline_inode; PIC mode",
                    "877": "mov     r15d, eax",
                    "878": "mov     ebx, [r13+320h]",
                    "879": "mov     r12d, [r13+0FA8h]",
                    "880": "test    ebx, ebx",
                    "881": "jz      short INSTR886",
                    "882": "mov     eax, ebx",
                    "883": "not     eax",
                    "884": "and     eax, r15d",
                    "885": "jz      INSTR1572",
                    "886": "test    r15d, r15d",
                    "887": "jnz     INSTR1330",
                    "888": "mov     rbx, [rsp+0D8h+var_C0]",
                    "889": "lea     rdi, [rbx+390h]",
                    "890": "mov     r14, [rsp+0D8h+var_D0]",
                    "891": "mov     [r13+0], r14",
                    "892": "mov     r15d, [rsp+0D8h+var_D8]",
                    "893": "mov     [r13+0C88h], r15d",
                    "894": "mov     [rsp+0D8h+var_A8], rdi",
                    "895": "call    down_write; PIC mode",
                    "896": "lea     rbp, [rbx+30h]",
                    "897": "test    r14, r14",
                    "898": "jnz     INSTR1541",
                    "899": "mov     rbx, [rbp+0]",
                    "900": "mov     [rsp+0D8h+var_A0], rbp",
                    "901": "mov     rdi, rbp",
                    "902": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "903": "mov     rax, [rax]",
                    "904": "mov     ecx, [rdx]",
                    "905": "add     rbx, 18h",
                    "906": "mov     [r13+0], rax",
                    "907": "mov     [r13+0C88h], ecx",
                    "908": "mov     rdi, rbx",
                    "909": "call    down_write; PIC mode",
                    "910": "mov     rbx, [rsp+0D8h+var_B0]",
                    "911": "test    rbx, rbx",
                    "912": "mov     rbp, [rsp+0D8h+var_48]",
                    "913": "jnz     INSTR1544",
                    "914": "mov     r12, [rbp+0]",
                    "915": "mov     rdi, rbp",
                    "916": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "917": "mov     rax, [rax]",
                    "918": "mov     ecx, [rdx]",
                    "919": "mov     [r13+0], r14",
                    "920": "mov     [r13+0C88h], r15d",
                    "921": "mov     [r13+8], rax",
                    "922": "mov     [r13+0C90h], ecx",
                    "923": "mov     rdi, [rsp+0D8h+var_C0]",
                    "924": "mov     rsi, r12",
                    "925": "call    truncate_setsize; PIC mode",
                    "926": "test    rbx, rbx",
                    "927": "jnz     INSTR1547",
                    "928": "mov     rbx, [rbp+0]",
                    "929": "mov     rdi, rbp",
                    "930": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "931": "mov     rsi, [rsp+0D8h+var_40]",
                    "932": "test    rsi, rsi",
                    "933": "jnz     short INSTR936",
                    "934": "mov     ecx, [rdx]",
                    "935": "mov     [rsp+0D8h+var_6C], ecx",
                    "936": "or      rsi, [rax]",
                    "937": "jnz     INSTR1550",
                    "938": "xor     r14d, r14d",
                    "939": "mov     r12d, 0",
                    "940": "mov     r15d, 0",
                    "941": "cmp     rbx, [rsp+0D8h+var_38]",
                    "942": "jg      short INSTR953",
                    "943": "mov     rax, [rsp+0D8h+var_D0]",
                    "944": "mov     [r13+0], rax",
                    "945": "mov     eax, [rsp+0D8h+var_D8]",
                    "946": "mov     [r13+0C88h], eax",
                    "947": "mov     dword ptr [r13+320h], 0",
                    "948": "mov     rdi, [rsp+0D8h+var_C0]",
                    "949": "call    f2fs_truncate; PIC mode",
                    "950": "mov     r15d, eax",
                    "951": "mov     r14d, [r13+320h]",
                    "952": "mov     r12d, [r13+0FA8h]",
                    "953": "mov     rbp, [rsp+0D8h+var_D0]",
                    "954": "test    rbp, rbp",
                    "955": "jnz     INSTR1553",
                    "956": "mov     rdi, [rsp+0D8h+var_A0]",
                    "957": "mov     rbx, [rdi]",
                    "958": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "959": "mov     rax, [rax]",
                    "960": "mov     ecx, [rdx]",
                    "961": "add     rbx, 18h",
                    "962": "mov     [r13+0], rax",
                    "963": "mov     [r13+0C88h], ecx",
                    "964": "mov     rdi, rbx",
                    "965": "call    up_write; PIC mode",
                    "966": "mov     [r13+0], rbp",
                    "967": "mov     eax, [rsp+0D8h+var_D8]",
                    "968": "mov     [r13+0C88h], eax",
                    "969": "mov     rdi, [rsp+0D8h+var_A8]",
                    "970": "call    f2fs_up_write",
                    "971": "mov     ebx, r14d",
                    "972": "test    r14d, r14d",
                    "973": "jz      short INSTR978",
                    "974": "mov     eax, ebx",
                    "975": "not     eax",
                    "976": "and     eax, r15d",
                    "977": "jz      INSTR1556",
                    "978": "test    r15d, r15d",
                    "979": "jnz     INSTR1330",
                    "980": "mov     rbp, [rsp+0D8h+var_C0]",
                    "981": "lea     rdi, [rbp+2E8h]",
                    "982": "mov     r15, [rsp+0D8h+var_D0]",
                    "983": "mov     [r13+0], r15",
                    "984": "mov     ebx, [rsp+0D8h+var_D8]",
                    "985": "mov     [r13+0C88h], ebx",
                    "986": "mov     [rsp+0D8h+var_A8], rdi",
                    "987": "call    _raw_spin_lock; PIC mode",
                    "988": "mov     [r13+0], r15",
                    "989": "mov     [r13+0C88h], ebx",
                    "990": "mov     qword ptr [r13+320h], 0",
                    "991": "mov     qword ptr [r13+328h], 0",
                    "992": "mov     rdi, rbp",
                    "993": "call    inode_set_ctime_current; PIC mode",
                    "994": "mov     [rsp+0D8h+var_A0], rax",
                    "995": "mov     rax, r13",
                    "996": "mov     r13, rdx",
                    "997": "lea     r14, [rbp+60h]",
                    "998": "mov     rbx, [rax+320h]",
                    "999": "mov     r12, [rax+328h]",
                    "1000": "mov     eax, [rax+0FA8h]",
                    "1001": "mov     dword ptr [rsp+0D8h+var_68], eax",
                    "1002": "test    r15, r15",
                    "1003": "jnz     INSTR1627",
                    "1004": "mov     rdi, r14",
                    "1005": "call    __msan_metadata_ptr_for_store_8; PIC mode",
                    "1006": "mov     [rax], rbx",
                    "1007": "test    rbx, rbx",
                    "1008": "mov     r15, [rsp+0D8h+var_50]",
                    "1009": "jnz     INSTR1630",
                    "1010": "mov     r14, [rsp+0D8h+var_C0]",
                    "1011": "lea     rbx, [r14+74h]",
                    "1012": "mov     rax, [rsp+0D8h+var_A0]",
                    "1013": "mov     [r14+60h], rax",
                    "1014": "cmp     [rsp+0D8h+var_D0], 0",
                    "1015": "jnz     INSTR1639",
                    "1016": "mov     rdi, rbx",
                    "1017": "call    __msan_metadata_ptr_for_store_4; PIC mode",
                    "1018": "mov     [rax], r12d",
                    "1019": "test    r12d, r12d",
                    "1020": "jnz     INSTR1642",
                    "1021": "mov     [rbx], r13d",
                    "1022": "mov     rbx, [rsp+0D8h+var_D0]",
                    "1023": "test    rbx, rbx",
                    "1024": "jnz     INSTR1647",
                    "1025": "mov     r13, [r14+50h]",
                    "1026": "mov     rdi, r15",
                    "1027": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1028": "mov     rbp, [rax]",
                    "1029": "mov     r12d, [rdx]",
                    "1030": "add     r14, 2E0h",
                    "1031": "test    rbx, rbx",
                    "1032": "jnz     INSTR1650",
                    "1033": "mov     rdi, r14",
                    "1034": "call    __msan_metadata_ptr_for_store_8; PIC mode",
                    "1035": "mov     [rax], rbp",
                    "1036": "test    rbp, rbp",
                    "1037": "jnz     INSTR1653",
                    "1038": "mov     [r14], r13",
                    "1039": "mov     r13, [rsp+0D8h+var_78]",
                    "1040": "mov     r12, [rsp+0D8h+var_D0]",
                    "1041": "mov     [r13+0], r12",
                    "1042": "mov     r14d, [rsp+0D8h+var_D8]",
                    "1043": "mov     [r13+0C88h], r14d",
                    "1044": "mov     rdi, [rsp+0D8h+var_A8]",
                    "1045": "call    _raw_spin_unlock; PIC mode",
                    "1046": "mov     r15, [rsp+0D8h+var_88]",
                    "1047": "mov     rax, [rsp+0D8h+var_98]",
                    "1048": "mov     [r13+0], rax",
                    "1049": "mov     eax, [rsp+0D8h+var_B4]",
                    "1050": "mov     [r13+0C88h], eax",
                    "1051": "mov     [r13+8], r12",
                    "1052": "mov     [r13+0C90h], r14d",
                    "1053": "mov     rbx, [rsp+0D8h+var_B0]",
                    "1054": "mov     [r13+10h], rbx",
                    "1055": "mov     r12d, [rsp+0D8h+var_D4]",
                    "1056": "mov     [r13+0C98h], r12d",
                    "1057": "mov     rdi, [rsp+0D8h+var_90]",
                    "1058": "mov     rsi, [rsp+0D8h+var_C0]",
                    "1059": "mov     rbp, [rsp+0D8h+var_C8]",
                    "1060": "mov     rdx, rbp",
                    "1061": "call    __setattr_copy",
                    "1062": "test    rbx, rbx",
                    "1063": "jnz     INSTR1475",
                    "1064": "mov     ebx, [rbp+0]",
                    "1065": "mov     rdi, rbp",
                    "1066": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "1067": "mov     eax, [rax]",
                    "1068": "and     ebx, 1",
                    "1069": "test    al, 1",
                    "1070": "jz      short INSTR1074",
                    "1071": "not     eax",
                    "1072": "and     eax, ebx",
                    "1073": "jz      INSTR1478",
                    "1074": "mov     dword ptr [rsp+0D8h+var_A8], 0",
                    "1075": "mov     r12d, 0",
                    "1076": "mov     dword ptr [rsp+0D8h+var_A0], 0",
                    "1077": "test    ebx, ebx",
                    "1078": "jz      INSTR1188",
                    "1079": "mov     rbp, [rsp+0D8h+var_C0]",
                    "1080": "lea     rbx, [rbp+268h]",
                    "1081": "mov     r12, [rsp+0D8h+var_D0]",
                    "1082": "test    r12, r12",
                    "1083": "jnz     INSTR1561",
                    "1084": "mov     r14, [rbp+268h]",
                    "1085": "mov     [rsp+0D8h+var_B0], rbx",
                    "1086": "mov     rdi, rbx",
                    "1087": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1088": "mov     rax, [rax]",
                    "1089": "and     r14d, 20h",
                    "1090": "mov     ecx, eax",
                    "1091": "shr     cl, 5",
                    "1092": "not     eax",
                    "1093": "test    eax, r14d",
                    "1094": "setz    sil",
                    "1095": "lea     rbx, [rbp+264h]",
                    "1096": "mov     rax, r12",
                    "1097": "mov     edi, [rsp+0D8h+var_D8]",
                    "1098": "test    cl, sil",
                    "1099": "jz      short INSTR1104",
                    "1100": "mov     rax, rbp",
                    "1101": "xor     rax, rbx",
                    "1102": "or      rax, r12",
                    "1103": "mov     edi, [rdx]",
                    "1104": "test    r14, r14",
                    "1105": "mov     [rsp+0D8h+var_C8], rbx",
                    "1106": "cmovz   rbx, rbp",
                    "1107": "test    rax, rax",
                    "1108": "jnz     INSTR1564",
                    "1109": "movzx   ebp, word ptr [rbx]",
                    "1110": "mov     rdi, rbx",
                    "1111": "call    __msan_metadata_ptr_for_load_2; PIC mode",
                    "1112": "movzx   eax, word ptr [rax]",
                    "1113": "mov     ecx, [rdx]",
                    "1114": "mov     rdx, [rsp+0D8h+var_98]",
                    "1115": "mov     [r13+0], rdx",
                    "1116": "mov     edx, [rsp+0D8h+var_B4]",
                    "1117": "mov     [r13+0C88h], edx",
                    "1118": "mov     rdx, [rsp+0D8h+var_60]",
                    "1119": "mov     [r13+8], rdx",
                    "1120": "mov     edx, [rsp+0D8h+var_7C]",
                    "1121": "mov     [r13+0C90h], edx",
                    "1122": "mov     [r13+10h], ax",
                    "1123": "mov     [r13+0C98h], ecx",
                    "1124": "mov     dword ptr [r13+320h], 0",
                    "1125": "mov     rdi, [rsp+0D8h+var_90]",
                    "1126": "mov     rsi, [rsp+0D8h+var_58]",
                    "1127": "mov     edx, ebp",
                    "1128": "call    posix_acl_chmod; PIC mode",
                    "1129": "mov     dword ptr [rsp+0D8h+var_A0], eax",
                    "1130": "mov     eax, [r13+320h]",
                    "1131": "mov     dword ptr [rsp+0D8h+var_A8], eax",
                    "1132": "mov     r12d, [r13+0FA8h]",
                    "1133": "cmp     [rsp+0D8h+var_D0], 0",
                    "1134": "mov     rbp, [rsp+0D8h+var_B0]",
                    "1135": "jnz     INSTR1566",
                    "1136": "mov     rbx, [rbp+0]",
                    "1137": "mov     rdi, rbp",
                    "1138": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1139": "mov     rax, [rax]",
                    "1140": "and     ebx, 20h",
                    "1141": "test    al, 20h",
                    "1142": "jz      short INSTR1148",
                    "1143": "not     eax",
                    "1144": "mov     ecx, ebx",
                    "1145": "and     ecx, eax",
                    "1146": "test    rcx, rcx",
                    "1147": "jz      INSTR1569",
                    "1148": "test    rbx, rbx",
                    "1149": "mov     rdi, [rsp+0D8h+var_C8]",
                    "1150": "jz      INSTR1187",
                    "1151": "cmp     dword ptr [rsp+0D8h+var_A8], 0",
                    "1152": "jz      short INSTR1157",
                    "1153": "mov     eax, dword ptr [rsp+0D8h+var_A8]",
                    "1154": "not     eax",
                    "1155": "and     eax, dword ptr [rsp+0D8h+var_A0]",
                    "1156": "jz      INSTR1614",
                    "1157": "cmp     dword ptr [rsp+0D8h+var_A0], 0",
                    "1158": "jnz     short INSTR1178",
                    "1159": "mov     r14, [rsp+0D8h+var_D0]",
                    "1160": "test    r14, r14",
                    "1161": "jnz     INSTR1662",
                    "1162": "movzx   r15d, word ptr [rdi]",
                    "1163": "call    __msan_metadata_ptr_for_load_2; PIC mode",
                    "1164": "movzx   ebx, word ptr [rax]",
                    "1165": "mov     eax, [rdx]",
                    "1166": "mov     dword ptr [rsp+0D8h+var_C8], eax",
                    "1167": "test    r14, r14",
                    "1168": "jnz     INSTR1666",
                    "1169": "mov     r14, [rsp+0D8h+var_C0]",
                    "1170": "mov     rdi, r14",
                    "1171": "call    __msan_metadata_ptr_for_store_2; PIC mode",
                    "1172": "mov     [rax], bx",
                    "1173": "test    bx, bx",
                    "1174": "jnz     INSTR1669",
                    "1175": "mov     [r14], r15w",
                    "1176": "mov     r13, [rsp+0D8h+var_78]",
                    "1177": "mov     r15, [rsp+0D8h+var_88]",
                    "1178": "mov     esi, 1",
                    "1179": "mov     rdi, rbp",
                    "1180": "call    __msan_instrument_asm_store; PIC mode",
                    "1181": "mov     rbx, [rsp+0D8h+var_D0]",
                    "1182": "test    rbx, rbx",
                    "1183": "jnz     INSTR1620",
                    "1184": "test    rbx, rbx",
                    "1185": "jnz     INSTR1624",
                    "1186": "lock and byte ptr [rbp+0], 0DFh",
                    "1187": "mov     r14d, [rsp+0D8h+var_D8]",
                    "1188": "mov     rbx, [rsp+0D8h+var_D0]",
                    "1189": "mov     [r13+0], rbx",
                    "1190": "mov     [r13+0C88h], r14d",
                    "1191": "mov     byte ptr [r13+8], 0",
                    "1192": "mov     rdi, [rsp+0D8h+var_C0]",
                    "1193": "mov     esi, 1",
                    "1194": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "1195": "test    rbx, rbx",
                    "1196": "jnz     INSTR1481",
                    "1197": "mov     ebx, 368h",
                    "1198": "add     rbx, [r15]",
                    "1199": "mov     rdi, r15",
                    "1200": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1201": "cmp     qword ptr [rax], 0",
                    "1202": "jnz     INSTR1484",
                    "1203": "mov     rbp, [rbx]",
                    "1204": "mov     rdi, rbx",
                    "1205": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1206": "mov     rax, [rax]",
                    "1207": "mov     ecx, [rdx]",
                    "1208": "mov     [r13+0], rax",
                    "1209": "mov     [r13+0C88h], ecx",
                    "1210": "mov     byte ptr [r13+8], 0",
                    "1211": "mov     rdi, rbp",
                    "1212": "mov     esi, 1",
                    "1213": "call    f2fs_balance_fs; PIC mode",
                    "1214": "mov     ebx, dword ptr [rsp+0D8h+var_A8]",
                    "1215": "mov     r15d, dword ptr [rsp+0D8h+var_A0]",
                    "1216": "jmp     INSTR1330",
                    "1217": "mov     edi, [rsp+0D8h+var_7C]",
                    "1218": "call    __msan_warning; PIC mode",
                    "1219": "jmp     INSTR29",
                    "1220": "mov     edi, r14d",
                    "1221": "call    __msan_warning; PIC mode",
                    "1222": "jmp     INSTR39",
                    "1223": "mov     edi, [rdx]",
                    "1224": "call    __msan_warning; PIC mode",
                    "1225": "jmp     INSTR45",
                    "1226": "mov     edi, [rdx]",
                    "1227": "call    __msan_warning; PIC mode",
                    "1228": "jmp     INSTR51",
                    "1229": "mov     edi, [rdx]",
                    "1230": "call    __msan_warning; PIC mode",
                    "1231": "jmp     INSTR57",
                    "1232": "mov     edi, [rdx]",
                    "1233": "call    __msan_warning; PIC mode",
                    "1234": "test    ebp, ebp",
                    "1235": "jz      INSTR69",
                    "1236": "mov     r15d, 0FFFFFFFBh",
                    "1237": "jmp     INSTR1328",
                    "1238": "mov     edi, r14d",
                    "1239": "call    __msan_warning; PIC mode",
                    "1240": "jmp     INSTR74",
                    "1241": "mov     edi, dword ptr [rsp+0D8h+var_A8]",
                    "1242": "call    __msan_warning; PIC mode",
                    "1243": "test    ebp, ebp",
                    "1244": "jz      INSTR92",
                    "1245": "xor     r12d, r12d",
                    "1246": "mov     r13, [rsp+0D8h+var_78]",
                    "1247": "xor     ebx, ebx",
                    "1248": "mov     r15d, 0FFFFFFFFh",
                    "1249": "jmp     INSTR1330",
                    "1250": "mov     edi, [rsp+0D8h+var_D4]",
                    "1251": "call    __msan_warning; PIC mode",
                    "1252": "jmp     INSTR101",
                    "1253": "mov     r12d, edi",
                    "1254": "mov     edi, r13d",
                    "1255": "call    __msan_warning; PIC mode",
                    "1256": "mov     edi, r12d",
                    "1257": "jmp     INSTR132",
                    "1258": "call    __msan_warning; PIC mode",
                    "1259": "test    r14d, r14d",
                    "1260": "jz      INSTR143",
                    "1261": "mov     [r13+0], r12",
                    "1262": "mov     r14d, [rsp+0D8h+var_D8]",
                    "1263": "mov     [r13+0C88h], r14d",
                    "1264": "mov     byte ptr [r13+320h], 0",
                    "1265": "mov     rbp, [rsp+0D8h+var_C0]",
                    "1266": "mov     rdi, rbp",
                    "1267": "call    f2fs_is_compress_backend_ready; PIC mode",
                    "1268": "mov     ebx, eax",
                    "1269": "cmp     byte ptr [r13+320h], 1",
                    "1270": "jz      INSTR1346",
                    "1271": "mov     r15d, 0FFFFFFA1h",
                    "1272": "test    bl, bl",
                    "1273": "jz      INSTR1328",
                    "1274": "lea     rbx, [rbp+268h]",
                    "1275": "test    r12, r12",
                    "1276": "jnz     INSTR1358",
                    "1277": "mov     rbp, [rbx]",
                    "1278": "mov     rdi, rbx",
                    "1279": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1280": "mov     rax, [rax]",
                    "1281": "and     ebp, 40000000h",
                    "1282": "test    eax, 40000000h",
                    "1283": "jz      short INSTR1289",
                    "1284": "not     eax",
                    "1285": "mov     ecx, ebp",
                    "1286": "and     ecx, eax",
                    "1287": "test    rcx, rcx",
                    "1288": "jz      INSTR1361",
                    "1289": "test    rbp, rbp",
                    "1290": "jz      INSTR143",
                    "1291": "mov     rax, [rsp+0D8h+var_C8]",
                    "1292": "lea     rbx, [rax+10h]",
                    "1293": "cmp     [rsp+0D8h+var_B0], 0",
                    "1294": "mov     rbp, [rsp+0D8h+var_C0]",
                    "1295": "jnz     INSTR1366",
                    "1296": "mov     r14, [rbx]",
                    "1297": "mov     rdi, rbx",
                    "1298": "call    __msan_metadata_ptr_for_load_8; PIC mode",
                    "1299": "add     rbp, 468h",
                    "1300": "mov     r15, [rax]",
                    "1301": "mov     r12d, [rdx]",
                    "1302": "cmp     [rsp+0D8h+var_D0], 0",
                    "1303": "jnz     INSTR1369",
                    "1304": "mov     ebx, [rbp+0]",
                    "1305": "mov     rdi, rbp",
                    "1306": "call    __msan_metadata_ptr_for_load_4; PIC mode",
                    "1307": "mov     eax, [rax]",
                    "1308": "shl     eax, 0Ch",
                    "1309": "shl     ebx, 0Ch",
                    "1310": "add     rbx, 0FFFFFFFFFFFFFFFFh",
                    "1311": "mov     ecx, r14d",
                    "1312": "and     ecx, eax",
                    "1313": "or      rax, rbx",
                    "1314": "and     rax, r15",
                    "1315": "or      rax, rcx",
                    "1316": "test    r15, r15",
                    "1317": "jnz     short INSTR1319",
                    "1318": "mov     r12d, [rdx]",
                    "1319": "and     rbx, r14",
                    "1320": "test    rax, rax",
                    "1321": "jz      short INSTR1325",
                    "1322": "not     rax",
                    "1323": "and     rax, rbx",
                    "1324": "jz      INSTR1372",
                    "1325": "mov     r15d, 0FFFFFFEAh",
                    "1326": "test    rbx, rbx",
                    "1327": "jz      INSTR143",
                    "1328": "xor     r12d, r12d",
                    "1329": "xor     ebx, ebx",
                    "1330": "mov     [r13+320h], ebx",
                    "1331": "mov     [r13+0FA8h], r12d",
                    "1332": "mov     eax, r15d",
                    "1333": "add     rsp, 0A8h",
                    "1334": "pop     rbx",
                    "1335": "pop     r12",
                    "1336": "pop     r13",
                    "1337": "pop     r14",
                    "1338": "pop     r15",
                    "1339": "pop     rbp",
                    "1340": "retn",
                    "1341": "mov     edi, r12d",
                    "1342": "call    __msan_warning; PIC mode",
                    "1343": "test    r15d, r15d",
                    "1344": "jnz     short INSTR1330",
                    "1345": "jmp     INSTR171",
                    "1346": "mov     edi, [r13+0FA8h]",
                    "1347": "call    __msan_warning; PIC mode",
                    "1348": "jmp     INSTR1271",
                    "1349": "mov     edi, [rsp+0D8h+var_7C]",
                    "1350": "call    __msan_warning; PIC mode",
                    "1351": "jmp     INSTR173",
                    "1352": "mov     edi, [rdx]",
                    "1353": "call    __msan_warning; PIC mode",
                    "1354": "jmp     INSTR179",
                    "1355": "mov     edi, [rdx]",
                    "1356": "call    __msan_warning; PIC mode",
                    "1357": "jmp     INSTR189",
                    "1358": "mov     edi, r14d",
                    "1359": "call    __msan_warning; PIC mode",
                    "1360": "jmp     INSTR1277",
                    "1361": "mov     edi, [rdx]",
                    "1362": "call    __msan_warning; PIC mode",
                    "1363": "test    rbp, rbp",
                    "1364": "jz      INSTR143",
                    "1365": "jmp     INSTR1291",
                    "1366": "mov     edi, [rsp+0D8h+var_D4]",
                    "1367": "call    __msan_warning; PIC mode",
                    "1368": "jmp     INSTR1296",
                    "1369": "mov     edi, [rsp+0D8h+var_D8]",
                    "1370": "call    __msan_warning; PIC mode",
                    "1371": "jmp     INSTR1304",
                    "1372": "mov     edi, r12d",
                    "1373": "call    __msan_warning; PIC mode",
                    "1374": "jmp     INSTR1325",
                    "1375": "mov     edi, [rsp+0D8h+var_D4]",
                    "1376": "call    __msan_warning; PIC mode",
                    "1377": "jmp     INSTR196",
                    "1378": "mov     edi, r14d",
                    "1379": "call    __msan_warning; PIC mode",
                    "1380": "test    ebp, ebp",
                    "1381": "jz      INSTR212",
                    "1382": "jmp     INSTR405",
                    "1383": "mov     edi, r12d",
                    "1384": "call    __msan_warning; PIC mode",
                    "1385": "test    r15d, r15d",
                    "1386": "jnz     INSTR1330",
                    "1387": "jmp     INSTR423",
                    "1388": "mov     edi, [rsp+0D8h+var_D4]",
                    "1389": "call    __msan_warning; PIC mode",
                    "1390": "jmp     INSTR425",
                    "1391": "mov     edi, [rdx]",
                    "1392": "call    __msan_warning; PIC mode",
                    "1393": "jmp     INSTR435",
                    "1394": "mov     edi, r14d",
                    "1395": "call    __msan_warning; PIC mode",
                    "1396": "test    ebp, ebp",
                    "1397": "jnz     INSTR220",
                    "1398": "jmp     INSTR312",
                    "1399": "mov     edi, [r13+0FA8h]",
                    "1400": "call    __msan_warning; PIC mode",
                    "1401": "test    bl, bl",
                    "1402": "jnz     INSTR548",
                    "1403": "jmp     INSTR794",
                    "1404": "mov     edi, r14d",
                    "1405": "call    __msan_warning; PIC mode",
                    "1406": "test    r15d, r15d",
                    "1407": "jnz     INSTR320",
                    "1408": "jmp     INSTR423",
                    "1409": "mov     edi, r14d",
                    "1410": "call    __msan_warning; PIC mode",
                    "1411": "jmp     INSTR550",
                    "1412": "mov     edi, [rdx]",
                    "1413": "call    __msan_warning; PIC mode",
                    "1414": "jmp     INSTR556",
                    "1415": "mov     edi, r12d",
                    "1416": "call    __msan_warning; PIC mode",
                    "1417": "jmp     INSTR591",
                    "1418": "mov     edi, [rsp+0D8h+var_D4]",
                    "1419": "call    __msan_warning; PIC mode",
                    "1420": "jmp     INSTR796",
                    "1421": "mov     edi, [rdx]",
                    "1422": "call    __msan_warning; PIC mode",
                    "1423": "test    ebx, ebx",
                    "1424": "jnz     INSTR808",
                    "1425": "jmp     INSTR1047",
                    "1426": "mov     edi, r14d",
                    "1427": "call    __msan_warning; PIC mode",
                    "1428": "jmp     INSTR442",
                    "1429": "mov     edi, [rdx]",
                    "1430": "call    __msan_warning; PIC mode",
                    "1431": "jmp     INSTR448",
                    "1432": "mov     edi, [rsp+0D8h+var_D8]",
                    "1433": "call    __msan_warning; PIC mode",
                    "1434": "jmp     INSTR457",
                    "1435": "mov     edi, [rsp+0D8h+var_D4]",
                    "1436": "call    __msan_warning; PIC mode",
                    "1437": "jmp     INSTR482",
                    "1438": "call    __msan_warning; PIC mode",
                    "1439": "jmp     INSTR523",
                    "1440": "mov     edi, [rsp+0D8h+var_D8]",
                    "1441": "call    __msan_warning; PIC mode",
                    "1442": "jmp     INSTR223",
                    "1443": "mov     edi, [rdx]",
                    "1444": "call    __msan_warning; PIC mode",
                    "1445": "jmp     INSTR229",
                    "1446": "mov     edi, [rsp+0D8h+var_D8]",
                    "1447": "call    __msan_warning; PIC mode",
                    "1448": "jmp     INSTR237",
                    "1449": "mov     edi, [rsp+0D8h+var_D4]",
                    "1450": "call    __msan_warning; PIC mode",
                    "1451": "jmp     INSTR262",
                    "1452": "call    __msan_warning; PIC mode",
                    "1453": "test    bl, bl",
                    "1454": "jz      INSTR305",
                    "1455": "jmp     INSTR405",
                    "1456": "mov     edi, r14d",
                    "1457": "call    __msan_warning; PIC mode",
                    "1458": "jmp     INSTR596",
                    "1459": "mov     edi, [rdx]",
                    "1460": "call    __msan_warning; PIC mode",
                    "1461": "jmp     INSTR602",
                    "1462": "mov     edi, r14d",
                    "1463": "call    __msan_warning; PIC mode",
                    "1464": "test    rbp, rbp",
                    "1465": "jz      INSTR615",
                    "1466": "mov     edi, r14d",
                    "1467": "call    __msan_warning; PIC mode",
                    "1468": "jmp     INSTR615",
                    "1469": "mov     edi, [rsp+0D8h+var_D8]",
                    "1470": "call    __msan_warning; PIC mode",
                    "1471": "jmp     INSTR618",
                    "1472": "mov     edi, [rdx]",
                    "1473": "call    __msan_warning; PIC mode",
                    "1474": "jmp     INSTR625",
                    "1475": "mov     edi, r12d",
                    "1476": "call    __msan_warning; PIC mode",
                    "1477": "jmp     INSTR1064",
                    "1478": "mov     edi, [rdx]",
                    "1479": "call    __msan_warning; PIC mode",
                    "1480": "jmp     INSTR1074",
                    "1481": "mov     edi, r14d",
                    "1482": "call    __msan_warning; PIC mode",
                    "1483": "jmp     INSTR1197",
                    "1484": "mov     edi, [rdx]",
                    "1485": "call    __msan_warning; PIC mode",
                    "1486": "jmp     INSTR1203",
                    "1487": "mov     edi, [rsp+0D8h+var_D8]",
                    "1488": "call    __msan_warning; PIC mode",
                    "1489": "jmp     INSTR322",
                    "1490": "mov     edi, [rdx]",
                    "1491": "call    __msan_warning; PIC mode",
                    "1492": "jmp     INSTR329",
                    "1493": "mov     edi, [rsp+0D8h+var_D8]",
                    "1494": "call    __msan_warning; PIC mode",
                    "1495": "jmp     INSTR337",
                    "1496": "mov     edi, [rsp+0D8h+var_D4]",
                    "1497": "call    __msan_warning; PIC mode",
                    "1498": "jmp     INSTR362",
                    "1499": "call    __msan_warning; PIC mode",
                    "1500": "test    bl, bl",
                    "1501": "jnz     INSTR405",
                    "1502": "jmp     INSTR423",
                    "1503": "mov     edi, r14d",
                    "1504": "call    __msan_warning; PIC mode",
                    "1505": "jmp     INSTR812",
                    "1506": "mov     edi, [rsp+0D8h+var_D4]",
                    "1507": "call    __msan_warning; PIC mode",
                    "1508": "jmp     INSTR825",
                    "1509": "mov     edi, r14d",
                    "1510": "call    __msan_warning; PIC mode",
                    "1511": "jmp     INSTR837",
                    "1512": "mov     edi, [rsp+0D8h+var_D8]",
                    "1513": "call    __msan_warning; PIC mode",
                    "1514": "jmp     INSTR848",
                    "1515": "call    __msan_warning; PIC mode",
                    "1516": "cmp     [rsp+0D8h+var_A8], rbp",
                    "1517": "ja      INSTR870",
                    "1518": "jmp     INSTR888",
                    "1519": "mov     edi, [rsp+0D8h+var_D4]",
                    "1520": "call    __msan_warning; PIC mode",
                    "1521": "jmp     INSTR638",
                    "1522": "mov     edi, r14d",
                    "1523": "call    __msan_warning; PIC mode",
                    "1524": "test    ebp, ebp",
                    "1525": "jnz     INSTR654",
                    "1526": "jmp     INSTR710",
                    "1527": "mov     edi, r14d",
                    "1528": "call    __msan_warning; PIC mode",
                    "1529": "test    r15d, r15d",
                    "1530": "jnz     INSTR718",
                    "1531": "jmp     INSTR768",
                    "1532": "mov     edi, r14d",
                    "1533": "call    __msan_warning; PIC mode",
                    "1534": "jmp     INSTR778",
                    "1535": "mov     edi, [rdx]",
                    "1536": "call    __msan_warning; PIC mode",
                    "1537": "jmp     INSTR784",
                    "1538": "mov     edi, [rsp+0D8h+var_D4]",
                    "1539": "call    __msan_warning; PIC mode",
                    "1540": "jmp     INSTR307",
                    "1541": "mov     edi, r15d",
                    "1542": "call    __msan_warning; PIC mode",
                    "1543": "jmp     INSTR899",
                    "1544": "mov     edi, [rsp+0D8h+var_D4]",
                    "1545": "call    __msan_warning; PIC mode",
                    "1546": "jmp     INSTR914",
                    "1547": "mov     edi, [rsp+0D8h+var_D4]",
                    "1548": "call    __msan_warning; PIC mode",
                    "1549": "jmp     INSTR928",
                    "1550": "mov     edi, [rsp+0D8h+var_6C]",
                    "1551": "call    __msan_warning; PIC mode",
                    "1552": "jmp     INSTR938",
                    "1553": "mov     edi, [rsp+0D8h+var_D8]",
                    "1554": "call    __msan_warning; PIC mode",
                    "1555": "jmp     INSTR956",
                    "1556": "mov     edi, r12d",
                    "1557": "call    __msan_warning; PIC mode",
                    "1558": "test    r15d, r15d",
                    "1559": "jnz     INSTR1330",
                    "1560": "jmp     INSTR980",
                    "1561": "mov     edi, [rsp+0D8h+var_D8]",
                    "1562": "call    __msan_warning; PIC mode",
                    "1563": "jmp     INSTR1084",
                    "1564": "call    __msan_warning; PIC mode",
                    "1565": "jmp     INSTR1109",
                    "1566": "mov     edi, [rsp+0D8h+var_D8]",
                    "1567": "call    __msan_warning; PIC mode",
                    "1568": "jmp     INSTR1136",
                    "1569": "mov     edi, [rdx]",
                    "1570": "call    __msan_warning; PIC mode",
                    "1571": "jmp     INSTR1148",
                    "1572": "mov     edi, r12d",
                    "1573": "call    __msan_warning; PIC mode",
                    "1574": "test    r15d, r15d",
                    "1575": "jnz     INSTR1330",
                    "1576": "jmp     INSTR888",
                    "1577": "mov     edi, [rsp+0D8h+var_D8]",
                    "1578": "call    __msan_warning; PIC mode",
                    "1579": "jmp     INSTR656",
                    "1580": "mov     edi, [rdx]",
                    "1581": "call    __msan_warning; PIC mode",
                    "1582": "jmp     INSTR663",
                    "1583": "mov     edi, [rsp+0D8h+var_D4]",
                    "1584": "call    __msan_warning; PIC mode",
                    "1585": "jmp     INSTR671",
                    "1586": "mov     edi, [rsp+0D8h+var_D8]",
                    "1587": "call    __msan_warning; PIC mode",
                    "1588": "jmp     INSTR696",
                    "1589": "mov     r12, rdx",
                    "1590": "mov     edi, r14d",
                    "1591": "call    __msan_chain_origin; PIC mode",
                    "1592": "mov     [r12], eax",
                    "1593": "jmp     INSTR701",
                    "1594": "mov     edi, [rsp+0D8h+var_D4]",
                    "1595": "call    __msan_warning; PIC mode",
                    "1596": "jmp     INSTR704",
                    "1597": "mov     edi, [rsp+0D8h+var_D8]",
                    "1598": "call    __msan_warning; PIC mode",
                    "1599": "jmp     INSTR721",
                    "1600": "mov     edi, [rdx]",
                    "1601": "call    __msan_warning; PIC mode",
                    "1602": "jmp     INSTR728",
                    "1603": "mov     edi, [rsp+0D8h+var_D4]",
                    "1604": "call    __msan_warning; PIC mode",
                    "1605": "jmp     INSTR736",
                    "1606": "mov     edi, [rsp+0D8h+var_D8]",
                    "1607": "call    __msan_warning; PIC mode",
                    "1608": "jmp     INSTR761",
                    "1609": "mov     r12, rdx",
                    "1610": "mov     edi, r14d",
                    "1611": "call    __msan_chain_origin; PIC mode",
                    "1612": "mov     [r12], eax",
                    "1613": "jmp     INSTR766",
                    "1614": "mov     edi, r12d",
                    "1615": "call    __msan_warning; PIC mode",
                    "1616": "mov     rdi, [rsp+0D8h+var_C8]",
                    "1617": "cmp     dword ptr [rsp+0D8h+var_A0], 0",
                    "1618": "jnz     INSTR1178",
                    "1619": "jmp     INSTR1159",
                    "1620": "mov     edi, [rsp+0D8h+var_D8]",
                    "1621": "call    __msan_warning; PIC mode",
                    "1622": "test    rbx, rbx",
                    "1623": "jz      INSTR1186",
                    "1624": "mov     edi, [rsp+0D8h+var_D8]",
                    "1625": "call    __msan_warning; PIC mode",
                    "1626": "jmp     INSTR1186",
                    "1627": "mov     edi, [rsp+0D8h+var_D8]",
                    "1628": "call    __msan_warning; PIC mode",
                    "1629": "jmp     INSTR1004",
                    "1630": "mov     rbp, rdx",
                    "1631": "mov     edi, dword ptr [rsp+0D8h+var_68]",
                    "1632": "call    __msan_chain_origin; PIC mode",
                    "1633": "mov     eax, eax",
                    "1634": "mov     rcx, rax",
                    "1635": "shl     rcx, 20h",
                    "1636": "or      rcx, rax",
                    "1637": "mov     [rbp+0], rcx",
                    "1638": "jmp     INSTR1010",
                    "1639": "mov     edi, [rsp+0D8h+var_D8]",
                    "1640": "call    __msan_warning; PIC mode",
                    "1641": "jmp     INSTR1016",
                    "1642": "mov     rbp, rdx",
                    "1643": "mov     edi, dword ptr [rsp+0D8h+var_68]",
                    "1644": "call    __msan_chain_origin; PIC mode",
                    "1645": "mov     [rbp+0], eax",
                    "1646": "jmp     INSTR1021",
                    "1647": "mov     edi, [rsp+0D8h+var_D8]",
                    "1648": "call    __msan_warning; PIC mode",
                    "1649": "jmp     INSTR1025",
                    "1650": "mov     edi, [rsp+0D8h+var_D8]",
                    "1651": "call    __msan_warning; PIC mode",
                    "1652": "jmp     INSTR1033",
                    "1653": "mov     r15, rdx",
                    "1654": "mov     edi, r12d",
                    "1655": "call    __msan_chain_origin; PIC mode",
                    "1656": "mov     eax, eax",
                    "1657": "mov     rcx, rax",
                    "1658": "shl     rcx, 20h",
                    "1659": "or      rcx, rax",
                    "1660": "mov     [r15], rcx",
                    "1661": "jmp     INSTR1038",
                    "1662": "mov     edi, [rsp+0D8h+var_D8]",
                    "1663": "call    __msan_warning; PIC mode",
                    "1664": "mov     rdi, [rsp+0D8h+var_C8]",
                    "1665": "jmp     INSTR1162",
                    "1666": "mov     edi, [rsp+0D8h+var_D8]",
                    "1667": "call    __msan_warning; PIC mode",
                    "1668": "jmp     INSTR1169",
                    "1669": "mov     r13, rdx",
                    "1670": "mov     edi, dword ptr [rsp+0D8h+var_C8]",
                    "1671": "call    __msan_chain_origin; PIC mode",
                    "1672": "mov     [r13+0], eax",
                    "1673": "jmp     INSTR1175"
                }
            },
            {
                "filename": "file.f2fs_setattr.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    rbp",
                    "2": "mov     rbp, rsp",
                    "3": "push    r15",
                    "4": "push    r14",
                    "5": "push    r13",
                    "6": "push    r12",
                    "7": "push    rbx",
                    "8": "sub     rsp, 48h",
                    "9": "mov     r13, [rsi+30h]",
                    "10": "mov     rax, gs:28h",
                    "11": "mov     [rsp+70h+var_30], rax",
                    "12": "xor     eax, eax",
                    "13": "mov     rax, [r13+28h]",
                    "14": "mov     rax, [rax+368h]",
                    "15": "mov     rax, [rax+120h]",
                    "16": "test    byte ptr [rax+84h], 8",
                    "17": "jnz     INSTR285",
                    "18": "mov     eax, [r13+0Ch]",
                    "19": "test    al, 8",
                    "20": "jnz     INSTR289",
                    "21": "mov     rbx, rdx",
                    "22": "mov     r14, rdi",
                    "23": "mov     edx, [rdx]",
                    "24": "mov     r12, rsi",
                    "25": "test    al, 4",
                    "26": "jnz     INSTR287",
                    "27": "and     edx, 8",
                    "28": "jnz     INSTR170",
                    "29": "mov     rdx, rbx",
                    "30": "mov     rsi, r12",
                    "31": "mov     rdi, r14",
                    "32": "call    setattr_prepare; PIC mode",
                    "33": "mov     [rsp+70h+var_5C], eax",
                    "34": "test    eax, eax",
                    "35": "jnz     INSTR158",
                    "36": "mov     rax, [r12+30h]",
                    "37": "test    dword ptr [rax+0Ch], 14000h",
                    "38": "jnz     INSTR380",
                    "39": "mov     eax, [rbx]",
                    "40": "test    al, 8",
                    "41": "jz      INSTR184",
                    "42": "mov     rdi, r13",
                    "43": "call    f2fs_dquot_initialize; PIC mode",
                    "44": "test    eax, eax",
                    "45": "jnz     INSTR198",
                    "46": "mov     r15d, [rbx]",
                    "47": "test    r15b, 2",
                    "48": "jnz     INSTR243",
                    "49": "test    r15b, 4",
                    "50": "jnz     INSTR200",
                    "51": "test    r15b, 8",
                    "52": "jz      INSTR100",
                    "53": "mov     rax, [r13+50h]",
                    "54": "mov     [rsp+70h+var_68], rax",
                    "55": "movsxd  rdx, dword ptr [r13+418h]",
                    "56": "mov     eax, 39Ah",
                    "57": "sub     rax, rdx",
                    "58": "movsxd  rdx, dword ptr [r13+410h]",
                    "59": "sar     rdx, 2",
                    "60": "sub     rax, rdx",
                    "61": "shl     rax, 2",
                    "62": "cmp     [rbx+10h], rax",
                    "63": "ja      INSTR194",
                    "64": "lea     r15, [r13+390h]",
                    "65": "mov     rdi, r15",
                    "66": "call    down_write; PIC mode",
                    "67": "mov     rax, [r13+30h]",
                    "68": "lea     rdi, [rax+18h]",
                    "69": "call    down_write; PIC mode",
                    "70": "mov     rsi, [rbx+10h]",
                    "71": "mov     rdi, r13",
                    "72": "call    truncate_setsize; PIC mode",
                    "73": "lea     r10, [r13+3B8h]",
                    "74": "mov     rax, [rsp+70h+var_68]",
                    "75": "cmp     [rbx+10h], rax",
                    "76": "jle     INSTR291",
                    "77": "mov     rax, [r13+30h]",
                    "78": "mov     [rsp+70h+var_68], r10",
                    "79": "lea     rdi, [rax+18h]",
                    "80": "call    up_write; PIC mode",
                    "81": "mov     rdi, r15",
                    "82": "call    up_write; PIC mode",
                    "83": "mov     rdi, [rsp+70h+var_68]",
                    "84": "xor     ecx, ecx",
                    "85": "xor     edx, edx",
                    "86": "mov     esi, 3",
                    "87": "call    __wake_up; PIC mode",
                    "88": "lea     r15, [r13+2E8h]",
                    "89": "mov     rdi, r15",
                    "90": "call    _raw_spin_lock; PIC mode",
                    "91": "mov     rdi, r13",
                    "92": "call    inode_set_ctime_current; PIC mode",
                    "93": "mov     [r13+60h], rax",
                    "94": "mov     rax, [r13+50h]",
                    "95": "mov     [r13+74h], edx",
                    "96": "mov     [r13+2E0h], rax",
                    "97": "mov     rdi, r15",
                    "98": "call    _raw_spin_unlock; PIC mode",
                    "99": "mov     r15d, [rbx]",
                    "100": "mov     eax, r15d",
                    "101": "test    r15b, 2",
                    "102": "jz      short INSTR110",
                    "103": "mov     rax, [r13+28h]",
                    "104": "mov     edx, [rbx+8]",
                    "105": "mov     rdi, r14",
                    "106": "mov     rsi, [rax+450h]",
                    "107": "call    from_vfsuid; PIC mode",
                    "108": "mov     [r13+4], eax",
                    "109": "mov     eax, [rbx]",
                    "110": "test    al, 4",
                    "111": "jnz     INSTR325",
                    "112": "test    r15b, 10h",
                    "113": "jz      short INSTR118",
                    "114": "mov     rdx, [rbx+18h]",
                    "115": "mov     rax, [rbx+20h]",
                    "116": "mov     [r13+58h], rdx",
                    "117": "mov     [r13+70h], eax",
                    "118": "test    r15b, 20h",
                    "119": "jz      short INSTR124",
                    "120": "mov     rdx, [rbx+28h]",
                    "121": "mov     rax, [rbx+30h]",
                    "122": "mov     [r13+60h], rdx",
                    "123": "mov     [r13+74h], eax",
                    "124": "test    r15b, 40h",
                    "125": "jz      short INSTR130",
                    "126": "mov     rdx, [rbx+38h]",
                    "127": "mov     rax, [rbx+40h]",
                    "128": "mov     [r13+68h], rdx",
                    "129": "mov     [r13+78h], eax",
                    "130": "and     r15d, 1",
                    "131": "jnz     INSTR332",
                    "132": "test    byte ptr [rbx], 1",
                    "133": "jz      short INSTR151",
                    "134": "mov     rax, [r13+268h]",
                    "135": "test    al, 20h",
                    "136": "jnz     INSTR366",
                    "137": "movzx   edx, word ptr [r13+0]",
                    "138": "mov     rsi, r12",
                    "139": "mov     rdi, r14",
                    "140": "call    posix_acl_chmod; PIC mode",
                    "141": "mov     [rsp+70h+var_5C], eax",
                    "142": "mov     ecx, eax",
                    "143": "mov     rax, [r13+268h]",
                    "144": "test    al, 20h",
                    "145": "jz      short INSTR151",
                    "146": "test    ecx, ecx",
                    "147": "jnz     short INSTR150",
                    "148": "movzx   eax, word ptr [r13+264h]",
                    "149": "mov     [r13+0], ax",
                    "150": "lock and byte ptr [r13+268h], 0DFh",
                    "151": "mov     esi, 1",
                    "152": "mov     rdi, r13",
                    "153": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "154": "mov     rax, [r13+28h]",
                    "155": "mov     esi, 1",
                    "156": "mov     rdi, [rax+368h]",
                    "157": "call    f2fs_balance_fs; PIC mode",
                    "158": "mov     rax, [rsp+70h+var_30]",
                    "159": "sub     rax, gs:28h",
                    "160": "jnz     INSTR382",
                    "161": "mov     eax, [rsp+70h+var_5C]",
                    "162": "add     rsp, 48h",
                    "163": "pop     rbx",
                    "164": "pop     r12",
                    "165": "pop     r13",
                    "166": "pop     r14",
                    "167": "pop     r15",
                    "168": "pop     rbp",
                    "169": "jmp     __x86_return_thunk; PIC mode",
                    "170": "mov     rdi, r13",
                    "171": "call    f2fs_is_compress_backend_ready; PIC mode",
                    "172": "test    al, al",
                    "173": "jz      INSTR380",
                    "174": "mov     rax, [r13+268h]",
                    "175": "test    eax, 40000000h",
                    "176": "jz      INSTR29",
                    "177": "mov     eax, [r13+468h]",
                    "178": "shl     eax, 0Ch",
                    "179": "sub     rax, 1",
                    "180": "and     rax, [rbx+10h]",
                    "181": "jz      INSTR29",
                    "182": "mov     [rsp+70h+var_5C], 0FFFFFFEAh",
                    "183": "jmp     short INSTR158",
                    "184": "test    al, 2",
                    "185": "jnz     INSTR353",
                    "186": "test    al, 4",
                    "187": "jnz     INSTR368",
                    "188": "test    al, 2",
                    "189": "jnz     INSTR243",
                    "190": "mov     r15d, eax",
                    "191": "test    al, 8",
                    "192": "jnz     INSTR53",
                    "193": "jmp     INSTR110",
                    "194": "mov     rdi, r13",
                    "195": "call    f2fs_convert_inline_inode; PIC mode",
                    "196": "test    eax, eax",
                    "197": "jz      INSTR64",
                    "198": "mov     [rsp+70h+var_5C], eax",
                    "199": "jmp     INSTR158",
                    "200": "mov     rax, [r13+28h]",
                    "201": "mov     edx, [r13+8]",
                    "202": "mov     rdi, r14",
                    "203": "mov     rsi, [rax+450h]",
                    "204": "call    make_vfsgid; PIC mode",
                    "205": "mov     r9d, eax",
                    "206": "mov     eax, [rbx+0Ch]",
                    "207": "cmp     r9d, eax",
                    "208": "jnz     short INSTR211",
                    "209": "cmp     eax, 0FFFFFFFFh",
                    "210": "jnz     short INSTR239",
                    "211": "mov     rax, [r13+28h]",
                    "212": "mov     r15, [rax+368h]",
                    "213": "mov     [rsp+70h+var_68], r15",
                    "214": "lea     r15, [r15+178h]",
                    "215": "call    __SCT__might_resched; PIC mode",
                    "216": "mov     rdi, r15",
                    "217": "call    down_read_trylock; PIC mode",
                    "218": "test    eax, eax",
                    "219": "jz      INSTR265",
                    "220": "mov     rdx, rbx",
                    "221": "mov     rsi, r13",
                    "222": "mov     rdi, r14",
                    "223": "call    dquot_transfer; PIC mode",
                    "224": "mov     r15d, eax",
                    "225": "test    eax, eax",
                    "226": "jnz     short INSTR256",
                    "227": "mov     eax, [rbx]",
                    "228": "test    al, 2",
                    "229": "jnz     INSTR317",
                    "230": "test    al, 4",
                    "231": "jnz     INSTR310",
                    "232": "mov     rdi, r13",
                    "233": "mov     esi, 1",
                    "234": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "235": "mov     rax, [r13+28h]",
                    "236": "mov     rdi, [rax+368h]",
                    "237": "add     rdi, 178h",
                    "238": "call    up_read; PIC mode",
                    "239": "mov     r15d, [rbx]",
                    "240": "test    r15b, 8",
                    "241": "jnz     INSTR53",
                    "242": "jmp     INSTR100",
                    "243": "mov     rax, [r13+28h]",
                    "244": "mov     edx, [r13+4]",
                    "245": "mov     rdi, r14",
                    "246": "mov     rsi, [rax+450h]",
                    "247": "call    make_vfsuid; PIC mode",
                    "248": "mov     r9d, eax",
                    "249": "mov     eax, [rbx+8]",
                    "250": "cmp     r9d, eax",
                    "251": "jnz     INSTR211",
                    "252": "cmp     eax, 0FFFFFFFFh",
                    "253": "jz      INSTR211",
                    "254": "mov     r15d, [rbx]",
                    "255": "jmp     INSTR49",
                    "256": "mov     rax, [r13+28h]",
                    "257": "mov     rax, [rax+368h]",
                    "258": "lock or byte ptr [rax+61h], 10h",
                    "259": "mov     rax, [r13+28h]",
                    "260": "mov     rdi, [rax+368h]",
                    "261": "add     rdi, 178h",
                    "262": "call    up_read; PIC mode",
                    "263": "mov     [rsp+70h+var_5C], r15d",
                    "264": "jmp     INSTR158",
                    "265": "xor     esi, esi",
                    "266": "lea     rdi, [rsp+70h+var_58]",
                    "267": "call    init_wait_entry; PIC mode",
                    "268": "mov     rax, [rsp+70h+var_68]",
                    "269": "add     rax, 1A0h",
                    "270": "mov     [rsp+70h+var_68], rax",
                    "271": "jmp     short INSTR273",
                    "272": "call    schedule; PIC mode",
                    "273": "mov     rdi, [rsp+70h+var_68]",
                    "274": "mov     edx, 2",
                    "275": "lea     rsi, [rsp+70h+var_58]",
                    "276": "call    prepare_to_wait_event; PIC mode",
                    "277": "mov     rdi, r15",
                    "278": "call    down_read_trylock; PIC mode",
                    "279": "test    eax, eax",
                    "280": "jz      short INSTR272",
                    "281": "mov     rdi, [rsp+70h+var_68]",
                    "282": "lea     rsi, [rsp+70h+var_58]",
                    "283": "call    finish_wait; PIC mode",
                    "284": "jmp     INSTR220",
                    "285": "mov     [rsp+70h+var_5C], 0FFFFFFFBh",
                    "286": "jmp     INSTR158",
                    "287": "test    edx, 10007h",
                    "288": "jz      INSTR27",
                    "289": "mov     [rsp+70h+var_5C], 0FFFFFFFFh",
                    "290": "jmp     INSTR158",
                    "291": "mov     rdi, r13",
                    "292": "mov     [rsp+70h+var_70], r10",
                    "293": "call    f2fs_truncate; PIC mode",
                    "294": "mov     dword ptr [rsp+70h+var_68], eax",
                    "295": "mov     rax, [r13+30h]",
                    "296": "lea     rdi, [rax+18h]",
                    "297": "call    up_write; PIC mode",
                    "298": "mov     rdi, r15",
                    "299": "call    up_write; PIC mode",
                    "300": "mov     rdi, [rsp+70h+var_70]",
                    "301": "xor     ecx, ecx",
                    "302": "xor     edx, edx",
                    "303": "mov     esi, 3",
                    "304": "call    __wake_up; PIC mode",
                    "305": "mov     r8d, dword ptr [rsp+70h+var_68]",
                    "306": "test    r8d, r8d",
                    "307": "jz      INSTR88",
                    "308": "mov     [rsp+70h+var_5C], r8d",
                    "309": "jmp     INSTR158",
                    "310": "mov     rax, [r13+28h]",
                    "311": "mov     edx, [rbx+0Ch]",
                    "312": "mov     rdi, r14",
                    "313": "mov     rsi, [rax+450h]",
                    "314": "call    from_vfsgid; PIC mode",
                    "315": "mov     [r13+8], eax",
                    "316": "jmp     INSTR232",
                    "317": "mov     rax, [r13+28h]",
                    "318": "mov     edx, [rbx+8]",
                    "319": "mov     rdi, r14",
                    "320": "mov     rsi, [rax+450h]",
                    "321": "call    from_vfsuid; PIC mode",
                    "322": "mov     [r13+4], eax",
                    "323": "mov     eax, [rbx]",
                    "324": "jmp     INSTR230",
                    "325": "mov     rax, [r13+28h]",
                    "326": "mov     edx, [rbx+0Ch]",
                    "327": "mov     rdi, r14",
                    "328": "mov     rsi, [rax+450h]",
                    "329": "call    from_vfsgid; PIC mode",
                    "330": "mov     [r13+8], eax",
                    "331": "jmp     INSTR112",
                    "332": "mov     rax, [r13+28h]",
                    "333": "mov     edx, [r13+8]",
                    "334": "mov     rdi, r14",
                    "335": "movzx   r15d, word ptr [rbx+4]",
                    "336": "mov     rsi, [rax+450h]",
                    "337": "call    make_vfsgid; PIC mode",
                    "338": "mov     rsi, r13",
                    "339": "mov     rdi, r14",
                    "340": "mov     edx, eax",
                    "341": "call    in_group_or_capable; PIC mode",
                    "342": "mov     r9d, eax",
                    "343": "mov     eax, r15d",
                    "344": "and     ah, 0FBh",
                    "345": "test    r9b, r9b",
                    "346": "cmovz   r15d, eax",
                    "347": "mov     [r13+264h], r15w",
                    "348": "lock or byte ptr [r13+268h], 20h",
                    "349": "xor     esi, esi",
                    "350": "mov     rdi, r13",
                    "351": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "352": "jmp     INSTR132",
                    "353": "mov     rax, [r13+28h]",
                    "354": "mov     edx, [r13+4]",
                    "355": "mov     rdi, r14",
                    "356": "mov     rsi, [rax+450h]",
                    "357": "call    make_vfsuid; PIC mode",
                    "358": "mov     r9d, eax",
                    "359": "mov     eax, [rbx+8]",
                    "360": "cmp     r9d, eax",
                    "361": "jnz     INSTR42",
                    "362": "cmp     eax, 0FFFFFFFFh",
                    "363": "jz      INSTR42",
                    "364": "mov     eax, [rbx]",
                    "365": "jmp     INSTR186",
                    "366": "movzx   edx, word ptr [r13+264h]",
                    "367": "jmp     INSTR138",
                    "368": "mov     rax, [r13+28h]",
                    "369": "mov     edx, [r13+8]",
                    "370": "mov     rdi, r14",
                    "371": "mov     rsi, [rax+450h]",
                    "372": "call    make_vfsgid; PIC mode",
                    "373": "mov     r9d, eax",
                    "374": "mov     eax, [rbx+0Ch]",
                    "375": "cmp     r9d, eax",
                    "376": "jnz     INSTR42",
                    "377": "cmp     eax, 0FFFFFFFFh",
                    "378": "jz      INSTR42",
                    "379": "jmp     INSTR46",
                    "380": "mov     [rsp+70h+var_5C], 0FFFFFFA1h",
                    "381": "jmp     INSTR158",
                    "382": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "file.f2fs_setattr.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    rbp",
                    "3": "mov     rbp, rsp",
                    "4": "push    r15",
                    "5": "push    r14",
                    "6": "mov     r14, rsi",
                    "7": "push    r13",
                    "8": "push    r12",
                    "9": "mov     r12, rdi",
                    "10": "push    rbx",
                    "11": "mov     rbx, rdx",
                    "12": "sub     rsp, 10h",
                    "13": "mov     r13, [rsi+30h]",
                    "14": "mov     rax, [r13+28h]",
                    "15": "mov     rax, [rax+368h]",
                    "16": "mov     rdi, [rax+120h]",
                    "17": "call    f2fs_cp_error_isra_0",
                    "18": "mov     r8d, eax",
                    "19": "mov     eax, 0FFFFFFFBh",
                    "20": "test    r8b, r8b",
                    "21": "jnz     INSTR276",
                    "22": "mov     esi, [r13+0Ch]",
                    "23": "or      eax, 0FFFFFFFFh",
                    "24": "test    sil, 8",
                    "25": "jnz     INSTR276",
                    "26": "and     sil, 4",
                    "27": "mov     edx, [rbx]",
                    "28": "jz      short INSTR31",
                    "29": "test    edx, 10007h",
                    "30": "jnz     INSTR276",
                    "31": "and     dl, 8",
                    "32": "jnz     short INSTR41",
                    "33": "mov     rdx, rbx",
                    "34": "mov     rsi, r14",
                    "35": "mov     rdi, r12",
                    "36": "call    setattr_prepare; PIC mode",
                    "37": "mov     [rsp+38h+var_2C], eax",
                    "38": "test    eax, eax",
                    "39": "jz      short INSTR57",
                    "40": "jmp     INSTR276",
                    "41": "mov     rdi, r13",
                    "42": "call    f2fs_is_compress_backend_ready; PIC mode",
                    "43": "test    al, al",
                    "44": "jnz     short INSTR47",
                    "45": "mov     eax, 0FFFFFFA1h",
                    "46": "jmp     INSTR276",
                    "47": "mov     rax, [r13+268h]",
                    "48": "bt      eax, 1Eh",
                    "49": "jnb     short INSTR33",
                    "50": "mov     edx, [r13+468h]",
                    "51": "mov     eax, 0FFFFFFEAh",
                    "52": "shl     edx, 0Ch",
                    "53": "dec     rdx",
                    "54": "and     rdx, [rbx+10h]",
                    "55": "jz      short INSTR33",
                    "56": "jmp     INSTR276",
                    "57": "mov     rax, [r14+30h]",
                    "58": "test    dword ptr [rax+0Ch], 14000h",
                    "59": "jnz     short INSTR45",
                    "60": "test    byte ptr [rbx], 8",
                    "61": "jz      short INSTR67",
                    "62": "mov     rdi, r13",
                    "63": "call    f2fs_dquot_initialize; PIC mode",
                    "64": "test    eax, eax",
                    "65": "jz      short INSTR79",
                    "66": "jmp     INSTR276",
                    "67": "mov     rdx, r13",
                    "68": "mov     rsi, rbx",
                    "69": "mov     rdi, r12",
                    "70": "call    i_uid_needs_update",
                    "71": "test    al, al",
                    "72": "jnz     short INSTR62",
                    "73": "mov     rdx, r13",
                    "74": "mov     rsi, rbx",
                    "75": "mov     rdi, r12",
                    "76": "call    i_gid_needs_update",
                    "77": "test    al, al",
                    "78": "jnz     short INSTR62",
                    "79": "mov     rdx, r13",
                    "80": "mov     rsi, rbx",
                    "81": "mov     rdi, r12",
                    "82": "call    i_uid_needs_update",
                    "83": "test    al, al",
                    "84": "jz      short INSTR105",
                    "85": "mov     rax, [r13+28h]",
                    "86": "mov     rdi, [rax+368h]",
                    "87": "add     rdi, 178h",
                    "88": "call    f2fs_down_read",
                    "89": "mov     rdx, rbx",
                    "90": "mov     rsi, r13",
                    "91": "mov     rdi, r12",
                    "92": "call    dquot_transfer; PIC mode",
                    "93": "test    eax, eax",
                    "94": "jz      short INSTR112",
                    "95": "mov     rdx, [r13+28h]",
                    "96": "mov     esi, 0Ch",
                    "97": "mov     [rsp+38h+var_2C], eax",
                    "98": "mov     rdi, [rdx+368h]",
                    "99": "call    set_sbi_flag",
                    "100": "mov     rdx, [r13+28h]",
                    "101": "mov     rdi, [rdx+368h]",
                    "102": "add     rdi, 178h",
                    "103": "call    up_read; PIC mode",
                    "104": "jmp     INSTR275",
                    "105": "mov     rdx, r13",
                    "106": "mov     rsi, rbx",
                    "107": "mov     rdi, r12",
                    "108": "call    i_gid_needs_update",
                    "109": "test    al, al",
                    "110": "jnz     short INSTR85",
                    "111": "jmp     short INSTR135",
                    "112": "test    byte ptr [rbx], 2",
                    "113": "jz      short INSTR120",
                    "114": "mov     rax, [r13+28h]",
                    "115": "mov     edx, [rbx+8]",
                    "116": "mov     rdi, r12",
                    "117": "mov     rsi, [rax+450h]",
                    "118": "call    from_vfsuid; PIC mode",
                    "119": "mov     [r13+4], eax",
                    "120": "test    byte ptr [rbx], 4",
                    "121": "jz      short INSTR128",
                    "122": "mov     rax, [r13+28h]",
                    "123": "mov     edx, [rbx+0Ch]",
                    "124": "mov     rdi, r12",
                    "125": "mov     rsi, [rax+450h]",
                    "126": "call    from_vfsgid; PIC mode",
                    "127": "mov     [r13+8], eax",
                    "128": "mov     rdi, r13",
                    "129": "mov     esi, 1",
                    "130": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "131": "mov     rax, [r13+28h]",
                    "132": "mov     rdi, [rax+368h]",
                    "133": "add     rdi, 178h",
                    "134": "call    up_read; PIC mode",
                    "135": "test    byte ptr [rbx], 8",
                    "136": "jz      INSTR189",
                    "137": "mov     rax, [r13+50h]",
                    "138": "mov     [rsp+38h+var_38], rax",
                    "139": "movsxd  rdx, dword ptr [r13+418h]",
                    "140": "mov     eax, 39Ah",
                    "141": "sub     rax, rdx",
                    "142": "movsxd  rdx, dword ptr [r13+410h]",
                    "143": "sar     rdx, 2",
                    "144": "sub     rax, rdx",
                    "145": "shl     rax, 2",
                    "146": "cmp     [rbx+10h], rax",
                    "147": "ja      short INSTR162",
                    "148": "lea     r15, [r13+390h]",
                    "149": "mov     rdi, r15",
                    "150": "call    down_write; PIC mode",
                    "151": "mov     rax, [r13+30h]",
                    "152": "lea     rdi, [rax+18h]",
                    "153": "call    down_write; PIC mode",
                    "154": "mov     rsi, [rbx+10h]",
                    "155": "mov     rdi, r13",
                    "156": "call    truncate_setsize; PIC mode",
                    "157": "mov     rax, [rsp+38h+var_38]",
                    "158": "cmp     [rbx+10h], rax",
                    "159": "jle     short INSTR167",
                    "160": "xor     eax, eax",
                    "161": "jmp     short INSTR169",
                    "162": "mov     rdi, r13",
                    "163": "call    f2fs_convert_inline_inode; PIC mode",
                    "164": "test    eax, eax",
                    "165": "jz      short INSTR148",
                    "166": "jmp     INSTR276",
                    "167": "mov     rdi, r13",
                    "168": "call    f2fs_truncate; PIC mode",
                    "169": "mov     dword ptr [rsp+38h+var_38], eax",
                    "170": "mov     rax, [r13+30h]",
                    "171": "lea     rdi, [rax+18h]",
                    "172": "call    up_write; PIC mode",
                    "173": "mov     rdi, r15",
                    "174": "call    f2fs_up_write",
                    "175": "mov     eax, dword ptr [rsp+38h+var_38]",
                    "176": "test    eax, eax",
                    "177": "jnz     INSTR276",
                    "178": "lea     r15, [r13+2E8h]",
                    "179": "mov     rdi, r15",
                    "180": "call    _raw_spin_lock; PIC mode",
                    "181": "mov     rdi, r13",
                    "182": "call    inode_set_ctime_current; PIC mode",
                    "183": "mov     [r13+60h], rax",
                    "184": "mov     rax, [r13+50h]",
                    "185": "mov     [r13+74h], edx",
                    "186": "mov     [r13+2E0h], rax",
                    "187": "mov     rdi, r15",
                    "188": "call    _raw_spin_unlock; PIC mode",
                    "189": "mov     r15d, [rbx]",
                    "190": "test    r15b, 2",
                    "191": "jz      short INSTR198",
                    "192": "mov     rax, [r13+28h]",
                    "193": "mov     edx, [rbx+8]",
                    "194": "mov     rdi, r12",
                    "195": "mov     rsi, [rax+450h]",
                    "196": "call    from_vfsuid; PIC mode",
                    "197": "mov     [r13+4], eax",
                    "198": "test    byte ptr [rbx], 4",
                    "199": "jz      short INSTR206",
                    "200": "mov     rax, [r13+28h]",
                    "201": "mov     edx, [rbx+0Ch]",
                    "202": "mov     rdi, r12",
                    "203": "mov     rsi, [rax+450h]",
                    "204": "call    from_vfsgid; PIC mode",
                    "205": "mov     [r13+8], eax",
                    "206": "test    r15b, 10h",
                    "207": "jz      short INSTR212",
                    "208": "mov     rdx, [rbx+18h]",
                    "209": "mov     rax, [rbx+20h]",
                    "210": "mov     [r13+58h], rdx",
                    "211": "mov     [r13+70h], eax",
                    "212": "test    r15b, 20h",
                    "213": "jz      short INSTR218",
                    "214": "mov     rdx, [rbx+28h]",
                    "215": "mov     rax, [rbx+30h]",
                    "216": "mov     [r13+60h], rdx",
                    "217": "mov     [r13+74h], eax",
                    "218": "test    r15b, 40h",
                    "219": "jz      short INSTR224",
                    "220": "mov     rdx, [rbx+38h]",
                    "221": "mov     rax, [rbx+40h]",
                    "222": "mov     [r13+68h], rdx",
                    "223": "mov     [r13+78h], eax",
                    "224": "and     r15b, 1",
                    "225": "jz      short INSTR246",
                    "226": "mov     rax, [r13+28h]",
                    "227": "mov     edx, [r13+8]",
                    "228": "mov     rdi, r12",
                    "229": "mov     r15d, [rbx+4]",
                    "230": "mov     rsi, [rax+450h]",
                    "231": "call    make_vfsgid; PIC mode",
                    "232": "mov     rsi, r13",
                    "233": "mov     rdi, r12",
                    "234": "mov     edx, eax",
                    "235": "call    in_group_or_capable; PIC mode",
                    "236": "test    al, al",
                    "237": "jnz     short INSTR239",
                    "238": "and     r15w, 0FBFFh",
                    "239": "mov     [r13+264h], r15w",
                    "240": "mov     esi, 5",
                    "241": "mov     rdi, r13",
                    "242": "call    set_inode_flag",
                    "243": "xor     esi, esi",
                    "244": "mov     rdi, r13",
                    "245": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "246": "test    byte ptr [rbx], 1",
                    "247": "jz      short INSTR268",
                    "248": "mov     rax, [r13+268h]",
                    "249": "test    al, 20h",
                    "250": "jz      short INSTR253",
                    "251": "movzx   edx, word ptr [r13+264h]",
                    "252": "jmp     short INSTR254",
                    "253": "movzx   edx, word ptr [r13+0]",
                    "254": "mov     rsi, r14",
                    "255": "mov     rdi, r12",
                    "256": "call    posix_acl_chmod; PIC mode",
                    "257": "mov     [rsp+38h+var_2C], eax",
                    "258": "mov     rax, [r13+268h]",
                    "259": "test    al, 20h",
                    "260": "jz      short INSTR268",
                    "261": "cmp     [rsp+38h+var_2C], 0",
                    "262": "jnz     short INSTR265",
                    "263": "mov     eax, [r13+264h]",
                    "264": "mov     [r13+0], ax",
                    "265": "mov     esi, 5",
                    "266": "mov     rdi, r13",
                    "267": "call    clear_inode_flag",
                    "268": "mov     esi, 1",
                    "269": "mov     rdi, r13",
                    "270": "call    f2fs_mark_inode_dirty_sync; PIC mode",
                    "271": "mov     rax, [r13+28h]",
                    "272": "mov     esi, 1",
                    "273": "mov     rdi, [rax+368h]",
                    "274": "call    f2fs_balance_fs; PIC mode",
                    "275": "mov     eax, [rsp+38h+var_2C]",
                    "276": "pop     rdx",
                    "277": "pop     rcx",
                    "278": "pop     rbx",
                    "279": "pop     r12",
                    "280": "pop     r13",
                    "281": "pop     r14",
                    "282": "pop     r15",
                    "283": "pop     rbp",
                    "284": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-47734",
        "files": [
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "sub     esp, 18h",
                    "4": "mov     [ebp+var_C], ebx",
                    "5": "mov     ebx, eax",
                    "6": "mov     [ebp+var_8], esi",
                    "7": "lea     esi, [eax+560h]",
                    "8": "mov     [ebp+var_4], edi",
                    "9": "mov     eax, [eax+648h]",
                    "10": "cmp     eax, 1",
                    "11": "jz      INSTR65",
                    "12": "jg      short INSTR34",
                    "13": "test    eax, eax",
                    "14": "jnz     short INSTR37",
                    "15": "mov     eax, [edx]",
                    "16": "mov     edx, [edx+4]",
                    "17": "lea     ecx, [eax+0Eh]",
                    "18": "cmp     edx, ecx",
                    "19": "jb      short INSTR47",
                    "20": "cmp     word ptr [eax+0Ch], 8",
                    "21": "jnz     short INSTR47",
                    "22": "lea     ecx, [eax+22h]",
                    "23": "cmp     edx, ecx",
                    "24": "jb      short INSTR47",
                    "25": "cmp     byte ptr [eax+17h], 2",
                    "26": "jnz     short INSTR47",
                    "27": "mov     eax, [ebx+564h]",
                    "28": "test    eax, eax",
                    "29": "jnz     short INSTR58",
                    "30": "xor     edx, edx",
                    "31": "mov     eax, esi",
                    "32": "call    bond_get_slave_by_id",
                    "33": "jmp     short INSTR56",
                    "34": "sub     eax, 2",
                    "35": "and     eax, 0FFFFFFFDh",
                    "36": "jz      short INSTR67",
                    "37": "call    net_ratelimit",
                    "38": "test    eax, eax",
                    "39": "jnz     bond_xdp_get_xmit_slave_cold",
                    "40": "xor     eax, eax",
                    "41": "mov     ebx, [ebp+var_C]",
                    "42": "mov     esi, [ebp+var_8]",
                    "43": "mov     edi, [ebp+var_4]",
                    "44": "mov     esp, ebp",
                    "45": "pop     ebp",
                    "46": "retn",
                    "47": "mov     ebx, [ebx+57Ch]",
                    "48": "test    ebx, ebx",
                    "49": "jz      short INSTR40",
                    "50": "mov     eax, esi",
                    "51": "call    bond_rr_gen_slave_id",
                    "52": "xor     edx, edx",
                    "53": "div     ebx",
                    "54": "mov     eax, esi",
                    "55": "call    bond_get_slave_by_id",
                    "56": "test    eax, eax",
                    "57": "jz      short INSTR40",
                    "58": "mov     eax, [eax]",
                    "59": "mov     ebx, [ebp+var_C]",
                    "60": "mov     esi, [ebp+var_8]",
                    "61": "mov     edi, [ebp+var_4]",
                    "62": "mov     esp, ebp",
                    "63": "pop     ebp",
                    "64": "retn",
                    "65": "mov     eax, [ebx+564h]",
                    "66": "jmp     short INSTR56",
                    "67": "mov     ecx, [edx]",
                    "68": "mov     edx, [edx+4]",
                    "69": "lea     edi, [ecx+0Eh]",
                    "70": "cmp     edx, edi",
                    "71": "jnb     short INSTR82",
                    "72": "mov     ecx, [ebx+570h]",
                    "73": "test    ecx, ecx",
                    "74": "jz      short INSTR40",
                    "75": "mov     ebx, [ecx]",
                    "76": "test    ebx, ebx",
                    "77": "jz      short INSTR40",
                    "78": "xor     edx, edx",
                    "79": "div     ebx",
                    "80": "mov     eax, [ecx+edx*4+0Ch]",
                    "81": "jmp     short INSTR56",
                    "82": "sub     edx, ecx",
                    "83": "mov     eax, 0Eh",
                    "84": "mov     [esp+8], edx",
                    "85": "xor     edx, edx",
                    "86": "mov     [esp+4], eax",
                    "87": "movzx   eax, word ptr [ecx+0Ch]",
                    "88": "mov     [esp], eax",
                    "89": "mov     eax, esi",
                    "90": "call    __bond_xmit_hash_constprop_0",
                    "91": "mov     ecx, [ebx+570h]",
                    "92": "test    ecx, ecx",
                    "93": "jnz     short INSTR75",
                    "94": "jmp     INSTR40"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x20+var_s0]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#var_s10]",
                    "5": "ADD             X20, X0, #0x8C0",
                    "6": "LDR             W2, [X20,#0x120]",
                    "7": "CMP             W2, #1",
                    "8": "B.EQ            loc_28D0",
                    "9": "MOV             X19, X0",
                    "10": "B.GT            loc_287C",
                    "11": "CBNZ            W2, loc_2888",
                    "12": "LDP             X0, X1, [X1]",
                    "13": "ADD             X2, X0, #0xE",
                    "14": "CMP             X1, X2",
                    "15": "B.CC            loc_28A4",
                    "16": "LDRH            W3, [X0,#0xC]",
                    "17": "CMP             W3, #8",
                    "18": "B.NE            loc_28A4",
                    "19": "ADD             X0, X0, #0x22 ; '\"'",
                    "20": "CMP             X1, X0",
                    "21": "B.CC            loc_28A4",
                    "22": "LDRB            W0, [X2,#9]",
                    "23": "CMP             W0, #2",
                    "24": "B.NE            loc_28A4",
                    "25": "LDR             X0, [X20,#8]",
                    "26": "CBNZ            X0, loc_2868",
                    "27": "MOV             X0, X20",
                    "28": "MOV             W1, #0",
                    "29": "BL              bond_get_slave_by_id",
                    "30": "CBZ             X0, loc_2890",
                    "31": "LDR             X0, [X0]",
                    "32": "LDP             X19, X20, [SP,#var_s10]",
                    "33": "LDP             X29, X30, [SP+var_s0],#0x20",
                    "34": "AUTIASP",
                    "35": "RET",
                    "36": "SUB             W2, W2, #2",
                    "37": "ANDS            W2, W2, #0xFFFFFFFD",
                    "38": "B.EQ            loc_28DC",
                    "39": "BL              net_ratelimit",
                    "40": "CBNZ            W0, loc_2940",
                    "41": "MOV             X0, #0",
                    "42": "LDP             X19, X20, [SP,#var_s10]",
                    "43": "LDP             X29, X30, [SP+var_s0],#0x20",
                    "44": "AUTIASP",
                    "45": "RET",
                    "46": "LDR             W19, [X19,#0x8F4]",
                    "47": "CBZ             W19, loc_2890",
                    "48": "MOV             X0, X20",
                    "49": "BL              bond_rr_gen_slave_id",
                    "50": "MOV             W1, W0",
                    "51": "MOV             X0, X20",
                    "52": "UDIV            W2, W1, W19",
                    "53": "MSUB            W1, W2, W19, W1",
                    "54": "BL              bond_get_slave_by_id",
                    "55": "CBNZ            X0, loc_2868",
                    "56": "B               loc_2890",
                    "57": "LDR             X0, [X20,#8]",
                    "58": "CBNZ            X0, loc_2868",
                    "59": "B               loc_2890",
                    "60": "LDP             X0, X5, [X1]",
                    "61": "ADD             X1, X0, #0xE",
                    "62": "CMP             X5, X1",
                    "63": "B.CS            loc_2914",
                    "64": "LDR             X1, [X20,#0x20]",
                    "65": "CBZ             X1, loc_2890",
                    "66": "LDR             W3, [X1]",
                    "67": "CBZ             W3, loc_2890",
                    "68": "UDIV            W0, W2, W3",
                    "69": "MSUB            W0, W0, W3, W2",
                    "70": "ADD             X0, X1, X0,LSL#3",
                    "71": "LDR             X0, [X0,#0x18]",
                    "72": "CBNZ            X0, loc_2868",
                    "73": "B               loc_2890",
                    "74": "LDRH            W3, [X0,#0xC]",
                    "75": "MOV             X2, X0",
                    "76": "SUB             W5, W5, W0",
                    "77": "MOV             X1, #0",
                    "78": "MOV             X0, X20",
                    "79": "MOV             W4, #0xE",
                    "80": "BL              __bond_xmit_hash.constprop.0",
                    "81": "MOV             W2, W0",
                    "82": "LDR             X1, [X20,#0x20]",
                    "83": "CBNZ            X1, loc_28F4",
                    "84": "B               loc_2890",
                    "85": "LDR             W2, [X20,#0x120]",
                    "86": "MOV             X0, X19",
                    "87": "ADRL            X1, aUnknownBonding; \"Unknown bonding mode %d for xdp xmit\\n\"",
                    "88": "BL              netdev_err",
                    "89": "B               loc_2890"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r14",
                    "3": "push    rbx",
                    "4": "mov     rbx, rdi",
                    "5": "lea     r14, [rdi+8C0h]",
                    "6": "mov     eax, [rdi+9E0h]",
                    "7": "cmp     eax, 1",
                    "8": "jg      short INSTR17",
                    "9": "test    eax, eax",
                    "10": "jz      INSTR45",
                    "11": "cmp     eax, 1",
                    "12": "jnz     INSTR60",
                    "13": "mov     rax, [rbx+8C8h]",
                    "14": "test    rax, rax",
                    "15": "jnz     INSTR109",
                    "16": "jmp     INSTR111",
                    "17": "cmp     eax, 2",
                    "18": "jz      short INSTR21",
                    "19": "cmp     eax, 4",
                    "20": "jnz     INSTR60",
                    "21": "mov     rdx, [rsi]",
                    "22": "mov     r9, [rsi+8]",
                    "23": "lea     rcx, [rdx+0Eh]",
                    "24": "xor     eax, eax",
                    "25": "cmp     rcx, r9",
                    "26": "ja      short INSTR33",
                    "27": "movzx   ecx, word ptr [rdx+0Ch]",
                    "28": "sub     r9d, edx",
                    "29": "mov     rdi, r14",
                    "30": "xor     esi, esi",
                    "31": "mov     r8d, 0Eh",
                    "32": "call    __bond_xmit_hash",
                    "33": "mov     rcx, [rbx+8E0h]",
                    "34": "test    rcx, rcx",
                    "35": "jz      INSTR111",
                    "36": "mov     esi, [rcx]",
                    "37": "test    esi, esi",
                    "38": "jz      INSTR111",
                    "39": "xor     edx, edx",
                    "40": "div     esi",
                    "41": "mov     rax, [rcx+rdx*8+18h]",
                    "42": "test    rax, rax",
                    "43": "jnz     INSTR109",
                    "44": "jmp     INSTR111",
                    "45": "mov     rax, [rsi]",
                    "46": "mov     rcx, [rsi+8]",
                    "47": "lea     rdx, [rax+0Eh]",
                    "48": "cmp     rdx, rcx",
                    "49": "jbe     short INSTR68",
                    "50": "mov     ebp, [rbx+8F4h]",
                    "51": "test    ebp, ebp",
                    "52": "jz      INSTR111",
                    "53": "mov     eax, [rbx+0A84h]",
                    "54": "cmp     eax, 1",
                    "55": "jz      short INSTR80",
                    "56": "test    eax, eax",
                    "57": "jnz     short INSTR85",
                    "58": "call    prandom_u32; PIC mode",
                    "59": "jmp     INSTR102",
                    "60": "call    net_ratelimit; PIC mode",
                    "61": "test    eax, eax",
                    "62": "jz      INSTR111",
                    "63": "mov     edx, [rbx+9E0h]",
                    "64": "mov     rdi, rbx",
                    "65": "mov     rsi, offset aUnknownBonding_1; \"Unknown bonding mode %d for xdp xmit\\n\"",
                    "66": "call    netdev_err; PIC mode",
                    "67": "jmp     INSTR111",
                    "68": "cmp     word ptr [rax+0Ch], 8",
                    "69": "jnz     short INSTR50",
                    "70": "lea     rdx, [rax+22h]",
                    "71": "cmp     rdx, rcx",
                    "72": "ja      short INSTR50",
                    "73": "cmp     byte ptr [rax+17h], 2",
                    "74": "jnz     short INSTR50",
                    "75": "mov     rax, [rbx+8C8h]",
                    "76": "test    rax, rax",
                    "77": "jnz     short INSTR109",
                    "78": "xor     esi, esi",
                    "79": "jmp     short INSTR105",
                    "80": "mov     rcx, [rbx+938h]",
                    "81": "mov     eax, 1",
                    "82": "xadd    gs:[rcx], eax",
                    "83": "add     eax, 1",
                    "84": "jmp     short INSTR102",
                    "85": "mov     rcx, [rbx+938h]",
                    "86": "mov     rsi, [rbx+0A8Ch]",
                    "87": "mov     eax, 1",
                    "88": "xadd    gs:[rcx], eax",
                    "89": "add     eax, 1",
                    "90": "mov     rdx, rsi",
                    "91": "mov     edi, esi",
                    "92": "mov     rcx, rsi",
                    "93": "shr     rcx, 20h",
                    "94": "shr     rdx, 28h",
                    "95": "imul    rdi, rax",
                    "96": "shr     rdi, 20h",
                    "97": "sub     eax, edi",
                    "98": "shr     eax, cl",
                    "99": "add     eax, edi",
                    "100": "mov     ecx, edx",
                    "101": "shr     eax, cl",
                    "102": "xor     edx, edx",
                    "103": "div     ebp",
                    "104": "mov     esi, edx",
                    "105": "mov     rdi, r14",
                    "106": "call    bond_get_slave_by_id",
                    "107": "test    rax, rax",
                    "108": "jz      short INSTR111",
                    "109": "mov     rax, [rax]",
                    "110": "jmp     short INSTR112",
                    "111": "xor     eax, eax",
                    "112": "pop     rbx",
                    "113": "pop     r14",
                    "114": "pop     rbp",
                    "115": "retn"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "push    rbp",
                    "3": "mov     eax, [rdi+9E0h]",
                    "4": "mov     rbp, rdi",
                    "5": "cmp     eax, 1",
                    "6": "jz      INSTR56",
                    "7": "lea     r12, [rdi+8C0h]",
                    "8": "jg      short INSTR30",
                    "9": "test    eax, eax",
                    "10": "jnz     short INSTR33",
                    "11": "mov     rax, [rsi]",
                    "12": "mov     rdx, [rsi+8]",
                    "13": "lea     rcx, [rax+0Eh]",
                    "14": "cmp     rdx, rcx",
                    "15": "jb      short INSTR40",
                    "16": "cmp     word ptr [rax+0Ch], 8",
                    "17": "jnz     short INSTR40",
                    "18": "lea     rcx, [rax+22h]",
                    "19": "cmp     rdx, rcx",
                    "20": "jb      short INSTR40",
                    "21": "cmp     byte ptr [rax+17h], 2",
                    "22": "jnz     short INSTR40",
                    "23": "mov     rax, [rdi+8C8h]",
                    "24": "test    rax, rax",
                    "25": "jnz     short INSTR52",
                    "26": "xor     esi, esi",
                    "27": "mov     rdi, r12",
                    "28": "call    bond_get_slave_by_id",
                    "29": "jmp     short INSTR50",
                    "30": "sub     eax, 2",
                    "31": "and     eax, 0FFFFFFFDh",
                    "32": "jz      short INSTR58",
                    "33": "call    net_ratelimit; PIC mode",
                    "34": "test    eax, eax",
                    "35": "jnz     bond_xdp_get_xmit_slave_cold",
                    "36": "xor     eax, eax",
                    "37": "pop     rbp",
                    "38": "pop     r12",
                    "39": "jmp     __x86_return_thunk; PIC mode",
                    "40": "mov     ebp, [rbp+8F4h]",
                    "41": "test    ebp, ebp",
                    "42": "jz      short INSTR36",
                    "43": "mov     rdi, r12",
                    "44": "call    bond_rr_gen_slave_id",
                    "45": "xor     edx, edx",
                    "46": "mov     rdi, r12",
                    "47": "div     ebp",
                    "48": "mov     esi, edx",
                    "49": "call    bond_get_slave_by_id",
                    "50": "test    rax, rax",
                    "51": "jz      short INSTR36",
                    "52": "mov     rax, [rax]",
                    "53": "pop     rbp",
                    "54": "pop     r12",
                    "55": "jmp     __x86_return_thunk; PIC mode",
                    "56": "mov     rax, [rdi+8C8h]",
                    "57": "jmp     short INSTR50",
                    "58": "mov     rdx, [rsi]",
                    "59": "mov     r9, [rsi+8]",
                    "60": "lea     rcx, [rdx+0Eh]",
                    "61": "cmp     r9, rcx",
                    "62": "jnb     short INSTR73",
                    "63": "mov     rcx, [rbp+8E0h]",
                    "64": "test    rcx, rcx",
                    "65": "jz      short INSTR36",
                    "66": "mov     esi, [rcx]",
                    "67": "test    esi, esi",
                    "68": "jz      short INSTR36",
                    "69": "xor     edx, edx",
                    "70": "div     esi",
                    "71": "mov     rax, [rcx+rdx*8+18h]",
                    "72": "jmp     short INSTR50",
                    "73": "movzx   ecx, word ptr [rdx+0Ch]",
                    "74": "sub     r9d, edx",
                    "75": "mov     r8d, 0Eh",
                    "76": "xor     esi, esi",
                    "77": "mov     rdi, r12",
                    "78": "call    __bond_xmit_hash_constprop_0",
                    "79": "mov     rcx, [rbp+8E0h]",
                    "80": "test    rcx, rcx",
                    "81": "jnz     short INSTR66",
                    "82": "jmp     INSTR36"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    rbp",
                    "2": "mov     rbp, rdi",
                    "3": "push    rcx",
                    "4": "mov     eax, [rdi+9E0h]",
                    "5": "cmp     eax, 1",
                    "6": "jz      INSTR44",
                    "7": "lea     rdi, [rdi+8C0h]",
                    "8": "jg      short INSTR12",
                    "9": "test    eax, eax",
                    "10": "jz      short INSTR16",
                    "11": "jmp     INSTR66",
                    "12": "sub     eax, 2",
                    "13": "and     eax, 0FFFFFFFDh",
                    "14": "jnz     INSTR66",
                    "15": "jmp     short INSTR46",
                    "16": "mov     rax, [rsi]",
                    "17": "mov     rdx, [rsi+8]",
                    "18": "lea     rcx, [rax+0Eh]",
                    "19": "cmp     rdx, rcx",
                    "20": "jb      short INSTR33",
                    "21": "cmp     word ptr [rax+0Ch], 8",
                    "22": "jnz     short INSTR33",
                    "23": "lea     rcx, [rax+22h]",
                    "24": "cmp     rdx, rcx",
                    "25": "jb      short INSTR33",
                    "26": "cmp     byte ptr [rax+17h], 2",
                    "27": "jnz     short INSTR33",
                    "28": "mov     rax, [rbp+8C8h]",
                    "29": "xor     esi, esi",
                    "30": "test    rax, rax",
                    "31": "jnz     INSTR77",
                    "32": "jmp     short INSTR42",
                    "33": "mov     ebp, [rbp+8F4h]",
                    "34": "test    ebp, ebp",
                    "35": "jz      INSTR73",
                    "36": "mov     [rsp+10h+var_10], rdi",
                    "37": "call    bond_rr_gen_slave_id",
                    "38": "xor     edx, edx",
                    "39": "mov     rdi, [rsp+10h+var_10]",
                    "40": "div     ebp",
                    "41": "mov     esi, edx",
                    "42": "call    bond_get_slave_by_id",
                    "43": "jmp     short INSTR75",
                    "44": "mov     rax, [rdi+8C8h]",
                    "45": "jmp     short INSTR75",
                    "46": "mov     rdx, [rsi]",
                    "47": "mov     r9, [rsi+8]",
                    "48": "lea     rcx, [rdx+0Eh]",
                    "49": "cmp     r9, rcx",
                    "50": "jb      short INSTR56",
                    "51": "movzx   ecx, word ptr [rdx+0Ch]",
                    "52": "sub     r9d, edx",
                    "53": "mov     r8d, 0Eh",
                    "54": "xor     esi, esi",
                    "55": "call    __bond_xmit_hash_constprop_0",
                    "56": "mov     rcx, [rbp+8E0h]",
                    "57": "test    rcx, rcx",
                    "58": "jz      short INSTR73",
                    "59": "mov     esi, [rcx]",
                    "60": "test    esi, esi",
                    "61": "jz      short INSTR73",
                    "62": "xor     edx, edx",
                    "63": "div     esi",
                    "64": "mov     rax, [rcx+rdx*8+18h]",
                    "65": "jmp     short INSTR75",
                    "66": "call    net_ratelimit; PIC mode",
                    "67": "test    eax, eax",
                    "68": "jz      short INSTR73",
                    "69": "mov     edx, [rbp+9E0h]",
                    "70": "mov     rsi, offset aUnknownBonding; \"Unknown bonding mode %d for xdp xmit\\n\"",
                    "71": "mov     rdi, rbp",
                    "72": "call    netdev_err; PIC mode",
                    "73": "xor     eax, eax",
                    "74": "jmp     short INSTR78",
                    "75": "test    rax, rax",
                    "76": "jz      short INSTR73",
                    "77": "mov     rax, [rax]",
                    "78": "pop     rdx",
                    "79": "pop     rbp",
                    "80": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ecx, edx",
                    "3": "mov     ebp, esp",
                    "4": "sub     esp, 18h",
                    "5": "mov     [ebp+var_C], ebx",
                    "6": "mov     ebx, eax",
                    "7": "mov     [ebp+var_8], esi",
                    "8": "mov     [ebp+var_4], edi",
                    "9": "mov     edx, [eax+648h]",
                    "10": "cmp     edx, 1",
                    "11": "jz      INSTR67",
                    "12": "lea     esi, [eax+560h]",
                    "13": "jle     short INSTR40",
                    "14": "lea     eax, [edx-2]",
                    "15": "and     eax, 0FFFFFFFDh",
                    "16": "jnz     bond_xdp_get_xmit_slave_cold",
                    "17": "mov     edx, [ecx]",
                    "18": "mov     ecx, [ecx+4]",
                    "19": "lea     edi, [edx+0Eh]",
                    "20": "cmp     ecx, edi",
                    "21": "jnb     INSTR69",
                    "22": "mov     ecx, [ebx+570h]",
                    "23": "test    ecx, ecx",
                    "24": "jz      short INSTR60",
                    "25": "mov     ebx, [ecx]",
                    "26": "test    ebx, ebx",
                    "27": "jz      short INSTR60",
                    "28": "xor     edx, edx",
                    "29": "div     ebx",
                    "30": "mov     eax, [ecx+edx*4+0Ch]",
                    "31": "test    eax, eax",
                    "32": "jz      short INSTR60",
                    "33": "mov     eax, [eax]",
                    "34": "mov     ebx, [ebp+var_C]",
                    "35": "mov     esi, [ebp+var_8]",
                    "36": "mov     edi, [ebp+var_4]",
                    "37": "mov     esp, ebp",
                    "38": "pop     ebp",
                    "39": "retn",
                    "40": "test    edx, edx",
                    "41": "jnz     INSTR92",
                    "42": "mov     eax, [ecx]",
                    "43": "mov     edx, [ecx+4]",
                    "44": "lea     ecx, [eax+0Eh]",
                    "45": "cmp     edx, ecx",
                    "46": "jb      short INSTR49",
                    "47": "cmp     word ptr [eax+0Ch], 8",
                    "48": "jz      short INSTR80",
                    "49": "mov     ebx, [ebx+57Ch]",
                    "50": "test    ebx, ebx",
                    "51": "jz      short INSTR60",
                    "52": "mov     eax, esi",
                    "53": "call    bond_rr_gen_slave_id",
                    "54": "xor     edx, edx",
                    "55": "div     ebx",
                    "56": "mov     eax, esi",
                    "57": "call    bond_get_slave_by_id",
                    "58": "test    eax, eax",
                    "59": "jnz     short INSTR33",
                    "60": "mov     ebx, [ebp+var_C]",
                    "61": "xor     eax, eax",
                    "62": "mov     esi, [ebp+var_8]",
                    "63": "mov     edi, [ebp+var_4]",
                    "64": "mov     esp, ebp",
                    "65": "pop     ebp",
                    "66": "retn",
                    "67": "mov     eax, [eax+564h]",
                    "68": "jmp     short INSTR31",
                    "69": "sub     ecx, edx",
                    "70": "mov     eax, 0Eh",
                    "71": "mov     [esp+8], ecx",
                    "72": "mov     ecx, edx",
                    "73": "mov     [esp+4], eax",
                    "74": "movzx   eax, word ptr [edx+0Ch]",
                    "75": "xor     edx, edx",
                    "76": "mov     [esp], eax",
                    "77": "mov     eax, esi",
                    "78": "call    __bond_xmit_hash_constprop_0",
                    "79": "jmp     INSTR22",
                    "80": "lea     ecx, [eax+22h]",
                    "81": "cmp     edx, ecx",
                    "82": "jb      short INSTR49",
                    "83": "cmp     byte ptr [eax+17h], 2",
                    "84": "jnz     INSTR49",
                    "85": "mov     eax, [ebx+564h]",
                    "86": "test    eax, eax",
                    "87": "jnz     INSTR33",
                    "88": "xor     edx, edx",
                    "89": "mov     eax, esi",
                    "90": "call    bond_get_slave_by_id",
                    "91": "jmp     INSTR31",
                    "92": "lea     esi, [esi+0]",
                    "93": "jmp     bond_xdp_get_xmit_slave_cold"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#-0x20+var_s0]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#var_s10]",
                    "5": "ADD             X19, X0, #0x8C0",
                    "6": "LDR             W2, [X19,#0x120]",
                    "7": "CMP             W2, #1",
                    "8": "B.EQ            loc_28A0",
                    "9": "B.LE            loc_2844",
                    "10": "SUB             W3, W2, #2",
                    "11": "ANDS            W3, W3, #0xFFFFFFFD",
                    "12": "B.EQ            loc_28AC",
                    "13": "ADRL            X1, aUnknownBonding; \"Unknown bonding mode %d for xdp xmit\\n\"",
                    "14": "BL              netdev_err",
                    "15": "BRK             #0x800",
                    "16": "MOV             X0, #0",
                    "17": "LDP             X19, X20, [SP,#var_s10]",
                    "18": "LDP             X29, X30, [SP+var_s0],#0x20",
                    "19": "AUTIASP",
                    "20": "RET",
                    "21": "CBNZ            W2, loc_2820",
                    "22": "LDP             X2, X1, [X1]",
                    "23": "ADD             X3, X2, #0xE",
                    "24": "CMP             X1, X3",
                    "25": "B.CC            loc_2864",
                    "26": "LDRH            W4, [X2,#0xC]",
                    "27": "CMP             W4, #8",
                    "28": "B.EQ            loc_2904",
                    "29": "LDR             W20, [X0,#0x8F4]",
                    "30": "CBZ             W20, loc_2830",
                    "31": "MOV             X0, X19",
                    "32": "BL              bond_rr_gen_slave_id",
                    "33": "MOV             W1, W0",
                    "34": "MOV             X0, X19",
                    "35": "UDIV            W2, W1, W20",
                    "36": "MSUB            W1, W2, W20, W1",
                    "37": "BL              bond_get_slave_by_id",
                    "38": "CBZ             X0, loc_2830",
                    "39": "LDR             X0, [X0]",
                    "40": "LDP             X19, X20, [SP,#var_s10]",
                    "41": "LDP             X29, X30, [SP+var_s0],#0x20",
                    "42": "AUTIASP",
                    "43": "RET",
                    "44": "LDR             X0, [X19,#8]",
                    "45": "CBNZ            X0, loc_288C",
                    "46": "B               loc_2830",
                    "47": "LDP             X2, X5, [X1]",
                    "48": "ADD             X0, X2, #0xE",
                    "49": "CMP             X5, X0",
                    "50": "B.CS            loc_28E4",
                    "51": "LDR             X1, [X19,#0x20]",
                    "52": "CBZ             X1, loc_2830",
                    "53": "LDR             W2, [X1]",
                    "54": "CBZ             W2, loc_2830",
                    "55": "UDIV            W0, W3, W2",
                    "56": "MSUB            W0, W0, W2, W3",
                    "57": "ADD             X0, X1, X0,LSL#3",
                    "58": "LDR             X0, [X0,#0x18]",
                    "59": "CBNZ            X0, loc_288C",
                    "60": "B               loc_2830",
                    "61": "LDRH            W3, [X2,#0xC]",
                    "62": "SUB             W5, W5, W2",
                    "63": "MOV             X0, X19",
                    "64": "MOV             W4, #0xE",
                    "65": "MOV             X1, #0",
                    "66": "BL              __bond_xmit_hash.constprop.0",
                    "67": "MOV             W3, W0",
                    "68": "B               loc_28BC",
                    "69": "ADD             X2, X2, #0x22 ; '\"'",
                    "70": "CMP             X1, X2",
                    "71": "B.CC            loc_2864",
                    "72": "LDRB            W1, [X3,#9]",
                    "73": "CMP             W1, #2",
                    "74": "B.NE            loc_2864",
                    "75": "LDR             X0, [X19,#8]",
                    "76": "CBNZ            X0, loc_288C",
                    "77": "MOV             X0, X19",
                    "78": "MOV             W1, #0",
                    "79": "BL              bond_get_slave_by_id",
                    "80": "CBNZ            X0, loc_288C",
                    "81": "B               loc_2830"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r14",
                    "3": "push    rbx",
                    "4": "mov     rbx, rdi",
                    "5": "lea     r14, [rdi+8C0h]",
                    "6": "mov     edx, [rdi+9E0h]",
                    "7": "cmp     edx, 1",
                    "8": "jg      short INSTR17",
                    "9": "test    edx, edx",
                    "10": "jz      INSTR45",
                    "11": "cmp     edx, 1",
                    "12": "jnz     INSTR103",
                    "13": "mov     rax, [rbx+8C8h]",
                    "14": "test    rax, rax",
                    "15": "jnz     INSTR101",
                    "16": "jmp     INSTR107",
                    "17": "cmp     edx, 2",
                    "18": "jz      short INSTR21",
                    "19": "cmp     edx, 4",
                    "20": "jnz     INSTR103",
                    "21": "mov     rdx, [rsi]",
                    "22": "mov     r9, [rsi+8]",
                    "23": "lea     rcx, [rdx+0Eh]",
                    "24": "xor     eax, eax",
                    "25": "cmp     rcx, r9",
                    "26": "ja      short INSTR33",
                    "27": "movzx   ecx, word ptr [rdx+0Ch]",
                    "28": "sub     r9d, edx",
                    "29": "mov     rdi, r14",
                    "30": "xor     esi, esi",
                    "31": "mov     r8d, 0Eh",
                    "32": "call    __bond_xmit_hash",
                    "33": "mov     rcx, [rbx+8E0h]",
                    "34": "test    rcx, rcx",
                    "35": "jz      INSTR107",
                    "36": "mov     esi, [rcx]",
                    "37": "test    esi, esi",
                    "38": "jz      INSTR107",
                    "39": "xor     edx, edx",
                    "40": "div     esi",
                    "41": "mov     rax, [rcx+rdx*8+18h]",
                    "42": "test    rax, rax",
                    "43": "jnz     INSTR101",
                    "44": "jmp     INSTR107",
                    "45": "mov     rax, [rsi]",
                    "46": "mov     rcx, [rsi+8]",
                    "47": "lea     rdx, [rax+0Eh]",
                    "48": "cmp     rdx, rcx",
                    "49": "jbe     short INSTR60",
                    "50": "mov     ebp, [rbx+8F4h]",
                    "51": "test    ebp, ebp",
                    "52": "jz      INSTR107",
                    "53": "mov     eax, [rbx+0A84h]",
                    "54": "cmp     eax, 1",
                    "55": "jz      short INSTR72",
                    "56": "test    eax, eax",
                    "57": "jnz     short INSTR77",
                    "58": "call    prandom_u32; PIC mode",
                    "59": "jmp     short INSTR94",
                    "60": "cmp     word ptr [rax+0Ch], 8",
                    "61": "jnz     short INSTR50",
                    "62": "lea     rdx, [rax+22h]",
                    "63": "cmp     rdx, rcx",
                    "64": "ja      short INSTR50",
                    "65": "cmp     byte ptr [rax+17h], 2",
                    "66": "jnz     short INSTR50",
                    "67": "mov     rax, [rbx+8C8h]",
                    "68": "test    rax, rax",
                    "69": "jnz     short INSTR101",
                    "70": "xor     esi, esi",
                    "71": "jmp     short INSTR97",
                    "72": "mov     rcx, [rbx+938h]",
                    "73": "mov     eax, 1",
                    "74": "xadd    gs:[rcx], eax",
                    "75": "add     eax, 1",
                    "76": "jmp     short INSTR94",
                    "77": "mov     rcx, [rbx+938h]",
                    "78": "mov     rsi, [rbx+0A8Ch]",
                    "79": "mov     eax, 1",
                    "80": "xadd    gs:[rcx], eax",
                    "81": "add     eax, 1",
                    "82": "mov     rdx, rsi",
                    "83": "mov     edi, esi",
                    "84": "mov     rcx, rsi",
                    "85": "shr     rcx, 20h",
                    "86": "shr     rdx, 28h",
                    "87": "imul    rdi, rax",
                    "88": "shr     rdi, 20h",
                    "89": "sub     eax, edi",
                    "90": "shr     eax, cl",
                    "91": "add     eax, edi",
                    "92": "mov     ecx, edx",
                    "93": "shr     eax, cl",
                    "94": "xor     edx, edx",
                    "95": "div     ebp",
                    "96": "mov     esi, edx",
                    "97": "mov     rdi, r14",
                    "98": "call    bond_get_slave_by_id",
                    "99": "test    rax, rax",
                    "100": "jz      short INSTR107",
                    "101": "mov     rax, [rax]",
                    "102": "jmp     short INSTR108",
                    "103": "mov     rdi, rbx",
                    "104": "mov     rsi, offset aUnknownBonding_1; \"Unknown bonding mode %d for xdp xmit\\n\"",
                    "105": "call    netdev_err; PIC mode",
                    "106": "ud2",
                    "107": "xor     eax, eax",
                    "108": "pop     rbx",
                    "109": "pop     r14",
                    "110": "pop     rbp",
                    "111": "retn"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "push    rbp",
                    "3": "mov     edx, [rdi+9E0h]",
                    "4": "mov     rbp, rdi",
                    "5": "cmp     edx, 1",
                    "6": "jz      INSTR57",
                    "7": "lea     r12, [rdi+8C0h]",
                    "8": "jle     short INSTR32",
                    "9": "lea     eax, [rdx-2]",
                    "10": "and     eax, 0FFFFFFFDh",
                    "11": "jnz     bond_xdp_get_xmit_slave_cold",
                    "12": "mov     rdx, [rsi]",
                    "13": "mov     r9, [rsi+8]",
                    "14": "lea     rcx, [rdx+0Eh]",
                    "15": "cmp     r9, rcx",
                    "16": "jnb     INSTR59",
                    "17": "mov     rcx, [rbp+8E0h]",
                    "18": "test    rcx, rcx",
                    "19": "jz      short INSTR53",
                    "20": "mov     esi, [rcx]",
                    "21": "test    esi, esi",
                    "22": "jz      short INSTR53",
                    "23": "xor     edx, edx",
                    "24": "div     esi",
                    "25": "mov     rax, [rcx+rdx*8+18h]",
                    "26": "test    rax, rax",
                    "27": "jz      short INSTR53",
                    "28": "mov     rax, [rax]",
                    "29": "pop     rbp",
                    "30": "pop     r12",
                    "31": "jmp     __x86_return_thunk; PIC mode",
                    "32": "test    edx, edx",
                    "33": "jnz     INSTR78",
                    "34": "mov     rax, [rsi]",
                    "35": "mov     rdx, [rsi+8]",
                    "36": "lea     rcx, [rax+0Eh]",
                    "37": "cmp     rdx, rcx",
                    "38": "jb      short INSTR41",
                    "39": "cmp     word ptr [rax+0Ch], 8",
                    "40": "jz      short INSTR66",
                    "41": "mov     ebp, [rbp+8F4h]",
                    "42": "test    ebp, ebp",
                    "43": "jz      short INSTR53",
                    "44": "mov     rdi, r12",
                    "45": "call    bond_rr_gen_slave_id",
                    "46": "xor     edx, edx",
                    "47": "mov     rdi, r12",
                    "48": "div     ebp",
                    "49": "mov     esi, edx",
                    "50": "call    bond_get_slave_by_id",
                    "51": "test    rax, rax",
                    "52": "jnz     short INSTR28",
                    "53": "xor     eax, eax",
                    "54": "pop     rbp",
                    "55": "pop     r12",
                    "56": "jmp     __x86_return_thunk; PIC mode",
                    "57": "mov     rax, [rdi+8C8h]",
                    "58": "jmp     short INSTR26",
                    "59": "movzx   ecx, word ptr [rdx+0Ch]",
                    "60": "sub     r9d, edx",
                    "61": "mov     r8d, 0Eh",
                    "62": "xor     esi, esi",
                    "63": "mov     rdi, r12",
                    "64": "call    __bond_xmit_hash_constprop_0",
                    "65": "jmp     INSTR17",
                    "66": "lea     rcx, [rax+22h]",
                    "67": "cmp     rdx, rcx",
                    "68": "jb      short INSTR41",
                    "69": "cmp     byte ptr [rax+17h], 2",
                    "70": "jnz     short INSTR41",
                    "71": "mov     rax, [rdi+8C8h]",
                    "72": "test    rax, rax",
                    "73": "jnz     INSTR28",
                    "74": "xor     esi, esi",
                    "75": "mov     rdi, r12",
                    "76": "call    bond_get_slave_by_id",
                    "77": "jmp     INSTR26",
                    "78": "jmp     bond_xdp_get_xmit_slave_cold"
                }
            },
            {
                "filename": "bond_main.bond_xdp_get_xmit_slave.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    rbp",
                    "2": "mov     rbp, rdi",
                    "3": "push    rcx",
                    "4": "mov     edx, [rdi+9E0h]",
                    "5": "cmp     edx, 1",
                    "6": "jz      short INSTR44",
                    "7": "lea     rdi, [rdi+8C0h]",
                    "8": "jg      short INSTR12",
                    "9": "test    edx, edx",
                    "10": "jz      short INSTR16",
                    "11": "jmp     INSTR66",
                    "12": "lea     eax, [rdx-2]",
                    "13": "and     eax, 0FFFFFFFDh",
                    "14": "jz      short INSTR46",
                    "15": "jmp     INSTR66",
                    "16": "mov     rax, [rsi]",
                    "17": "mov     rdx, [rsi+8]",
                    "18": "lea     rcx, [rax+0Eh]",
                    "19": "cmp     rdx, rcx",
                    "20": "jb      short INSTR33",
                    "21": "cmp     word ptr [rax+0Ch], 8",
                    "22": "jnz     short INSTR33",
                    "23": "lea     rcx, [rax+22h]",
                    "24": "cmp     rdx, rcx",
                    "25": "jb      short INSTR33",
                    "26": "cmp     byte ptr [rax+17h], 2",
                    "27": "jnz     short INSTR33",
                    "28": "mov     rax, [rbp+8C8h]",
                    "29": "xor     esi, esi",
                    "30": "test    rax, rax",
                    "31": "jnz     INSTR74",
                    "32": "jmp     short INSTR42",
                    "33": "mov     ebp, [rbp+8F4h]",
                    "34": "test    ebp, ebp",
                    "35": "jz      short INSTR70",
                    "36": "mov     [rsp+10h+var_10], rdi",
                    "37": "call    bond_rr_gen_slave_id",
                    "38": "xor     edx, edx",
                    "39": "mov     rdi, [rsp+10h+var_10]",
                    "40": "div     ebp",
                    "41": "mov     esi, edx",
                    "42": "call    bond_get_slave_by_id",
                    "43": "jmp     short INSTR72",
                    "44": "mov     rax, [rdi+8C8h]",
                    "45": "jmp     short INSTR72",
                    "46": "mov     rdx, [rsi]",
                    "47": "mov     r9, [rsi+8]",
                    "48": "lea     rcx, [rdx+0Eh]",
                    "49": "cmp     r9, rcx",
                    "50": "jb      short INSTR56",
                    "51": "movzx   ecx, word ptr [rdx+0Ch]",
                    "52": "sub     r9d, edx",
                    "53": "mov     r8d, 0Eh",
                    "54": "xor     esi, esi",
                    "55": "call    __bond_xmit_hash_constprop_0",
                    "56": "mov     rcx, [rbp+8E0h]",
                    "57": "test    rcx, rcx",
                    "58": "jz      short INSTR70",
                    "59": "mov     esi, [rcx]",
                    "60": "test    esi, esi",
                    "61": "jz      short INSTR70",
                    "62": "xor     edx, edx",
                    "63": "div     esi",
                    "64": "mov     rax, [rcx+rdx*8+18h]",
                    "65": "jmp     short INSTR72",
                    "66": "mov     rsi, offset aUnknownBonding; \"Unknown bonding mode %d for xdp xmit\\n\"",
                    "67": "mov     rdi, rbp",
                    "68": "call    netdev_err; PIC mode",
                    "69": "ud2",
                    "70": "xor     eax, eax",
                    "71": "jmp     short INSTR75",
                    "72": "test    rax, rax",
                    "73": "jz      short INSTR70",
                    "74": "mov     rax, [rax]",
                    "75": "pop     rdx",
                    "76": "pop     rbp",
                    "77": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-49850",
        "files": [
            {
                "filename": "btf.bpf_core_apply.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "mov     edi, edx",
                    "5": "push    esi",
                    "6": "push    ebx",
                    "7": "mov     ebx, eax",
                    "8": "sub     esp, 68h",
                    "9": "mov     [ebp+var_4C], edx",
                    "10": "mov     eax, [ebp+arg_0]",
                    "11": "mov     [ebp+var_54], ecx",
                    "12": "mov     ecx, 0C48h",
                    "13": "mov     [ebp+var_5C], eax",
                    "14": "mov     eax, fs:__stack_chk_guard",
                    "15": "mov     [ebp+var_10], eax",
                    "16": "mov     eax, [edx+0Ch]",
                    "17": "mov     edx, 0DC0h",
                    "18": "mov     [ebp+var_48], 0",
                    "19": "mov     [ebp+var_44], 0",
                    "20": "mov     [ebp+var_58], eax",
                    "21": "mov     eax, dword ptr ds:kmalloc_caches+30h",
                    "22": "call    kmalloc_trace",
                    "23": "mov     [ebp+var_50], eax",
                    "24": "test    eax, eax",
                    "25": "jz      INSTR379",
                    "26": "mov     esi, [ebx+4]",
                    "27": "mov     ecx, [edi+4]",
                    "28": "mov     edx, [esi+58h]",
                    "29": "mov     eax, esi",
                    "30": "cmp     ecx, edx",
                    "31": "jnb     short INSTR39",
                    "32": "lea     esi, [esi+0]",
                    "33": "lea     esi, [esi+0]",
                    "34": "nop",
                    "35": "mov     eax, [eax+54h]",
                    "36": "mov     edx, [eax+58h]",
                    "37": "cmp     ecx, edx",
                    "38": "jb      short INSTR35",
                    "39": "mov     edi, ecx",
                    "40": "sub     edi, edx",
                    "41": "cmp     edi, [eax+30h]",
                    "42": "jnb     INSTR366",
                    "43": "mov     eax, [eax+4]",
                    "44": "mov     edi, [eax+edi*4]",
                    "45": "test    edi, edi",
                    "46": "jz      INSTR366",
                    "47": "cmp     [ebp+var_58], 6",
                    "48": "jz      INSTR145",
                    "49": "mov     eax, offset cand_cache_mutex",
                    "50": "call    mutex_lock",
                    "51": "mov     eax, [ebp+var_4C]",
                    "52": "mov     [ebp+var_1C], 0",
                    "53": "mov     esi, [ebx+4]",
                    "54": "mov     [ebp+var_18], 0",
                    "55": "mov     [ebp+var_14], 0",
                    "56": "mov     edi, [eax+4]",
                    "57": "call    bpf_get_btf_vmlinux",
                    "58": "mov     [ebp+var_58], eax",
                    "59": "cmp     eax, 0FFFFF000h",
                    "60": "ja      INSTR358",
                    "61": "test    eax, eax",
                    "62": "jz      short INSTR102",
                    "63": "mov     edx, [esi+58h]",
                    "64": "mov     eax, esi",
                    "65": "cmp     edi, edx",
                    "66": "jnb     short INSTR73",
                    "67": "lea     esi, [esi+0]",
                    "68": "xchg    ax, ax",
                    "69": "mov     eax, [eax+54h]",
                    "70": "mov     edx, [eax+58h]",
                    "71": "cmp     edi, edx",
                    "72": "jb      short INSTR69",
                    "73": "sub     edi, edx",
                    "74": "cmp     edi, [eax+30h]",
                    "75": "jnb     short INSTR102",
                    "76": "mov     eax, [eax+4]",
                    "77": "mov     edi, [eax+edi*4]",
                    "78": "test    edi, edi",
                    "79": "jz      short INSTR102",
                    "80": "mov     edx, [edi]",
                    "81": "mov     eax, [esi+5Ch]",
                    "82": "cmp     edx, eax",
                    "83": "jnb     short INSTR91",
                    "84": "lea     esi, [esi+0]",
                    "85": "lea     esi, [esi+0]",
                    "86": "nop",
                    "87": "mov     esi, [esi+54h]",
                    "88": "mov     eax, [esi+5Ch]",
                    "89": "cmp     edx, eax",
                    "90": "jb      short INSTR87",
                    "91": "sub     edx, eax",
                    "92": "cmp     edx, [esi+2Ch]",
                    "93": "jnb     short INSTR102",
                    "94": "add     edx, [esi+10h]",
                    "95": "mov     esi, edx",
                    "96": "jz      short INSTR102",
                    "97": "cmp     byte ptr [edx], 0",
                    "98": "jnz     INSTR184",
                    "99": "lea     esi, [esi+0]",
                    "100": "lea     esi, [esi+0]",
                    "101": "nop",
                    "102": "mov     esi, 0FFFFFFEAh",
                    "103": "mov     eax, [ebp+var_4C]",
                    "104": "mov     eax, [eax+4]",
                    "105": "mov     [esp+8], eax",
                    "106": "mov     eax, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "107": "mov     [esp+4], eax",
                    "108": "mov     eax, [ebx]",
                    "109": "mov     [esp], eax",
                    "110": "call    bpf_log",
                    "111": "lea     esi, [esi+0]",
                    "112": "lea     esi, [esi+0]",
                    "113": "mov     eax, [ebp+var_50]",
                    "114": "call    kfree",
                    "115": "mov     eax, [ebp+var_48]",
                    "116": "call    kfree",
                    "117": "mov     eax, offset cand_cache_mutex",
                    "118": "call    mutex_unlock",
                    "119": "mov     ebx, [ebx]",
                    "120": "test    byte ptr [ebx], 2",
                    "121": "jz      INSTR161",
                    "122": "mov     eax, offset cand_cache_mutex",
                    "123": "call    mutex_lock",
                    "124": "mov     eax, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "125": "mov     [esp+4], eax",
                    "126": "mov     [esp], ebx",
                    "127": "call    bpf_log",
                    "128": "mov     eax, ebx",
                    "129": "mov     edx, offset vmlinux_cand_cache",
                    "130": "call    __print_cand_cache_constprop_0",
                    "131": "mov     edx, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "132": "mov     [esp+4], edx",
                    "133": "mov     [esp], ebx",
                    "134": "call    bpf_log",
                    "135": "mov     eax, ebx",
                    "136": "mov     edx, offset module_cand_cache",
                    "137": "call    __print_cand_cache_constprop_0",
                    "138": "mov     ecx, offset asc_800E383; \"\\n\"",
                    "139": "mov     [esp+4], ecx",
                    "140": "mov     [esp], ebx",
                    "141": "call    bpf_log",
                    "142": "mov     eax, offset cand_cache_mutex",
                    "143": "call    mutex_unlock",
                    "144": "jmp     short INSTR161",
                    "145": "mov     [esp], esi",
                    "146": "mov     eax, [ebp+var_50]",
                    "147": "lea     edi, [ebp+var_40]",
                    "148": "mov     [esp+0Ch], edi",
                    "149": "mov     ecx, [ebp+var_54]",
                    "150": "mov     edx, [ebp+var_4C]",
                    "151": "mov     [esp+8], eax",
                    "152": "lea     eax, [ebp+var_48]",
                    "153": "mov     [esp+4], eax",
                    "154": "mov     eax, [ebx]",
                    "155": "call    bpf_core_calc_relo_insn",
                    "156": "test    eax, eax",
                    "157": "mov     esi, eax",
                    "158": "jz      short INSTR171",
                    "159": "mov     eax, [ebp+var_50]",
                    "160": "call    kfree",
                    "161": "mov     eax, [ebp+var_10]",
                    "162": "sub     eax, fs:__stack_chk_guard",
                    "163": "jnz     INSTR376",
                    "164": "add     esp, 68h",
                    "165": "mov     eax, esi",
                    "166": "pop     ebx",
                    "167": "pop     esi",
                    "168": "pop     edi",
                    "169": "pop     ebp",
                    "170": "retn",
                    "171": "mov     eax, [ebp+var_4C]",
                    "172": "mov     esi, [ebp+var_54]",
                    "173": "mov     edx, [ebp+var_5C]",
                    "174": "mov     ecx, [eax]",
                    "175": "mov     [esp+4], esi",
                    "176": "mov     [esp+8], edi",
                    "177": "mov     [esp], eax",
                    "178": "mov     [ebp+var_4C], ecx",
                    "179": "mov     eax, [ebx]",
                    "180": "shr     ecx, 3",
                    "181": "call    bpf_core_patch_insn",
                    "182": "mov     esi, eax",
                    "183": "jmp     short INSTR159",
                    "184": "mov     eax, edx",
                    "185": "call    bpf_core_essential_name_len",
                    "186": "movzx   edx, byte ptr [edi+7]",
                    "187": "mov     [ebp+var_1C], esi",
                    "188": "and     edx, 1Fh",
                    "189": "mov     word ptr [ebp+var_14], dx",
                    "190": "mov     edx, offset vmlinux_cand_cache",
                    "191": "mov     [ebp+var_18], eax",
                    "192": "lea     eax, [ebp+var_1C]",
                    "193": "call    check_cand_cache_constprop_0",
                    "194": "test    eax, eax",
                    "195": "mov     esi, eax",
                    "196": "jz      INSTR278",
                    "197": "cmp     word ptr [esi+0Ah], 0",
                    "198": "lea     edi, [ebp+var_1C]",
                    "199": "jnz     short INSTR206",
                    "200": "mov     edx, offset module_cand_cache",
                    "201": "mov     eax, edi",
                    "202": "call    check_cand_cache_constprop_0",
                    "203": "test    eax, eax",
                    "204": "mov     esi, eax",
                    "205": "jz      INSTR293",
                    "206": "cmp     esi, 0FFFFF000h",
                    "207": "ja      INSTR103",
                    "208": "movzx   eax, word ptr [esi+0Ah]",
                    "209": "xor     ecx, ecx",
                    "210": "test    eax, eax",
                    "211": "jnz     short INSTR241",
                    "212": "mov     [ebp+var_44], ecx",
                    "213": "mov     eax, [ebp+var_50]",
                    "214": "lea     edi, [ebp+var_40]",
                    "215": "mov     [esp+0Ch], edi",
                    "216": "mov     ecx, [ebp+var_54]",
                    "217": "mov     edx, [ebp+var_4C]",
                    "218": "mov     [esp+8], eax",
                    "219": "lea     eax, [ebp+var_48]",
                    "220": "mov     [esp+4], eax",
                    "221": "mov     eax, [ebx+4]",
                    "222": "mov     [esp], eax",
                    "223": "mov     eax, [ebx]",
                    "224": "call    bpf_core_calc_relo_insn",
                    "225": "test    eax, eax",
                    "226": "mov     esi, eax",
                    "227": "jnz     INSTR113",
                    "228": "mov     eax, [ebp+var_4C]",
                    "229": "mov     esi, [ebp+var_54]",
                    "230": "mov     edx, [ebp+var_5C]",
                    "231": "mov     ecx, [eax]",
                    "232": "mov     [esp+4], esi",
                    "233": "mov     [esp+8], edi",
                    "234": "mov     [esp], eax",
                    "235": "mov     [ebp+var_4C], ecx",
                    "236": "mov     eax, [ebx]",
                    "237": "shr     ecx, 3",
                    "238": "call    bpf_core_patch_insn",
                    "239": "mov     esi, eax",
                    "240": "jmp     INSTR113",
                    "241": "mov     [ebp+var_58], ecx",
                    "242": "shl     eax, 3",
                    "243": "mov     edx, 0DC0h",
                    "244": "call    __kmalloc",
                    "245": "mov     [ebp+var_48], eax",
                    "246": "test    eax, eax",
                    "247": "jz      INSTR377",
                    "248": "cmp     word ptr [esi+0Ah], 0",
                    "249": "mov     ecx, [ebp+var_58]",
                    "250": "jz      INSTR212",
                    "251": "xor     edi, edi",
                    "252": "lea     esi, [esi+0]",
                    "253": "nop",
                    "254": "mov     eax, [esi+edi*8+10h]",
                    "255": "mov     [esp+10h], eax",
                    "256": "mov     eax, [esi]",
                    "257": "mov     [esp+0Ch], eax",
                    "258": "movzx   eax, word ptr [esi+8]",
                    "259": "mov     eax, ds:btf_kind_str[eax*4]",
                    "260": "mov     [esp+8], eax",
                    "261": "mov     eax, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "262": "mov     [esp+4], eax",
                    "263": "mov     eax, [ebx]",
                    "264": "mov     [esp], eax",
                    "265": "call    bpf_log",
                    "266": "mov     ecx, [esi+edi*8+0Ch]",
                    "267": "lea     eax, ds:0[edi*8]",
                    "268": "mov     edx, [ebp+var_48]",
                    "269": "mov     [edx+eax], ecx",
                    "270": "mov     ecx, [esi+edi*8+10h]",
                    "271": "inc     edi",
                    "272": "mov     edx, [ebp+var_48]",
                    "273": "mov     [edx+eax+4], ecx",
                    "274": "movzx   ecx, word ptr [esi+0Ah]",
                    "275": "cmp     ecx, edi",
                    "276": "jg      short INSTR254",
                    "277": "jmp     INSTR212",
                    "278": "mov     edx, [ebp+var_58]",
                    "279": "lea     eax, [ebp+var_1C]",
                    "280": "mov     ecx, 1",
                    "281": "call    bpf_core_add_cands",
                    "282": "cmp     eax, 0FFFFF000h",
                    "283": "mov     edi, eax",
                    "284": "ja      INSTR357",
                    "285": "mov     edx, offset vmlinux_cand_cache",
                    "286": "call    populate_cand_cache_constprop_0",
                    "287": "cmp     eax, 0FFFFF000h",
                    "288": "mov     esi, eax",
                    "289": "ja      INSTR364",
                    "290": "cmp     word ptr [eax+0Ah], 0",
                    "291": "jz      INSTR200",
                    "292": "jmp     INSTR208",
                    "293": "mov     eax, offset btf_idr_lock",
                    "294": "call    _raw_spin_lock_bh",
                    "295": "xor     eax, eax",
                    "296": "mov     [ebp+var_60], ebx",
                    "297": "mov     ebx, [ebp+var_58]",
                    "298": "jmp     short INSTR301",
                    "299": "mov     eax, [ebp+var_40]",
                    "300": "inc     eax",
                    "301": "mov     [ebp+var_40], eax",
                    "302": "lea     edx, [ebp+var_40]",
                    "303": "mov     eax, offset btf_idr",
                    "304": "call    idr_get_next",
                    "305": "test    eax, eax",
                    "306": "mov     esi, eax",
                    "307": "jz      INSTR344",
                    "308": "cmp     byte ptr [esi+9Ch], 0",
                    "309": "jz      short INSTR299",
                    "310": "lea     eax, [esi+60h]",
                    "311": "mov     edx, offset aVmlinux; \"vmlinux\"",
                    "312": "call    strcmp",
                    "313": "test    eax, eax",
                    "314": "jz      short INSTR299",
                    "315": "lea     ecx, [esi+3Ch]",
                    "316": "mov     eax, 1",
                    "317": "lock xadd [esi+3Ch], eax",
                    "318": "test    eax, eax",
                    "319": "jz      INSTR360",
                    "320": "lea     edx, [eax+1]",
                    "321": "or      edx, eax",
                    "322": "js      short INSTR352",
                    "323": "mov     eax, offset btf_idr_lock",
                    "324": "call    _raw_spin_unlock_bh",
                    "325": "mov     eax, ebx",
                    "326": "xor     ecx, ecx",
                    "327": "lea     esi, [esi+0]",
                    "328": "mov     edx, [eax+30h]",
                    "329": "mov     eax, [eax+54h]",
                    "330": "add     ecx, edx",
                    "331": "test    eax, eax",
                    "332": "jnz     short INSTR328",
                    "333": "mov     edx, esi",
                    "334": "mov     eax, edi",
                    "335": "call    bpf_core_add_cands",
                    "336": "mov     edi, eax",
                    "337": "mov     eax, esi",
                    "338": "call    btf_put",
                    "339": "cmp     edi, 0FFFFF000h",
                    "340": "ja      short INSTR356",
                    "341": "mov     eax, offset btf_idr_lock",
                    "342": "call    _raw_spin_lock_bh",
                    "343": "jmp     INSTR299",
                    "344": "mov     eax, offset btf_idr_lock",
                    "345": "mov     ebx, [ebp+var_60]",
                    "346": "call    _raw_spin_unlock_bh",
                    "347": "mov     edx, offset module_cand_cache",
                    "348": "mov     eax, edi",
                    "349": "call    populate_cand_cache_constprop_0",
                    "350": "mov     esi, eax",
                    "351": "jmp     INSTR206",
                    "352": "mov     edx, 1",
                    "353": "mov     eax, ecx",
                    "354": "call    refcount_warn_saturate",
                    "355": "jmp     short INSTR323",
                    "356": "mov     ebx, [ebp+var_60]",
                    "357": "mov     [ebp+var_58], edi",
                    "358": "mov     esi, [ebp+var_58]",
                    "359": "jmp     INSTR103",
                    "360": "mov     edx, 2",
                    "361": "mov     eax, ecx",
                    "362": "call    refcount_warn_saturate",
                    "363": "jmp     INSTR323",
                    "364": "mov     [ebp+var_58], eax",
                    "365": "jmp     short INSTR358",
                    "366": "mov     [esp+0Ch], ecx",
                    "367": "mov     eax, [ebp+var_54]",
                    "368": "mov     ecx, offset aReloUBadTypeId; \"relo #%u: bad type id %u\\n\"",
                    "369": "mov     [esp+4], ecx",
                    "370": "mov     esi, 0FFFFFFEAh",
                    "371": "mov     [esp+8], eax",
                    "372": "mov     eax, [ebx]",
                    "373": "mov     [esp], eax",
                    "374": "call    bpf_log",
                    "375": "jmp     INSTR161",
                    "376": "call    __stack_chk_fail",
                    "377": "mov     esi, 0FFFFFFF4h",
                    "378": "jmp     INSTR113",
                    "379": "mov     esi, 0FFFFFFF4h",
                    "380": "jmp     INSTR161"
                }
            },
            {
                "filename": "btf.bpf_core_apply.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_C0]!",
                    "3": "ADRP            X4, #check_mem_reg@PAGE",
                    "4": "MOV             X29, SP",
                    "5": "STP             X21, X22, [SP,#0xC0+var_A0]",
                    "6": "MOV             X21, X0",
                    "7": "MOV             X22, X1",
                    "8": "LDR             X0, [X4,#check_mem_reg@PAGEOFF]",
                    "9": "STP             X19, X20, [SP,#0xC0+var_B0]",
                    "10": "MRS             X1, SP_EL0",
                    "11": "STP             X23, X24, [SP,#0xC0+var_90]",
                    "12": "MOV             W24, W2",
                    "13": "STR             X3, [SP,#0xC0+var_60]",
                    "14": "LDR             W19, [X22,#0xC]",
                    "15": "LDR             X2, [X1,#0x578]",
                    "16": "STR             X2, [SP,#0xC0+var_8]",
                    "17": "MOV             X2, #0",
                    "18": "MOV             W1, #0xDC0",
                    "19": "MOV             X2, #0xF60",
                    "20": "STP             XZR, XZR, [SP,#0xC0+var_50]",
                    "21": "BL              kmalloc_trace",
                    "22": "CBZ             X0, loc_E9A8",
                    "23": "LDR             X3, [X21,#8]",
                    "24": "MOV             X23, X0",
                    "25": "LDR             W1, [X22,#4]",
                    "26": "MOV             X6, X3",
                    "27": "LDR             W7, [X3,#0x88]",
                    "28": "CMP             W1, W7",
                    "29": "B.CS            loc_E498",
                    "30": "NOP",
                    "31": "LDR             X6, [X6,#0x80]",
                    "32": "LDR             W7, [X6,#0x88]",
                    "33": "CMP             W1, W7",
                    "34": "B.CC            loc_E488",
                    "35": "LDR             W0, [X6,#0x48]",
                    "36": "SUB             W7, W1, W7",
                    "37": "CMP             W7, W0",
                    "38": "B.CS            loc_E978",
                    "39": "LDR             X0, [X6,#8]",
                    "40": "LDR             X0, [X0,W7,UXTW#3]",
                    "41": "CBZ             X0, loc_E978",
                    "42": "CMP             W19, #6",
                    "43": "B.EQ            loc_E640",
                    "44": "STP             X27, X28, [SP,#0xC0+var_70]",
                    "45": "ADRL            X27, btf_idr",
                    "46": "ADD             X0, X27, #0x18",
                    "47": "STP             X25, X26, [SP,#0xC0+var_80]",
                    "48": "BL              mutex_lock",
                    "49": "LDR             W20, [X22,#4]",
                    "50": "STP             XZR, XZR, [SP,#0xC0+var_18]",
                    "51": "LDR             X19, [X21,#8]",
                    "52": "BL              bpf_get_btf_vmlinux",
                    "53": "MOV             X26, X0",
                    "54": "CMN             X0, #1,LSL#12",
                    "55": "B.HI            loc_E958",
                    "56": "CBZ             X0, loc_E6A0",
                    "57": "LDR             W2, [X19,#0x88]",
                    "58": "MOV             X1, X19",
                    "59": "CMP             W20, W2",
                    "60": "B.CS            loc_E518",
                    "61": "NOP",
                    "62": "LDR             X1, [X1,#0x80]",
                    "63": "LDR             W2, [X1,#0x88]",
                    "64": "CMP             W20, W2",
                    "65": "B.CC            loc_E508",
                    "66": "LDR             W0, [X1,#0x48]",
                    "67": "SUB             W20, W20, W2",
                    "68": "CMP             W20, W0",
                    "69": "B.CS            loc_E6A0",
                    "70": "LDR             X0, [X1,#8]",
                    "71": "LDR             X20, [X0,W20,UXTW#3]",
                    "72": "CBZ             X20, loc_E6A0",
                    "73": "LDR             W0, [X19,#0x8C]",
                    "74": "LDR             W1, [X20]",
                    "75": "CMP             W1, W0",
                    "76": "B.CS            loc_E558",
                    "77": "NOP",
                    "78": "LDR             X19, [X19,#0x80]",
                    "79": "LDR             W0, [X19,#0x8C]",
                    "80": "CMP             W1, W0",
                    "81": "B.CC            loc_E548",
                    "82": "LDR             W2, [X19,#0x44]",
                    "83": "SUB             W1, W1, W0",
                    "84": "CMP             W1, W2",
                    "85": "B.CS            loc_E6A0",
                    "86": "LDR             X0, [X19,#0x20]",
                    "87": "ADDS            X19, X0, W1,UXTW",
                    "88": "B.EQ            loc_E6A0",
                    "89": "LDRB            W0, [X0,W1,UXTW]",
                    "90": "CBZ             W0, loc_E6A0",
                    "91": "MOV             X0, X19",
                    "92": "BL              bpf_core_essential_name_len",
                    "93": "STR             X19, [SP,#0xC0+var_18]",
                    "94": "MOV             X4, X0",
                    "95": "ADRL            X28, btf_idr_lock",
                    "96": "LDRB            W2, [X20,#7]",
                    "97": "ADD             X25, X28, #0x20 ; ' '",
                    "98": "MOV             X1, X25",
                    "99": "ADD             X0, SP, #0xC0+var_18",
                    "100": "AND             W2, W2, #0x1F",
                    "101": "STR             W4, [SP,#0xC0+var_10]",
                    "102": "STRH            W2, [SP,#0xC0+var_10+4]",
                    "103": "BL              check_cand_cache.constprop.0",
                    "104": "MOV             X20, X0",
                    "105": "CBZ             X0, loc_E810",
                    "106": "LDRH            W0, [X20,#0xE]",
                    "107": "ADD             X19, SP, #0xC0+var_18",
                    "108": "CBNZ            W0, loc_E5DC",
                    "109": "ADD             X1, X28, #0x118",
                    "110": "MOV             X0, X19",
                    "111": "BL              check_cand_cache.constprop.0",
                    "112": "MOV             X20, X0",
                    "113": "CBZ             X0, loc_E84C",
                    "114": "CMN             X20, #1,LSL#12",
                    "115": "B.HI            loc_E998",
                    "116": "LDRH            W0, [X20,#0xE]",
                    "117": "MOV             W7, #0",
                    "118": "CBNZ            W0, loc_E714",
                    "119": "LDP             X0, X3, [X21]",
                    "120": "ADD             X6, SP, #0xC0+var_40",
                    "121": "MOV             X5, X23",
                    "122": "ADD             X4, SP, #0xC0+var_50",
                    "123": "MOV             W2, W24",
                    "124": "MOV             X1, X22",
                    "125": "STR             W7, [SP,#0xC0+var_48]",
                    "126": "BL              bpf_core_calc_relo_insn",
                    "127": "MOV             W19, W0",
                    "128": "CBNZ            W0, loc_E6B8",
                    "129": "LDR             X0, [X21]",
                    "130": "ADD             X5, SP, #0xC0+var_40",
                    "131": "LDR             X1, [SP,#0xC0+var_60]",
                    "132": "MOV             W4, W24",
                    "133": "LDR             W2, [X22]",
                    "134": "MOV             X3, X22",
                    "135": "LSR             W2, W2, #3",
                    "136": "BL              bpf_core_patch_insn",
                    "137": "MOV             W19, W0",
                    "138": "B               loc_E6B8",
                    "139": "LDR             X0, [X21]",
                    "140": "ADD             X6, SP, #0xC0+var_40",
                    "141": "MOV             X5, X23",
                    "142": "ADD             X4, SP, #0xC0+var_50",
                    "143": "MOV             W2, W24",
                    "144": "MOV             X1, X22",
                    "145": "BL              bpf_core_calc_relo_insn",
                    "146": "MOV             W19, W0",
                    "147": "CBZ             W0, loc_E6EC",
                    "148": "MOV             X0, X23",
                    "149": "BL              kfree",
                    "150": "MRS             X0, SP_EL0",
                    "151": "LDR             X2, [SP,#0xC0+var_8]",
                    "152": "LDR             X1, [X0,#0x578]",
                    "153": "SUBS            X2, X2, X1",
                    "154": "MOV             X1, #0",
                    "155": "B.NE            loc_E9B0",
                    "156": "MOV             W0, W19",
                    "157": "LDP             X19, X20, [SP,#0xC0+var_B0]",
                    "158": "LDP             X21, X22, [SP,#0xC0+var_A0]",
                    "159": "LDP             X23, X24, [SP,#0xC0+var_90]",
                    "160": "LDP             X29, X30, [SP+0xC0+var_C0],#0xC0",
                    "161": "AUTIASP",
                    "162": "RET",
                    "163": "MOV             W19, #0xFFFFFFEA",
                    "164": "LDR             W2, [X22,#4]",
                    "165": "ADRP            X1, #aTargetCandidat@PAGE; \"target candidate search failed for %d\\n\"",
                    "166": "LDR             X0, [X21]",
                    "167": "ADD             X1, X1, #aTargetCandidat@PAGEOFF; \"target candidate search failed for %d\\n\"",
                    "168": "BL              bpf_log",
                    "169": "MOV             X0, X23",
                    "170": "BL              kfree",
                    "171": "LDR             X0, [SP,#0xC0+var_50]",
                    "172": "ADD             X27, X27, #0x18",
                    "173": "BL              kfree",
                    "174": "MOV             X0, X27",
                    "175": "BL              mutex_unlock",
                    "176": "LDR             X20, [X21]",
                    "177": "LDR             W0, [X20]",
                    "178": "TBNZ            W0, #1, loc_E7A4",
                    "179": "LDP             X25, X26, [SP,#0xC0+var_80]",
                    "180": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "181": "B               loc_E66C",
                    "182": "LDR             X0, [X21]",
                    "183": "ADD             X5, SP, #0xC0+var_40",
                    "184": "LDR             X1, [SP,#0xC0+var_60]",
                    "185": "MOV             W4, W24",
                    "186": "LDR             W2, [X22]",
                    "187": "MOV             X3, X22",
                    "188": "LSR             W2, W2, #3",
                    "189": "BL              bpf_core_patch_insn",
                    "190": "MOV             W19, W0",
                    "191": "B               loc_E664",
                    "192": "UBFIZ           X0, X0, #4, #0x10",
                    "193": "MOV             W1, #0xDC0",
                    "194": "STR             W7, [SP,#0xC0+var_54]",
                    "195": "BL              __kmalloc",
                    "196": "STR             X0, [SP,#0xC0+var_50]",
                    "197": "CBZ             X0, loc_E9A0",
                    "198": "LDRH            W0, [X20,#0xE]",
                    "199": "LDR             W7, [SP,#0xC0+var_54]",
                    "200": "CBZ             W0, loc_E5F0",
                    "201": "ADRL            X26, CSWTCH.386",
                    "202": "ADRP            X28, #aCoReRelocating@PAGE; \"CO-RE relocating %s %s: found target ca\"...",
                    "203": "ADD             X26, X26, #0x100",
                    "204": "ADD             X28, X28, #aCoReRelocating@PAGEOFF; \"CO-RE relocating %s %s: found target ca\"...",
                    "205": "MOV             X19, #0",
                    "206": "LDRH            W2, [X20,#0xC]",
                    "207": "ADD             X25, X20, W19,SXTW#4",
                    "208": "LDR             X0, [X21]",
                    "209": "MOV             X1, X28",
                    "210": "LDR             W4, [X25,#0x18]",
                    "211": "LDR             X2, [X26,X2,LSL#3]",
                    "212": "LDR             X3, [X20]",
                    "213": "BL              bpf_log",
                    "214": "LDR             X1, [SP,#0xC0+var_50]",
                    "215": "LSL             X0, X19, #4",
                    "216": "LDR             X2, [X25,#0x10]",
                    "217": "ADD             X19, X19, #1",
                    "218": "STR             X2, [X1,X0]",
                    "219": "LDR             X2, [SP,#0xC0+var_50]",
                    "220": "LDR             W1, [X25,#0x18]",
                    "221": "ADD             X2, X2, X0",
                    "222": "STR             W1, [X2,#8]",
                    "223": "LDRH            W7, [X20,#0xE]",
                    "224": "CMP             W7, W19",
                    "225": "B.GT            loc_E750",
                    "226": "B               loc_E5F0",
                    "227": "MOV             X0, X27",
                    "228": "BL              mutex_lock",
                    "229": "MOV             X0, X20",
                    "230": "ADRP            X1, #aVmlinuxCandCac@PAGE; \"vmlinux_cand_cache:\"",
                    "231": "ADRP            X21, #btf_idr_lock@PAGE",
                    "232": "ADD             X1, X1, #aVmlinuxCandCac@PAGEOFF; \"vmlinux_cand_cache:\"",
                    "233": "ADD             X21, X21, #btf_idr_lock@PAGEOFF",
                    "234": "BL              bpf_log",
                    "235": "ADD             X1, X21, #0x20 ; ' '",
                    "236": "MOV             X0, X20",
                    "237": "BL              __print_cand_cache.constprop.0",
                    "238": "MOV             X0, X20",
                    "239": "ADRL            X1, aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "240": "BL              bpf_log",
                    "241": "ADD             X1, X21, #0x118",
                    "242": "MOV             X0, X20",
                    "243": "BL              __print_cand_cache.constprop.0",
                    "244": "ADRL            X1, asc_F1F8; \"\\n\"",
                    "245": "MOV             X0, X20",
                    "246": "BL              bpf_log",
                    "247": "MOV             X0, X27",
                    "248": "BL              mutex_unlock",
                    "249": "LDP             X25, X26, [SP,#0xC0+var_80]",
                    "250": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "251": "B               loc_E66C",
                    "252": "ADD             X0, SP, #0xC0+var_18",
                    "253": "MOV             X1, X26",
                    "254": "MOV             W2, #1",
                    "255": "BL              bpf_core_add_cands",
                    "256": "MOV             X19, X0",
                    "257": "CMN             X0, #1,LSL#12",
                    "258": "B.HI            loc_E954",
                    "259": "MOV             X1, X25",
                    "260": "BL              populate_cand_cache.constprop.0",
                    "261": "MOV             X20, X0",
                    "262": "CMN             X0, #1,LSL#12",
                    "263": "B.HI            loc_E96C",
                    "264": "LDRH            W0, [X0,#0xE]",
                    "265": "CBZ             W0, loc_E5C8",
                    "266": "B               loc_E5E4",
                    "267": "MOV             X0, X28",
                    "268": "ADRP            X20, #aVmlinux@PAGE; \"vmlinux\"",
                    "269": "BL              _raw_spin_lock_bh",
                    "270": "ADD             X20, X20, #aVmlinux@PAGEOFF; \"vmlinux\"",
                    "271": "MOV             W2, #0",
                    "272": "ADD             X1, SP, #0xC0+var_40",
                    "273": "MOV             X0, X27",
                    "274": "STR             W2, [SP,#0xC0+var_40]",
                    "275": "BL              idr_get_next",
                    "276": "MOV             X25, X0",
                    "277": "CBZ             X0, loc_E92C",
                    "278": "LDRB            W0, [X25,#0xC8]",
                    "279": "CBZ             W0, loc_E904",
                    "280": "MOV             X1, X20; s2",
                    "281": "ADD             X0, X25, #0x90; s1",
                    "282": "BL              strcmp",
                    "283": "CBZ             W0, loc_E904",
                    "284": "ADD             X0, X25, #0x54 ; 'T'",
                    "285": "B               loc_E910",
                    "286": "ADD             X1, X25, #0x54 ; 'T'",
                    "287": "MOV             W2, #1",
                    "288": "LDADD           W2, W1, [X1]",
                    "289": "CBZ             W1, loc_E960",
                    "290": "ADD             W2, W1, #1",
                    "291": "ORR             W1, W2, W1",
                    "292": "TBNZ            W1, #0x1F, loc_E948",
                    "293": "MOV             X0, X28",
                    "294": "BL              _raw_spin_unlock_bh",
                    "295": "MOV             X1, X26",
                    "296": "MOV             W2, #0",
                    "297": "NOP",
                    "298": "LDR             W0, [X1,#0x48]",
                    "299": "LDR             X1, [X1,#0x80]",
                    "300": "ADD             W2, W2, W0",
                    "301": "CBNZ            X1, loc_E8C8",
                    "302": "MOV             X1, X25",
                    "303": "MOV             X0, X19",
                    "304": "BL              bpf_core_add_cands",
                    "305": "MOV             X1, X0",
                    "306": "MOV             X19, X1",
                    "307": "MOV             X0, X25",
                    "308": "BL              btf_put",
                    "309": "CMN             X19, #1,LSL#12",
                    "310": "B.HI            loc_E954",
                    "311": "MOV             X0, X28",
                    "312": "BL              _raw_spin_lock_bh",
                    "313": "LDR             W2, [SP,#0xC0+var_40]",
                    "314": "ADD             W2, W2, #1",
                    "315": "B               loc_E860",
                    "316": "ADD             X3, X25, #0x54 ; 'T'",
                    "317": "PRFM            #0x11, [X3]",
                    "318": "LDXR            W1, [X3]",
                    "319": "ADD             W2, W1, #1",
                    "320": "STXR            W5, W2, [X3]",
                    "321": "CBNZ            W5, loc_E918",
                    "322": "B               loc_E8A4",
                    "323": "MOV             X0, X28",
                    "324": "BL              _raw_spin_unlock_bh",
                    "325": "ADD             X1, X28, #0x118",
                    "326": "MOV             X0, X19",
                    "327": "BL              populate_cand_cache.constprop.0",
                    "328": "MOV             X20, X0",
                    "329": "B               loc_E5DC",
                    "330": "MOV             W1, #1",
                    "331": "BL              refcount_warn_saturate",
                    "332": "B               loc_E8B4",
                    "333": "MOV             X26, X19",
                    "334": "MOV             W19, W26",
                    "335": "B               loc_E6A4",
                    "336": "MOV             W1, #2",
                    "337": "BL              refcount_warn_saturate",
                    "338": "B               loc_E8B4",
                    "339": "MOV             X26, X0",
                    "340": "MOV             W19, W26",
                    "341": "B               loc_E6A4",
                    "342": "LDR             X0, [X21]",
                    "343": "MOV             W3, W1",
                    "344": "MOV             W2, W24",
                    "345": "ADRP            X1, #aReloUBadTypeId@PAGE; \"relo #%u: bad type id %u\\n\"",
                    "346": "MOV             W19, #0xFFFFFFEA",
                    "347": "ADD             X1, X1, #aReloUBadTypeId@PAGEOFF; \"relo #%u: bad type id %u\\n\"",
                    "348": "BL              bpf_log",
                    "349": "B               loc_E66C",
                    "350": "MOV             W19, W20",
                    "351": "B               loc_E6A4",
                    "352": "MOV             W19, #0xFFFFFFF4",
                    "353": "B               loc_E6B8",
                    "354": "MOV             W19, #0xFFFFFFF4",
                    "355": "B               loc_E66C",
                    "356": "STP             X25, X26, [SP,#0xC0+var_80]",
                    "357": "STP             X27, X28, [SP,#0xC0+var_70]",
                    "358": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "btf.bpf_core_apply.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 80h",
                    "8": "mov     r13, rcx",
                    "9": "mov     ebp, edx",
                    "10": "mov     r14, rsi",
                    "11": "mov     r15, rdi",
                    "12": "mov     rax, gs:28h",
                    "13": "mov     [rsp+0B0h+var_38], rax",
                    "14": "mov     r12d, [rsi+0Ch]",
                    "15": "mov     [rsp+0B0h+var_70], 0",
                    "16": "mov     [rsp+0B0h+var_78], 0",
                    "17": "mov     rdi, qword ptr cs:kmalloc_caches+60h",
                    "18": "mov     edx, 0F60h",
                    "19": "mov     esi, 0DC0h",
                    "20": "call    kmalloc_trace; PIC mode",
                    "21": "test    rax, rax",
                    "22": "jz      INSTR75",
                    "23": "mov     rbx, rax",
                    "24": "mov     rcx, [r15+8]",
                    "25": "mov     eax, [r14+4]",
                    "26": "mov     esi, [rcx+88h]",
                    "27": "mov     rdx, rcx",
                    "28": "cmp     esi, eax",
                    "29": "jbe     short INSTR35",
                    "30": "mov     rdx, rcx",
                    "31": "mov     rdx, [rdx+80h]",
                    "32": "mov     esi, [rdx+88h]",
                    "33": "cmp     esi, eax",
                    "34": "ja      short INSTR31",
                    "35": "mov     edi, eax",
                    "36": "sub     edi, esi",
                    "37": "cmp     edi, [rdx+48h]",
                    "38": "jnb     short INSTR68",
                    "39": "mov     rdx, [rdx+8]",
                    "40": "mov     esi, edi",
                    "41": "cmp     qword ptr [rdx+rsi*8], 0",
                    "42": "jz      short INSTR68",
                    "43": "cmp     r12d, 6",
                    "44": "jnz     short INSTR77",
                    "45": "mov     [rsp+0B0h+var_88], r13",
                    "46": "mov     rdi, [r15]",
                    "47": "lea     rax, [rsp+0B0h+var_60]",
                    "48": "lea     r8, [rsp+0B0h+var_78]",
                    "49": "mov     rsi, r14",
                    "50": "mov     edx, ebp",
                    "51": "mov     r9, rbx",
                    "52": "push    rax",
                    "53": "call    bpf_core_calc_relo_insn; PIC mode",
                    "54": "add     rsp, 8",
                    "55": "mov     r13d, eax",
                    "56": "test    eax, eax",
                    "57": "jnz     INSTR189",
                    "58": "mov     rdi, [r15]",
                    "59": "mov     edx, [r14]",
                    "60": "shr     edx, 3",
                    "61": "lea     r9, [rsp+0B0h+var_60]",
                    "62": "mov     rsi, [rsp+0B0h+var_88]",
                    "63": "mov     rcx, r14",
                    "64": "mov     r8d, ebp",
                    "65": "call    bpf_core_patch_insn; PIC mode",
                    "66": "mov     r13d, eax",
                    "67": "jmp     INSTR189",
                    "68": "mov     rdi, [r15]",
                    "69": "mov     rsi, offset aReloUBadTypeId; \"relo #%u: bad type id %u\\n\"",
                    "70": "mov     edx, ebp",
                    "71": "mov     ecx, eax",
                    "72": "call    bpf_log; PIC mode",
                    "73": "mov     r13d, 0FFFFFFEAh",
                    "74": "jmp     INSTR219",
                    "75": "mov     r13d, 0FFFFFFF4h",
                    "76": "jmp     INSTR219",
                    "77": "mov     [rsp+0B0h+var_9C], ebp",
                    "78": "mov     [rsp+0B0h+var_90], rbx",
                    "79": "mov     rdi, offset cand_cache_mutex",
                    "80": "call    mutex_lock; PIC mode",
                    "81": "mov     ebx, [r14+4]",
                    "82": "mov     [rsp+0B0h+var_58], 0",
                    "83": "mov     rbp, [r15+8]",
                    "84": "call    bpf_get_btf_vmlinux; PIC mode",
                    "85": "cmp     rax, 0FFFFFFFFFFFFF001h",
                    "86": "jb      INSTR130",
                    "87": "mov     [rsp+0B0h+var_88], r13",
                    "88": "mov     r13, rax",
                    "89": "mov     rbx, [rsp+0B0h+var_90]",
                    "90": "mov     ebp, [rsp+0B0h+var_9C]",
                    "91": "cmp     r13, 0FFFFFFFFFFFFF001h",
                    "92": "jnb     INSTR185",
                    "93": "mov     [rsp+0B0h+var_AC], r12d",
                    "94": "mov     [rsp+0B0h+var_A8], r15",
                    "95": "movzx   edi, word ptr [r13+0Eh]",
                    "96": "xor     r15d, r15d",
                    "97": "test    rdi, rdi",
                    "98": "jz      INSTR250",
                    "99": "shl     rdi, 4",
                    "100": "mov     esi, 0DC0h",
                    "101": "call    __kmalloc; PIC mode",
                    "102": "mov     [rsp+0B0h+var_78], rax",
                    "103": "test    rax, rax",
                    "104": "jz      INSTR256",
                    "105": "cmp     word ptr [r13+0Eh], 0",
                    "106": "jz      INSTR250",
                    "107": "mov     r12, rax",
                    "108": "mov     ebp, 1",
                    "109": "xor     ebx, ebx",
                    "110": "mov     rax, [rsp+0B0h+var_A8]",
                    "111": "mov     rdi, [rax]",
                    "112": "movzx   eax, word ptr [r13+0Ch]",
                    "113": "mov     rdx, ds:btf_kind_str[rax*8]",
                    "114": "mov     rcx, [r13+0]",
                    "115": "mov     r8d, [r13+rbx+18h]",
                    "116": "mov     rsi, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "117": "call    bpf_log; PIC mode",
                    "118": "mov     rax, [r13+rbx+10h]",
                    "119": "mov     [r12+rbx], rax",
                    "120": "mov     eax, [r13+rbx+18h]",
                    "121": "mov     rcx, [rsp+0B0h+var_78]",
                    "122": "mov     [rcx+rbx+8], eax",
                    "123": "movzx   r15d, word ptr [r13+0Eh]",
                    "124": "cmp     rbp, r15",
                    "125": "jnb     INSTR248",
                    "126": "mov     r12, [rsp+0B0h+var_78]",
                    "127": "add     rbx, 10h",
                    "128": "add     rbp, 1",
                    "129": "jmp     short INSTR110",
                    "130": "mov     [rsp+0B0h+var_AC], r12d",
                    "131": "test    rax, rax",
                    "132": "jz      INSTR182",
                    "133": "mov     ecx, [rbp+88h]",
                    "134": "mov     rdx, rbp",
                    "135": "cmp     ecx, ebx",
                    "136": "jbe     short INSTR142",
                    "137": "mov     rdx, rbp",
                    "138": "mov     rdx, [rdx+80h]",
                    "139": "mov     ecx, [rdx+88h]",
                    "140": "cmp     ecx, ebx",
                    "141": "ja      short INSTR138",
                    "142": "sub     ebx, ecx",
                    "143": "cmp     ebx, [rdx+48h]",
                    "144": "jnb     INSTR182",
                    "145": "mov     rdx, [rdx+8]",
                    "146": "mov     ecx, ebx",
                    "147": "mov     r12, [rdx+rcx*8]",
                    "148": "test    r12, r12",
                    "149": "jz      short INSTR182",
                    "150": "mov     edx, [r12]",
                    "151": "mov     ecx, [rbp+8Ch]",
                    "152": "cmp     ecx, edx",
                    "153": "jbe     short INSTR156",
                    "154": "mov     rbp, [rbp+80h]",
                    "155": "jmp     short INSTR151",
                    "156": "sub     edx, ecx",
                    "157": "cmp     edx, [rbp+44h]",
                    "158": "jnb     short INSTR182",
                    "159": "mov     rbx, [rbp+20h]",
                    "160": "mov     ebp, edx",
                    "161": "mov     rcx, rbx",
                    "162": "add     rcx, rbp",
                    "163": "jz      short INSTR182",
                    "164": "cmp     byte ptr [rcx], 0",
                    "165": "jz      short INSTR182",
                    "166": "mov     [rsp+0B0h+var_80], rax",
                    "167": "mov     [rsp+0B0h+s2], rcx",
                    "168": "mov     rdi, rcx; s",
                    "169": "call    strlen; PIC mode",
                    "170": "mov     ecx, eax",
                    "171": "add     ecx, 0FFFFFFFBh",
                    "172": "mov     [rsp+0B0h+var_88], r13",
                    "173": "js      INSTR260",
                    "174": "mov     ecx, ecx",
                    "175": "lea     edi, [rax-4]",
                    "176": "lea     rdx, [rbx+rbp]",
                    "177": "add     rdx, 4",
                    "178": "mov     rbx, [rsp+0B0h+var_90]",
                    "179": "mov     ebp, [rsp+0B0h+var_9C]",
                    "180": "mov     r8, [rsp+0B0h+s2]",
                    "181": "jmp     INSTR236",
                    "182": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "183": "mov     r12d, [rsp+0B0h+var_AC]",
                    "184": "mov     rbx, [rsp+0B0h+var_90]",
                    "185": "mov     rdi, [r15]",
                    "186": "mov     edx, [r14+4]",
                    "187": "mov     rsi, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "188": "call    bpf_log; PIC mode",
                    "189": "mov     rdi, rbx",
                    "190": "call    kfree; PIC mode",
                    "191": "cmp     r12d, 6",
                    "192": "jz      INSTR219",
                    "193": "mov     rdi, [rsp+0B0h+var_78]",
                    "194": "call    kfree; PIC mode",
                    "195": "mov     rdi, offset cand_cache_mutex",
                    "196": "call    mutex_unlock; PIC mode",
                    "197": "mov     rbx, [r15]",
                    "198": "test    byte ptr [rbx], 2",
                    "199": "jz      short INSTR219",
                    "200": "mov     rdi, offset cand_cache_mutex",
                    "201": "call    mutex_lock; PIC mode",
                    "202": "mov     rdi, rbx",
                    "203": "mov     rsi, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "204": "call    bpf_log; PIC mode",
                    "205": "mov     rdi, rbx",
                    "206": "mov     rsi, offset vmlinux_cand_cache",
                    "207": "call    __print_cand_cache",
                    "208": "mov     rdi, rbx",
                    "209": "mov     rsi, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "210": "call    bpf_log; PIC mode",
                    "211": "mov     rdi, rbx",
                    "212": "mov     rsi, offset module_cand_cache",
                    "213": "call    __print_cand_cache",
                    "214": "mov     rdi, rbx",
                    "215": "mov     rsi, offset asc_F669; \"\\n\"",
                    "216": "call    bpf_log; PIC mode",
                    "217": "mov     rdi, offset cand_cache_mutex",
                    "218": "call    mutex_unlock; PIC mode",
                    "219": "mov     rax, gs:28h",
                    "220": "cmp     rax, [rsp+0B0h+var_38]",
                    "221": "jnz     INSTR442",
                    "222": "mov     eax, r13d",
                    "223": "add     rsp, 80h",
                    "224": "pop     rbx",
                    "225": "pop     r12",
                    "226": "pop     r13",
                    "227": "pop     r14",
                    "228": "pop     r15",
                    "229": "pop     rbp",
                    "230": "retn",
                    "231": "lea     rsi, [rcx-1]",
                    "232": "add     edi, 0FFFFFFFFh",
                    "233": "test    rcx, rcx",
                    "234": "mov     rcx, rsi",
                    "235": "jle     short INSTR263",
                    "236": "cmp     byte ptr [rdx+rcx-4], 5Fh ; '_'",
                    "237": "jz      short INSTR231",
                    "238": "cmp     byte ptr [rdx+rcx-3], 5Fh ; '_'",
                    "239": "jnz     short INSTR231",
                    "240": "cmp     byte ptr [rdx+rcx-2], 5Fh ; '_'",
                    "241": "jnz     short INSTR231",
                    "242": "cmp     byte ptr [rdx+rcx-1], 5Fh ; '_'",
                    "243": "jnz     short INSTR231",
                    "244": "cmp     byte ptr [rdx+rcx], 5Fh ; '_'",
                    "245": "jz      short INSTR231",
                    "246": "mov     eax, edi",
                    "247": "jmp     short INSTR263",
                    "248": "mov     rbx, [rsp+0B0h+var_90]",
                    "249": "mov     ebp, [rsp+0B0h+var_9C]",
                    "250": "mov     dword ptr [rsp+0B0h+var_70], r15d",
                    "251": "mov     r15, [rsp+0B0h+var_A8]",
                    "252": "mov     rcx, [r15+8]",
                    "253": "mov     r12d, [rsp+0B0h+var_AC]",
                    "254": "mov     r13, [rsp+0B0h+var_88]",
                    "255": "jmp     INSTR45",
                    "256": "mov     r13d, 0FFFFFFF4h",
                    "257": "mov     r15, [rsp+0B0h+var_A8]",
                    "258": "mov     r12d, [rsp+0B0h+var_AC]",
                    "259": "jmp     INSTR189",
                    "260": "mov     rbx, [rsp+0B0h+var_90]",
                    "261": "mov     ebp, [rsp+0B0h+var_9C]",
                    "262": "mov     r8, [rsp+0B0h+s2]",
                    "263": "mov     [rsp+0B0h+var_60], r8",
                    "264": "movzx   ecx, byte ptr [r12+7]",
                    "265": "and     ecx, 1Fh",
                    "266": "mov     word ptr [rsp+0B0h+var_58+4], cx",
                    "267": "mov     dword ptr [rsp+0B0h+var_58], eax",
                    "268": "lea     rdi, [rsp+0B0h+var_60]",
                    "269": "mov     [rsp+0B0h+var_A8], rdi",
                    "270": "mov     r12, rax",
                    "271": "call    hash_cands",
                    "272": "mov     ecx, eax",
                    "273": "imul    rcx, 8421085h",
                    "274": "shr     rcx, 20h",
                    "275": "mov     edx, eax",
                    "276": "sub     edx, ecx",
                    "277": "shr     edx, 1",
                    "278": "add     edx, ecx",
                    "279": "shr     edx, 4",
                    "280": "mov     ecx, edx",
                    "281": "shl     ecx, 5",
                    "282": "sub     edx, ecx",
                    "283": "add     edx, eax",
                    "284": "mov     r13, ds:vmlinux_cand_cache[rdx*8]",
                    "285": "test    r13, r13",
                    "286": "jz      short INSTR296",
                    "287": "mov     rsi, r12",
                    "288": "cmp     [r13+8], esi",
                    "289": "jnz     short INSTR296",
                    "290": "mov     rdi, [r13+0]; s1",
                    "291": "mov     edx, esi; n",
                    "292": "mov     rsi, [rsp+0B0h+s2]; s2",
                    "293": "call    strncmp; PIC mode",
                    "294": "test    eax, eax",
                    "295": "jz      short INSTR315",
                    "296": "lea     rdi, [rsp+0B0h+var_60]",
                    "297": "mov     rsi, [rsp+0B0h+var_80]",
                    "298": "mov     edx, 1",
                    "299": "call    bpf_core_add_cands",
                    "300": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "301": "mov     r12d, [rsp+0B0h+var_AC]",
                    "302": "jbe     short INSTR305",
                    "303": "mov     r13, rax",
                    "304": "jmp     INSTR91",
                    "305": "mov     [rsp+0B0h+var_A8], rax",
                    "306": "mov     rdi, rax",
                    "307": "mov     rsi, offset vmlinux_cand_cache",
                    "308": "call    populate_cand_cache",
                    "309": "mov     r13, rax",
                    "310": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "311": "ja      INSTR91",
                    "312": "cmp     word ptr [r13+0Eh], 0",
                    "313": "jnz     INSTR91",
                    "314": "jmp     short INSTR318",
                    "315": "cmp     word ptr [r13+0Eh], 0",
                    "316": "mov     r12d, [rsp+0B0h+var_AC]",
                    "317": "jnz     INSTR91",
                    "318": "mov     rdi, [rsp+0B0h+var_A8]",
                    "319": "call    hash_cands",
                    "320": "mov     ecx, eax",
                    "321": "imul    rcx, 8421085h",
                    "322": "shr     rcx, 20h",
                    "323": "mov     edx, eax",
                    "324": "sub     edx, ecx",
                    "325": "shr     edx, 1",
                    "326": "add     edx, ecx",
                    "327": "shr     edx, 4",
                    "328": "mov     ecx, edx",
                    "329": "shl     ecx, 5",
                    "330": "sub     edx, ecx",
                    "331": "add     edx, eax",
                    "332": "mov     r13, ds:module_cand_cache[rdx*8]",
                    "333": "test    r13, r13",
                    "334": "jz      short INSTR345",
                    "335": "mov     edx, [r13+8]; n",
                    "336": "mov     rax, [rsp+0B0h+var_A8]",
                    "337": "cmp     edx, [rax+8]",
                    "338": "jnz     short INSTR345",
                    "339": "mov     rdi, [r13+0]; s1",
                    "340": "mov     rax, [rsp+0B0h+var_A8]",
                    "341": "mov     rsi, [rax]; s2",
                    "342": "call    strncmp; PIC mode",
                    "343": "test    eax, eax",
                    "344": "jz      INSTR91",
                    "345": "mov     rdi, offset btf_idr_lock",
                    "346": "call    _raw_spin_lock_bh; PIC mode",
                    "347": "mov     [rsp+0B0h+var_64], 0",
                    "348": "lea     rsi, [rsp+0B0h+var_64]",
                    "349": "mov     rdi, offset btf_idr",
                    "350": "call    idr_get_next; PIC mode",
                    "351": "test    rax, rax",
                    "352": "jz      INSTR436",
                    "353": "mov     r13, rax",
                    "354": "jmp     short INSTR362",
                    "355": "add     [rsp+0B0h+var_64], 1",
                    "356": "mov     rdi, offset btf_idr",
                    "357": "lea     rsi, [rsp+0B0h+var_64]",
                    "358": "call    idr_get_next; PIC mode",
                    "359": "mov     r13, rax",
                    "360": "test    rax, rax",
                    "361": "jz      INSTR436",
                    "362": "cmp     byte ptr [r13+0C8h], 0",
                    "363": "jz      short INSTR355",
                    "364": "lea     rdi, [r13+90h]; s1",
                    "365": "mov     rsi, offset s2; \"vmlinux\"",
                    "366": "call    strcmp; PIC mode",
                    "367": "test    eax, eax",
                    "368": "jz      short INSTR355",
                    "369": "lea     rax, [r13+54h]",
                    "370": "mov     [rsp+0B0h+s2], rax",
                    "371": "mov     eax, 1",
                    "372": "lock xadd [r13+54h], eax",
                    "373": "test    eax, eax",
                    "374": "jz      INSTR418",
                    "375": "lea     ecx, [rax+1]",
                    "376": "or      ecx, eax",
                    "377": "js      INSTR420",
                    "378": "mov     rdi, offset btf_idr_lock",
                    "379": "call    _raw_spin_unlock_bh; PIC mode",
                    "380": "xor     edx, edx",
                    "381": "mov     rax, [rsp+0B0h+var_80]",
                    "382": "add     edx, [rax+48h]",
                    "383": "mov     rax, [rax+80h]",
                    "384": "test    rax, rax",
                    "385": "jnz     short INSTR382",
                    "386": "mov     rdi, [rsp+0B0h+var_A8]",
                    "387": "mov     rsi, r13",
                    "388": "call    bpf_core_add_cands",
                    "389": "mov     ecx, 0FFFFFFFFh",
                    "390": "lock xadd [r13+54h], ecx",
                    "391": "cmp     ecx, 1",
                    "392": "mov     [rsp+0B0h+var_A8], rax",
                    "393": "jnz     short INSTR412",
                    "394": "mov     rdi, offset btf_idr_lock",
                    "395": "call    _raw_spin_lock_irqsave; PIC mode",
                    "396": "mov     r12, rax",
                    "397": "mov     esi, [r13+58h]",
                    "398": "mov     rdi, offset btf_idr",
                    "399": "call    idr_remove; PIC mode",
                    "400": "mov     rdi, offset btf_idr_lock",
                    "401": "mov     rsi, r12",
                    "402": "mov     r12d, [rsp+0B0h+var_AC]",
                    "403": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "404": "add     r13, 60h ; '`'",
                    "405": "mov     rdi, r13",
                    "406": "mov     rsi, offset btf_free_rcu",
                    "407": "call    call_rcu; PIC mode",
                    "408": "mov     rax, [rsp+0B0h+var_A8]",
                    "409": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "410": "jbe     short INSTR415",
                    "411": "jmp     short INSTR434",
                    "412": "jl      short INSTR427",
                    "413": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "414": "ja      short INSTR434",
                    "415": "mov     rdi, offset btf_idr_lock",
                    "416": "call    _raw_spin_lock_bh; PIC mode",
                    "417": "jmp     INSTR355",
                    "418": "mov     esi, 2",
                    "419": "jmp     short INSTR421",
                    "420": "mov     esi, 1",
                    "421": "mov     rdi, [rsp+0B0h+s2]",
                    "422": "call    refcount_warn_saturate; PIC mode",
                    "423": "mov     r12d, [rsp+0B0h+var_AC]",
                    "424": "mov     rbx, [rsp+0B0h+var_90]",
                    "425": "mov     ebp, [rsp+0B0h+var_9C]",
                    "426": "jmp     INSTR378",
                    "427": "mov     r13, rax",
                    "428": "mov     rdi, [rsp+0B0h+s2]",
                    "429": "mov     esi, 3",
                    "430": "call    refcount_warn_saturate; PIC mode",
                    "431": "mov     rax, r13",
                    "432": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "433": "jbe     short INSTR415",
                    "434": "mov     r13, [rsp+0B0h+var_A8]",
                    "435": "jmp     INSTR91",
                    "436": "mov     rdi, offset btf_idr_lock",
                    "437": "call    _raw_spin_unlock_bh; PIC mode",
                    "438": "mov     rdi, [rsp+0B0h+var_A8]",
                    "439": "mov     rsi, offset module_cand_cache",
                    "440": "call    populate_cand_cache",
                    "441": "jmp     INSTR303",
                    "442": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "btf.bpf_core_apply.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "mov     r12, rsi",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rbx, rdi",
                    "9": "sub     rsp, 68h",
                    "10": "mov     rdi, qword ptr cs:kmalloc_caches+60h",
                    "11": "mov     r15d, [rsi+0Ch]",
                    "12": "mov     esi, 0DC0h",
                    "13": "mov     [rsp+98h+var_94], edx",
                    "14": "mov     edx, 0F60h",
                    "15": "mov     [rsp+98h+var_90], rcx",
                    "16": "mov     rax, gs:28h",
                    "17": "mov     [rsp+98h+var_38], rax",
                    "18": "xor     eax, eax",
                    "19": "mov     [rsp+98h+var_80], 0",
                    "20": "mov     [rsp+98h+var_78], 0",
                    "21": "call    kmalloc_trace; PIC mode",
                    "22": "test    rax, rax",
                    "23": "jz      INSTR356",
                    "24": "mov     r11, [rbx+8]",
                    "25": "mov     ecx, [r12+4]",
                    "26": "mov     rbp, rax",
                    "27": "mov     edx, [r11+88h]",
                    "28": "mov     rax, r11",
                    "29": "cmp     ecx, edx",
                    "30": "jnb     short INSTR35",
                    "31": "mov     rax, [rax+80h]",
                    "32": "mov     edx, [rax+88h]",
                    "33": "cmp     ecx, edx",
                    "34": "jb      short INSTR31",
                    "35": "mov     esi, ecx",
                    "36": "sub     esi, edx",
                    "37": "cmp     esi, [rax+48h]",
                    "38": "jnb     INSTR346",
                    "39": "mov     rax, [rax+8]",
                    "40": "cmp     qword ptr [rax+rsi*8], 0",
                    "41": "jz      INSTR346",
                    "42": "cmp     r15d, 6",
                    "43": "jz      INSTR122",
                    "44": "mov     rdi, offset cand_cache_mutex",
                    "45": "call    mutex_lock; PIC mode",
                    "46": "mov     r13d, [r12+4]",
                    "47": "mov     r15, [rbx+8]",
                    "48": "mov     [rsp+98h+src], 0",
                    "49": "mov     [rsp+98h+var_40], 0",
                    "50": "call    bpf_get_btf_vmlinux; PIC mode",
                    "51": "mov     rcx, rax",
                    "52": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "53": "ja      INSTR337",
                    "54": "test    rax, rax",
                    "55": "jz      short INSTR88",
                    "56": "mov     edx, [r15+88h]",
                    "57": "mov     rax, r15",
                    "58": "cmp     r13d, edx",
                    "59": "jnb     short INSTR64",
                    "60": "mov     rax, [rax+80h]",
                    "61": "mov     edx, [rax+88h]",
                    "62": "cmp     r13d, edx",
                    "63": "jb      short INSTR60",
                    "64": "mov     esi, r13d",
                    "65": "sub     esi, edx",
                    "66": "cmp     esi, [rax+48h]",
                    "67": "jnb     short INSTR88",
                    "68": "mov     rax, [rax+8]",
                    "69": "mov     r14, [rax+rsi*8]",
                    "70": "test    r14, r14",
                    "71": "jz      short INSTR88",
                    "72": "mov     edx, [r14]",
                    "73": "mov     eax, [r15+8Ch]",
                    "74": "cmp     edx, eax",
                    "75": "jnb     short INSTR80",
                    "76": "mov     r15, [r15+80h]",
                    "77": "mov     eax, [r15+8Ch]",
                    "78": "cmp     edx, eax",
                    "79": "jb      short INSTR76",
                    "80": "sub     edx, eax",
                    "81": "cmp     edx, [r15+44h]",
                    "82": "jnb     short INSTR88",
                    "83": "add     rdx, [r15+20h]",
                    "84": "mov     r15, rdx",
                    "85": "jz      short INSTR88",
                    "86": "cmp     byte ptr [rdx], 0",
                    "87": "jnz     INSTR160",
                    "88": "mov     r15d, 0FFFFFFEAh",
                    "89": "mov     edx, [r12+4]",
                    "90": "mov     rdi, [rbx]",
                    "91": "mov     rsi, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "92": "call    bpf_log; PIC mode",
                    "93": "mov     rdi, rbp",
                    "94": "call    kfree; PIC mode",
                    "95": "mov     rdi, [rsp+98h+var_80]",
                    "96": "call    kfree; PIC mode",
                    "97": "mov     rdi, offset cand_cache_mutex",
                    "98": "call    mutex_unlock; PIC mode",
                    "99": "mov     rbp, [rbx]",
                    "100": "test    byte ptr [rbp+0], 2",
                    "101": "jz      INSTR137",
                    "102": "mov     rdi, offset cand_cache_mutex",
                    "103": "call    mutex_lock; PIC mode",
                    "104": "mov     rdi, rbp",
                    "105": "mov     rsi, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "106": "call    bpf_log; PIC mode",
                    "107": "mov     rdi, rbp",
                    "108": "mov     rsi, offset vmlinux_cand_cache",
                    "109": "call    __print_cand_cache_constprop_0",
                    "110": "mov     rdi, rbp",
                    "111": "mov     rsi, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "112": "call    bpf_log; PIC mode",
                    "113": "mov     rdi, rbp",
                    "114": "mov     rsi, offset module_cand_cache",
                    "115": "call    __print_cand_cache_constprop_0",
                    "116": "mov     rdi, rbp",
                    "117": "mov     rsi, offset asc_DCA3; \"\\n\"",
                    "118": "call    bpf_log; PIC mode",
                    "119": "mov     rdi, offset cand_cache_mutex",
                    "120": "call    mutex_unlock; PIC mode",
                    "121": "jmp     short INSTR137",
                    "122": "lea     r10, [rsp+98h+var_70]",
                    "123": "mov     rdi, [rbx]",
                    "124": "mov     r9, rbp",
                    "125": "mov     rcx, r11",
                    "126": "push    r10",
                    "127": "mov     edx, [rsp+0A0h+var_94]",
                    "128": "mov     rsi, r12",
                    "129": "lea     r8, [rsp+0A0h+var_80]",
                    "130": "call    bpf_core_calc_relo_insn; PIC mode",
                    "131": "mov     r15d, eax",
                    "132": "pop     rax",
                    "133": "test    r15d, r15d",
                    "134": "jz      short INSTR149",
                    "135": "mov     rdi, rbp",
                    "136": "call    kfree; PIC mode",
                    "137": "mov     rax, [rsp+98h+var_38]",
                    "138": "sub     rax, gs:28h",
                    "139": "jnz     INSTR358",
                    "140": "add     rsp, 68h",
                    "141": "mov     eax, r15d",
                    "142": "pop     rbx",
                    "143": "pop     rbp",
                    "144": "pop     r12",
                    "145": "pop     r13",
                    "146": "pop     r14",
                    "147": "pop     r15",
                    "148": "jmp     __x86_return_thunk; PIC mode",
                    "149": "mov     edx, [r12]",
                    "150": "lea     r10, [rsp+98h+var_70]",
                    "151": "mov     rdi, [rbx]",
                    "152": "mov     rcx, r12",
                    "153": "mov     r8d, [rsp+98h+var_94]",
                    "154": "mov     rsi, [rsp+98h+var_90]",
                    "155": "mov     r9, r10",
                    "156": "shr     edx, 3",
                    "157": "call    bpf_core_patch_insn; PIC mode",
                    "158": "mov     r15d, eax",
                    "159": "jmp     short INSTR135",
                    "160": "mov     rdi, rdx",
                    "161": "mov     [rsp+98h+var_88], rcx",
                    "162": "call    bpf_core_essential_name_len; PIC mode",
                    "163": "mov     rsi, offset vmlinux_cand_cache",
                    "164": "mov     r8, rax",
                    "165": "mov     [rsp+98h+src], r15",
                    "166": "movzx   eax, byte ptr [r14+7]",
                    "167": "lea     rdi, [rsp+98h+src]",
                    "168": "mov     dword ptr [rsp+98h+var_40], r8d",
                    "169": "and     eax, 1Fh",
                    "170": "mov     word ptr [rsp+98h+var_40+4], ax",
                    "171": "call    check_cand_cache_constprop_0",
                    "172": "mov     rcx, [rsp+98h+var_88]",
                    "173": "test    rax, rax",
                    "174": "mov     r14, rax",
                    "175": "jz      INSTR250",
                    "176": "cmp     word ptr [r14+0Eh], 0",
                    "177": "lea     r15, [rsp+98h+src]",
                    "178": "jnz     short INSTR186",
                    "179": "mov     rsi, offset module_cand_cache",
                    "180": "mov     rdi, r15",
                    "181": "mov     [rsp+98h+var_88], rcx",
                    "182": "call    check_cand_cache_constprop_0",
                    "183": "mov     r14, rax",
                    "184": "test    rax, rax",
                    "185": "jz      INSTR268",
                    "186": "cmp     r14, 0FFFFFFFFFFFFF000h",
                    "187": "ja      INSTR352",
                    "188": "movzx   eax, word ptr [r14+0Eh]",
                    "189": "xor     r15d, r15d",
                    "190": "test    ax, ax",
                    "191": "jnz     short INSTR217",
                    "192": "lea     r10, [rsp+98h+var_70]",
                    "193": "mov     dword ptr [rsp+98h+var_78], r15d",
                    "194": "mov     rdi, [rbx]",
                    "195": "mov     r9, rbp",
                    "196": "push    r10",
                    "197": "mov     rcx, [rbx+8]",
                    "198": "mov     rsi, r12",
                    "199": "mov     edx, [rsp+0A0h+var_94]",
                    "200": "lea     r8, [rsp+0A0h+var_80]",
                    "201": "call    bpf_core_calc_relo_insn; PIC mode",
                    "202": "pop     rdx",
                    "203": "mov     r15d, eax",
                    "204": "test    eax, eax",
                    "205": "jnz     INSTR93",
                    "206": "mov     edx, [r12]",
                    "207": "lea     r10, [rsp+98h+var_70]",
                    "208": "mov     rdi, [rbx]",
                    "209": "mov     rcx, r12",
                    "210": "mov     r8d, [rsp+98h+var_94]",
                    "211": "mov     rsi, [rsp+98h+var_90]",
                    "212": "mov     r9, r10",
                    "213": "shr     edx, 3",
                    "214": "call    bpf_core_patch_insn; PIC mode",
                    "215": "mov     r15d, eax",
                    "216": "jmp     INSTR93",
                    "217": "movzx   edi, ax",
                    "218": "mov     esi, 0DC0h",
                    "219": "shl     rdi, 4",
                    "220": "call    __kmalloc; PIC mode",
                    "221": "mov     [rsp+98h+var_80], rax",
                    "222": "test    rax, rax",
                    "223": "jz      INSTR354",
                    "224": "cmp     word ptr [r14+0Eh], 0",
                    "225": "jz      INSTR192",
                    "226": "xor     r13d, r13d",
                    "227": "movsxd  r15, r13d",
                    "228": "mov     rcx, [r14]",
                    "229": "mov     rdi, [rbx]",
                    "230": "mov     rsi, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "231": "movzx   edx, word ptr [r14+0Ch]",
                    "232": "shl     r15, 4",
                    "233": "add     r15, r14",
                    "234": "mov     rdx, ds:btf_kind_str[rdx*8]",
                    "235": "mov     r8d, [r15+18h]",
                    "236": "call    bpf_log; PIC mode",
                    "237": "mov     rsi, [r15+10h]",
                    "238": "mov     rcx, [rsp+98h+var_80]",
                    "239": "mov     rdx, r13",
                    "240": "shl     rdx, 4",
                    "241": "add     r13, 1",
                    "242": "mov     [rcx+rdx], rsi",
                    "243": "mov     esi, [r15+18h]",
                    "244": "mov     rcx, [rsp+98h+var_80]",
                    "245": "mov     [rcx+rdx+8], esi",
                    "246": "movzx   r15d, word ptr [r14+0Eh]",
                    "247": "cmp     r15d, r13d",
                    "248": "jg      short INSTR227",
                    "249": "jmp     INSTR192",
                    "250": "mov     edx, 1",
                    "251": "mov     rsi, rcx",
                    "252": "lea     rdi, [rsp+98h+src]; src",
                    "253": "mov     [rsp+98h+var_88], rcx",
                    "254": "call    bpf_core_add_cands",
                    "255": "mov     r15, rax",
                    "256": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "257": "ja      INSTR336",
                    "258": "mov     rsi, offset vmlinux_cand_cache",
                    "259": "mov     rdi, rax",
                    "260": "call    populate_cand_cache_constprop_0",
                    "261": "mov     r14, rax",
                    "262": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "263": "ja      INSTR344",
                    "264": "cmp     word ptr [rax+0Eh], 0",
                    "265": "mov     rcx, [rsp+98h+var_88]",
                    "266": "jz      INSTR179",
                    "267": "jmp     INSTR188",
                    "268": "mov     rdi, offset btf_idr_lock",
                    "269": "mov     r13d, 1",
                    "270": "call    _raw_spin_lock_bh; PIC mode",
                    "271": "mov     rcx, [rsp+98h+var_88]",
                    "272": "xor     eax, eax",
                    "273": "lea     rsi, [rsp+98h+var_70]",
                    "274": "mov     rdi, offset btf_idr",
                    "275": "mov     [rsp+98h+var_88], rcx",
                    "276": "mov     [rsp+98h+var_70], eax",
                    "277": "call    idr_get_next; PIC mode",
                    "278": "mov     rcx, [rsp+98h+var_88]",
                    "279": "test    rax, rax",
                    "280": "mov     r14, rax",
                    "281": "jz      INSTR324",
                    "282": "cmp     byte ptr [r14+0C8h], 0",
                    "283": "jz      INSTR321",
                    "284": "lea     rdi, [r14+90h]; s1",
                    "285": "mov     rsi, offset s2; \"vmlinux\"",
                    "286": "mov     [rsp+98h+var_88], rcx",
                    "287": "call    strcmp; PIC mode",
                    "288": "mov     rcx, [rsp+98h+var_88]",
                    "289": "test    eax, eax",
                    "290": "jz      short INSTR321",
                    "291": "lea     rdi, [r14+54h]",
                    "292": "mov     eax, r13d",
                    "293": "lock xadd [r14+54h], eax",
                    "294": "test    eax, eax",
                    "295": "jz      INSTR339",
                    "296": "lea     edx, [rax+1]",
                    "297": "or      edx, eax",
                    "298": "js      INSTR331",
                    "299": "mov     rdi, offset btf_idr_lock",
                    "300": "mov     [rsp+98h+var_88], rcx",
                    "301": "call    _raw_spin_unlock_bh; PIC mode",
                    "302": "mov     rcx, [rsp+98h+var_88]",
                    "303": "xor     edx, edx",
                    "304": "mov     rax, rcx",
                    "305": "add     edx, [rax+48h]",
                    "306": "mov     rax, [rax+80h]",
                    "307": "test    rax, rax",
                    "308": "jnz     short INSTR305",
                    "309": "mov     rdi, r15; src",
                    "310": "mov     rsi, r14",
                    "311": "mov     [rsp+98h+var_88], rcx",
                    "312": "call    bpf_core_add_cands",
                    "313": "mov     rdi, r14",
                    "314": "mov     r15, rax",
                    "315": "call    btf_put; PIC mode",
                    "316": "cmp     r15, 0FFFFFFFFFFFFF000h",
                    "317": "ja      short INSTR336",
                    "318": "mov     rdi, offset btf_idr_lock",
                    "319": "call    _raw_spin_lock_bh; PIC mode",
                    "320": "mov     rcx, [rsp+98h+var_88]",
                    "321": "mov     eax, [rsp+98h+var_70]",
                    "322": "add     eax, 1",
                    "323": "jmp     INSTR273",
                    "324": "mov     rdi, offset btf_idr_lock",
                    "325": "call    _raw_spin_unlock_bh; PIC mode",
                    "326": "mov     rsi, offset module_cand_cache",
                    "327": "mov     rdi, r15",
                    "328": "call    populate_cand_cache_constprop_0",
                    "329": "mov     r14, rax",
                    "330": "jmp     INSTR186",
                    "331": "mov     esi, 1",
                    "332": "mov     [rsp+98h+var_88], rcx",
                    "333": "call    refcount_warn_saturate; PIC mode",
                    "334": "mov     rcx, [rsp+98h+var_88]",
                    "335": "jmp     INSTR299",
                    "336": "mov     rcx, r15",
                    "337": "mov     r15d, ecx",
                    "338": "jmp     INSTR89",
                    "339": "mov     esi, 2",
                    "340": "mov     [rsp+98h+var_88], rcx",
                    "341": "call    refcount_warn_saturate; PIC mode",
                    "342": "mov     rcx, [rsp+98h+var_88]",
                    "343": "jmp     INSTR299",
                    "344": "mov     rcx, rax",
                    "345": "jmp     short INSTR337",
                    "346": "mov     edx, [rsp+98h+var_94]",
                    "347": "mov     rdi, [rbx]",
                    "348": "mov     rsi, offset aReloUBadTypeId; \"relo #%u: bad type id %u\\n\"",
                    "349": "mov     r15d, 0FFFFFFEAh",
                    "350": "call    bpf_log; PIC mode",
                    "351": "jmp     INSTR137",
                    "352": "mov     r15d, r14d",
                    "353": "jmp     INSTR89",
                    "354": "mov     r15d, 0FFFFFFF4h",
                    "355": "jmp     INSTR93",
                    "356": "mov     r15d, 0FFFFFFF4h",
                    "357": "jmp     INSTR137",
                    "358": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "btf.bpf_core_apply.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "mov     r15d, edx",
                    "3": "mov     edx, 0DC0h",
                    "4": "push    r14",
                    "5": "push    r13",
                    "6": "mov     r13d, 0FFFFFFF4h",
                    "7": "push    r12",
                    "8": "mov     r12, rsi",
                    "9": "push    rbp",
                    "10": "mov     rbp, rdi",
                    "11": "mov     edi, 3",
                    "12": "push    rbx",
                    "13": "sub     rsp, 68h",
                    "14": "mov     [rsp+98h+var_88], rcx",
                    "15": "mov     rax, gs:28h",
                    "16": "mov     [rsp+98h+var_38], rax",
                    "17": "mov     eax, [rsi+0Ch]",
                    "18": "mov     esi, 520h",
                    "19": "mov     [rsp+98h+var_80], 0",
                    "20": "mov     [rsp+98h+var_78], 0",
                    "21": "mov     [rsp+98h+var_8C], eax",
                    "22": "call    kmalloc_array_constprop_0",
                    "23": "mov     [rsp+98h+var_98], rax",
                    "24": "test    rax, rax",
                    "25": "jz      INSTR249",
                    "26": "mov     ecx, [r12+4]",
                    "27": "mov     rdi, [rbp+8]",
                    "28": "mov     esi, ecx",
                    "29": "call    btf_type_by_id; PIC mode",
                    "30": "test    rax, rax",
                    "31": "jnz     short INSTR38",
                    "32": "mov     rdi, [rbp+0]",
                    "33": "mov     edx, r15d",
                    "34": "mov     rsi, offset aReloUBadTypeId; \"relo #%u: bad type id %u\\n\"",
                    "35": "mov     r13d, 0FFFFFFEAh",
                    "36": "call    bpf_log; PIC mode",
                    "37": "jmp     INSTR249",
                    "38": "cmp     [rsp+98h+var_8C], 6",
                    "39": "jz      INSTR197",
                    "40": "mov     rdi, offset cand_cache_mutex",
                    "41": "call    mutex_lock; PIC mode",
                    "42": "xor     eax, eax",
                    "43": "mov     ecx, 4",
                    "44": "mov     rbx, [rbp+8]",
                    "45": "lea     rdi, [rsp+98h+var_48]",
                    "46": "mov     r14d, [r12+4]",
                    "47": "rep stosd",
                    "48": "call    bpf_get_btf_vmlinux; PIC mode",
                    "49": "mov     r13, rax",
                    "50": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "51": "ja      INSTR149",
                    "52": "test    rax, rax",
                    "53": "jz      INSTR151",
                    "54": "mov     esi, r14d",
                    "55": "mov     rdi, rbx",
                    "56": "call    btf_type_by_id; PIC mode",
                    "57": "mov     r14, rax",
                    "58": "test    rax, rax",
                    "59": "jz      INSTR151",
                    "60": "mov     esi, [rax]",
                    "61": "mov     rdi, rbx",
                    "62": "call    btf_str_by_offset",
                    "63": "mov     rbx, rax",
                    "64": "test    rax, rax",
                    "65": "jz      INSTR151",
                    "66": "cmp     byte ptr [rax], 0",
                    "67": "jz      INSTR151",
                    "68": "mov     rdi, rax",
                    "69": "call    bpf_core_essential_name_len; PIC mode",
                    "70": "mov     rsi, offset vmlinux_cand_cache",
                    "71": "mov     r8, rax",
                    "72": "mov     [rsp+98h+var_48], rbx",
                    "73": "movzx   eax, byte ptr [r14+7]",
                    "74": "lea     rdi, [rsp+98h+var_48]",
                    "75": "mov     [rsp+98h+var_40], r8d",
                    "76": "and     eax, 1Fh",
                    "77": "mov     [rsp+98h+var_3C], ax",
                    "78": "call    check_cand_cache_constprop_0",
                    "79": "mov     r14, rax",
                    "80": "test    rax, rax",
                    "81": "jz      short INSTR86",
                    "82": "cmp     word ptr [rax+0Eh], 0",
                    "83": "lea     rbx, [rsp+98h+var_48]",
                    "84": "jz      short INSTR101",
                    "85": "jmp     INSTR154",
                    "86": "mov     edx, 1",
                    "87": "mov     rsi, r13",
                    "88": "lea     rdi, [rsp+98h+var_48]",
                    "89": "call    bpf_core_add_cands",
                    "90": "mov     rbx, rax",
                    "91": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "92": "ja      INSTR153",
                    "93": "mov     rsi, offset vmlinux_cand_cache",
                    "94": "mov     rdi, rax",
                    "95": "call    populate_cand_cache_constprop_0",
                    "96": "mov     r14, rax",
                    "97": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "98": "ja      INSTR156",
                    "99": "cmp     word ptr [rax+0Eh], 0",
                    "100": "jnz     INSTR154",
                    "101": "mov     rsi, offset module_cand_cache",
                    "102": "mov     rdi, rbx",
                    "103": "call    check_cand_cache_constprop_0",
                    "104": "mov     r14, rax",
                    "105": "test    rax, rax",
                    "106": "jnz     INSTR154",
                    "107": "mov     rdi, offset btf_idr_lock",
                    "108": "mov     r14, rbx",
                    "109": "call    _raw_spin_lock_bh; PIC mode",
                    "110": "xor     eax, eax",
                    "111": "lea     rsi, [rsp+98h+var_70]",
                    "112": "mov     rdi, offset btf_idr",
                    "113": "mov     [rsp+98h+var_70], eax",
                    "114": "call    idr_get_next; PIC mode",
                    "115": "mov     rbx, rax",
                    "116": "test    rax, rax",
                    "117": "jz      short INSTR142",
                    "118": "mov     rdi, rbx",
                    "119": "call    btf_is_module; PIC mode",
                    "120": "test    al, al",
                    "121": "jz      short INSTR139",
                    "122": "lea     rdi, [rbx+54h]",
                    "123": "call    refcount_inc",
                    "124": "mov     rdi, offset btf_idr_lock",
                    "125": "call    _raw_spin_unlock_bh; PIC mode",
                    "126": "mov     rdi, r13",
                    "127": "mov     rsi, rbx",
                    "128": "call    btf_nr_types; PIC mode",
                    "129": "mov     rdi, r14",
                    "130": "mov     edx, eax",
                    "131": "call    bpf_core_add_cands",
                    "132": "mov     rdi, rbx",
                    "133": "mov     r14, rax",
                    "134": "call    btf_put; PIC mode",
                    "135": "cmp     r14, 0FFFFFFFFFFFFF000h",
                    "136": "ja      short INSTR156",
                    "137": "mov     rdi, offset btf_idr_lock",
                    "138": "call    _raw_spin_lock_bh; PIC mode",
                    "139": "mov     eax, [rsp+98h+var_70]",
                    "140": "inc     eax",
                    "141": "jmp     short INSTR111",
                    "142": "mov     rdi, offset btf_idr_lock",
                    "143": "call    _raw_spin_unlock_bh; PIC mode",
                    "144": "mov     rdi, r14",
                    "145": "mov     rsi, offset module_cand_cache",
                    "146": "call    populate_cand_cache_constprop_0",
                    "147": "mov     r14, rax",
                    "148": "jmp     short INSTR154",
                    "149": "mov     r14, rax",
                    "150": "jmp     short INSTR154",
                    "151": "mov     r14, 0FFFFFFFFFFFFFFEAh",
                    "152": "jmp     short INSTR156",
                    "153": "mov     r14, rax",
                    "154": "cmp     r14, 0FFFFFFFFFFFFF000h",
                    "155": "jbe     short INSTR162",
                    "156": "mov     edx, [r12+4]",
                    "157": "mov     rdi, [rbp+0]",
                    "158": "mov     rsi, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "159": "mov     r13d, r14d",
                    "160": "call    bpf_log; PIC mode",
                    "161": "jmp     INSTR219",
                    "162": "movzx   edi, word ptr [r14+0Eh]",
                    "163": "test    di, di",
                    "164": "jz      short INSTR172",
                    "165": "mov     edx, 0DC0h",
                    "166": "mov     esi, 10h",
                    "167": "mov     r13d, 0FFFFFFF4h",
                    "168": "call    kmalloc_array_constprop_0",
                    "169": "mov     [rsp+98h+var_80], rax",
                    "170": "test    rax, rax",
                    "171": "jz      INSTR219",
                    "172": "xor     r13d, r13d",
                    "173": "movzx   eax, word ptr [r14+0Eh]",
                    "174": "mov     rdi, [rbp+0]",
                    "175": "cmp     eax, r13d",
                    "176": "jle     short INSTR196",
                    "177": "movsxd  rbx, r13d",
                    "178": "movzx   eax, word ptr [r14+0Ch]",
                    "179": "mov     rcx, [r14]",
                    "180": "mov     rsi, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "181": "shl     rbx, 4",
                    "182": "add     rbx, r14",
                    "183": "mov     rdx, ds:btf_kind_str[rax*8]",
                    "184": "mov     r8d, [rbx+18h]",
                    "185": "call    bpf_log; PIC mode",
                    "186": "mov     rcx, [rbx+10h]",
                    "187": "mov     rdx, [rsp+98h+var_80]",
                    "188": "mov     rax, r13",
                    "189": "shl     rax, 4",
                    "190": "inc     r13",
                    "191": "mov     [rdx+rax], rcx",
                    "192": "mov     ecx, [rbx+18h]",
                    "193": "mov     rdx, [rsp+98h+var_80]",
                    "194": "mov     [rdx+rax+8], ecx",
                    "195": "jmp     short INSTR173",
                    "196": "mov     dword ptr [rsp+98h+var_78], eax",
                    "197": "lea     rbx, [rsp+98h+var_70]",
                    "198": "mov     rcx, [rbp+8]",
                    "199": "mov     edx, r15d",
                    "200": "mov     rsi, r12",
                    "201": "push    rbx",
                    "202": "mov     r9, [rsp+0A0h+var_98]",
                    "203": "mov     rdi, [rbp+0]",
                    "204": "lea     r8, [rsp+0A0h+var_80]",
                    "205": "call    bpf_core_calc_relo_insn; PIC mode",
                    "206": "mov     r13d, eax",
                    "207": "pop     rax",
                    "208": "test    r13d, r13d",
                    "209": "jnz     short INSTR219",
                    "210": "mov     edx, [r12]",
                    "211": "mov     rsi, [rsp+98h+var_88]",
                    "212": "mov     r9, rbx",
                    "213": "mov     r8d, r15d",
                    "214": "mov     rdi, [rbp+0]",
                    "215": "mov     rcx, r12",
                    "216": "shr     edx, 3",
                    "217": "call    bpf_core_patch_insn; PIC mode",
                    "218": "mov     r13d, eax",
                    "219": "mov     rdi, [rsp+98h+var_98]",
                    "220": "call    kfree; PIC mode",
                    "221": "cmp     [rsp+98h+var_8C], 6",
                    "222": "jz      INSTR249",
                    "223": "mov     rdi, [rsp+98h+var_80]",
                    "224": "call    kfree; PIC mode",
                    "225": "mov     rdi, offset cand_cache_mutex",
                    "226": "call    mutex_unlock; PIC mode",
                    "227": "mov     rbp, [rbp+0]",
                    "228": "test    byte ptr [rbp+0], 2",
                    "229": "jz      short INSTR249",
                    "230": "mov     rdi, offset cand_cache_mutex",
                    "231": "call    mutex_lock; PIC mode",
                    "232": "mov     rsi, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "233": "mov     rdi, rbp",
                    "234": "call    bpf_log; PIC mode",
                    "235": "mov     rsi, offset vmlinux_cand_cache",
                    "236": "mov     rdi, rbp",
                    "237": "call    __print_cand_cache_constprop_0",
                    "238": "mov     rsi, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "239": "mov     rdi, rbp",
                    "240": "call    bpf_log; PIC mode",
                    "241": "mov     rsi, offset module_cand_cache",
                    "242": "mov     rdi, rbp",
                    "243": "call    __print_cand_cache_constprop_0",
                    "244": "mov     rdi, rbp",
                    "245": "mov     rsi, offset asc_95DE; \"\\n\"",
                    "246": "call    bpf_log; PIC mode",
                    "247": "mov     rdi, offset cand_cache_mutex",
                    "248": "call    mutex_unlock; PIC mode",
                    "249": "mov     rax, [rsp+98h+var_38]",
                    "250": "sub     rax, gs:28h",
                    "251": "jz      short INSTR253",
                    "252": "call    __stack_chk_fail; PIC mode",
                    "253": "add     rsp, 68h",
                    "254": "mov     eax, r13d",
                    "255": "pop     rbx",
                    "256": "pop     rbp",
                    "257": "pop     r12",
                    "258": "pop     r13",
                    "259": "pop     r14",
                    "260": "pop     r15",
                    "261": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "btf.bpf_core_apply.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "mov     edi, edx",
                    "5": "push    esi",
                    "6": "mov     esi, eax",
                    "7": "push    ebx",
                    "8": "sub     esp, 6Ch",
                    "9": "mov     [ebp+var_50], edx",
                    "10": "mov     eax, [ebp+arg_0]",
                    "11": "mov     [ebp+var_54], ecx",
                    "12": "mov     ebx, [edx+0Ch]",
                    "13": "mov     ecx, 0C48h",
                    "14": "mov     edx, 0DC0h",
                    "15": "mov     [ebp+var_58], eax",
                    "16": "mov     eax, fs:__stack_chk_guard",
                    "17": "mov     [ebp+var_10], eax",
                    "18": "xor     eax, eax",
                    "19": "mov     eax, dword ptr ds:kmalloc_caches+30h",
                    "20": "mov     [ebp+var_48], 0",
                    "21": "mov     [ebp+var_44], 0",
                    "22": "call    kmalloc_trace",
                    "23": "mov     [ebp+var_4C], eax",
                    "24": "test    eax, eax",
                    "25": "jz      INSTR366",
                    "26": "cmp     ebx, 6",
                    "27": "jz      INSTR130",
                    "28": "mov     eax, offset cand_cache_mutex",
                    "29": "call    mutex_lock",
                    "30": "mov     edi, [edi+4]",
                    "31": "mov     [ebp+var_1C], 0",
                    "32": "mov     ebx, [esi+4]",
                    "33": "mov     [ebp+var_18], 0",
                    "34": "mov     [ebp+var_14], 0",
                    "35": "call    bpf_get_btf_vmlinux",
                    "36": "mov     [ebp+var_5C], eax",
                    "37": "cmp     eax, 0FFFFF000h",
                    "38": "ja      INSTR358",
                    "39": "test    eax, eax",
                    "40": "jz      short INSTR80",
                    "41": "mov     ecx, [ebx+58h]",
                    "42": "mov     eax, ebx",
                    "43": "cmp     edi, ecx",
                    "44": "jnb     short INSTR51",
                    "45": "lea     esi, [esi+0]",
                    "46": "lea     esi, [esi+0]",
                    "47": "mov     eax, [eax+54h]",
                    "48": "mov     ecx, [eax+58h]",
                    "49": "cmp     edi, ecx",
                    "50": "jb      short INSTR47",
                    "51": "mov     edx, edi",
                    "52": "sub     edx, ecx",
                    "53": "cmp     edx, [eax+30h]",
                    "54": "jnb     short INSTR80",
                    "55": "mov     eax, [eax+4]",
                    "56": "mov     edx, [eax+edx*4]",
                    "57": "test    edx, edx",
                    "58": "jz      short INSTR80",
                    "59": "mov     ecx, [edx]",
                    "60": "mov     eax, [ebx+5Ch]",
                    "61": "cmp     ecx, eax",
                    "62": "jnb     short INSTR69",
                    "63": "lea     esi, [esi+0]",
                    "64": "lea     esi, [esi+0]",
                    "65": "mov     ebx, [ebx+54h]",
                    "66": "mov     eax, [ebx+5Ch]",
                    "67": "cmp     ecx, eax",
                    "68": "jb      short INSTR65",
                    "69": "sub     ecx, eax",
                    "70": "cmp     ecx, [ebx+2Ch]",
                    "71": "jnb     short INSTR80",
                    "72": "add     ecx, [ebx+10h]",
                    "73": "mov     ebx, ecx",
                    "74": "jz      short INSTR80",
                    "75": "cmp     byte ptr [ecx], 0",
                    "76": "jnz     INSTR173",
                    "77": "lea     esi, [esi+0]",
                    "78": "lea     esi, [esi+0]",
                    "79": "nop",
                    "80": "mov     ecx, 0FFFFFFEAh",
                    "81": "mov     [ebp+var_54], ecx",
                    "82": "mov     eax, [ebp+var_50]",
                    "83": "mov     eax, [eax+4]",
                    "84": "mov     [esp+8], eax",
                    "85": "mov     eax, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "86": "mov     [esp+4], eax",
                    "87": "mov     eax, [esi]",
                    "88": "mov     [esp], eax",
                    "89": "call    bpf_log",
                    "90": "mov     ecx, [ebp+var_54]",
                    "91": "lea     esi, [esi+0]",
                    "92": "nop",
                    "93": "mov     [ebp+var_50], ecx",
                    "94": "mov     eax, [ebp+var_4C]",
                    "95": "call    kfree",
                    "96": "mov     ecx, [ebp+var_50]",
                    "97": "mov     eax, [ebp+var_48]",
                    "98": "mov     [ebp+var_4C], ecx",
                    "99": "call    kfree",
                    "100": "mov     eax, offset cand_cache_mutex",
                    "101": "call    mutex_unlock",
                    "102": "mov     ebx, [esi]",
                    "103": "mov     ecx, [ebp+var_4C]",
                    "104": "test    byte ptr [ebx], 2",
                    "105": "jz      INSTR149",
                    "106": "mov     eax, offset cand_cache_mutex",
                    "107": "call    mutex_lock",
                    "108": "mov     eax, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "109": "mov     [esp+4], eax",
                    "110": "mov     [esp], ebx",
                    "111": "call    bpf_log",
                    "112": "mov     eax, ebx",
                    "113": "mov     edx, offset vmlinux_cand_cache",
                    "114": "call    __print_cand_cache_constprop_0",
                    "115": "mov     edx, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "116": "mov     [esp+4], edx",
                    "117": "mov     [esp], ebx",
                    "118": "call    bpf_log",
                    "119": "mov     edx, offset module_cand_cache",
                    "120": "mov     eax, ebx",
                    "121": "call    __print_cand_cache_constprop_0",
                    "122": "mov     ecx, offset asc_800E343; \"\\n\"",
                    "123": "mov     [esp+4], ecx",
                    "124": "mov     [esp], ebx",
                    "125": "call    bpf_log",
                    "126": "mov     eax, offset cand_cache_mutex",
                    "127": "call    mutex_unlock",
                    "128": "mov     ecx, [ebp+var_4C]",
                    "129": "jmp     short INSTR149",
                    "130": "mov     eax, [ebp+var_4C]",
                    "131": "lea     ebx, [ebp+var_40]",
                    "132": "mov     [esp+0Ch], ebx",
                    "133": "mov     ecx, [ebp+var_54]",
                    "134": "mov     edx, [ebp+var_50]",
                    "135": "mov     [esp+8], eax",
                    "136": "lea     eax, [ebp+var_48]",
                    "137": "mov     [esp+4], eax",
                    "138": "mov     eax, [esi+4]",
                    "139": "mov     [esp], eax",
                    "140": "mov     eax, [esi]",
                    "141": "call    bpf_core_calc_relo_insn",
                    "142": "test    eax, eax",
                    "143": "mov     ecx, eax",
                    "144": "jz      short INSTR159",
                    "145": "mov     [ebp+var_50], ecx",
                    "146": "mov     eax, [ebp+var_4C]",
                    "147": "call    kfree",
                    "148": "mov     ecx, [ebp+var_50]",
                    "149": "mov     eax, [ebp+var_10]",
                    "150": "sub     eax, fs:__stack_chk_guard",
                    "151": "jnz     INSTR365",
                    "152": "add     esp, 6Ch",
                    "153": "mov     eax, ecx",
                    "154": "pop     ebx",
                    "155": "pop     esi",
                    "156": "pop     edi",
                    "157": "pop     ebp",
                    "158": "retn",
                    "159": "mov     eax, [ebp+var_50]",
                    "160": "mov     edx, [eax]",
                    "161": "mov     [esp+8], ebx",
                    "162": "mov     [esp], eax",
                    "163": "mov     [ebp+var_50], edx",
                    "164": "mov     ecx, edx",
                    "165": "mov     edx, [ebp+var_54]",
                    "166": "shr     ecx, 3",
                    "167": "mov     [esp+4], edx",
                    "168": "mov     edx, [ebp+var_58]",
                    "169": "mov     eax, [esi]",
                    "170": "call    bpf_core_patch_insn",
                    "171": "mov     ecx, eax",
                    "172": "jmp     short INSTR145",
                    "173": "mov     [ebp+var_60], edx",
                    "174": "mov     eax, ecx",
                    "175": "call    bpf_core_essential_name_len",
                    "176": "mov     edx, [ebp+var_60]",
                    "177": "mov     [ebp+var_1C], ebx",
                    "178": "movzx   edx, byte ptr [edx+7]",
                    "179": "mov     [ebp+var_18], eax",
                    "180": "lea     eax, [ebp+var_1C]",
                    "181": "and     edx, 1Fh",
                    "182": "mov     word ptr [ebp+var_14], dx",
                    "183": "mov     edx, offset vmlinux_cand_cache",
                    "184": "call    check_cand_cache_constprop_0",
                    "185": "test    eax, eax",
                    "186": "mov     ebx, eax",
                    "187": "jz      INSTR271",
                    "188": "cmp     word ptr [ebx+0Ah], 0",
                    "189": "jnz     short INSTR198",
                    "190": "lea     eax, [ebp+var_1C]",
                    "191": "mov     [ebp+var_60], eax",
                    "192": "mov     eax, [ebp+var_60]",
                    "193": "mov     edx, offset module_cand_cache",
                    "194": "call    check_cand_cache_constprop_0",
                    "195": "test    eax, eax",
                    "196": "mov     ebx, eax",
                    "197": "jz      INSTR286",
                    "198": "cmp     ebx, 0FFFFF000h",
                    "199": "ja      INSTR368",
                    "200": "movzx   eax, word ptr [ebx+0Ah]",
                    "201": "xor     ecx, ecx",
                    "202": "test    eax, eax",
                    "203": "jnz     short INSTR234",
                    "204": "mov     [ebp+var_44], ecx",
                    "205": "mov     eax, [ebp+var_4C]",
                    "206": "lea     ebx, [ebp+var_40]",
                    "207": "mov     [esp+0Ch], ebx",
                    "208": "mov     ecx, [ebp+var_54]",
                    "209": "mov     edx, [ebp+var_50]",
                    "210": "mov     [esp+8], eax",
                    "211": "lea     eax, [ebp+var_48]",
                    "212": "mov     [esp+4], eax",
                    "213": "mov     eax, [esi+4]",
                    "214": "mov     [esp], eax",
                    "215": "mov     eax, [esi]",
                    "216": "call    bpf_core_calc_relo_insn",
                    "217": "test    eax, eax",
                    "218": "mov     ecx, eax",
                    "219": "jnz     INSTR93",
                    "220": "mov     eax, [ebp+var_50]",
                    "221": "mov     edx, [eax]",
                    "222": "mov     [esp+8], ebx",
                    "223": "mov     [esp], eax",
                    "224": "mov     [ebp+var_50], edx",
                    "225": "mov     ecx, edx",
                    "226": "mov     edx, [ebp+var_54]",
                    "227": "shr     ecx, 3",
                    "228": "mov     [esp+4], edx",
                    "229": "mov     edx, [ebp+var_58]",
                    "230": "mov     eax, [esi]",
                    "231": "call    bpf_core_patch_insn",
                    "232": "mov     ecx, eax",
                    "233": "jmp     INSTR93",
                    "234": "mov     [ebp+var_5C], ecx",
                    "235": "shl     eax, 3",
                    "236": "mov     edx, 0DC0h",
                    "237": "call    __kmalloc",
                    "238": "mov     [ebp+var_48], eax",
                    "239": "test    eax, eax",
                    "240": "jz      INSTR370",
                    "241": "cmp     word ptr [ebx+0Ah], 0",
                    "242": "mov     ecx, [ebp+var_5C]",
                    "243": "jz      INSTR204",
                    "244": "xor     edi, edi",
                    "245": "lea     esi, [esi+0]",
                    "246": "nop",
                    "247": "mov     eax, [ebx+edi*8+10h]",
                    "248": "mov     [esp+10h], eax",
                    "249": "mov     eax, [ebx]",
                    "250": "mov     [esp+0Ch], eax",
                    "251": "movzx   eax, word ptr [ebx+8]",
                    "252": "mov     eax, ds:btf_kind_str[eax*4]",
                    "253": "mov     [esp+8], eax",
                    "254": "mov     eax, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "255": "mov     [esp+4], eax",
                    "256": "mov     eax, [esi]",
                    "257": "mov     [esp], eax",
                    "258": "call    bpf_log",
                    "259": "mov     ecx, [ebx+edi*8+0Ch]",
                    "260": "lea     eax, ds:0[edi*8]",
                    "261": "mov     edx, [ebp+var_48]",
                    "262": "mov     [edx+eax], ecx",
                    "263": "mov     ecx, [ebx+edi*8+10h]",
                    "264": "inc     edi",
                    "265": "mov     edx, [ebp+var_48]",
                    "266": "mov     [edx+eax+4], ecx",
                    "267": "movzx   ecx, word ptr [ebx+0Ah]",
                    "268": "cmp     ecx, edi",
                    "269": "jg      short INSTR247",
                    "270": "jmp     INSTR204",
                    "271": "mov     edx, [ebp+var_5C]",
                    "272": "lea     eax, [ebp+var_1C]",
                    "273": "mov     ecx, 1",
                    "274": "call    bpf_core_add_cands",
                    "275": "mov     [ebp+var_60], eax",
                    "276": "cmp     eax, 0FFFFF000h",
                    "277": "ja      INSTR362",
                    "278": "mov     edx, offset vmlinux_cand_cache",
                    "279": "call    populate_cand_cache_constprop_0",
                    "280": "cmp     eax, 0FFFFF000h",
                    "281": "mov     ebx, eax",
                    "282": "ja      INSTR360",
                    "283": "cmp     word ptr [eax+0Ah], 0",
                    "284": "jz      INSTR192",
                    "285": "jmp     INSTR200",
                    "286": "mov     eax, offset btf_idr_lock",
                    "287": "mov     edi, 1",
                    "288": "call    _raw_spin_lock_bh",
                    "289": "xor     eax, eax",
                    "290": "mov     [ebp+var_64], esi",
                    "291": "mov     esi, [ebp+var_60]",
                    "292": "jmp     short INSTR295",
                    "293": "mov     eax, [ebp+var_40]",
                    "294": "inc     eax",
                    "295": "mov     [ebp+var_40], eax",
                    "296": "lea     edx, [ebp+var_40]",
                    "297": "mov     eax, offset btf_idr",
                    "298": "call    idr_get_next",
                    "299": "test    eax, eax",
                    "300": "mov     ebx, eax",
                    "301": "jz      short INSTR338",
                    "302": "cmp     byte ptr [ebx+9Ch], 0",
                    "303": "jz      short INSTR293",
                    "304": "lea     eax, [ebx+60h]",
                    "305": "mov     edx, offset aVmlinux; \"vmlinux\"",
                    "306": "call    strcmp",
                    "307": "test    eax, eax",
                    "308": "jz      short INSTR293",
                    "309": "lea     ecx, [ebx+3Ch]",
                    "310": "mov     eax, edi",
                    "311": "lock xadd [ebx+3Ch], eax",
                    "312": "test    eax, eax",
                    "313": "jz      INSTR351",
                    "314": "lea     edx, [eax+1]",
                    "315": "or      edx, eax",
                    "316": "js      short INSTR347",
                    "317": "mov     eax, offset btf_idr_lock",
                    "318": "call    _raw_spin_unlock_bh",
                    "319": "mov     eax, [ebp+var_5C]",
                    "320": "xor     ecx, ecx",
                    "321": "lea     esi, [esi+0]",
                    "322": "mov     edx, [eax+30h]",
                    "323": "mov     eax, [eax+54h]",
                    "324": "add     ecx, edx",
                    "325": "test    eax, eax",
                    "326": "jnz     short INSTR322",
                    "327": "mov     edx, ebx",
                    "328": "mov     eax, esi",
                    "329": "call    bpf_core_add_cands",
                    "330": "mov     esi, eax",
                    "331": "mov     eax, ebx",
                    "332": "call    btf_put",
                    "333": "cmp     esi, 0FFFFF000h",
                    "334": "ja      short INSTR355",
                    "335": "mov     eax, offset btf_idr_lock",
                    "336": "call    _raw_spin_lock_bh",
                    "337": "jmp     INSTR293",
                    "338": "mov     eax, offset btf_idr_lock",
                    "339": "mov     edi, esi",
                    "340": "mov     esi, [ebp+var_64]",
                    "341": "call    _raw_spin_unlock_bh",
                    "342": "mov     edx, offset module_cand_cache",
                    "343": "mov     eax, edi",
                    "344": "call    populate_cand_cache_constprop_0",
                    "345": "mov     ebx, eax",
                    "346": "jmp     INSTR198",
                    "347": "mov     edx, 1",
                    "348": "mov     eax, ecx",
                    "349": "call    refcount_warn_saturate",
                    "350": "jmp     short INSTR317",
                    "351": "mov     edx, 2",
                    "352": "mov     eax, ecx",
                    "353": "call    refcount_warn_saturate",
                    "354": "jmp     INSTR317",
                    "355": "mov     eax, esi",
                    "356": "mov     esi, [ebp+var_64]",
                    "357": "mov     [ebp+var_5C], eax",
                    "358": "mov     ecx, [ebp+var_5C]",
                    "359": "jmp     INSTR81",
                    "360": "mov     [ebp+var_5C], eax",
                    "361": "jmp     short INSTR358",
                    "362": "mov     eax, [ebp+var_60]",
                    "363": "mov     [ebp+var_5C], eax",
                    "364": "jmp     short INSTR358",
                    "365": "call    __stack_chk_fail",
                    "366": "mov     ecx, 0FFFFFFF4h",
                    "367": "jmp     INSTR149",
                    "368": "mov     ecx, ebx",
                    "369": "jmp     INSTR81",
                    "370": "mov     ecx, 0FFFFFFF4h",
                    "371": "jmp     INSTR93"
                }
            },
            {
                "filename": "btf.bpf_core_apply.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_C0]!",
                    "3": "ADRP            X4, #check_mem_reg@PAGE",
                    "4": "MOV             X29, SP",
                    "5": "STP             X21, X22, [SP,#0xC0+var_A0]",
                    "6": "MOV             X21, X0",
                    "7": "LDR             X0, [X4,#check_mem_reg@PAGEOFF]",
                    "8": "STP             X19, X20, [SP,#0xC0+var_B0]",
                    "9": "STP             X23, X24, [SP,#0xC0+var_90]",
                    "10": "MOV             X23, X1",
                    "11": "MRS             X1, SP_EL0",
                    "12": "STP             X25, X26, [SP,#0xC0+var_80]",
                    "13": "MOV             W26, W2",
                    "14": "STR             X3, [SP,#0xC0+var_60]",
                    "15": "LDR             W19, [X23,#0xC]",
                    "16": "LDR             X2, [X1,#0x578]",
                    "17": "STR             X2, [SP,#0xC0+var_8]",
                    "18": "MOV             X2, #0",
                    "19": "MOV             W1, #0xDC0",
                    "20": "MOV             X2, #0xF60",
                    "21": "STP             XZR, XZR, [SP,#0xC0+var_50]",
                    "22": "BL              kmalloc_trace",
                    "23": "CBZ             X0, loc_E938",
                    "24": "MOV             X24, X0",
                    "25": "CMP             W19, #6",
                    "26": "B.EQ            loc_E600",
                    "27": "ADRL            X25, btf_idr",
                    "28": "ADD             X0, X25, #0x18",
                    "29": "BL              mutex_lock",
                    "30": "LDR             W20, [X23,#4]",
                    "31": "STP             XZR, XZR, [SP,#0xC0+var_18]",
                    "32": "LDR             X19, [X21,#8]",
                    "33": "BL              bpf_get_btf_vmlinux",
                    "34": "MOV             X22, X0",
                    "35": "CMN             X0, #1,LSL#12",
                    "36": "B.HI            loc_E914",
                    "37": "CBZ             X0, loc_E664",
                    "38": "LDR             W2, [X19,#0x88]",
                    "39": "MOV             X1, X19",
                    "40": "CMP             W20, W2",
                    "41": "B.CS            loc_E4C8",
                    "42": "LDR             X1, [X1,#0x80]",
                    "43": "LDR             W2, [X1,#0x88]",
                    "44": "CMP             W20, W2",
                    "45": "B.CC            loc_E4B8",
                    "46": "LDR             W0, [X1,#0x48]",
                    "47": "SUB             W20, W20, W2",
                    "48": "CMP             W20, W0",
                    "49": "B.CS            loc_E664",
                    "50": "LDR             X0, [X1,#8]",
                    "51": "LDR             X20, [X0,W20,UXTW#3]",
                    "52": "CBZ             X20, loc_E664",
                    "53": "LDR             W0, [X19,#0x8C]",
                    "54": "LDR             W1, [X20]",
                    "55": "CMP             W1, W0",
                    "56": "B.CS            loc_E508",
                    "57": "NOP",
                    "58": "LDR             X19, [X19,#0x80]",
                    "59": "LDR             W0, [X19,#0x8C]",
                    "60": "CMP             W1, W0",
                    "61": "B.CC            loc_E4F8",
                    "62": "LDR             W2, [X19,#0x44]",
                    "63": "SUB             W1, W1, W0",
                    "64": "CMP             W1, W2",
                    "65": "B.CS            loc_E664",
                    "66": "LDR             X0, [X19,#0x20]",
                    "67": "ADDS            X19, X0, W1,UXTW",
                    "68": "B.EQ            loc_E664",
                    "69": "LDRB            W0, [X0,W1,UXTW]",
                    "70": "CBZ             W0, loc_E664",
                    "71": "MOV             X0, X19",
                    "72": "STP             X27, X28, [SP,#0xC0+var_70]",
                    "73": "BL              bpf_core_essential_name_len",
                    "74": "STR             X19, [SP,#0xC0+var_18]",
                    "75": "MOV             X4, X0",
                    "76": "ADRL            X28, btf_idr_lock",
                    "77": "LDRB            W2, [X20,#7]",
                    "78": "ADD             X27, X28, #0x20 ; ' '",
                    "79": "MOV             X1, X27",
                    "80": "ADD             X0, SP, #0xC0+var_18",
                    "81": "AND             W2, W2, #0x1F",
                    "82": "STR             W4, [SP,#0xC0+var_10]",
                    "83": "STRH            W2, [SP,#0xC0+var_10+4]",
                    "84": "BL              check_cand_cache.constprop.0",
                    "85": "MOV             X20, X0",
                    "86": "CBZ             X0, loc_E7C4",
                    "87": "LDRH            W0, [X20,#0xE]",
                    "88": "ADD             X19, SP, #0xC0+var_18",
                    "89": "CBNZ            W0, loc_E590",
                    "90": "ADD             X1, X28, #0x118",
                    "91": "MOV             X0, X19",
                    "92": "BL              check_cand_cache.constprop.0",
                    "93": "MOV             X20, X0",
                    "94": "CBZ             X0, loc_E800",
                    "95": "CMN             X20, #1,LSL#12",
                    "96": "B.HI            loc_E954",
                    "97": "LDRH            W0, [X20,#0xE]",
                    "98": "MOV             W7, #0",
                    "99": "CBNZ            W0, loc_E734",
                    "100": "LDP             X0, X3, [X21]",
                    "101": "ADD             X6, SP, #0xC0+var_40",
                    "102": "MOV             X5, X24",
                    "103": "ADD             X4, SP, #0xC0+var_50",
                    "104": "MOV             W2, W26",
                    "105": "MOV             X1, X23",
                    "106": "STR             W7, [SP,#0xC0+var_48]",
                    "107": "BL              bpf_core_calc_relo_insn",
                    "108": "MOV             W19, W0",
                    "109": "CBNZ            W0, loc_E5F0",
                    "110": "LDR             X0, [X21]",
                    "111": "ADD             X5, SP, #0xC0+var_40",
                    "112": "LDR             X1, [SP,#0xC0+var_60]",
                    "113": "MOV             W4, W26",
                    "114": "LDR             W2, [X23]",
                    "115": "MOV             X3, X23",
                    "116": "LSR             W2, W2, #3",
                    "117": "BL              bpf_core_patch_insn",
                    "118": "MOV             W19, W0",
                    "119": "MOV             X0, X24",
                    "120": "BL              kfree",
                    "121": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "122": "B               loc_E688",
                    "123": "MOV             X5, X0",
                    "124": "ADD             X6, SP, #0xC0+var_40",
                    "125": "LDP             X0, X3, [X21]",
                    "126": "ADD             X4, SP, #0xC0+var_50",
                    "127": "MOV             W2, W26",
                    "128": "MOV             X1, X23",
                    "129": "BL              bpf_core_calc_relo_insn",
                    "130": "MOV             W19, W0",
                    "131": "CBZ             W0, loc_E70C",
                    "132": "MOV             X0, X24",
                    "133": "BL              kfree",
                    "134": "MRS             X0, SP_EL0",
                    "135": "LDR             X2, [SP,#0xC0+var_8]",
                    "136": "LDR             X1, [X0,#0x578]",
                    "137": "SUBS            X2, X2, X1",
                    "138": "MOV             X1, #0",
                    "139": "B.NE            loc_E940",
                    "140": "MOV             W0, W19",
                    "141": "LDP             X19, X20, [SP,#0xC0+var_B0]",
                    "142": "LDP             X21, X22, [SP,#0xC0+var_A0]",
                    "143": "LDP             X23, X24, [SP,#0xC0+var_90]",
                    "144": "LDP             X25, X26, [SP,#0xC0+var_80]",
                    "145": "LDP             X29, X30, [SP+0xC0+var_C0],#0xC0",
                    "146": "AUTIASP",
                    "147": "RET",
                    "148": "MOV             W19, #0xFFFFFFEA",
                    "149": "LDR             W2, [X23,#4]",
                    "150": "ADRP            X1, #aTargetCandidat@PAGE; \"target candidate search failed for %d\\n\"",
                    "151": "LDR             X0, [X21]",
                    "152": "ADD             X1, X1, #aTargetCandidat@PAGEOFF; \"target candidate search failed for %d\\n\"",
                    "153": "BL              bpf_log",
                    "154": "MOV             X0, X24",
                    "155": "BL              kfree",
                    "156": "NOP",
                    "157": "LDR             X0, [SP,#0xC0+var_50]",
                    "158": "ADD             X25, X25, #0x18",
                    "159": "BL              kfree",
                    "160": "MOV             X0, X25",
                    "161": "BL              mutex_unlock",
                    "162": "LDR             X20, [X21]",
                    "163": "LDR             W0, [X20]",
                    "164": "TBZ             W0, #1, loc_E62C",
                    "165": "MOV             X0, X25",
                    "166": "BL              mutex_lock",
                    "167": "MOV             X0, X20",
                    "168": "ADRP            X1, #aVmlinuxCandCac@PAGE; \"vmlinux_cand_cache:\"",
                    "169": "ADRP            X21, #btf_idr_lock@PAGE",
                    "170": "ADD             X1, X1, #aVmlinuxCandCac@PAGEOFF; \"vmlinux_cand_cache:\"",
                    "171": "ADD             X21, X21, #btf_idr_lock@PAGEOFF",
                    "172": "BL              bpf_log",
                    "173": "ADD             X1, X21, #0x20 ; ' '",
                    "174": "MOV             X0, X20",
                    "175": "BL              __print_cand_cache.constprop.0",
                    "176": "MOV             X0, X20",
                    "177": "ADRL            X1, aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "178": "BL              bpf_log",
                    "179": "ADD             X1, X21, #0x118",
                    "180": "MOV             X0, X20",
                    "181": "BL              __print_cand_cache.constprop.0",
                    "182": "ADRL            X1, asc_F198; \"\\n\"",
                    "183": "MOV             X0, X20",
                    "184": "BL              bpf_log",
                    "185": "MOV             X0, X25",
                    "186": "BL              mutex_unlock",
                    "187": "B               loc_E62C",
                    "188": "LDR             X0, [X21]",
                    "189": "ADD             X5, SP, #0xC0+var_40",
                    "190": "LDR             X1, [SP,#0xC0+var_60]",
                    "191": "MOV             W4, W26",
                    "192": "LDR             W2, [X23]",
                    "193": "MOV             X3, X23",
                    "194": "LSR             W2, W2, #3",
                    "195": "BL              bpf_core_patch_insn",
                    "196": "MOV             W19, W0",
                    "197": "B               loc_E624",
                    "198": "UBFIZ           X0, X0, #4, #0x10",
                    "199": "MOV             W1, #0xDC0",
                    "200": "STR             W7, [SP,#0xC0+var_54]",
                    "201": "BL              __kmalloc",
                    "202": "STR             X0, [SP,#0xC0+var_50]",
                    "203": "CBZ             X0, loc_E948",
                    "204": "LDRH            W0, [X20,#0xE]",
                    "205": "LDR             W7, [SP,#0xC0+var_54]",
                    "206": "CBZ             W0, loc_E5A4",
                    "207": "ADRL            X22, CSWTCH.386",
                    "208": "ADRP            X28, #aCoReRelocating@PAGE; \"CO-RE relocating %s %s: found target ca\"...",
                    "209": "ADD             X22, X22, #0x100",
                    "210": "ADD             X28, X28, #aCoReRelocating@PAGEOFF; \"CO-RE relocating %s %s: found target ca\"...",
                    "211": "MOV             X19, #0",
                    "212": "LDRH            W2, [X20,#0xC]",
                    "213": "ADD             X27, X20, W19,SXTW#4",
                    "214": "LDR             X0, [X21]",
                    "215": "MOV             X1, X28",
                    "216": "LDR             W4, [X27,#0x18]",
                    "217": "LDR             X2, [X22,X2,LSL#3]",
                    "218": "LDR             X3, [X20]",
                    "219": "BL              bpf_log",
                    "220": "LDR             X1, [SP,#0xC0+var_50]",
                    "221": "LSL             X0, X19, #4",
                    "222": "LDR             X2, [X27,#0x10]",
                    "223": "ADD             X19, X19, #1",
                    "224": "STR             X2, [X1,X0]",
                    "225": "LDR             X6, [SP,#0xC0+var_50]",
                    "226": "LDR             W1, [X27,#0x18]",
                    "227": "ADD             X6, X6, X0",
                    "228": "STR             W1, [X6,#8]",
                    "229": "LDRH            W7, [X20,#0xE]",
                    "230": "CMP             W7, W19",
                    "231": "B.GT            loc_E770",
                    "232": "B               loc_E5A4",
                    "233": "ADD             X0, SP, #0xC0+var_18",
                    "234": "MOV             X1, X22",
                    "235": "MOV             W2, #1",
                    "236": "BL              bpf_core_add_cands",
                    "237": "MOV             X19, X0",
                    "238": "CMN             X0, #1,LSL#12",
                    "239": "B.HI            loc_E90C",
                    "240": "MOV             X1, X27",
                    "241": "BL              populate_cand_cache.constprop.0",
                    "242": "MOV             X20, X0",
                    "243": "CMN             X0, #1,LSL#12",
                    "244": "B.HI            loc_E928",
                    "245": "LDRH            W0, [X0,#0xE]",
                    "246": "CBZ             W0, loc_E57C",
                    "247": "B               loc_E598",
                    "248": "MOV             X0, X28",
                    "249": "ADRP            X20, #aVmlinux@PAGE; \"vmlinux\"",
                    "250": "BL              _raw_spin_lock_bh",
                    "251": "ADD             X20, X20, #aVmlinux@PAGEOFF; \"vmlinux\"",
                    "252": "MOV             W2, #0",
                    "253": "NOP",
                    "254": "ADD             X1, SP, #0xC0+var_40",
                    "255": "MOV             X0, X25",
                    "256": "STR             W2, [SP,#0xC0+var_40]",
                    "257": "BL              idr_get_next",
                    "258": "MOV             X27, X0",
                    "259": "CBZ             X0, loc_E8E4",
                    "260": "LDRB            W0, [X27,#0xC8]",
                    "261": "CBZ             W0, loc_E8BC",
                    "262": "MOV             X1, X20; s2",
                    "263": "ADD             X0, X27, #0x90; s1",
                    "264": "BL              strcmp",
                    "265": "CBZ             W0, loc_E8BC",
                    "266": "ADD             X0, X27, #0x54 ; 'T'",
                    "267": "B               loc_E8C8",
                    "268": "ADD             X1, X27, #0x54 ; 'T'",
                    "269": "MOV             W2, #1",
                    "270": "LDADD           W2, W1, [X1]",
                    "271": "CBZ             W1, loc_E91C",
                    "272": "ADD             W2, W1, #1",
                    "273": "ORR             W1, W2, W1",
                    "274": "TBNZ            W1, #0x1F, loc_E900",
                    "275": "MOV             X0, X28",
                    "276": "BL              _raw_spin_unlock_bh",
                    "277": "MOV             X1, X22",
                    "278": "MOV             W2, #0",
                    "279": "NOP",
                    "280": "LDR             W0, [X1,#0x48]",
                    "281": "LDR             X1, [X1,#0x80]",
                    "282": "ADD             W2, W2, W0",
                    "283": "CBNZ            X1, loc_E880",
                    "284": "MOV             X1, X27",
                    "285": "MOV             X0, X19",
                    "286": "BL              bpf_core_add_cands",
                    "287": "MOV             X1, X0",
                    "288": "MOV             X19, X1",
                    "289": "MOV             X0, X27",
                    "290": "BL              btf_put",
                    "291": "CMN             X19, #1,LSL#12",
                    "292": "B.HI            loc_E90C",
                    "293": "MOV             X0, X28",
                    "294": "BL              _raw_spin_lock_bh",
                    "295": "LDR             W2, [SP,#0xC0+var_40]",
                    "296": "ADD             W2, W2, #1",
                    "297": "B               loc_E818",
                    "298": "ADD             X3, X27, #0x54 ; 'T'",
                    "299": "PRFM            #0x11, [X3]",
                    "300": "LDXR            W1, [X3]",
                    "301": "ADD             W2, W1, #1",
                    "302": "STXR            W5, W2, [X3]",
                    "303": "CBNZ            W5, loc_E8D0",
                    "304": "B               loc_E85C",
                    "305": "MOV             X0, X28",
                    "306": "BL              _raw_spin_unlock_bh",
                    "307": "ADD             X1, X28, #0x118",
                    "308": "MOV             X0, X19",
                    "309": "BL              populate_cand_cache.constprop.0",
                    "310": "MOV             X20, X0",
                    "311": "B               loc_E590",
                    "312": "MOV             W1, #1",
                    "313": "BL              refcount_warn_saturate",
                    "314": "B               loc_E86C",
                    "315": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "316": "MOV             X22, X19",
                    "317": "MOV             W19, W22",
                    "318": "B               loc_E668",
                    "319": "MOV             W1, #2",
                    "320": "BL              refcount_warn_saturate",
                    "321": "B               loc_E86C",
                    "322": "MOV             X22, X0",
                    "323": "MOV             W19, W22",
                    "324": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "325": "B               loc_E668",
                    "326": "MOV             W19, #0xFFFFFFF4",
                    "327": "B               loc_E62C",
                    "328": "STP             X27, X28, [SP,#0xC0+var_70]",
                    "329": "BL              __stack_chk_fail",
                    "330": "MOV             W19, #0xFFFFFFF4",
                    "331": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "332": "B               loc_E67C",
                    "333": "MOV             W19, W20",
                    "334": "LDP             X27, X28, [SP,#0xC0+var_70]",
                    "335": "B               loc_E668"
                }
            },
            {
                "filename": "btf.bpf_core_apply.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 70h",
                    "8": "mov     rbp, rcx",
                    "9": "mov     r12d, edx",
                    "10": "mov     r14, rsi",
                    "11": "mov     r15, rdi",
                    "12": "mov     rax, gs:28h",
                    "13": "mov     [rsp+0A0h+var_38], rax",
                    "14": "mov     ebx, [rsi+0Ch]",
                    "15": "mov     [rsp+0A0h+var_70], 0",
                    "16": "mov     [rsp+0A0h+var_78], 0",
                    "17": "mov     rdi, qword ptr cs:kmalloc_caches+60h",
                    "18": "mov     edx, 0F60h",
                    "19": "mov     esi, 0DC0h",
                    "20": "call    kmalloc_trace; PIC mode",
                    "21": "test    rax, rax",
                    "22": "jz      short INSTR51",
                    "23": "mov     [rsp+0A0h+var_80], rbp",
                    "24": "mov     [rsp+0A0h+var_84], ebx",
                    "25": "cmp     ebx, 6",
                    "26": "jnz     short INSTR53",
                    "27": "mov     rdi, [r15]",
                    "28": "mov     rcx, [r15+8]",
                    "29": "lea     rbp, [rsp+0A0h+var_60]",
                    "30": "lea     r8, [rsp+0A0h+var_78]",
                    "31": "mov     rsi, r14",
                    "32": "mov     edx, r12d",
                    "33": "mov     rbx, rax",
                    "34": "mov     r9, rax",
                    "35": "push    rbp",
                    "36": "call    bpf_core_calc_relo_insn; PIC mode",
                    "37": "add     rsp, 8",
                    "38": "mov     r13d, eax",
                    "39": "test    eax, eax",
                    "40": "jnz     INSTR162",
                    "41": "mov     rdi, [r15]",
                    "42": "mov     edx, [r14]",
                    "43": "shr     edx, 3",
                    "44": "lea     r9, [rsp+0A0h+var_60]",
                    "45": "mov     rsi, [rsp+0A0h+var_80]",
                    "46": "mov     rcx, r14",
                    "47": "mov     r8d, r12d",
                    "48": "call    bpf_core_patch_insn; PIC mode",
                    "49": "mov     r13d, eax",
                    "50": "jmp     INSTR162",
                    "51": "mov     r13d, 0FFFFFFF4h",
                    "52": "jmp     INSTR192",
                    "53": "mov     rbx, rax",
                    "54": "mov     [rsp+0A0h+var_88], r12d",
                    "55": "mov     rdi, offset cand_cache_mutex",
                    "56": "call    mutex_lock; PIC mode",
                    "57": "mov     [rsp+0A0h+var_90], r14",
                    "58": "mov     ebp, [r14+4]",
                    "59": "mov     [rsp+0A0h+var_58], 0",
                    "60": "mov     r13, [r15+8]",
                    "61": "call    bpf_get_btf_vmlinux; PIC mode",
                    "62": "mov     r12, rax",
                    "63": "cmp     rax, 0FFFFFFFFFFFFF001h",
                    "64": "jb      INSTR107",
                    "65": "mov     r13, r12",
                    "66": "cmp     r13, 0FFFFFFFFFFFFF001h",
                    "67": "jnb     INSTR157",
                    "68": "mov     [rsp+0A0h+var_A0], r15",
                    "69": "movzx   edi, word ptr [r13+0Eh]",
                    "70": "xor     r15d, r15d",
                    "71": "test    rdi, rdi",
                    "72": "mov     r14, [rsp+0A0h+var_90]",
                    "73": "jz      INSTR221",
                    "74": "shl     rdi, 4",
                    "75": "mov     esi, 0DC0h",
                    "76": "call    __kmalloc; PIC mode",
                    "77": "mov     [rsp+0A0h+var_78], rax",
                    "78": "test    rax, rax",
                    "79": "jz      INSTR229",
                    "80": "mov     rbp, rax",
                    "81": "cmp     word ptr [r13+0Eh], 0",
                    "82": "mov     rax, rbx",
                    "83": "jz      INSTR225",
                    "84": "mov     [rsp+0A0h+var_98], rax",
                    "85": "mov     r12d, 1",
                    "86": "xor     r14d, r14d",
                    "87": "mov     rax, [rsp+0A0h+var_A0]",
                    "88": "mov     rdi, [rax]",
                    "89": "movzx   eax, word ptr [r13+0Ch]",
                    "90": "mov     rdx, ds:btf_kind_str[rax*8]",
                    "91": "mov     rcx, [r13+0]",
                    "92": "mov     r8d, [r13+r14+18h]",
                    "93": "mov     rsi, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "94": "call    bpf_log; PIC mode",
                    "95": "mov     rax, [r13+r14+10h]",
                    "96": "mov     [rbp+r14+0], rax",
                    "97": "mov     eax, [r13+r14+18h]",
                    "98": "mov     rcx, [rsp+0A0h+var_78]",
                    "99": "mov     [rcx+r14+8], eax",
                    "100": "movzx   r15d, word ptr [r13+0Eh]",
                    "101": "cmp     r12, r15",
                    "102": "jnb     INSTR223",
                    "103": "mov     rbp, [rsp+0A0h+var_78]",
                    "104": "add     r14, 10h",
                    "105": "add     r12, 1",
                    "106": "jmp     short INSTR87",
                    "107": "mov     [rsp+0A0h+var_98], rbx",
                    "108": "test    r12, r12",
                    "109": "jz      INSTR155",
                    "110": "mov     ecx, [r13+88h]",
                    "111": "mov     rax, r13",
                    "112": "cmp     ecx, ebp",
                    "113": "jbe     short INSTR119",
                    "114": "mov     rax, r13",
                    "115": "mov     rax, [rax+80h]",
                    "116": "mov     ecx, [rax+88h]",
                    "117": "cmp     ecx, ebp",
                    "118": "ja      short INSTR115",
                    "119": "sub     ebp, ecx",
                    "120": "cmp     ebp, [rax+48h]",
                    "121": "jnb     short INSTR155",
                    "122": "mov     rax, [rax+8]",
                    "123": "mov     ecx, ebp",
                    "124": "mov     rdx, [rax+rcx*8]",
                    "125": "test    rdx, rdx",
                    "126": "jz      short INSTR155",
                    "127": "mov     eax, [rdx]",
                    "128": "mov     ecx, [r13+8Ch]",
                    "129": "cmp     ecx, eax",
                    "130": "jbe     short INSTR133",
                    "131": "mov     r13, [r13+80h]",
                    "132": "jmp     short INSTR128",
                    "133": "sub     eax, ecx",
                    "134": "cmp     eax, [r13+44h]",
                    "135": "jnb     short INSTR155",
                    "136": "mov     r14, [r13+20h]",
                    "137": "mov     ebx, eax",
                    "138": "mov     rbp, r14",
                    "139": "add     rbp, rbx",
                    "140": "jz      short INSTR155",
                    "141": "cmp     byte ptr [rbp+0], 0",
                    "142": "jz      short INSTR155",
                    "143": "mov     r13, rdx",
                    "144": "mov     rdi, rbp; s",
                    "145": "call    strlen; PIC mode",
                    "146": "mov     ecx, eax",
                    "147": "add     ecx, 0FFFFFFFBh",
                    "148": "js      INSTR232",
                    "149": "mov     ecx, ecx",
                    "150": "lea     edi, [rax-4]",
                    "151": "lea     rdx, [rbx+r14]",
                    "152": "add     rdx, 4",
                    "153": "mov     rbx, [rsp+0A0h+var_98]",
                    "154": "jmp     INSTR209",
                    "155": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "156": "mov     rbx, [rsp+0A0h+var_98]",
                    "157": "mov     rax, [rsp+0A0h+var_90]",
                    "158": "mov     rdi, [r15]",
                    "159": "mov     edx, [rax+4]",
                    "160": "mov     rsi, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "161": "call    bpf_log; PIC mode",
                    "162": "mov     rdi, rbx",
                    "163": "call    kfree; PIC mode",
                    "164": "cmp     [rsp+0A0h+var_84], 6",
                    "165": "jz      INSTR192",
                    "166": "mov     rdi, [rsp+0A0h+var_78]",
                    "167": "call    kfree; PIC mode",
                    "168": "mov     rdi, offset cand_cache_mutex",
                    "169": "call    mutex_unlock; PIC mode",
                    "170": "mov     rbx, [r15]",
                    "171": "test    byte ptr [rbx], 2",
                    "172": "jz      short INSTR192",
                    "173": "mov     rdi, offset cand_cache_mutex",
                    "174": "call    mutex_lock; PIC mode",
                    "175": "mov     rdi, rbx",
                    "176": "mov     rsi, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "177": "call    bpf_log; PIC mode",
                    "178": "mov     rdi, rbx",
                    "179": "mov     rsi, offset vmlinux_cand_cache",
                    "180": "call    __print_cand_cache",
                    "181": "mov     rdi, rbx",
                    "182": "mov     rsi, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "183": "call    bpf_log; PIC mode",
                    "184": "mov     rdi, rbx",
                    "185": "mov     rsi, offset module_cand_cache",
                    "186": "call    __print_cand_cache",
                    "187": "mov     rdi, rbx",
                    "188": "mov     rsi, offset asc_F56F; \"\\n\"",
                    "189": "call    bpf_log; PIC mode",
                    "190": "mov     rdi, offset cand_cache_mutex",
                    "191": "call    mutex_unlock; PIC mode",
                    "192": "mov     rax, gs:28h",
                    "193": "cmp     rax, [rsp+0A0h+var_38]",
                    "194": "jnz     INSTR398",
                    "195": "mov     eax, r13d",
                    "196": "add     rsp, 70h",
                    "197": "pop     rbx",
                    "198": "pop     r12",
                    "199": "pop     r13",
                    "200": "pop     r14",
                    "201": "pop     r15",
                    "202": "pop     rbp",
                    "203": "retn",
                    "204": "lea     rsi, [rcx-1]",
                    "205": "add     edi, 0FFFFFFFFh",
                    "206": "test    rcx, rcx",
                    "207": "mov     rcx, rsi",
                    "208": "jle     short INSTR233",
                    "209": "cmp     byte ptr [rdx+rcx-4], 5Fh ; '_'",
                    "210": "jz      short INSTR204",
                    "211": "cmp     byte ptr [rdx+rcx-3], 5Fh ; '_'",
                    "212": "jnz     short INSTR204",
                    "213": "cmp     byte ptr [rdx+rcx-2], 5Fh ; '_'",
                    "214": "jnz     short INSTR204",
                    "215": "cmp     byte ptr [rdx+rcx-1], 5Fh ; '_'",
                    "216": "jnz     short INSTR204",
                    "217": "cmp     byte ptr [rdx+rcx], 5Fh ; '_'",
                    "218": "jz      short INSTR204",
                    "219": "mov     eax, edi",
                    "220": "jmp     short INSTR233",
                    "221": "mov     rax, rbx",
                    "222": "jmp     short INSTR225",
                    "223": "mov     rax, [rsp+0A0h+var_98]",
                    "224": "mov     r14, [rsp+0A0h+var_90]",
                    "225": "mov     dword ptr [rsp+0A0h+var_70], r15d",
                    "226": "mov     r15, [rsp+0A0h+var_A0]",
                    "227": "mov     r12d, [rsp+0A0h+var_88]",
                    "228": "jmp     INSTR27",
                    "229": "mov     r13d, 0FFFFFFF4h",
                    "230": "mov     r15, [rsp+0A0h+var_A0]",
                    "231": "jmp     INSTR162",
                    "232": "mov     rbx, [rsp+0A0h+var_98]",
                    "233": "mov     r14, rbp",
                    "234": "mov     [rsp+0A0h+var_60], rbp",
                    "235": "movzx   ecx, byte ptr [r13+7]",
                    "236": "and     ecx, 1Fh",
                    "237": "mov     word ptr [rsp+0A0h+var_58+4], cx",
                    "238": "mov     dword ptr [rsp+0A0h+var_58], eax",
                    "239": "lea     rdi, [rsp+0A0h+var_60]",
                    "240": "mov     rbp, rax",
                    "241": "call    hash_cands",
                    "242": "mov     ecx, eax",
                    "243": "imul    rcx, 8421085h",
                    "244": "shr     rcx, 20h",
                    "245": "mov     edx, eax",
                    "246": "sub     edx, ecx",
                    "247": "shr     edx, 1",
                    "248": "add     edx, ecx",
                    "249": "shr     edx, 4",
                    "250": "mov     ecx, edx",
                    "251": "shl     ecx, 5",
                    "252": "sub     edx, ecx",
                    "253": "add     edx, eax",
                    "254": "mov     r13, ds:vmlinux_cand_cache[rdx*8]",
                    "255": "test    r13, r13",
                    "256": "jz      short INSTR266",
                    "257": "mov     rsi, rbp",
                    "258": "cmp     [r13+8], esi",
                    "259": "jnz     short INSTR266",
                    "260": "mov     rdi, [r13+0]; s1",
                    "261": "mov     edx, esi; n",
                    "262": "mov     rsi, r14; s2",
                    "263": "call    strncmp; PIC mode",
                    "264": "test    eax, eax",
                    "265": "jz      short INSTR284",
                    "266": "lea     rdi, [rsp+0A0h+var_60]",
                    "267": "mov     rsi, r12",
                    "268": "mov     edx, 1",
                    "269": "call    bpf_core_add_cands",
                    "270": "mov     rbp, rax",
                    "271": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "272": "jbe     short INSTR275",
                    "273": "mov     r13, rbp",
                    "274": "jmp     INSTR66",
                    "275": "mov     rdi, rbp",
                    "276": "mov     rsi, offset vmlinux_cand_cache",
                    "277": "call    populate_cand_cache",
                    "278": "mov     r13, rax",
                    "279": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "280": "ja      INSTR66",
                    "281": "cmp     word ptr [r13+0Eh], 0",
                    "282": "jnz     INSTR66",
                    "283": "jmp     short INSTR287",
                    "284": "cmp     word ptr [r13+0Eh], 0",
                    "285": "lea     rbp, [rsp+0A0h+var_60]",
                    "286": "jnz     INSTR66",
                    "287": "mov     rdi, rbp",
                    "288": "call    hash_cands",
                    "289": "mov     ecx, eax",
                    "290": "imul    rcx, 8421085h",
                    "291": "shr     rcx, 20h",
                    "292": "mov     edx, eax",
                    "293": "sub     edx, ecx",
                    "294": "shr     edx, 1",
                    "295": "add     edx, ecx",
                    "296": "shr     edx, 4",
                    "297": "mov     ecx, edx",
                    "298": "shl     ecx, 5",
                    "299": "sub     edx, ecx",
                    "300": "add     edx, eax",
                    "301": "mov     r13, ds:module_cand_cache[rdx*8]",
                    "302": "test    r13, r13",
                    "303": "jz      short INSTR312",
                    "304": "mov     edx, [r13+8]; n",
                    "305": "cmp     edx, [rbp+8]",
                    "306": "jnz     short INSTR312",
                    "307": "mov     rdi, [r13+0]; s1",
                    "308": "mov     rsi, [rbp+0]; s2",
                    "309": "call    strncmp; PIC mode",
                    "310": "test    eax, eax",
                    "311": "jz      INSTR66",
                    "312": "mov     rdi, offset btf_idr_lock",
                    "313": "call    _raw_spin_lock_bh; PIC mode",
                    "314": "mov     [rsp+0A0h+var_64], 0",
                    "315": "lea     rsi, [rsp+0A0h+var_64]",
                    "316": "mov     rdi, offset btf_idr",
                    "317": "call    idr_get_next; PIC mode",
                    "318": "test    rax, rax",
                    "319": "jz      INSTR391",
                    "320": "mov     r13, rax",
                    "321": "lea     r14, [rsp+0A0h+var_64]",
                    "322": "jmp     short INSTR347",
                    "323": "mov     rdi, offset btf_idr_lock",
                    "324": "call    _raw_spin_lock_irqsave; PIC mode",
                    "325": "mov     [rsp+0A0h+var_A0], rax",
                    "326": "mov     esi, [r13+58h]",
                    "327": "mov     rdi, offset btf_idr",
                    "328": "call    idr_remove; PIC mode",
                    "329": "mov     rdi, offset btf_idr_lock",
                    "330": "mov     rsi, [rsp+0A0h+var_A0]",
                    "331": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "332": "add     r13, 60h ; '`'",
                    "333": "mov     rdi, r13",
                    "334": "mov     rsi, offset btf_free_rcu",
                    "335": "call    call_rcu; PIC mode",
                    "336": "cmp     rbp, 0FFFFFFFFFFFFF000h",
                    "337": "ja      INSTR273",
                    "338": "mov     rdi, offset btf_idr_lock",
                    "339": "call    _raw_spin_lock_bh; PIC mode",
                    "340": "add     [rsp+0A0h+var_64], 1",
                    "341": "mov     rdi, offset btf_idr",
                    "342": "mov     rsi, r14",
                    "343": "call    idr_get_next; PIC mode",
                    "344": "mov     r13, rax",
                    "345": "test    rax, rax",
                    "346": "jz      INSTR391",
                    "347": "cmp     byte ptr [r13+0C8h], 0",
                    "348": "jz      short INSTR340",
                    "349": "lea     rdi, [r13+90h]; s1",
                    "350": "mov     rsi, offset s2; \"vmlinux\"",
                    "351": "call    strcmp; PIC mode",
                    "352": "test    eax, eax",
                    "353": "jz      short INSTR340",
                    "354": "lea     rax, [r13+54h]",
                    "355": "mov     [rsp+0A0h+var_A0], rax",
                    "356": "mov     eax, 1",
                    "357": "lock xadd [r13+54h], eax",
                    "358": "test    eax, eax",
                    "359": "jz      short INSTR384",
                    "360": "lea     ecx, [rax+1]",
                    "361": "or      ecx, eax",
                    "362": "js      short INSTR386",
                    "363": "mov     rdi, offset btf_idr_lock",
                    "364": "call    _raw_spin_unlock_bh; PIC mode",
                    "365": "xor     edx, edx",
                    "366": "mov     rax, r12",
                    "367": "add     edx, [rax+48h]",
                    "368": "mov     rax, [rax+80h]",
                    "369": "test    rax, rax",
                    "370": "jnz     short INSTR367",
                    "371": "mov     rdi, rbp",
                    "372": "mov     rsi, r13",
                    "373": "call    bpf_core_add_cands",
                    "374": "mov     rbp, rax",
                    "375": "mov     eax, 0FFFFFFFFh",
                    "376": "lock xadd [r13+54h], eax",
                    "377": "cmp     eax, 1",
                    "378": "jz      INSTR323",
                    "379": "jge     INSTR336",
                    "380": "mov     rdi, [rsp+0A0h+var_A0]",
                    "381": "mov     esi, 3",
                    "382": "call    refcount_warn_saturate; PIC mode",
                    "383": "jmp     INSTR336",
                    "384": "mov     esi, 2",
                    "385": "jmp     short INSTR387",
                    "386": "mov     esi, 1",
                    "387": "mov     rdi, [rsp+0A0h+var_A0]",
                    "388": "call    refcount_warn_saturate; PIC mode",
                    "389": "mov     rbx, [rsp+0A0h+var_98]",
                    "390": "jmp     short INSTR363",
                    "391": "mov     rdi, offset btf_idr_lock",
                    "392": "call    _raw_spin_unlock_bh; PIC mode",
                    "393": "mov     rdi, rbp",
                    "394": "mov     rsi, offset module_cand_cache",
                    "395": "call    populate_cand_cache",
                    "396": "mov     r13, rax",
                    "397": "jmp     INSTR66",
                    "398": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "btf.bpf_core_apply.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "mov     r12, rsi",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rbx, rdi",
                    "9": "sub     rsp, 68h",
                    "10": "mov     rdi, qword ptr cs:kmalloc_caches+60h",
                    "11": "mov     ebp, [rsi+0Ch]",
                    "12": "mov     esi, 0DC0h",
                    "13": "mov     [rsp+98h+var_94], edx",
                    "14": "mov     edx, 0F60h",
                    "15": "mov     [rsp+98h+var_90], rcx",
                    "16": "mov     rax, gs:28h",
                    "17": "mov     [rsp+98h+var_38], rax",
                    "18": "xor     eax, eax",
                    "19": "mov     [rsp+98h+var_80], 0",
                    "20": "mov     [rsp+98h+var_78], 0",
                    "21": "call    kmalloc_trace; PIC mode",
                    "22": "test    rax, rax",
                    "23": "jz      INSTR313",
                    "24": "mov     r13, rax",
                    "25": "cmp     ebp, 6",
                    "26": "jz      INSTR104",
                    "27": "mov     rdi, offset cand_cache_mutex",
                    "28": "call    mutex_lock; PIC mode",
                    "29": "mov     r15d, [r12+4]",
                    "30": "mov     r14, [rbx+8]",
                    "31": "mov     [rsp+98h+src], 0",
                    "32": "mov     [rsp+98h+var_40], 0",
                    "33": "call    bpf_get_btf_vmlinux; PIC mode",
                    "34": "mov     rbp, rax",
                    "35": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "36": "ja      short INSTR71",
                    "37": "test    rax, rax",
                    "38": "jz      short INSTR70",
                    "39": "mov     ecx, [r14+88h]",
                    "40": "mov     rax, r14",
                    "41": "cmp     r15d, ecx",
                    "42": "jnb     short INSTR47",
                    "43": "mov     rax, [rax+80h]",
                    "44": "mov     ecx, [rax+88h]",
                    "45": "cmp     r15d, ecx",
                    "46": "jb      short INSTR43",
                    "47": "mov     esi, r15d",
                    "48": "sub     esi, ecx",
                    "49": "cmp     esi, [rax+48h]",
                    "50": "jnb     short INSTR70",
                    "51": "mov     rax, [rax+8]",
                    "52": "mov     r15, [rax+rsi*8]",
                    "53": "test    r15, r15",
                    "54": "jz      short INSTR70",
                    "55": "mov     ecx, [r15]",
                    "56": "mov     eax, [r14+8Ch]",
                    "57": "cmp     ecx, eax",
                    "58": "jnb     short INSTR63",
                    "59": "mov     r14, [r14+80h]",
                    "60": "mov     eax, [r14+8Ch]",
                    "61": "cmp     ecx, eax",
                    "62": "jb      short INSTR59",
                    "63": "sub     ecx, eax",
                    "64": "cmp     ecx, [r14+44h]",
                    "65": "jnb     short INSTR70",
                    "66": "add     rcx, [r14+20h]",
                    "67": "jz      short INSTR70",
                    "68": "cmp     byte ptr [rcx], 0",
                    "69": "jnz     INSTR142",
                    "70": "mov     ebp, 0FFFFFFEAh",
                    "71": "mov     edx, [r12+4]",
                    "72": "mov     rdi, [rbx]",
                    "73": "mov     rsi, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "74": "call    bpf_log; PIC mode",
                    "75": "mov     rdi, r13",
                    "76": "call    kfree; PIC mode",
                    "77": "mov     rdi, [rsp+98h+var_80]",
                    "78": "call    kfree; PIC mode",
                    "79": "mov     rdi, offset cand_cache_mutex",
                    "80": "call    mutex_unlock; PIC mode",
                    "81": "mov     r12, [rbx]",
                    "82": "test    byte ptr [r12], 2",
                    "83": "jz      INSTR119",
                    "84": "mov     rdi, offset cand_cache_mutex",
                    "85": "call    mutex_lock; PIC mode",
                    "86": "mov     rdi, r12",
                    "87": "mov     rsi, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "88": "call    bpf_log; PIC mode",
                    "89": "mov     rdi, r12",
                    "90": "mov     rsi, offset vmlinux_cand_cache",
                    "91": "call    __print_cand_cache_constprop_0",
                    "92": "mov     rdi, r12",
                    "93": "mov     rsi, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "94": "call    bpf_log; PIC mode",
                    "95": "mov     rdi, r12",
                    "96": "mov     rsi, offset module_cand_cache",
                    "97": "call    __print_cand_cache_constprop_0",
                    "98": "mov     rdi, r12",
                    "99": "mov     rsi, offset asc_DC03; \"\\n\"",
                    "100": "call    bpf_log; PIC mode",
                    "101": "mov     rdi, offset cand_cache_mutex",
                    "102": "call    mutex_unlock; PIC mode",
                    "103": "jmp     short INSTR119",
                    "104": "lea     r10, [rsp+98h+var_70]",
                    "105": "mov     rcx, [rbx+8]",
                    "106": "mov     rdi, [rbx]",
                    "107": "mov     r9, rax",
                    "108": "push    r10",
                    "109": "mov     edx, [rsp+0A0h+var_94]",
                    "110": "mov     rsi, r12",
                    "111": "lea     r8, [rsp+0A0h+var_80]",
                    "112": "call    bpf_core_calc_relo_insn; PIC mode",
                    "113": "mov     ebp, eax",
                    "114": "pop     rax",
                    "115": "test    ebp, ebp",
                    "116": "jz      short INSTR131",
                    "117": "mov     rdi, r13",
                    "118": "call    kfree; PIC mode",
                    "119": "mov     rax, [rsp+98h+var_38]",
                    "120": "sub     rax, gs:28h",
                    "121": "jnz     INSTR312",
                    "122": "add     rsp, 68h",
                    "123": "mov     eax, ebp",
                    "124": "pop     rbx",
                    "125": "pop     rbp",
                    "126": "pop     r12",
                    "127": "pop     r13",
                    "128": "pop     r14",
                    "129": "pop     r15",
                    "130": "jmp     __x86_return_thunk; PIC mode",
                    "131": "mov     edx, [r12]",
                    "132": "lea     r10, [rsp+98h+var_70]",
                    "133": "mov     rdi, [rbx]",
                    "134": "mov     rcx, r12",
                    "135": "mov     r8d, [rsp+98h+var_94]",
                    "136": "mov     rsi, [rsp+98h+var_90]",
                    "137": "mov     r9, r10",
                    "138": "shr     edx, 3",
                    "139": "call    bpf_core_patch_insn; PIC mode",
                    "140": "mov     ebp, eax",
                    "141": "jmp     short INSTR117",
                    "142": "mov     rdi, rcx",
                    "143": "mov     [rsp+98h+var_88], rcx",
                    "144": "call    bpf_core_essential_name_len; PIC mode",
                    "145": "mov     rcx, [rsp+98h+var_88]",
                    "146": "mov     rsi, offset vmlinux_cand_cache",
                    "147": "mov     r8, rax",
                    "148": "lea     rdi, [rsp+98h+src]",
                    "149": "mov     [rsp+98h+src], rcx",
                    "150": "movzx   eax, byte ptr [r15+7]",
                    "151": "mov     dword ptr [rsp+98h+var_40], r8d",
                    "152": "and     eax, 1Fh",
                    "153": "mov     word ptr [rsp+98h+var_40+4], ax",
                    "154": "call    check_cand_cache_constprop_0",
                    "155": "mov     r15, rax",
                    "156": "test    rax, rax",
                    "157": "jz      INSTR232",
                    "158": "cmp     word ptr [r15+0Eh], 0",
                    "159": "jnz     short INSTR168",
                    "160": "lea     rax, [rsp+98h+src]",
                    "161": "mov     [rsp+98h+var_88], rax",
                    "162": "mov     rdi, [rsp+98h+var_88]",
                    "163": "mov     rsi, offset module_cand_cache",
                    "164": "call    check_cand_cache_constprop_0",
                    "165": "mov     r15, rax",
                    "166": "test    rax, rax",
                    "167": "jz      INSTR248",
                    "168": "cmp     r15, 0FFFFFFFFFFFFF000h",
                    "169": "ja      INSTR315",
                    "170": "movzx   eax, word ptr [r15+0Eh]",
                    "171": "xor     ebp, ebp",
                    "172": "test    ax, ax",
                    "173": "jnz     short INSTR199",
                    "174": "lea     r10, [rsp+98h+var_70]",
                    "175": "mov     dword ptr [rsp+98h+var_78], ebp",
                    "176": "mov     rcx, [rbx+8]",
                    "177": "mov     r9, r13",
                    "178": "push    r10",
                    "179": "mov     rdi, [rbx]",
                    "180": "mov     rsi, r12",
                    "181": "mov     edx, [rsp+0A0h+var_94]",
                    "182": "lea     r8, [rsp+0A0h+var_80]",
                    "183": "call    bpf_core_calc_relo_insn; PIC mode",
                    "184": "pop     rdx",
                    "185": "mov     ebp, eax",
                    "186": "test    eax, eax",
                    "187": "jnz     INSTR75",
                    "188": "mov     edx, [r12]",
                    "189": "lea     r10, [rsp+98h+var_70]",
                    "190": "mov     rdi, [rbx]",
                    "191": "mov     rcx, r12",
                    "192": "mov     r8d, [rsp+98h+var_94]",
                    "193": "mov     rsi, [rsp+98h+var_90]",
                    "194": "mov     r9, r10",
                    "195": "shr     edx, 3",
                    "196": "call    bpf_core_patch_insn; PIC mode",
                    "197": "mov     ebp, eax",
                    "198": "jmp     INSTR75",
                    "199": "movzx   edi, ax",
                    "200": "mov     esi, 0DC0h",
                    "201": "shl     rdi, 4",
                    "202": "call    __kmalloc; PIC mode",
                    "203": "mov     [rsp+98h+var_80], rax",
                    "204": "test    rax, rax",
                    "205": "jz      INSTR317",
                    "206": "cmp     word ptr [r15+0Eh], 0",
                    "207": "jz      INSTR174",
                    "208": "xor     r14d, r14d",
                    "209": "movsxd  rbp, r14d",
                    "210": "mov     rcx, [r15]",
                    "211": "mov     rdi, [rbx]",
                    "212": "mov     rsi, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "213": "movzx   edx, word ptr [r15+0Ch]",
                    "214": "shl     rbp, 4",
                    "215": "add     rbp, r15",
                    "216": "mov     rdx, ds:btf_kind_str[rdx*8]",
                    "217": "mov     r8d, [rbp+18h]",
                    "218": "call    bpf_log; PIC mode",
                    "219": "mov     rsi, [rbp+10h]",
                    "220": "mov     rcx, [rsp+98h+var_80]",
                    "221": "mov     rdx, r14",
                    "222": "shl     rdx, 4",
                    "223": "add     r14, 1",
                    "224": "mov     [rcx+rdx], rsi",
                    "225": "mov     esi, [rbp+18h]",
                    "226": "mov     rcx, [rsp+98h+var_80]",
                    "227": "mov     [rcx+rdx+8], esi",
                    "228": "movzx   ebp, word ptr [r15+0Eh]",
                    "229": "cmp     ebp, r14d",
                    "230": "jg      short INSTR209",
                    "231": "jmp     INSTR174",
                    "232": "mov     edx, 1",
                    "233": "mov     rsi, rbp",
                    "234": "lea     rdi, [rsp+98h+src]; src",
                    "235": "call    bpf_core_add_cands",
                    "236": "mov     [rsp+98h+var_88], rax",
                    "237": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "238": "ja      INSTR305",
                    "239": "mov     rsi, offset vmlinux_cand_cache",
                    "240": "mov     rdi, rax",
                    "241": "call    populate_cand_cache_constprop_0",
                    "242": "mov     r15, rax",
                    "243": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "244": "ja      INSTR310",
                    "245": "cmp     word ptr [rax+0Eh], 0",
                    "246": "jz      INSTR162",
                    "247": "jmp     INSTR170",
                    "248": "mov     rdi, offset btf_idr_lock",
                    "249": "mov     r14d, 1",
                    "250": "call    _raw_spin_lock_bh; PIC mode",
                    "251": "xor     eax, eax",
                    "252": "lea     rsi, [rsp+98h+var_70]",
                    "253": "mov     rdi, offset btf_idr",
                    "254": "mov     [rsp+98h+var_70], eax",
                    "255": "call    idr_get_next; PIC mode",
                    "256": "mov     r15, rax",
                    "257": "test    rax, rax",
                    "258": "jz      INSTR295",
                    "259": "cmp     byte ptr [r15+0C8h], 0",
                    "260": "jz      INSTR292",
                    "261": "lea     rdi, [r15+90h]; s1",
                    "262": "mov     rsi, offset s2; \"vmlinux\"",
                    "263": "call    strcmp; PIC mode",
                    "264": "test    eax, eax",
                    "265": "jz      short INSTR292",
                    "266": "lea     rdi, [r15+54h]",
                    "267": "mov     eax, r14d",
                    "268": "lock xadd [r15+54h], eax",
                    "269": "test    eax, eax",
                    "270": "jz      INSTR307",
                    "271": "lea     edx, [rax+1]",
                    "272": "or      edx, eax",
                    "273": "js      INSTR302",
                    "274": "mov     rdi, offset btf_idr_lock",
                    "275": "call    _raw_spin_unlock_bh; PIC mode",
                    "276": "mov     rax, rbp",
                    "277": "xor     edx, edx",
                    "278": "add     edx, [rax+48h]",
                    "279": "mov     rax, [rax+80h]",
                    "280": "test    rax, rax",
                    "281": "jnz     short INSTR278",
                    "282": "mov     rdi, [rsp+98h+var_88]; src",
                    "283": "mov     rsi, r15",
                    "284": "call    bpf_core_add_cands",
                    "285": "mov     rdi, r15",
                    "286": "mov     [rsp+98h+var_88], rax",
                    "287": "call    btf_put; PIC mode",
                    "288": "cmp     [rsp+98h+var_88], 0FFFFFFFFFFFFF000h",
                    "289": "ja      short INSTR305",
                    "290": "mov     rdi, offset btf_idr_lock",
                    "291": "call    _raw_spin_lock_bh; PIC mode",
                    "292": "mov     eax, [rsp+98h+var_70]",
                    "293": "add     eax, 1",
                    "294": "jmp     INSTR252",
                    "295": "mov     rdi, offset btf_idr_lock",
                    "296": "call    _raw_spin_unlock_bh; PIC mode",
                    "297": "mov     rdi, [rsp+98h+var_88]",
                    "298": "mov     rsi, offset module_cand_cache",
                    "299": "call    populate_cand_cache_constprop_0",
                    "300": "mov     r15, rax",
                    "301": "jmp     INSTR168",
                    "302": "mov     esi, 1",
                    "303": "call    refcount_warn_saturate; PIC mode",
                    "304": "jmp     INSTR274",
                    "305": "mov     rbp, [rsp+98h+var_88]",
                    "306": "jmp     INSTR71",
                    "307": "mov     esi, 2",
                    "308": "call    refcount_warn_saturate; PIC mode",
                    "309": "jmp     INSTR274",
                    "310": "mov     rbp, rax",
                    "311": "jmp     INSTR71",
                    "312": "call    __stack_chk_fail; PIC mode",
                    "313": "mov     ebp, 0FFFFFFF4h",
                    "314": "jmp     INSTR119",
                    "315": "mov     ebp, r15d",
                    "316": "jmp     INSTR71",
                    "317": "mov     ebp, 0FFFFFFF4h",
                    "318": "jmp     INSTR75"
                }
            },
            {
                "filename": "btf.bpf_core_apply.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "mov     r13d, 0FFFFFFF4h",
                    "5": "push    r12",
                    "6": "mov     r12, rsi",
                    "7": "push    rbp",
                    "8": "mov     rbp, rdi",
                    "9": "mov     edi, 3",
                    "10": "push    rbx",
                    "11": "sub     rsp, 60h",
                    "12": "mov     [rsp+90h+var_8C], edx",
                    "13": "mov     edx, 0DC0h",
                    "14": "mov     [rsp+90h+var_88], rcx",
                    "15": "mov     rax, gs:28h",
                    "16": "mov     [rsp+90h+var_38], rax",
                    "17": "mov     eax, [rsi+0Ch]",
                    "18": "mov     esi, 520h",
                    "19": "mov     [rsp+90h+var_80], 0",
                    "20": "mov     [rsp+90h+var_78], 0",
                    "21": "mov     [rsp+90h+var_90], eax",
                    "22": "call    kmalloc_array_constprop_0",
                    "23": "test    rax, rax",
                    "24": "jz      INSTR237",
                    "25": "cmp     [rsp+90h+var_90], 6",
                    "26": "mov     r14, rax",
                    "27": "jz      INSTR185",
                    "28": "mov     rdi, offset cand_cache_mutex",
                    "29": "call    mutex_lock; PIC mode",
                    "30": "xor     eax, eax",
                    "31": "mov     ecx, 4",
                    "32": "mov     rbx, [rbp+8]",
                    "33": "lea     rdi, [rsp+90h+var_48]",
                    "34": "mov     r15d, [r12+4]",
                    "35": "rep stosd",
                    "36": "call    bpf_get_btf_vmlinux; PIC mode",
                    "37": "mov     r13, rax",
                    "38": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "39": "ja      INSTR137",
                    "40": "test    rax, rax",
                    "41": "jz      INSTR139",
                    "42": "mov     esi, r15d",
                    "43": "mov     rdi, rbx",
                    "44": "call    btf_type_by_id; PIC mode",
                    "45": "mov     r15, rax",
                    "46": "test    rax, rax",
                    "47": "jz      INSTR139",
                    "48": "mov     esi, [rax]",
                    "49": "mov     rdi, rbx",
                    "50": "call    btf_str_by_offset",
                    "51": "mov     rbx, rax",
                    "52": "test    rax, rax",
                    "53": "jz      INSTR139",
                    "54": "cmp     byte ptr [rax], 0",
                    "55": "jz      INSTR139",
                    "56": "mov     rdi, rax",
                    "57": "call    bpf_core_essential_name_len; PIC mode",
                    "58": "mov     rsi, offset vmlinux_cand_cache",
                    "59": "mov     r8, rax",
                    "60": "mov     [rsp+90h+var_48], rbx",
                    "61": "movzx   eax, byte ptr [r15+7]",
                    "62": "lea     rdi, [rsp+90h+var_48]",
                    "63": "mov     [rsp+90h+var_40], r8d",
                    "64": "and     eax, 1Fh",
                    "65": "mov     [rsp+90h+var_3C], ax",
                    "66": "call    check_cand_cache_constprop_0",
                    "67": "mov     r15, rax",
                    "68": "test    rax, rax",
                    "69": "jz      short INSTR74",
                    "70": "cmp     word ptr [rax+0Eh], 0",
                    "71": "lea     rbx, [rsp+90h+var_48]",
                    "72": "jz      short INSTR89",
                    "73": "jmp     INSTR142",
                    "74": "mov     edx, 1",
                    "75": "mov     rsi, r13",
                    "76": "lea     rdi, [rsp+90h+var_48]",
                    "77": "call    bpf_core_add_cands",
                    "78": "mov     rbx, rax",
                    "79": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "80": "ja      INSTR141",
                    "81": "mov     rsi, offset vmlinux_cand_cache",
                    "82": "mov     rdi, rax",
                    "83": "call    populate_cand_cache_constprop_0",
                    "84": "mov     r15, rax",
                    "85": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "86": "ja      INSTR144",
                    "87": "cmp     word ptr [rax+0Eh], 0",
                    "88": "jnz     INSTR142",
                    "89": "mov     rsi, offset module_cand_cache",
                    "90": "mov     rdi, rbx",
                    "91": "call    check_cand_cache_constprop_0",
                    "92": "mov     r15, rax",
                    "93": "test    rax, rax",
                    "94": "jnz     INSTR142",
                    "95": "mov     rdi, offset btf_idr_lock",
                    "96": "mov     r15, rbx",
                    "97": "call    _raw_spin_lock_bh; PIC mode",
                    "98": "xor     eax, eax",
                    "99": "lea     rsi, [rsp+90h+var_70]",
                    "100": "mov     rdi, offset btf_idr",
                    "101": "mov     [rsp+90h+var_70], eax",
                    "102": "call    idr_get_next; PIC mode",
                    "103": "mov     rbx, rax",
                    "104": "test    rax, rax",
                    "105": "jz      short INSTR130",
                    "106": "mov     rdi, rbx",
                    "107": "call    btf_is_module; PIC mode",
                    "108": "test    al, al",
                    "109": "jz      short INSTR127",
                    "110": "lea     rdi, [rbx+54h]",
                    "111": "call    refcount_inc",
                    "112": "mov     rdi, offset btf_idr_lock",
                    "113": "call    _raw_spin_unlock_bh; PIC mode",
                    "114": "mov     rdi, r13",
                    "115": "mov     rsi, rbx",
                    "116": "call    btf_nr_types; PIC mode",
                    "117": "mov     rdi, r15",
                    "118": "mov     edx, eax",
                    "119": "call    bpf_core_add_cands",
                    "120": "mov     rdi, rbx",
                    "121": "mov     r15, rax",
                    "122": "call    btf_put; PIC mode",
                    "123": "cmp     r15, 0FFFFFFFFFFFFF000h",
                    "124": "ja      short INSTR144",
                    "125": "mov     rdi, offset btf_idr_lock",
                    "126": "call    _raw_spin_lock_bh; PIC mode",
                    "127": "mov     eax, [rsp+90h+var_70]",
                    "128": "inc     eax",
                    "129": "jmp     short INSTR99",
                    "130": "mov     rdi, offset btf_idr_lock",
                    "131": "call    _raw_spin_unlock_bh; PIC mode",
                    "132": "mov     rdi, r15",
                    "133": "mov     rsi, offset module_cand_cache",
                    "134": "call    populate_cand_cache_constprop_0",
                    "135": "mov     r15, rax",
                    "136": "jmp     short INSTR142",
                    "137": "mov     r15, rax",
                    "138": "jmp     short INSTR142",
                    "139": "mov     r15, 0FFFFFFFFFFFFFFEAh",
                    "140": "jmp     short INSTR144",
                    "141": "mov     r15, rax",
                    "142": "cmp     r15, 0FFFFFFFFFFFFF000h",
                    "143": "jbe     short INSTR150",
                    "144": "mov     edx, [r12+4]",
                    "145": "mov     rdi, [rbp+0]",
                    "146": "mov     rsi, offset aTargetCandidat; \"target candidate search failed for %d\\n\"",
                    "147": "mov     r13d, r15d",
                    "148": "call    bpf_log; PIC mode",
                    "149": "jmp     INSTR207",
                    "150": "movzx   edi, word ptr [r15+0Eh]",
                    "151": "test    di, di",
                    "152": "jz      short INSTR160",
                    "153": "mov     edx, 0DC0h",
                    "154": "mov     esi, 10h",
                    "155": "mov     r13d, 0FFFFFFF4h",
                    "156": "call    kmalloc_array_constprop_0",
                    "157": "mov     [rsp+90h+var_80], rax",
                    "158": "test    rax, rax",
                    "159": "jz      INSTR207",
                    "160": "xor     r13d, r13d",
                    "161": "movzx   eax, word ptr [r15+0Eh]",
                    "162": "mov     rdi, [rbp+0]",
                    "163": "cmp     eax, r13d",
                    "164": "jle     short INSTR184",
                    "165": "movsxd  rbx, r13d",
                    "166": "movzx   eax, word ptr [r15+0Ch]",
                    "167": "mov     rcx, [r15]",
                    "168": "mov     rsi, offset aCoReRelocating; \"CO-RE relocating %s %s: found target ca\"...",
                    "169": "shl     rbx, 4",
                    "170": "add     rbx, r15",
                    "171": "mov     rdx, ds:btf_kind_str[rax*8]",
                    "172": "mov     r8d, [rbx+18h]",
                    "173": "call    bpf_log; PIC mode",
                    "174": "mov     rcx, [rbx+10h]",
                    "175": "mov     rdx, [rsp+90h+var_80]",
                    "176": "mov     rax, r13",
                    "177": "shl     rax, 4",
                    "178": "inc     r13",
                    "179": "mov     [rdx+rax], rcx",
                    "180": "mov     ecx, [rbx+18h]",
                    "181": "mov     rdx, [rsp+90h+var_80]",
                    "182": "mov     [rdx+rax+8], ecx",
                    "183": "jmp     short INSTR161",
                    "184": "mov     dword ptr [rsp+90h+var_78], eax",
                    "185": "lea     rbx, [rsp+90h+var_70]",
                    "186": "mov     rcx, [rbp+8]",
                    "187": "mov     r9, r14",
                    "188": "mov     rsi, r12",
                    "189": "push    rbx",
                    "190": "mov     edx, [rsp+98h+var_8C]",
                    "191": "mov     rdi, [rbp+0]",
                    "192": "lea     r8, [rsp+98h+var_80]",
                    "193": "call    bpf_core_calc_relo_insn; PIC mode",
                    "194": "mov     r13d, eax",
                    "195": "pop     rax",
                    "196": "test    r13d, r13d",
                    "197": "jnz     short INSTR207",
                    "198": "mov     edx, [r12]",
                    "199": "mov     r8d, [rsp+90h+var_8C]",
                    "200": "mov     r9, rbx",
                    "201": "mov     rcx, r12",
                    "202": "mov     rsi, [rsp+90h+var_88]",
                    "203": "mov     rdi, [rbp+0]",
                    "204": "shr     edx, 3",
                    "205": "call    bpf_core_patch_insn; PIC mode",
                    "206": "mov     r13d, eax",
                    "207": "mov     rdi, r14",
                    "208": "call    kfree; PIC mode",
                    "209": "cmp     [rsp+90h+var_90], 6",
                    "210": "jz      INSTR237",
                    "211": "mov     rdi, [rsp+90h+var_80]",
                    "212": "call    kfree; PIC mode",
                    "213": "mov     rdi, offset cand_cache_mutex",
                    "214": "call    mutex_unlock; PIC mode",
                    "215": "mov     rbp, [rbp+0]",
                    "216": "test    byte ptr [rbp+0], 2",
                    "217": "jz      short INSTR237",
                    "218": "mov     rdi, offset cand_cache_mutex",
                    "219": "call    mutex_lock; PIC mode",
                    "220": "mov     rsi, offset aVmlinuxCandCac; \"vmlinux_cand_cache:\"",
                    "221": "mov     rdi, rbp",
                    "222": "call    bpf_log; PIC mode",
                    "223": "mov     rsi, offset vmlinux_cand_cache",
                    "224": "mov     rdi, rbp",
                    "225": "call    __print_cand_cache_constprop_0",
                    "226": "mov     rsi, offset aModuleCandCach; \"\\nmodule_cand_cache:\"",
                    "227": "mov     rdi, rbp",
                    "228": "call    bpf_log; PIC mode",
                    "229": "mov     rsi, offset module_cand_cache",
                    "230": "mov     rdi, rbp",
                    "231": "call    __print_cand_cache_constprop_0",
                    "232": "mov     rdi, rbp",
                    "233": "mov     rsi, offset asc_95BE; \"\\n\"",
                    "234": "call    bpf_log; PIC mode",
                    "235": "mov     rdi, offset cand_cache_mutex",
                    "236": "call    mutex_unlock; PIC mode",
                    "237": "mov     rax, [rsp+90h+var_38]",
                    "238": "sub     rax, gs:28h",
                    "239": "jz      short INSTR241",
                    "240": "call    __stack_chk_fail; PIC mode",
                    "241": "add     rsp, 60h",
                    "242": "mov     eax, r13d",
                    "243": "pop     rbx",
                    "244": "pop     rbp",
                    "245": "pop     r12",
                    "246": "pop     r13",
                    "247": "pop     r14",
                    "248": "pop     r15",
                    "249": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-49852",
        "files": [
            {
                "filename": "efc_nport.efc_nport_vport_del.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, eax",
                    "6": "push    ebx",
                    "7": "add     esi, 48h ; 'H'",
                    "8": "sub     esp, 1Ch",
                    "9": "mov     [ebp+var_28], eax",
                    "10": "mov     ecx, [ebp+arg_8]",
                    "11": "add     eax, 50h ; 'P'",
                    "12": "mov     [ebp+var_24], edx",
                    "13": "mov     edi, [ebp+arg_0]",
                    "14": "mov     [ebp+var_20], eax",
                    "15": "mov     ebx, [ebp+arg_4]",
                    "16": "mov     [ebp+var_14], ecx",
                    "17": "mov     ecx, [ebp+arg_C]",
                    "18": "mov     [ebp+var_18], ecx",
                    "19": "call    _raw_spin_lock_irqsave",
                    "20": "mov     [ebp+var_1C], eax",
                    "21": "mov     eax, [esi]",
                    "22": "mov     [ebp+var_10], esi",
                    "23": "cmp     esi, eax",
                    "24": "mov     ecx, [eax]",
                    "25": "jnz     short INSTR32",
                    "26": "jmp     short INSTR52",
                    "27": "cmp     [ebp+var_10], ecx",
                    "28": "mov     eax, ecx",
                    "29": "mov     edx, [ecx]",
                    "30": "jz      short INSTR52",
                    "31": "mov     ecx, edx",
                    "32": "mov     esi, [eax+14h]",
                    "33": "mov     edx, [eax+10h]",
                    "34": "xor     esi, ebx",
                    "35": "xor     edx, edi",
                    "36": "or      edx, esi",
                    "37": "jnz     short INSTR27",
                    "38": "mov     edx, [eax+0Ch]",
                    "39": "mov     esi, [ebp+var_18]",
                    "40": "xor     esi, edx",
                    "41": "mov     edx, [ebp+var_14]",
                    "42": "xor     edx, [eax+8]",
                    "43": "or      edx, esi",
                    "44": "jnz     short INSTR27",
                    "45": "mov     ecx, [eax]",
                    "46": "mov     edx, [eax+4]",
                    "47": "mov     [ecx+4], edx",
                    "48": "mov     [edx], ecx",
                    "49": "mov     dword ptr [eax], 100h",
                    "50": "mov     dword ptr [eax+4], 122h",
                    "51": "call    kfree",
                    "52": "mov     edx, [ebp+var_1C]",
                    "53": "mov     eax, [ebp+var_20]",
                    "54": "call    _raw_spin_unlock_irqrestore",
                    "55": "mov     esi, [ebp+var_24]",
                    "56": "test    esi, esi",
                    "57": "jz      INSTR103",
                    "58": "mov     eax, [ebp+var_28]",
                    "59": "add     eax, 74h ; 't'",
                    "60": "mov     [ebp+var_10], eax",
                    "61": "call    _raw_spin_lock_irqsave",
                    "62": "mov     [ebp+var_1C], eax",
                    "63": "mov     eax, esi",
                    "64": "mov     esi, [esi+24h]",
                    "65": "lea     ecx, [eax+24h]",
                    "66": "cmp     esi, ecx",
                    "67": "jnz     short INSTR72",
                    "68": "jmp     short INSTR100",
                    "69": "mov     esi, [esi]",
                    "70": "cmp     esi, ecx",
                    "71": "jz      short INSTR100",
                    "72": "mov     edx, [esi+44h]",
                    "73": "mov     eax, [esi+40h]",
                    "74": "xor     edx, ebx",
                    "75": "xor     eax, edi",
                    "76": "or      eax, edx",
                    "77": "jnz     short INSTR69",
                    "78": "mov     eax, [esi+4Ch]",
                    "79": "mov     edx, [ebp+var_18]",
                    "80": "xor     edx, eax",
                    "81": "mov     eax, [ebp+var_14]",
                    "82": "xor     eax, [esi+48h]",
                    "83": "or      eax, edx",
                    "84": "jnz     short INSTR69",
                    "85": "xor     ecx, ecx",
                    "86": "mov     edx, 3",
                    "87": "lea     eax, [esi+0A8h]",
                    "88": "call    efc_sm_post_event",
                    "89": "mov     edx, [esi+0Ch]",
                    "90": "lea     eax, [esi+8]",
                    "91": "mov     ecx, 0FFFFFFFFh",
                    "92": "lock xadd [esi+8], ecx",
                    "93": "cmp     ecx, 1",
                    "94": "jz      short INSTR110",
                    "95": "test    ecx, ecx",
                    "96": "jle     short INSTR112",
                    "97": "lea     esi, [esi+0]",
                    "98": "lea     esi, [esi+0]",
                    "99": "nop",
                    "100": "mov     edx, [ebp+var_1C]",
                    "101": "mov     eax, [ebp+var_10]",
                    "102": "call    _raw_spin_unlock_irqrestore",
                    "103": "add     esp, 1Ch",
                    "104": "xor     eax, eax",
                    "105": "pop     ebx",
                    "106": "pop     esi",
                    "107": "pop     edi",
                    "108": "pop     ebp",
                    "109": "retn",
                    "110": "call    __x86_indirect_thunk_edx",
                    "111": "jmp     short INSTR100",
                    "112": "mov     edx, 3",
                    "113": "call    refcount_warn_saturate",
                    "114": "jmp     short INSTR100"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_40]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#0x40+var_30]",
                    "5": "MOV             X20, X2",
                    "6": "MOV             X19, X1",
                    "7": "STP             X21, X22, [SP,#0x40+var_20]",
                    "8": "MOV             X22, X0",
                    "9": "MOV             X21, X3",
                    "10": "ADD             X0, X0, #0x70 ; 'p'",
                    "11": "STR             X23, [SP,#0x40+var_10]",
                    "12": "BL              __raw_spin_lock_irqsave",
                    "13": "MOV             X23, X0",
                    "14": "MOV             X2, X22",
                    "15": "LDR             X0, [X2,#0x60]!",
                    "16": "LDR             X5, [X0]",
                    "17": "CMP             X2, X0",
                    "18": "B.NE            loc_10EC",
                    "19": "B               loc_1128",
                    "20": "MOV             X0, X5",
                    "21": "LDR             X5, [X5]",
                    "22": "CMP             X0, X2",
                    "23": "B.EQ            loc_1128",
                    "24": "LDR             X6, [X0,#0x18]",
                    "25": "CMP             X6, X20",
                    "26": "B.NE            loc_10DC",
                    "27": "LDR             X1, [X0,#0x10]",
                    "28": "CMP             X1, X21",
                    "29": "B.NE            loc_10DC",
                    "30": "LDP             X2, X1, [X0]",
                    "31": "STR             X1, [X2,#8]",
                    "32": "MOV             X5, #0x100",
                    "33": "MOV             X3, #0x122",
                    "34": "MOVK            X5, #0xDEAD,LSL#48",
                    "35": "MOVK            X3, #0xDEAD,LSL#48",
                    "36": "STR             X2, [X1]",
                    "37": "STP             X5, X3, [X0]",
                    "38": "BL              kfree",
                    "39": "ADD             X1, X22, #0x70 ; 'p'",
                    "40": "MOV             W0, #0",
                    "41": "STLRB           W0, [X1]",
                    "42": "MSR             DAIF, X23",
                    "43": "CBZ             X19, loc_11D0",
                    "44": "ADD             X0, X22, #0xB8",
                    "45": "BL              __raw_spin_lock_irqsave",
                    "46": "MOV             X1, X19",
                    "47": "MOV             X23, X0",
                    "48": "LDR             X19, [X1,#0x28]!",
                    "49": "CMP             X19, X1",
                    "50": "B.NE            loc_1168",
                    "51": "B               loc_11C0",
                    "52": "LDR             X19, [X19]",
                    "53": "CMP             X19, X1",
                    "54": "B.EQ            loc_11C0",
                    "55": "LDR             X2, [X19,#0x58]",
                    "56": "CMP             X2, X20",
                    "57": "B.NE            loc_115C",
                    "58": "LDR             X2, [X19,#0x60]",
                    "59": "CMP             X2, X21",
                    "60": "B.NE            loc_115C",
                    "61": "ADD             X0, X19, #0xE0",
                    "62": "MOV             X2, #0",
                    "63": "MOV             W1, #3",
                    "64": "BL              efc_sm_post_event",
                    "65": "ADD             X0, X19, #0x10",
                    "66": "LDR             X3, [X19,#0x18]",
                    "67": "B               loc_11EC",
                    "68": "B               loc_11EC",
                    "69": "MOV             W1, #1",
                    "70": "NEG             W1, W1",
                    "71": "LDADDL          W1, W1, [X0]",
                    "72": "CMP             W1, #1",
                    "73": "B.EQ            loc_1208",
                    "74": "CMP             W1, #0",
                    "75": "B.LE            loc_1214",
                    "76": "NOP",
                    "77": "MOV             W0, #0",
                    "78": "ADD             X1, X22, #0xB8",
                    "79": "STLRB           W0, [X1]",
                    "80": "MSR             DAIF, X23",
                    "81": "MOV             W0, #0",
                    "82": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "83": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "84": "LDR             X23, [SP,#0x40+var_10]",
                    "85": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "86": "AUTIASP",
                    "87": "RET",
                    "88": "MOV             W2, #1",
                    "89": "PRFM            #0x11, [X0]",
                    "90": "LDXR            W1, [X0]",
                    "91": "SUB             W4, W1, W2",
                    "92": "STLXR           W5, W4, [X0]",
                    "93": "CBNZ            W5, loc_11F4",
                    "94": "B               loc_11AC",
                    "95": "DMB             ISHLD",
                    "96": "BLR             X3",
                    "97": "B               loc_11C0",
                    "98": "MOV             W1, #3",
                    "99": "BL              refcount_warn_saturate",
                    "100": "B               loc_11C0"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r15, rcx",
                    "8": "mov     rbx, rdx",
                    "9": "mov     r12, rsi",
                    "10": "mov     r14, rdi",
                    "11": "lea     r13, [rdi+70h]",
                    "12": "mov     rdi, r13",
                    "13": "call    _raw_spin_lock_irqsave; PIC mode",
                    "14": "mov     rbp, rax",
                    "15": "lea     rax, [r14+60h]",
                    "16": "mov     rdi, [r14+60h]",
                    "17": "cmp     rdi, rax",
                    "18": "jnz     short INSTR23",
                    "19": "jmp     short INSTR36",
                    "20": "mov     rdi, rcx",
                    "21": "cmp     rcx, rax",
                    "22": "jz      short INSTR36",
                    "23": "mov     rcx, [rdi]",
                    "24": "cmp     [rdi+18h], rbx",
                    "25": "jnz     short INSTR20",
                    "26": "cmp     [rdi+10h], r15",
                    "27": "jnz     short INSTR20",
                    "28": "mov     rax, [rdi+8]",
                    "29": "mov     [rcx+8], rax",
                    "30": "mov     [rax], rcx",
                    "31": "mov     rax, 0DEAD000000000100h",
                    "32": "mov     [rdi], rax",
                    "33": "or      rax, 22h",
                    "34": "mov     [rdi+8], rax",
                    "35": "call    kfree; PIC mode",
                    "36": "mov     rdi, r13",
                    "37": "mov     rsi, rbp",
                    "38": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "39": "test    r12, r12",
                    "40": "jz      short INSTR71",
                    "41": "add     r14, 0B8h",
                    "42": "mov     rdi, r14",
                    "43": "call    _raw_spin_lock_irqsave; PIC mode",
                    "44": "mov     r13, rax",
                    "45": "mov     rbp, [r12+28h]",
                    "46": "add     r12, 28h ; '('",
                    "47": "jmp     short INSTR49",
                    "48": "mov     rbp, [rbp+0]",
                    "49": "cmp     rbp, r12",
                    "50": "jz      short INSTR68",
                    "51": "cmp     [rbp+58h], rbx",
                    "52": "jnz     short INSTR48",
                    "53": "cmp     [rbp+60h], r15",
                    "54": "jnz     short INSTR48",
                    "55": "lea     rdi, [rbp+0E0h]",
                    "56": "mov     esi, 3",
                    "57": "xor     edx, edx",
                    "58": "call    efc_sm_post_event; PIC mode",
                    "59": "lea     rdi, [rbp+10h]",
                    "60": "mov     r11, [rbp+18h]",
                    "61": "mov     eax, 0FFFFFFFFh",
                    "62": "lock xadd [rbp+10h], eax",
                    "63": "cmp     eax, 1",
                    "64": "jnz     short INSTR67",
                    "65": "call    __x86_indirect_thunk_r11; PIC mode",
                    "66": "jmp     short INSTR68",
                    "67": "jl      short INSTR79",
                    "68": "mov     rdi, r14",
                    "69": "mov     rsi, r13",
                    "70": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "71": "xor     eax, eax",
                    "72": "pop     rbx",
                    "73": "pop     r12",
                    "74": "pop     r13",
                    "75": "pop     r14",
                    "76": "pop     r15",
                    "77": "pop     rbp",
                    "78": "retn",
                    "79": "mov     esi, 3",
                    "80": "call    refcount_warn_saturate; PIC mode",
                    "81": "jmp     short INSTR68"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "mov     r15, rdi",
                    "3": "push    r14",
                    "4": "lea     r14, [rdi+70h]",
                    "5": "push    r13",
                    "6": "mov     rdi, r14",
                    "7": "mov     r13, rcx",
                    "8": "push    r12",
                    "9": "mov     r12, rsi",
                    "10": "push    rbp",
                    "11": "mov     rbp, rdx",
                    "12": "push    rbx",
                    "13": "sub     rsp, 8",
                    "14": "call    _raw_spin_lock_irqsave; PIC mode",
                    "15": "mov     rdi, [r15+60h]",
                    "16": "lea     r8, [r15+60h]",
                    "17": "mov     rsi, rax",
                    "18": "mov     rdx, [rdi]",
                    "19": "cmp     r8, rdi",
                    "20": "jnz     short INSTR27",
                    "21": "jmp     short INSTR42",
                    "22": "mov     rcx, [rdx]",
                    "23": "mov     rdi, rdx",
                    "24": "cmp     r8, rdx",
                    "25": "jz      short INSTR42",
                    "26": "mov     rdx, rcx",
                    "27": "cmp     [rdi+18h], rbp",
                    "28": "jnz     short INSTR22",
                    "29": "cmp     [rdi+10h], r13",
                    "30": "jnz     short INSTR22",
                    "31": "mov     rax, [rdi+8]",
                    "32": "mov     rdx, [rdi]",
                    "33": "mov     [rsp+38h+var_38], rsi",
                    "34": "mov     [rdx+8], rax",
                    "35": "mov     [rax], rdx",
                    "36": "mov     rax, 0DEAD000000000100h",
                    "37": "mov     [rdi], rax",
                    "38": "add     rax, 22h ; '\"'",
                    "39": "mov     [rdi+8], rax",
                    "40": "call    kfree; PIC mode",
                    "41": "mov     rsi, [rsp+38h+var_38]",
                    "42": "mov     rdi, r14",
                    "43": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "44": "test    r12, r12",
                    "45": "jz      short INSTR77",
                    "46": "add     r15, 0B8h",
                    "47": "add     r12, 28h ; '('",
                    "48": "mov     rdi, r15",
                    "49": "call    _raw_spin_lock_irqsave; PIC mode",
                    "50": "mov     rbx, [r12]",
                    "51": "mov     r14, rax",
                    "52": "cmp     rbx, r12",
                    "53": "jnz     short INSTR58",
                    "54": "jmp     short INSTR74",
                    "55": "mov     rbx, [rbx]",
                    "56": "cmp     rbx, r12",
                    "57": "jz      short INSTR74",
                    "58": "cmp     [rbx+58h], rbp",
                    "59": "jnz     short INSTR55",
                    "60": "cmp     [rbx+60h], r13",
                    "61": "jnz     short INSTR55",
                    "62": "lea     rdi, [rbx+0E0h]",
                    "63": "xor     edx, edx",
                    "64": "mov     esi, 3",
                    "65": "call    efc_sm_post_event; PIC mode",
                    "66": "mov     rdx, [rbx+18h]",
                    "67": "lea     rdi, [rbx+10h]",
                    "68": "mov     eax, 0FFFFFFFFh",
                    "69": "lock xadd [rbx+10h], eax",
                    "70": "cmp     eax, 1",
                    "71": "jz      short INSTR86",
                    "72": "test    eax, eax",
                    "73": "jle     short INSTR88",
                    "74": "mov     rsi, r14",
                    "75": "mov     rdi, r15",
                    "76": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "77": "add     rsp, 8",
                    "78": "xor     eax, eax",
                    "79": "pop     rbx",
                    "80": "pop     rbp",
                    "81": "pop     r12",
                    "82": "pop     r13",
                    "83": "pop     r14",
                    "84": "pop     r15",
                    "85": "jmp     __x86_return_thunk; PIC mode",
                    "86": "call    __x86_indirect_thunk_rdx; PIC mode",
                    "87": "jmp     short INSTR74",
                    "88": "mov     esi, 3",
                    "89": "call    refcount_warn_saturate; PIC mode",
                    "90": "jmp     short INSTR74"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "lea     r14, [rdi+70h]",
                    "4": "push    r13",
                    "5": "mov     r13, rcx",
                    "6": "push    r12",
                    "7": "mov     r12, rdx",
                    "8": "push    rbp",
                    "9": "mov     rbp, rsi",
                    "10": "push    rbx",
                    "11": "mov     rbx, rdi",
                    "12": "mov     rdi, r14",
                    "13": "call    _raw_spin_lock_irqsave; PIC mode",
                    "14": "mov     rdi, [rbx+60h]",
                    "15": "lea     rdx, [rbx+60h]",
                    "16": "mov     r15, rax",
                    "17": "mov     rax, [rdi]",
                    "18": "cmp     rdi, rdx",
                    "19": "jz      short INSTR37",
                    "20": "cmp     [rdi+18h], r12",
                    "21": "jnz     short INSTR34",
                    "22": "cmp     [rdi+10h], r13",
                    "23": "jnz     short INSTR34",
                    "24": "mov     rax, [rdi+8]",
                    "25": "mov     rdx, [rdi]",
                    "26": "mov     [rdx+8], rax",
                    "27": "mov     [rax], rdx",
                    "28": "mov     rax, 0DEAD000000000100h",
                    "29": "mov     [rdi], rax",
                    "30": "add     rax, 22h ; '\"'",
                    "31": "mov     [rdi+8], rax",
                    "32": "call    kfree; PIC mode",
                    "33": "jmp     short INSTR37",
                    "34": "mov     rdi, rax",
                    "35": "mov     rax, [rax]",
                    "36": "jmp     short INSTR18",
                    "37": "mov     rsi, r15",
                    "38": "mov     rdi, r14",
                    "39": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "40": "test    rbp, rbp",
                    "41": "jz      short INSTR67",
                    "42": "lea     r14, [rbx+0B8h]",
                    "43": "add     rbp, 28h ; '('",
                    "44": "mov     rdi, r14",
                    "45": "call    _raw_spin_lock_irqsave; PIC mode",
                    "46": "mov     rbx, [rbp+0]",
                    "47": "mov     r15, rax",
                    "48": "cmp     rbx, rbp",
                    "49": "jz      short INSTR64",
                    "50": "cmp     [rbx+58h], r12",
                    "51": "jnz     short INSTR62",
                    "52": "cmp     [rbx+60h], r13",
                    "53": "jnz     short INSTR62",
                    "54": "lea     rdi, [rbx+0E0h]",
                    "55": "xor     edx, edx",
                    "56": "mov     esi, 3",
                    "57": "call    efc_sm_post_event; PIC mode",
                    "58": "mov     rsi, [rbx+18h]",
                    "59": "lea     rdi, [rbx+10h]",
                    "60": "call    kref_put_isra_0",
                    "61": "jmp     short INSTR64",
                    "62": "mov     rbx, [rbx]",
                    "63": "jmp     short INSTR48",
                    "64": "mov     rsi, r15",
                    "65": "mov     rdi, r14",
                    "66": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "67": "pop     rbx",
                    "68": "xor     eax, eax",
                    "69": "pop     rbp",
                    "70": "pop     r12",
                    "71": "pop     r13",
                    "72": "pop     r14",
                    "73": "pop     r15",
                    "74": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, eax",
                    "6": "push    ebx",
                    "7": "add     esi, 48h ; 'H'",
                    "8": "sub     esp, 1Ch",
                    "9": "mov     [ebp+var_28], eax",
                    "10": "mov     ecx, [ebp+arg_8]",
                    "11": "add     eax, 50h ; 'P'",
                    "12": "mov     [ebp+var_24], edx",
                    "13": "mov     edi, [ebp+arg_0]",
                    "14": "mov     [ebp+var_20], eax",
                    "15": "mov     ebx, [ebp+arg_4]",
                    "16": "mov     [ebp+var_14], ecx",
                    "17": "mov     ecx, [ebp+arg_C]",
                    "18": "mov     [ebp+var_18], ecx",
                    "19": "call    _raw_spin_lock_irqsave",
                    "20": "mov     [ebp+var_1C], eax",
                    "21": "mov     eax, [esi]",
                    "22": "mov     [ebp+var_10], esi",
                    "23": "cmp     eax, esi",
                    "24": "mov     ecx, [eax]",
                    "25": "jnz     short INSTR32",
                    "26": "jmp     short INSTR52",
                    "27": "cmp     ecx, [ebp+var_10]",
                    "28": "mov     eax, ecx",
                    "29": "mov     edx, [ecx]",
                    "30": "jz      short INSTR52",
                    "31": "mov     ecx, edx",
                    "32": "mov     esi, [eax+14h]",
                    "33": "mov     edx, [eax+10h]",
                    "34": "xor     esi, ebx",
                    "35": "xor     edx, edi",
                    "36": "or      edx, esi",
                    "37": "jnz     short INSTR27",
                    "38": "mov     edx, [eax+0Ch]",
                    "39": "mov     esi, [ebp+var_18]",
                    "40": "xor     esi, edx",
                    "41": "mov     edx, [ebp+var_14]",
                    "42": "xor     edx, [eax+8]",
                    "43": "or      edx, esi",
                    "44": "jnz     short INSTR27",
                    "45": "mov     ecx, [eax]",
                    "46": "mov     edx, [eax+4]",
                    "47": "mov     [ecx+4], edx",
                    "48": "mov     [edx], ecx",
                    "49": "mov     dword ptr [eax], 100h",
                    "50": "mov     dword ptr [eax+4], 122h",
                    "51": "call    kfree",
                    "52": "mov     edx, [ebp+var_1C]",
                    "53": "mov     eax, [ebp+var_20]",
                    "54": "call    _raw_spin_unlock_irqrestore",
                    "55": "mov     esi, [ebp+var_24]",
                    "56": "test    esi, esi",
                    "57": "jz      INSTR100",
                    "58": "mov     eax, [ebp+var_28]",
                    "59": "add     eax, 74h ; 't'",
                    "60": "mov     [ebp+var_10], eax",
                    "61": "call    _raw_spin_lock_irqsave",
                    "62": "mov     [ebp+var_1C], eax",
                    "63": "mov     eax, esi",
                    "64": "mov     esi, [esi+24h]",
                    "65": "lea     ecx, [eax+24h]",
                    "66": "cmp     esi, ecx",
                    "67": "jnz     short INSTR72",
                    "68": "jmp     short INSTR97",
                    "69": "mov     esi, [esi]",
                    "70": "cmp     esi, ecx",
                    "71": "jz      short INSTR97",
                    "72": "mov     edx, [esi+44h]",
                    "73": "mov     eax, [esi+40h]",
                    "74": "xor     edx, ebx",
                    "75": "xor     eax, edi",
                    "76": "or      eax, edx",
                    "77": "jnz     short INSTR69",
                    "78": "mov     eax, [esi+4Ch]",
                    "79": "mov     edx, [ebp+var_18]",
                    "80": "xor     edx, eax",
                    "81": "mov     eax, [ebp+var_14]",
                    "82": "xor     eax, [esi+48h]",
                    "83": "or      eax, edx",
                    "84": "jnz     short INSTR69",
                    "85": "mov     edx, [esi+0Ch]",
                    "86": "lea     eax, [esi+8]",
                    "87": "mov     ecx, 0FFFFFFFFh",
                    "88": "lock xadd [esi+8], ecx",
                    "89": "cmp     ecx, 1",
                    "90": "jz      short INSTR107",
                    "91": "test    ecx, ecx",
                    "92": "jle     short INSTR109",
                    "93": "lea     eax, [esi+0A8h]",
                    "94": "xor     ecx, ecx",
                    "95": "mov     edx, 3",
                    "96": "call    efc_sm_post_event",
                    "97": "mov     edx, [ebp+var_1C]",
                    "98": "mov     eax, [ebp+var_10]",
                    "99": "call    _raw_spin_unlock_irqrestore",
                    "100": "add     esp, 1Ch",
                    "101": "xor     eax, eax",
                    "102": "pop     ebx",
                    "103": "pop     esi",
                    "104": "pop     edi",
                    "105": "pop     ebp",
                    "106": "retn",
                    "107": "call    __x86_indirect_thunk_edx",
                    "108": "jmp     short INSTR93",
                    "109": "mov     edx, 3",
                    "110": "call    refcount_warn_saturate",
                    "111": "jmp     short INSTR93"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_40]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#0x40+var_30]",
                    "5": "MOV             X20, X2",
                    "6": "MOV             X19, X1",
                    "7": "STP             X21, X22, [SP,#0x40+var_20]",
                    "8": "MOV             X22, X0",
                    "9": "MOV             X21, X3",
                    "10": "ADD             X0, X0, #0x70 ; 'p'",
                    "11": "STR             X23, [SP,#0x40+var_10]",
                    "12": "BL              __raw_spin_lock_irqsave",
                    "13": "MOV             X23, X0",
                    "14": "MOV             X2, X22",
                    "15": "LDR             X0, [X2,#0x60]!",
                    "16": "LDR             X5, [X0]",
                    "17": "CMP             X0, X2",
                    "18": "B.NE            loc_10EC",
                    "19": "B               loc_1128",
                    "20": "MOV             X0, X5",
                    "21": "LDR             X5, [X5]",
                    "22": "CMP             X0, X2",
                    "23": "B.EQ            loc_1128",
                    "24": "LDR             X6, [X0,#0x18]",
                    "25": "CMP             X6, X20",
                    "26": "B.NE            loc_10DC",
                    "27": "LDR             X1, [X0,#0x10]",
                    "28": "CMP             X1, X21",
                    "29": "B.NE            loc_10DC",
                    "30": "LDP             X2, X1, [X0]",
                    "31": "STR             X1, [X2,#8]",
                    "32": "MOV             X5, #0x100",
                    "33": "MOV             X3, #0x122",
                    "34": "MOVK            X5, #0xDEAD,LSL#48",
                    "35": "MOVK            X3, #0xDEAD,LSL#48",
                    "36": "STR             X2, [X1]",
                    "37": "STP             X5, X3, [X0]",
                    "38": "BL              kfree",
                    "39": "ADD             X1, X22, #0x70 ; 'p'",
                    "40": "MOV             W0, #0",
                    "41": "STLRB           W0, [X1]",
                    "42": "MSR             DAIF, X23",
                    "43": "CBZ             X19, loc_11CC",
                    "44": "ADD             X0, X22, #0xB8",
                    "45": "BL              __raw_spin_lock_irqsave",
                    "46": "MOV             X1, X19",
                    "47": "MOV             X23, X0",
                    "48": "LDR             X19, [X1,#0x28]!",
                    "49": "CMP             X19, X1",
                    "50": "B.NE            loc_1168",
                    "51": "B               loc_11BC",
                    "52": "LDR             X19, [X19]",
                    "53": "CMP             X19, X1",
                    "54": "B.EQ            loc_11BC",
                    "55": "LDR             X2, [X19,#0x58]",
                    "56": "CMP             X2, X20",
                    "57": "B.NE            loc_115C",
                    "58": "LDR             X2, [X19,#0x60]",
                    "59": "CMP             X2, X21",
                    "60": "B.NE            loc_115C",
                    "61": "ADD             X0, X19, #0x10",
                    "62": "LDR             X3, [X19,#0x18]",
                    "63": "B               loc_11E8",
                    "64": "B               loc_11E8",
                    "65": "MOV             W1, #1",
                    "66": "NEG             W1, W1",
                    "67": "LDADDL          W1, W1, [X0]",
                    "68": "CMP             W1, #1",
                    "69": "B.EQ            loc_1204",
                    "70": "CMP             W1, #0",
                    "71": "B.LE            loc_1210",
                    "72": "ADD             X0, X19, #0xE0",
                    "73": "MOV             X2, #0",
                    "74": "MOV             W1, #3",
                    "75": "BL              efc_sm_post_event",
                    "76": "MOV             W0, #0",
                    "77": "ADD             X1, X22, #0xB8",
                    "78": "STLRB           W0, [X1]",
                    "79": "MSR             DAIF, X23",
                    "80": "MOV             W0, #0",
                    "81": "LDP             X19, X20, [SP,#0x40+var_30]",
                    "82": "LDP             X21, X22, [SP,#0x40+var_20]",
                    "83": "LDR             X23, [SP,#0x40+var_10]",
                    "84": "LDP             X29, X30, [SP+0x40+var_40],#0x40",
                    "85": "AUTIASP",
                    "86": "RET",
                    "87": "MOV             W2, #1",
                    "88": "PRFM            #0x11, [X0]",
                    "89": "LDXR            W1, [X0]",
                    "90": "SUB             W4, W1, W2",
                    "91": "STLXR           W5, W4, [X0]",
                    "92": "CBNZ            W5, loc_11F0",
                    "93": "B               loc_119C",
                    "94": "DMB             ISHLD",
                    "95": "BLR             X3",
                    "96": "B               loc_11AC",
                    "97": "MOV             W1, #3",
                    "98": "BL              refcount_warn_saturate",
                    "99": "B               loc_11AC"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "mov     r15, rcx",
                    "8": "mov     rbx, rdx",
                    "9": "mov     r12, rsi",
                    "10": "mov     r14, rdi",
                    "11": "lea     rbp, [rdi+70h]",
                    "12": "mov     rdi, rbp",
                    "13": "call    _raw_spin_lock_irqsave; PIC mode",
                    "14": "mov     r13, rax",
                    "15": "lea     rax, [r14+60h]",
                    "16": "mov     rdi, [r14+60h]",
                    "17": "cmp     rdi, rax",
                    "18": "jnz     short INSTR23",
                    "19": "jmp     short INSTR36",
                    "20": "mov     rdi, rcx",
                    "21": "cmp     rcx, rax",
                    "22": "jz      short INSTR36",
                    "23": "mov     rcx, [rdi]",
                    "24": "cmp     [rdi+18h], rbx",
                    "25": "jnz     short INSTR20",
                    "26": "cmp     [rdi+10h], r15",
                    "27": "jnz     short INSTR20",
                    "28": "mov     rax, [rdi+8]",
                    "29": "mov     [rcx+8], rax",
                    "30": "mov     [rax], rcx",
                    "31": "mov     rax, 0DEAD000000000100h",
                    "32": "mov     [rdi], rax",
                    "33": "or      rax, 22h",
                    "34": "mov     [rdi+8], rax",
                    "35": "call    kfree; PIC mode",
                    "36": "mov     rdi, rbp",
                    "37": "mov     rsi, r13",
                    "38": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "39": "test    r12, r12",
                    "40": "jz      short INSTR72",
                    "41": "add     r14, 0B8h",
                    "42": "mov     rdi, r14",
                    "43": "call    _raw_spin_lock_irqsave; PIC mode",
                    "44": "mov     r13, rax",
                    "45": "mov     rbp, [r12+28h]",
                    "46": "add     r12, 28h ; '('",
                    "47": "jmp     short INSTR49",
                    "48": "mov     rbp, [rbp+0]",
                    "49": "cmp     rbp, r12",
                    "50": "jz      short INSTR69",
                    "51": "cmp     [rbp+58h], rbx",
                    "52": "jnz     short INSTR48",
                    "53": "cmp     [rbp+60h], r15",
                    "54": "jnz     short INSTR48",
                    "55": "lea     rdi, [rbp+10h]",
                    "56": "mov     r11, [rbp+18h]",
                    "57": "mov     eax, 0FFFFFFFFh",
                    "58": "lock xadd [rbp+10h], eax",
                    "59": "cmp     eax, 1",
                    "60": "jnz     short INSTR63",
                    "61": "call    __x86_indirect_thunk_r11; PIC mode",
                    "62": "jmp     short INSTR64",
                    "63": "jl      short INSTR80",
                    "64": "add     rbp, 0E0h",
                    "65": "mov     rdi, rbp",
                    "66": "mov     esi, 3",
                    "67": "xor     edx, edx",
                    "68": "call    efc_sm_post_event; PIC mode",
                    "69": "mov     rdi, r14",
                    "70": "mov     rsi, r13",
                    "71": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "72": "xor     eax, eax",
                    "73": "pop     rbx",
                    "74": "pop     r12",
                    "75": "pop     r13",
                    "76": "pop     r14",
                    "77": "pop     r15",
                    "78": "pop     rbp",
                    "79": "retn",
                    "80": "mov     esi, 3",
                    "81": "call    refcount_warn_saturate; PIC mode",
                    "82": "jmp     short INSTR64"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "mov     r15, rdi",
                    "3": "push    r14",
                    "4": "lea     r14, [rdi+70h]",
                    "5": "push    r13",
                    "6": "mov     rdi, r14",
                    "7": "mov     r13, rcx",
                    "8": "push    r12",
                    "9": "mov     r12, rsi",
                    "10": "push    rbp",
                    "11": "mov     rbp, rdx",
                    "12": "push    rbx",
                    "13": "sub     rsp, 8",
                    "14": "call    _raw_spin_lock_irqsave; PIC mode",
                    "15": "mov     rdi, [r15+60h]",
                    "16": "lea     r8, [r15+60h]",
                    "17": "mov     rsi, rax",
                    "18": "mov     rdx, [rdi]",
                    "19": "cmp     rdi, r8",
                    "20": "jnz     short INSTR27",
                    "21": "jmp     short INSTR42",
                    "22": "mov     rcx, [rdx]",
                    "23": "mov     rdi, rdx",
                    "24": "cmp     rdx, r8",
                    "25": "jz      short INSTR42",
                    "26": "mov     rdx, rcx",
                    "27": "cmp     [rdi+18h], rbp",
                    "28": "jnz     short INSTR22",
                    "29": "cmp     [rdi+10h], r13",
                    "30": "jnz     short INSTR22",
                    "31": "mov     rax, [rdi+8]",
                    "32": "mov     rdx, [rdi]",
                    "33": "mov     [rsp+38h+var_38], rsi",
                    "34": "mov     [rdx+8], rax",
                    "35": "mov     [rax], rdx",
                    "36": "mov     rax, 0DEAD000000000100h",
                    "37": "mov     [rdi], rax",
                    "38": "add     rax, 22h ; '\"'",
                    "39": "mov     [rdi+8], rax",
                    "40": "call    kfree; PIC mode",
                    "41": "mov     rsi, [rsp+38h+var_38]",
                    "42": "mov     rdi, r14",
                    "43": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "44": "test    r12, r12",
                    "45": "jz      short INSTR77",
                    "46": "add     r15, 0B8h",
                    "47": "add     r12, 28h ; '('",
                    "48": "mov     rdi, r15",
                    "49": "call    _raw_spin_lock_irqsave; PIC mode",
                    "50": "mov     rbx, [r12]",
                    "51": "mov     r14, rax",
                    "52": "cmp     rbx, r12",
                    "53": "jnz     short INSTR58",
                    "54": "jmp     short INSTR74",
                    "55": "mov     rbx, [rbx]",
                    "56": "cmp     rbx, r12",
                    "57": "jz      short INSTR74",
                    "58": "cmp     [rbx+58h], rbp",
                    "59": "jnz     short INSTR55",
                    "60": "cmp     [rbx+60h], r13",
                    "61": "jnz     short INSTR55",
                    "62": "mov     rdx, [rbx+18h]",
                    "63": "lea     rdi, [rbx+10h]",
                    "64": "mov     eax, 0FFFFFFFFh",
                    "65": "lock xadd [rbx+10h], eax",
                    "66": "cmp     eax, 1",
                    "67": "jz      short INSTR86",
                    "68": "test    eax, eax",
                    "69": "jle     short INSTR88",
                    "70": "lea     rdi, [rbx+0E0h]",
                    "71": "xor     edx, edx",
                    "72": "mov     esi, 3",
                    "73": "call    efc_sm_post_event; PIC mode",
                    "74": "mov     rsi, r14",
                    "75": "mov     rdi, r15",
                    "76": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "77": "add     rsp, 8",
                    "78": "xor     eax, eax",
                    "79": "pop     rbx",
                    "80": "pop     rbp",
                    "81": "pop     r12",
                    "82": "pop     r13",
                    "83": "pop     r14",
                    "84": "pop     r15",
                    "85": "jmp     __x86_return_thunk; PIC mode",
                    "86": "call    __x86_indirect_thunk_rdx; PIC mode",
                    "87": "jmp     short INSTR70",
                    "88": "mov     esi, 3",
                    "89": "call    refcount_warn_saturate; PIC mode",
                    "90": "jmp     short INSTR70"
                }
            },
            {
                "filename": "efc_nport.efc_nport_vport_del.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "lea     r14, [rdi+70h]",
                    "4": "push    r13",
                    "5": "mov     r13, rcx",
                    "6": "push    r12",
                    "7": "mov     r12, rdx",
                    "8": "push    rbp",
                    "9": "mov     rbp, rsi",
                    "10": "push    rbx",
                    "11": "mov     rbx, rdi",
                    "12": "mov     rdi, r14",
                    "13": "call    _raw_spin_lock_irqsave; PIC mode",
                    "14": "mov     rdi, [rbx+60h]",
                    "15": "lea     rdx, [rbx+60h]",
                    "16": "mov     r15, rax",
                    "17": "mov     rax, [rdi]",
                    "18": "cmp     rdi, rdx",
                    "19": "jz      short INSTR37",
                    "20": "cmp     [rdi+18h], r12",
                    "21": "jnz     short INSTR34",
                    "22": "cmp     [rdi+10h], r13",
                    "23": "jnz     short INSTR34",
                    "24": "mov     rax, [rdi+8]",
                    "25": "mov     rdx, [rdi]",
                    "26": "mov     [rdx+8], rax",
                    "27": "mov     [rax], rdx",
                    "28": "mov     rax, 0DEAD000000000100h",
                    "29": "mov     [rdi], rax",
                    "30": "add     rax, 22h ; '\"'",
                    "31": "mov     [rdi+8], rax",
                    "32": "call    kfree; PIC mode",
                    "33": "jmp     short INSTR37",
                    "34": "mov     rdi, rax",
                    "35": "mov     rax, [rax]",
                    "36": "jmp     short INSTR18",
                    "37": "mov     rsi, r15",
                    "38": "mov     rdi, r14",
                    "39": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "40": "test    rbp, rbp",
                    "41": "jz      short INSTR67",
                    "42": "lea     r14, [rbx+0B8h]",
                    "43": "add     rbp, 28h ; '('",
                    "44": "mov     rdi, r14",
                    "45": "call    _raw_spin_lock_irqsave; PIC mode",
                    "46": "mov     rbx, [rbp+0]",
                    "47": "mov     r15, rax",
                    "48": "cmp     rbx, rbp",
                    "49": "jz      short INSTR64",
                    "50": "cmp     [rbx+58h], r12",
                    "51": "jnz     short INSTR62",
                    "52": "cmp     [rbx+60h], r13",
                    "53": "jnz     short INSTR62",
                    "54": "mov     rsi, [rbx+18h]",
                    "55": "lea     rdi, [rbx+10h]",
                    "56": "call    kref_put_isra_0",
                    "57": "lea     rdi, [rbx+0E0h]",
                    "58": "xor     edx, edx",
                    "59": "mov     esi, 3",
                    "60": "call    efc_sm_post_event; PIC mode",
                    "61": "jmp     short INSTR64",
                    "62": "mov     rbx, [rbx]",
                    "63": "jmp     short INSTR48",
                    "64": "mov     rsi, r15",
                    "65": "mov     rdi, r14",
                    "66": "call    _raw_spin_unlock_irqrestore; PIC mode",
                    "67": "pop     rbx",
                    "68": "xor     eax, eax",
                    "69": "pop     rbp",
                    "70": "pop     r12",
                    "71": "pop     r13",
                    "72": "pop     r14",
                    "73": "pop     r15",
                    "74": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-49860",
        "files": [
            {
                "filename": "device_sysfs.acpi_device_setup_files.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, eax",
                    "6": "push    ebx",
                    "7": "lea     edi, [esi+184h]",
                    "8": "sub     esp, 14h",
                    "9": "mov     eax, fs:__stack_chk_guard",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "xor     eax, eax",
                    "12": "mov     ecx, [esi+4]",
                    "13": "mov     [ebp+var_18], 0FFFFFFFFh",
                    "14": "mov     [ebp+var_14], 0",
                    "15": "test    ecx, ecx",
                    "16": "jz      short INSTR23",
                    "17": "mov     edx, offset dev_attr_path",
                    "18": "mov     eax, edi",
                    "19": "call    device_create_file",
                    "20": "test    eax, eax",
                    "21": "mov     ebx, eax",
                    "22": "jnz     short INSTR33",
                    "23": "mov     edx, [esi+5Ch]",
                    "24": "lea     eax, [esi+5Ch]",
                    "25": "cmp     edx, eax",
                    "26": "jz      short INSTR49",
                    "27": "mov     edx, offset dev_attr_hid",
                    "28": "mov     eax, edi",
                    "29": "call    device_create_file",
                    "30": "test    eax, eax",
                    "31": "mov     ebx, eax",
                    "32": "jz      short INSTR43",
                    "33": "mov     eax, [ebp+var_10]",
                    "34": "sub     eax, fs:__stack_chk_guard",
                    "35": "jnz     INSTR155",
                    "36": "add     esp, 14h",
                    "37": "mov     eax, ebx",
                    "38": "pop     ebx",
                    "39": "pop     esi",
                    "40": "pop     edi",
                    "41": "pop     ebp",
                    "42": "retn",
                    "43": "mov     edx, offset dev_attr_modalias",
                    "44": "mov     eax, edi",
                    "45": "call    device_create_file",
                    "46": "test    eax, eax",
                    "47": "mov     ebx, eax",
                    "48": "jnz     short INSTR33",
                    "49": "mov     eax, [esi+4]",
                    "50": "mov     edx, offset aStr; \"_STR\"",
                    "51": "call    acpi_has_method",
                    "52": "test    al, al",
                    "53": "jnz     INSTR123",
                    "54": "test    byte ptr [esi+4Ch], 2",
                    "55": "jnz     INSTR142",
                    "56": "xor     ebx, ebx",
                    "57": "mov     eax, [esi+58h]",
                    "58": "test    eax, eax",
                    "59": "jz      short INSTR64",
                    "60": "mov     edx, offset dev_attr_uid",
                    "61": "mov     eax, edi",
                    "62": "call    device_create_file",
                    "63": "mov     ebx, eax",
                    "64": "mov     eax, [esi+4]",
                    "65": "mov     edx, offset aSun; \"_SUN\"",
                    "66": "call    acpi_has_method",
                    "67": "test    al, al",
                    "68": "jz      short INSTR75",
                    "69": "mov     edx, offset dev_attr_sun",
                    "70": "mov     eax, edi",
                    "71": "call    device_create_file",
                    "72": "test    eax, eax",
                    "73": "mov     ebx, eax",
                    "74": "jnz     INSTR33",
                    "75": "mov     eax, [esi+4]",
                    "76": "mov     edx, offset aHrv; \"_HRV\"",
                    "77": "call    acpi_has_method",
                    "78": "test    al, al",
                    "79": "jz      short INSTR86",
                    "80": "mov     edx, offset dev_attr_hrv",
                    "81": "mov     eax, edi",
                    "82": "call    device_create_file",
                    "83": "test    eax, eax",
                    "84": "mov     ebx, eax",
                    "85": "jnz     INSTR33",
                    "86": "mov     eax, [esi+4]",
                    "87": "mov     edx, offset aSta; \"_STA\"",
                    "88": "call    acpi_has_method",
                    "89": "test    al, al",
                    "90": "jz      short INSTR97",
                    "91": "mov     edx, offset dev_attr_status",
                    "92": "mov     eax, edi",
                    "93": "call    device_create_file",
                    "94": "test    eax, eax",
                    "95": "mov     ebx, eax",
                    "96": "jnz     INSTR33",
                    "97": "mov     eax, [esi+4]",
                    "98": "mov     edx, offset aEj0; \"_EJ0\"",
                    "99": "call    acpi_has_method",
                    "100": "test    al, al",
                    "101": "jnz     short INSTR116",
                    "102": "test    byte ptr [esi+3Ch], 8",
                    "103": "jz      short INSTR112",
                    "104": "mov     edx, offset dev_attr_power_state",
                    "105": "mov     eax, edi",
                    "106": "call    device_create_file",
                    "107": "test    eax, eax",
                    "108": "mov     ebx, eax",
                    "109": "jnz     INSTR33",
                    "110": "test    byte ptr [esi+0A8h], 2",
                    "111": "jnz     INSTR150",
                    "112": "lea     edx, [esi+158h]",
                    "113": "mov     eax, edi",
                    "114": "call    acpi_expose_nondev_subnodes",
                    "115": "jmp     INSTR33",
                    "116": "mov     edx, offset dev_attr_eject",
                    "117": "mov     eax, edi",
                    "118": "call    device_create_file",
                    "119": "test    eax, eax",
                    "120": "mov     ebx, eax",
                    "121": "jz      short INSTR102",
                    "122": "jmp     INSTR33",
                    "123": "mov     eax, [esi+4]",
                    "124": "mov     edx, 3",
                    "125": "xor     ecx, ecx",
                    "126": "mov     [esp+4], edx",
                    "127": "lea     edx, [ebp+var_18]",
                    "128": "mov     [esp], edx",
                    "129": "mov     edx, offset aStr; \"_STR\"",
                    "130": "call    acpi_evaluate_object_typed",
                    "131": "test    eax, eax",
                    "132": "jnz     short INSTR147",
                    "133": "mov     eax, [ebp+var_14]",
                    "134": "mov     [esi+0A0h], eax",
                    "135": "mov     edx, offset dev_attr_description",
                    "136": "mov     eax, edi",
                    "137": "call    device_create_file",
                    "138": "test    eax, eax",
                    "139": "mov     ebx, eax",
                    "140": "jz      INSTR54",
                    "141": "jmp     INSTR33",
                    "142": "mov     edx, offset dev_attr_adr",
                    "143": "mov     eax, edi",
                    "144": "call    device_create_file",
                    "145": "mov     ebx, eax",
                    "146": "jmp     INSTR57",
                    "147": "mov     [ebp+var_14], 0",
                    "148": "xor     eax, eax",
                    "149": "jmp     short INSTR134",
                    "150": "mov     edx, offset dev_attr_real_power_state",
                    "151": "mov     eax, edi",
                    "152": "call    device_create_file",
                    "153": "mov     ebx, eax",
                    "154": "jmp     INSTR112",
                    "155": "call    __stack_chk_fail"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_50]!",
                    "3": "MRS             X1, SP_EL0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x50+var_40]",
                    "6": "MOV             X20, X0",
                    "7": "STP             X21, X22, [SP,#0x50+var_30]",
                    "8": "ADD             X21, X20, #0x260",
                    "9": "LDR             X0, [X1,#0x4E0]",
                    "10": "STR             X0, [SP,#0x50+var_8]",
                    "11": "MOV             X0, #0",
                    "12": "MOV             X0, #0xFFFFFFFFFFFFFFFF",
                    "13": "STP             X0, XZR, [SP,#0x50+var_18]",
                    "14": "LDR             X0, [X20,#8]",
                    "15": "CBZ             X0, loc_10BC",
                    "16": "ADRL            X1, acpi_data_node_ktype",
                    "17": "ADD             X1, X1, #0x38 ; '8'",
                    "18": "MOV             X0, X21",
                    "19": "BL              device_create_file",
                    "20": "MOV             W19, W0",
                    "21": "CBNZ            W0, loc_10E8",
                    "22": "MOV             X0, X20",
                    "23": "LDR             X1, [X0,#0x98]!",
                    "24": "CMP             X1, X0",
                    "25": "B.EQ            loc_112C",
                    "26": "ADRL            X22, acpi_data_node_ktype",
                    "27": "ADD             X1, X22, #0x58 ; 'X'",
                    "28": "MOV             X0, X21",
                    "29": "BL              device_create_file",
                    "30": "MOV             W19, W0",
                    "31": "CBZ             W0, loc_1118",
                    "32": "MRS             X0, SP_EL0",
                    "33": "LDR             X2, [SP,#0x50+var_8]",
                    "34": "LDR             X1, [X0,#0x4E0]",
                    "35": "SUBS            X2, X2, X1",
                    "36": "MOV             X1, #0",
                    "37": "B.NE            loc_1304",
                    "38": "MOV             W0, W19",
                    "39": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "40": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "41": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "42": "AUTIASP",
                    "43": "RET",
                    "44": "ADD             X1, X22, #0x78 ; 'x'",
                    "45": "MOV             X0, X21",
                    "46": "BL              device_create_file",
                    "47": "MOV             W19, W0",
                    "48": "CBNZ            W0, loc_10E8",
                    "49": "LDR             X0, [X20,#8]",
                    "50": "ADRL            X19, aStr; \"_STR\"",
                    "51": "MOV             X1, X19",
                    "52": "BL              acpi_has_method",
                    "53": "TST             W0, #0xFF",
                    "54": "B.NE            loc_1284",
                    "55": "LDR             W0, [X20,#0x84]",
                    "56": "MOV             W19, #0",
                    "57": "TBNZ            W0, #1, loc_12C8",
                    "58": "LDR             X0, [X20,#0x90]",
                    "59": "CBZ             X0, loc_1174",
                    "60": "ADRL            X1, acpi_data_node_ktype",
                    "61": "ADD             X1, X1, #0xD8",
                    "62": "MOV             X0, X21",
                    "63": "BL              device_create_file",
                    "64": "MOV             W19, W0",
                    "65": "LDR             X0, [X20,#8]",
                    "66": "ADRL            X1, aSun; \"_SUN\"",
                    "67": "BL              acpi_has_method",
                    "68": "TST             W0, #0xFF",
                    "69": "B.EQ            loc_11A8",
                    "70": "ADRL            X1, acpi_data_node_ktype",
                    "71": "ADD             X1, X1, #0xF8",
                    "72": "MOV             X0, X21",
                    "73": "BL              device_create_file",
                    "74": "MOV             W19, W0",
                    "75": "CBNZ            W0, loc_10E8",
                    "76": "LDR             X0, [X20,#8]",
                    "77": "ADRL            X1, aHrv; \"_HRV\"",
                    "78": "BL              acpi_has_method",
                    "79": "TST             W0, #0xFF",
                    "80": "B.EQ            loc_11DC",
                    "81": "ADRL            X1, acpi_data_node_ktype",
                    "82": "ADD             X1, X1, #0x118",
                    "83": "MOV             X0, X21",
                    "84": "BL              device_create_file",
                    "85": "MOV             W19, W0",
                    "86": "CBNZ            W0, loc_10E8",
                    "87": "LDR             X0, [X20,#8]",
                    "88": "ADRL            X1, aSta; \"_STA\"",
                    "89": "BL              acpi_has_method",
                    "90": "TST             W0, #0xFF",
                    "91": "B.EQ            loc_1210",
                    "92": "ADRL            X1, acpi_data_node_ktype",
                    "93": "ADD             X1, X1, #0x138",
                    "94": "MOV             X0, X21",
                    "95": "BL              device_create_file",
                    "96": "MOV             W19, W0",
                    "97": "CBNZ            W0, loc_10E8",
                    "98": "LDR             X0, [X20,#8]",
                    "99": "ADRL            X1, aEj0; \"_EJ0\"",
                    "100": "BL              acpi_has_method",
                    "101": "TST             W0, #0xFF",
                    "102": "B.NE            loc_1264",
                    "103": "LDR             W0, [X20,#0x74]",
                    "104": "TBZ             W0, #3, loc_1254",
                    "105": "ADRL            X22, acpi_data_node_ktype",
                    "106": "ADD             X1, X22, #0x178",
                    "107": "MOV             X0, X21",
                    "108": "BL              device_create_file",
                    "109": "MOV             W19, W0",
                    "110": "CBNZ            W0, loc_10E8",
                    "111": "LDR             W0, [X20,#0xF4]",
                    "112": "TBNZ            W0, #1, loc_12F0",
                    "113": "ADD             X1, X20, #0x208",
                    "114": "MOV             X0, X21",
                    "115": "BL              acpi_expose_nondev_subnodes",
                    "116": "B               loc_10E8",
                    "117": "ADRL            X1, acpi_data_node_ktype",
                    "118": "ADD             X1, X1, #0x158",
                    "119": "MOV             X0, X21",
                    "120": "BL              device_create_file",
                    "121": "MOV             W19, W0",
                    "122": "CBZ             W0, loc_1228",
                    "123": "B               loc_10E8",
                    "124": "LDR             X0, [X20,#8]",
                    "125": "MOV             X1, X19",
                    "126": "ADD             X3, SP, #0x50+var_18",
                    "127": "MOV             W4, #3",
                    "128": "MOV             X2, #0",
                    "129": "BL              acpi_evaluate_object_typed",
                    "130": "CBNZ            W0, loc_12E4",
                    "131": "LDR             X0, [SP,#0x50+var_10]",
                    "132": "STR             X0, [X20,#0xE8]",
                    "133": "ADRL            X1, acpi_data_node_ktype",
                    "134": "ADD             X1, X1, #0x98",
                    "135": "MOV             X0, X21",
                    "136": "BL              device_create_file",
                    "137": "MOV             W19, W0",
                    "138": "CBZ             W0, loc_1148",
                    "139": "B               loc_10E8",
                    "140": "ADRL            X1, acpi_data_node_ktype",
                    "141": "ADD             X1, X1, #0xB8",
                    "142": "MOV             X0, X21",
                    "143": "BL              device_create_file",
                    "144": "MOV             W19, W0",
                    "145": "B               loc_1154",
                    "146": "MOV             X0, #0",
                    "147": "STR             XZR, [SP,#0x50+var_10]",
                    "148": "B               loc_12A4",
                    "149": "ADD             X1, X22, #0x198",
                    "150": "MOV             X0, X21",
                    "151": "BL              device_create_file",
                    "152": "MOV             W19, W0",
                    "153": "B               loc_1254",
                    "154": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    rbx",
                    "5": "sub     rsp, 18h",
                    "6": "mov     r15, rdi",
                    "7": "mov     rax, gs:28h",
                    "8": "mov     [rsp+38h+var_28], rax",
                    "9": "mov     rax, cs:_L__const_acpi_object_path_path+8",
                    "10": "mov     [rsp+38h+var_30], rax",
                    "11": "mov     rax, cs:_L__const_acpi_object_path_path",
                    "12": "mov     [rsp+38h+var_38], rax",
                    "13": "cmp     qword ptr [rdi+8], 0",
                    "14": "jz      short INSTR21",
                    "15": "lea     rdi, [r15+260h]",
                    "16": "mov     rsi, offset dev_attr_path",
                    "17": "call    device_create_file; PIC mode",
                    "18": "mov     ebp, eax",
                    "19": "test    eax, eax",
                    "20": "jnz     INSTR137",
                    "21": "lea     rax, [r15+98h]",
                    "22": "mov     rcx, [r15+98h]",
                    "23": "cmp     rcx, rax",
                    "24": "jz      short INSTR38",
                    "25": "lea     rbx, [r15+260h]",
                    "26": "mov     rdi, rbx",
                    "27": "mov     rsi, offset dev_attr_hid",
                    "28": "call    device_create_file; PIC mode",
                    "29": "mov     ebp, eax",
                    "30": "test    eax, eax",
                    "31": "jnz     INSTR137",
                    "32": "mov     rdi, rbx",
                    "33": "mov     rsi, offset dev_attr_modalias",
                    "34": "call    device_create_file; PIC mode",
                    "35": "mov     ebp, eax",
                    "36": "test    eax, eax",
                    "37": "jnz     INSTR137",
                    "38": "mov     rdi, [r15+8]",
                    "39": "mov     rsi, offset aStr; \"_STR\"",
                    "40": "call    acpi_has_method; PIC mode",
                    "41": "test    al, al",
                    "42": "jz      short INSTR62",
                    "43": "mov     rdi, [r15+8]",
                    "44": "mov     rcx, rsp",
                    "45": "mov     rsi, offset aStr; \"_STR\"",
                    "46": "xor     edx, edx",
                    "47": "mov     r8d, 3",
                    "48": "call    acpi_evaluate_object_typed; PIC mode",
                    "49": "test    eax, eax",
                    "50": "jz      short INSTR54",
                    "51": "mov     [rsp+38h+var_30], 0",
                    "52": "xor     eax, eax",
                    "53": "jmp     short INSTR55",
                    "54": "mov     rax, [rsp+38h+var_30]",
                    "55": "mov     [r15+0E8h], rax",
                    "56": "lea     rdi, [r15+260h]",
                    "57": "mov     rsi, offset dev_attr_description",
                    "58": "call    device_create_file; PIC mode",
                    "59": "mov     ebp, eax",
                    "60": "test    eax, eax",
                    "61": "jnz     INSTR137",
                    "62": "xor     ebp, ebp",
                    "63": "test    byte ptr [r15+84h], 2",
                    "64": "jz      short INSTR69",
                    "65": "lea     rdi, [r15+260h]",
                    "66": "mov     rsi, offset dev_attr_adr",
                    "67": "call    device_create_file; PIC mode",
                    "68": "mov     ebp, eax",
                    "69": "cmp     qword ptr [r15+90h], 0",
                    "70": "jz      short INSTR75",
                    "71": "lea     rdi, [r15+260h]",
                    "72": "mov     rsi, offset dev_attr_uid",
                    "73": "call    device_create_file; PIC mode",
                    "74": "mov     ebp, eax",
                    "75": "mov     rdi, [r15+8]",
                    "76": "mov     rsi, offset aSun; \"_SUN\"",
                    "77": "call    acpi_has_method; PIC mode",
                    "78": "test    al, al",
                    "79": "jz      short INSTR87",
                    "80": "lea     rdi, [r15+260h]",
                    "81": "mov     rsi, offset dev_attr_sun",
                    "82": "call    device_create_file; PIC mode",
                    "83": "mov     ebp, eax",
                    "84": "test    eax, eax",
                    "85": "jnz     INSTR137",
                    "86": "xor     ebp, ebp",
                    "87": "mov     rdi, [r15+8]",
                    "88": "mov     rsi, offset aHrv; \"_HRV\"",
                    "89": "call    acpi_has_method; PIC mode",
                    "90": "test    al, al",
                    "91": "jz      short INSTR99",
                    "92": "lea     rdi, [r15+260h]",
                    "93": "mov     rsi, offset dev_attr_hrv",
                    "94": "call    device_create_file; PIC mode",
                    "95": "mov     ebp, eax",
                    "96": "test    eax, eax",
                    "97": "jnz     INSTR137",
                    "98": "xor     ebp, ebp",
                    "99": "mov     rdi, [r15+8]",
                    "100": "mov     rsi, offset aSta; \"_STA\"",
                    "101": "call    acpi_has_method; PIC mode",
                    "102": "test    al, al",
                    "103": "jz      short INSTR111",
                    "104": "lea     rdi, [r15+260h]",
                    "105": "mov     rsi, offset dev_attr_status",
                    "106": "call    device_create_file; PIC mode",
                    "107": "mov     ebp, eax",
                    "108": "test    eax, eax",
                    "109": "jnz     short INSTR137",
                    "110": "xor     ebp, ebp",
                    "111": "mov     rdi, [r15+8]",
                    "112": "mov     rsi, offset aEj0; \"_EJ0\"",
                    "113": "call    acpi_has_method; PIC mode",
                    "114": "test    al, al",
                    "115": "jz      short INSTR123",
                    "116": "lea     rdi, [r15+260h]",
                    "117": "mov     rsi, offset dev_attr_eject",
                    "118": "call    device_create_file; PIC mode",
                    "119": "mov     ebp, eax",
                    "120": "test    eax, eax",
                    "121": "jnz     short INSTR137",
                    "122": "xor     ebp, ebp",
                    "123": "test    byte ptr [r15+74h], 8",
                    "124": "jnz     short INSTR130",
                    "125": "lea     rdi, [r15+260h]",
                    "126": "add     r15, 208h",
                    "127": "mov     rsi, r15",
                    "128": "call    acpi_expose_nondev_subnodes",
                    "129": "jmp     short INSTR137",
                    "130": "lea     r14, [r15+260h]",
                    "131": "mov     rdi, r14",
                    "132": "mov     rsi, offset dev_attr_power_state",
                    "133": "call    device_create_file; PIC mode",
                    "134": "mov     ebp, eax",
                    "135": "test    eax, eax",
                    "136": "jz      short INSTR147",
                    "137": "mov     rax, gs:28h",
                    "138": "cmp     rax, [rsp+38h+var_28]",
                    "139": "jnz     short INSTR155",
                    "140": "mov     eax, ebp",
                    "141": "add     rsp, 18h",
                    "142": "pop     rbx",
                    "143": "pop     r14",
                    "144": "pop     r15",
                    "145": "pop     rbp",
                    "146": "retn",
                    "147": "xor     ebp, ebp",
                    "148": "test    byte ptr [r15+0F4h], 2",
                    "149": "jz      short INSTR125",
                    "150": "mov     rdi, r14",
                    "151": "mov     rsi, offset dev_attr_real_power_state",
                    "152": "call    device_create_file; PIC mode",
                    "153": "mov     ebp, eax",
                    "154": "jmp     short INSTR125",
                    "155": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "push    rbp",
                    "3": "lea     rbp, [rdi+260h]",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "sub     rsp, 18h",
                    "7": "mov     rax, gs:28h",
                    "8": "mov     [rsp+30h+var_20], rax",
                    "9": "xor     eax, eax",
                    "10": "cmp     qword ptr [rdi+8], 0",
                    "11": "mov     [rsp+30h+var_30], 0FFFFFFFFFFFFFFFFh",
                    "12": "mov     [rsp+30h+var_28], 0",
                    "13": "jz      short INSTR20",
                    "14": "mov     rsi, offset dev_attr_path",
                    "15": "mov     rdi, rbp",
                    "16": "call    device_create_file; PIC mode",
                    "17": "mov     r12d, eax",
                    "18": "test    eax, eax",
                    "19": "jnz     short INSTR30",
                    "20": "mov     rdx, [rbx+98h]",
                    "21": "lea     rax, [rbx+98h]",
                    "22": "cmp     rdx, rax",
                    "23": "jz      short INSTR45",
                    "24": "mov     rsi, offset dev_attr_hid",
                    "25": "mov     rdi, rbp",
                    "26": "call    device_create_file; PIC mode",
                    "27": "mov     r12d, eax",
                    "28": "test    eax, eax",
                    "29": "jz      short INSTR39",
                    "30": "mov     rax, [rsp+30h+var_20]",
                    "31": "sub     rax, gs:28h",
                    "32": "jnz     INSTR148",
                    "33": "add     rsp, 18h",
                    "34": "mov     eax, r12d",
                    "35": "pop     rbx",
                    "36": "pop     rbp",
                    "37": "pop     r12",
                    "38": "jmp     __x86_return_thunk; PIC mode",
                    "39": "mov     rsi, offset dev_attr_modalias",
                    "40": "mov     rdi, rbp",
                    "41": "call    device_create_file; PIC mode",
                    "42": "mov     r12d, eax",
                    "43": "test    eax, eax",
                    "44": "jnz     short INSTR30",
                    "45": "mov     rdi, [rbx+8]",
                    "46": "mov     rsi, offset aStr; \"_STR\"",
                    "47": "call    acpi_has_method; PIC mode",
                    "48": "test    al, al",
                    "49": "jnz     INSTR118",
                    "50": "xor     r12d, r12d",
                    "51": "test    byte ptr [rbx+84h], 2",
                    "52": "jnz     INSTR135",
                    "53": "cmp     qword ptr [rbx+90h], 0",
                    "54": "jz      short INSTR59",
                    "55": "mov     rsi, offset dev_attr_uid",
                    "56": "mov     rdi, rbp",
                    "57": "call    device_create_file; PIC mode",
                    "58": "mov     r12d, eax",
                    "59": "mov     rdi, [rbx+8]",
                    "60": "mov     rsi, offset aSun; \"_SUN\"",
                    "61": "call    acpi_has_method; PIC mode",
                    "62": "test    al, al",
                    "63": "jz      short INSTR70",
                    "64": "mov     rsi, offset dev_attr_sun",
                    "65": "mov     rdi, rbp",
                    "66": "call    device_create_file; PIC mode",
                    "67": "mov     r12d, eax",
                    "68": "test    eax, eax",
                    "69": "jnz     INSTR30",
                    "70": "mov     rdi, [rbx+8]",
                    "71": "mov     rsi, offset aHrv; \"_HRV\"",
                    "72": "call    acpi_has_method; PIC mode",
                    "73": "test    al, al",
                    "74": "jz      short INSTR81",
                    "75": "mov     rsi, offset dev_attr_hrv",
                    "76": "mov     rdi, rbp",
                    "77": "call    device_create_file; PIC mode",
                    "78": "mov     r12d, eax",
                    "79": "test    eax, eax",
                    "80": "jnz     INSTR30",
                    "81": "mov     rdi, [rbx+8]",
                    "82": "mov     rsi, offset aSta; \"_STA\"",
                    "83": "call    acpi_has_method; PIC mode",
                    "84": "test    al, al",
                    "85": "jz      short INSTR92",
                    "86": "mov     rsi, offset dev_attr_status",
                    "87": "mov     rdi, rbp",
                    "88": "call    device_create_file; PIC mode",
                    "89": "mov     r12d, eax",
                    "90": "test    eax, eax",
                    "91": "jnz     INSTR30",
                    "92": "mov     rdi, [rbx+8]",
                    "93": "mov     rsi, offset aEj0; \"_EJ0\"",
                    "94": "call    acpi_has_method; PIC mode",
                    "95": "test    al, al",
                    "96": "jnz     short INSTR111",
                    "97": "test    byte ptr [rbx+74h], 8",
                    "98": "jz      short INSTR107",
                    "99": "mov     rsi, offset dev_attr_power_state",
                    "100": "mov     rdi, rbp",
                    "101": "call    device_create_file; PIC mode",
                    "102": "mov     r12d, eax",
                    "103": "test    eax, eax",
                    "104": "jnz     INSTR30",
                    "105": "test    byte ptr [rbx+0F4h], 2",
                    "106": "jnz     INSTR143",
                    "107": "lea     rsi, [rbx+208h]",
                    "108": "mov     rdi, rbp",
                    "109": "call    acpi_expose_nondev_subnodes",
                    "110": "jmp     INSTR30",
                    "111": "mov     rsi, offset dev_attr_eject",
                    "112": "mov     rdi, rbp",
                    "113": "call    device_create_file; PIC mode",
                    "114": "mov     r12d, eax",
                    "115": "test    eax, eax",
                    "116": "jz      short INSTR97",
                    "117": "jmp     INSTR30",
                    "118": "mov     rdi, [rbx+8]",
                    "119": "xor     edx, edx",
                    "120": "mov     r8d, 3",
                    "121": "mov     rcx, rsp",
                    "122": "mov     rsi, offset aStr; \"_STR\"",
                    "123": "call    acpi_evaluate_object_typed; PIC mode",
                    "124": "test    eax, eax",
                    "125": "jnz     short INSTR140",
                    "126": "mov     rax, [rsp+30h+var_28]",
                    "127": "mov     [rbx+0E8h], rax",
                    "128": "mov     rsi, offset dev_attr_description",
                    "129": "mov     rdi, rbp",
                    "130": "call    device_create_file; PIC mode",
                    "131": "mov     r12d, eax",
                    "132": "test    eax, eax",
                    "133": "jz      INSTR50",
                    "134": "jmp     INSTR30",
                    "135": "mov     rsi, offset dev_attr_adr",
                    "136": "mov     rdi, rbp",
                    "137": "call    device_create_file; PIC mode",
                    "138": "mov     r12d, eax",
                    "139": "jmp     INSTR53",
                    "140": "mov     [rsp+30h+var_28], 0",
                    "141": "xor     eax, eax",
                    "142": "jmp     short INSTR127",
                    "143": "mov     rsi, offset dev_attr_real_power_state",
                    "144": "mov     rdi, rbp",
                    "145": "call    device_create_file; PIC mode",
                    "146": "mov     r12d, eax",
                    "147": "jmp     INSTR107",
                    "148": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r12",
                    "2": "push    rbp",
                    "3": "lea     rbp, [rdi+260h]",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "sub     rsp, 18h",
                    "7": "mov     rax, gs:28h",
                    "8": "mov     [rsp+30h+var_20], rax",
                    "9": "xor     eax, eax",
                    "10": "cmp     qword ptr [rdi+8], 0",
                    "11": "mov     [rsp+30h+var_30], 0FFFFFFFFFFFFFFFFh",
                    "12": "mov     [rsp+30h+var_28], 0",
                    "13": "jnz     short INSTR19",
                    "14": "mov     rdx, [rbx+98h]",
                    "15": "lea     rax, [rbx+98h]",
                    "16": "cmp     rdx, rax",
                    "17": "jnz     short INSTR26",
                    "18": "jmp     short INSTR38",
                    "19": "mov     rsi, offset dev_attr_path",
                    "20": "mov     rdi, rbp",
                    "21": "call    device_create_file; PIC mode",
                    "22": "mov     r12d, eax",
                    "23": "test    eax, eax",
                    "24": "jz      short INSTR14",
                    "25": "jmp     INSTR134",
                    "26": "mov     rsi, offset dev_attr_hid",
                    "27": "mov     rdi, rbp",
                    "28": "call    device_create_file; PIC mode",
                    "29": "mov     r12d, eax",
                    "30": "test    eax, eax",
                    "31": "jnz     INSTR134",
                    "32": "mov     rsi, offset dev_attr_modalias",
                    "33": "mov     rdi, rbp",
                    "34": "call    device_create_file; PIC mode",
                    "35": "mov     r12d, eax",
                    "36": "test    eax, eax",
                    "37": "jnz     INSTR134",
                    "38": "mov     rdi, [rbx+8]",
                    "39": "mov     rsi, offset aStr; \"_STR\"",
                    "40": "call    acpi_has_method; PIC mode",
                    "41": "test    al, al",
                    "42": "jz      short INSTR60",
                    "43": "mov     rdi, [rbx+8]",
                    "44": "xor     edx, edx",
                    "45": "mov     r8d, 3",
                    "46": "mov     rcx, rsp",
                    "47": "mov     rsi, offset aStr; \"_STR\"",
                    "48": "call    acpi_evaluate_object_typed; PIC mode",
                    "49": "test    eax, eax",
                    "50": "jz      short INSTR52",
                    "51": "mov     [rsp+30h+var_28], 0",
                    "52": "mov     rax, [rsp+30h+var_28]",
                    "53": "mov     rsi, offset dev_attr_description",
                    "54": "mov     rdi, rbp",
                    "55": "mov     [rbx+0E8h], rax",
                    "56": "call    device_create_file; PIC mode",
                    "57": "mov     r12d, eax",
                    "58": "test    eax, eax",
                    "59": "jnz     INSTR134",
                    "60": "xor     r12d, r12d",
                    "61": "test    byte ptr [rbx+84h], 2",
                    "62": "jz      short INSTR67",
                    "63": "mov     rsi, offset dev_attr_adr",
                    "64": "mov     rdi, rbp",
                    "65": "call    device_create_file; PIC mode",
                    "66": "mov     r12d, eax",
                    "67": "cmp     qword ptr [rbx+90h], 0",
                    "68": "jz      short INSTR73",
                    "69": "mov     rsi, offset dev_attr_uid",
                    "70": "mov     rdi, rbp",
                    "71": "call    device_create_file; PIC mode",
                    "72": "mov     r12d, eax",
                    "73": "mov     rdi, [rbx+8]",
                    "74": "mov     rsi, offset aSun; \"_SUN\"",
                    "75": "call    acpi_has_method; PIC mode",
                    "76": "test    al, al",
                    "77": "jz      short INSTR84",
                    "78": "mov     rsi, offset dev_attr_sun",
                    "79": "mov     rdi, rbp",
                    "80": "call    device_create_file; PIC mode",
                    "81": "mov     r12d, eax",
                    "82": "test    eax, eax",
                    "83": "jnz     INSTR134",
                    "84": "mov     rdi, [rbx+8]",
                    "85": "mov     rsi, offset aHrv; \"_HRV\"",
                    "86": "call    acpi_has_method; PIC mode",
                    "87": "test    al, al",
                    "88": "jz      short INSTR95",
                    "89": "mov     rsi, offset dev_attr_hrv",
                    "90": "mov     rdi, rbp",
                    "91": "call    device_create_file; PIC mode",
                    "92": "mov     r12d, eax",
                    "93": "test    eax, eax",
                    "94": "jnz     INSTR134",
                    "95": "mov     rdi, [rbx+8]",
                    "96": "mov     rsi, offset aSta; \"_STA\"",
                    "97": "call    acpi_has_method; PIC mode",
                    "98": "test    al, al",
                    "99": "jz      short INSTR106",
                    "100": "mov     rsi, offset dev_attr_status",
                    "101": "mov     rdi, rbp",
                    "102": "call    device_create_file; PIC mode",
                    "103": "mov     r12d, eax",
                    "104": "test    eax, eax",
                    "105": "jnz     short INSTR134",
                    "106": "mov     rdi, [rbx+8]",
                    "107": "mov     rsi, offset aEj0; \"_EJ0\"",
                    "108": "call    acpi_has_method; PIC mode",
                    "109": "test    al, al",
                    "110": "jz      short INSTR117",
                    "111": "mov     rsi, offset dev_attr_eject",
                    "112": "mov     rdi, rbp",
                    "113": "call    device_create_file; PIC mode",
                    "114": "mov     r12d, eax",
                    "115": "test    eax, eax",
                    "116": "jnz     short INSTR134",
                    "117": "test    byte ptr [rbx+74h], 8",
                    "118": "jz      short INSTR131",
                    "119": "mov     rsi, offset dev_attr_power_state",
                    "120": "mov     rdi, rbp",
                    "121": "call    device_create_file; PIC mode",
                    "122": "mov     r12d, eax",
                    "123": "test    eax, eax",
                    "124": "jnz     short INSTR134",
                    "125": "test    byte ptr [rbx+0F4h], 2",
                    "126": "jz      short INSTR131",
                    "127": "mov     rsi, offset dev_attr_real_power_state",
                    "128": "mov     rdi, rbp",
                    "129": "call    device_create_file; PIC mode",
                    "130": "mov     r12d, eax",
                    "131": "lea     rsi, [rbx+208h]",
                    "132": "mov     rdi, rbp",
                    "133": "call    acpi_expose_nondev_subnodes",
                    "134": "mov     rax, [rsp+30h+var_20]",
                    "135": "sub     rax, gs:28h",
                    "136": "jz      short INSTR138",
                    "137": "call    __stack_chk_fail; PIC mode",
                    "138": "add     rsp, 18h",
                    "139": "mov     eax, r12d",
                    "140": "pop     rbx",
                    "141": "pop     rbp",
                    "142": "pop     r12",
                    "143": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "mov     esi, eax",
                    "6": "push    ebx",
                    "7": "lea     edi, [esi+184h]",
                    "8": "sub     esp, 10h",
                    "9": "mov     eax, fs:__stack_chk_guard",
                    "10": "mov     [ebp+var_10], eax",
                    "11": "xor     eax, eax",
                    "12": "mov     edx, [esi+4]",
                    "13": "mov     [ebp+var_18], 0FFFFFFFFh",
                    "14": "mov     [ebp+var_14], 0",
                    "15": "test    edx, edx",
                    "16": "jz      short INSTR23",
                    "17": "mov     edx, offset dev_attr_path",
                    "18": "mov     eax, edi",
                    "19": "call    device_create_file",
                    "20": "test    eax, eax",
                    "21": "mov     ebx, eax",
                    "22": "jnz     short INSTR33",
                    "23": "mov     edx, [esi+5Ch]",
                    "24": "lea     eax, [esi+5Ch]",
                    "25": "cmp     edx, eax",
                    "26": "jz      short INSTR49",
                    "27": "mov     edx, offset dev_attr_hid",
                    "28": "mov     eax, edi",
                    "29": "call    device_create_file",
                    "30": "test    eax, eax",
                    "31": "mov     ebx, eax",
                    "32": "jz      short INSTR43",
                    "33": "mov     eax, [ebp+var_10]",
                    "34": "sub     eax, fs:__stack_chk_guard",
                    "35": "jnz     INSTR153",
                    "36": "add     esp, 10h",
                    "37": "mov     eax, ebx",
                    "38": "pop     ebx",
                    "39": "pop     esi",
                    "40": "pop     edi",
                    "41": "pop     ebp",
                    "42": "retn",
                    "43": "mov     edx, offset dev_attr_modalias",
                    "44": "mov     eax, edi",
                    "45": "call    device_create_file",
                    "46": "test    eax, eax",
                    "47": "mov     ebx, eax",
                    "48": "jnz     short INSTR33",
                    "49": "mov     eax, [esi+4]",
                    "50": "mov     edx, offset aStr; \"_STR\"",
                    "51": "call    acpi_has_method",
                    "52": "test    al, al",
                    "53": "jnz     INSTR123",
                    "54": "test    byte ptr [esi+4Ch], 2",
                    "55": "jnz     INSTR140",
                    "56": "xor     ebx, ebx",
                    "57": "mov     eax, [esi+58h]",
                    "58": "test    eax, eax",
                    "59": "jz      short INSTR64",
                    "60": "mov     edx, offset dev_attr_uid",
                    "61": "mov     eax, edi",
                    "62": "call    device_create_file",
                    "63": "mov     ebx, eax",
                    "64": "mov     eax, [esi+4]",
                    "65": "mov     edx, offset aSun; \"_SUN\"",
                    "66": "call    acpi_has_method",
                    "67": "test    al, al",
                    "68": "jz      short INSTR75",
                    "69": "mov     edx, offset dev_attr_sun",
                    "70": "mov     eax, edi",
                    "71": "call    device_create_file",
                    "72": "test    eax, eax",
                    "73": "mov     ebx, eax",
                    "74": "jnz     INSTR33",
                    "75": "mov     eax, [esi+4]",
                    "76": "mov     edx, offset aHrv; \"_HRV\"",
                    "77": "call    acpi_has_method",
                    "78": "test    al, al",
                    "79": "jz      short INSTR86",
                    "80": "mov     edx, offset dev_attr_hrv",
                    "81": "mov     eax, edi",
                    "82": "call    device_create_file",
                    "83": "test    eax, eax",
                    "84": "mov     ebx, eax",
                    "85": "jnz     INSTR33",
                    "86": "mov     eax, [esi+4]",
                    "87": "mov     edx, offset aSta; \"_STA\"",
                    "88": "call    acpi_has_method",
                    "89": "test    al, al",
                    "90": "jz      short INSTR97",
                    "91": "mov     edx, offset dev_attr_status",
                    "92": "mov     eax, edi",
                    "93": "call    device_create_file",
                    "94": "test    eax, eax",
                    "95": "mov     ebx, eax",
                    "96": "jnz     INSTR33",
                    "97": "mov     eax, [esi+4]",
                    "98": "mov     edx, offset aEj0; \"_EJ0\"",
                    "99": "call    acpi_has_method",
                    "100": "test    al, al",
                    "101": "jnz     short INSTR116",
                    "102": "test    byte ptr [esi+3Ch], 8",
                    "103": "jz      short INSTR112",
                    "104": "mov     edx, offset dev_attr_power_state",
                    "105": "mov     eax, edi",
                    "106": "call    device_create_file",
                    "107": "test    eax, eax",
                    "108": "mov     ebx, eax",
                    "109": "jnz     INSTR33",
                    "110": "test    byte ptr [esi+0A8h], 2",
                    "111": "jnz     INSTR148",
                    "112": "lea     edx, [esi+158h]",
                    "113": "mov     eax, edi",
                    "114": "call    acpi_expose_nondev_subnodes",
                    "115": "jmp     INSTR33",
                    "116": "mov     edx, offset dev_attr_eject",
                    "117": "mov     eax, edi",
                    "118": "call    device_create_file",
                    "119": "test    eax, eax",
                    "120": "mov     ebx, eax",
                    "121": "jz      short INSTR102",
                    "122": "jmp     INSTR33",
                    "123": "mov     eax, [esi+4]",
                    "124": "lea     edx, [ebp+var_18]",
                    "125": "xor     ecx, ecx",
                    "126": "mov     [esp], edx",
                    "127": "mov     edx, offset aStr; \"_STR\"",
                    "128": "call    acpi_evaluate_object",
                    "129": "test    eax, eax",
                    "130": "jnz     short INSTR145",
                    "131": "mov     eax, [ebp+var_14]",
                    "132": "mov     [esi+0A0h], eax",
                    "133": "mov     edx, offset dev_attr_description",
                    "134": "mov     eax, edi",
                    "135": "call    device_create_file",
                    "136": "test    eax, eax",
                    "137": "mov     ebx, eax",
                    "138": "jz      INSTR54",
                    "139": "jmp     INSTR33",
                    "140": "mov     edx, offset dev_attr_adr",
                    "141": "mov     eax, edi",
                    "142": "call    device_create_file",
                    "143": "mov     ebx, eax",
                    "144": "jmp     INSTR57",
                    "145": "mov     [ebp+var_14], 0",
                    "146": "xor     eax, eax",
                    "147": "jmp     short INSTR132",
                    "148": "mov     edx, offset dev_attr_real_power_state",
                    "149": "mov     eax, edi",
                    "150": "call    device_create_file",
                    "151": "mov     ebx, eax",
                    "152": "jmp     INSTR112",
                    "153": "call    __stack_chk_fail"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_50]!",
                    "3": "MRS             X1, SP_EL0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x50+var_40]",
                    "6": "MOV             X20, X0",
                    "7": "STP             X21, X22, [SP,#0x50+var_30]",
                    "8": "ADD             X21, X20, #0x260",
                    "9": "LDR             X0, [X1,#0x4E0]",
                    "10": "STR             X0, [SP,#0x50+var_8]",
                    "11": "MOV             X0, #0",
                    "12": "MOV             X0, #0xFFFFFFFFFFFFFFFF",
                    "13": "STP             X0, XZR, [SP,#0x50+var_18]",
                    "14": "LDR             X0, [X20,#8]",
                    "15": "CBZ             X0, loc_10BC",
                    "16": "ADRL            X1, acpi_data_node_ktype",
                    "17": "ADD             X1, X1, #0x38 ; '8'",
                    "18": "MOV             X0, X21",
                    "19": "BL              device_create_file",
                    "20": "MOV             W19, W0",
                    "21": "CBNZ            W0, loc_10E8",
                    "22": "MOV             X0, X20",
                    "23": "LDR             X1, [X0,#0x98]!",
                    "24": "CMP             X1, X0",
                    "25": "B.EQ            loc_112C",
                    "26": "ADRL            X22, acpi_data_node_ktype",
                    "27": "ADD             X1, X22, #0x58 ; 'X'",
                    "28": "MOV             X0, X21",
                    "29": "BL              device_create_file",
                    "30": "MOV             W19, W0",
                    "31": "CBZ             W0, loc_1118",
                    "32": "MRS             X0, SP_EL0",
                    "33": "LDR             X2, [SP,#0x50+var_8]",
                    "34": "LDR             X1, [X0,#0x4E0]",
                    "35": "SUBS            X2, X2, X1",
                    "36": "MOV             X1, #0",
                    "37": "B.NE            loc_1300",
                    "38": "MOV             W0, W19",
                    "39": "LDP             X19, X20, [SP,#0x50+var_40]",
                    "40": "LDP             X21, X22, [SP,#0x50+var_30]",
                    "41": "LDP             X29, X30, [SP+0x50+var_50],#0x50",
                    "42": "AUTIASP",
                    "43": "RET",
                    "44": "ADD             X1, X22, #0x78 ; 'x'",
                    "45": "MOV             X0, X21",
                    "46": "BL              device_create_file",
                    "47": "MOV             W19, W0",
                    "48": "CBNZ            W0, loc_10E8",
                    "49": "LDR             X0, [X20,#8]",
                    "50": "ADRL            X19, aStr; \"_STR\"",
                    "51": "MOV             X1, X19",
                    "52": "BL              acpi_has_method",
                    "53": "TST             W0, #0xFF",
                    "54": "B.NE            loc_1284",
                    "55": "LDR             W0, [X20,#0x84]",
                    "56": "MOV             W19, #0",
                    "57": "TBNZ            W0, #1, loc_12C4",
                    "58": "LDR             X0, [X20,#0x90]",
                    "59": "CBZ             X0, loc_1174",
                    "60": "ADRL            X1, acpi_data_node_ktype",
                    "61": "ADD             X1, X1, #0xD8",
                    "62": "MOV             X0, X21",
                    "63": "BL              device_create_file",
                    "64": "MOV             W19, W0",
                    "65": "LDR             X0, [X20,#8]",
                    "66": "ADRL            X1, aSun; \"_SUN\"",
                    "67": "BL              acpi_has_method",
                    "68": "TST             W0, #0xFF",
                    "69": "B.EQ            loc_11A8",
                    "70": "ADRL            X1, acpi_data_node_ktype",
                    "71": "ADD             X1, X1, #0xF8",
                    "72": "MOV             X0, X21",
                    "73": "BL              device_create_file",
                    "74": "MOV             W19, W0",
                    "75": "CBNZ            W0, loc_10E8",
                    "76": "LDR             X0, [X20,#8]",
                    "77": "ADRL            X1, aHrv; \"_HRV\"",
                    "78": "BL              acpi_has_method",
                    "79": "TST             W0, #0xFF",
                    "80": "B.EQ            loc_11DC",
                    "81": "ADRL            X1, acpi_data_node_ktype",
                    "82": "ADD             X1, X1, #0x118",
                    "83": "MOV             X0, X21",
                    "84": "BL              device_create_file",
                    "85": "MOV             W19, W0",
                    "86": "CBNZ            W0, loc_10E8",
                    "87": "LDR             X0, [X20,#8]",
                    "88": "ADRL            X1, aSta; \"_STA\"",
                    "89": "BL              acpi_has_method",
                    "90": "TST             W0, #0xFF",
                    "91": "B.EQ            loc_1210",
                    "92": "ADRL            X1, acpi_data_node_ktype",
                    "93": "ADD             X1, X1, #0x138",
                    "94": "MOV             X0, X21",
                    "95": "BL              device_create_file",
                    "96": "MOV             W19, W0",
                    "97": "CBNZ            W0, loc_10E8",
                    "98": "LDR             X0, [X20,#8]",
                    "99": "ADRL            X1, aEj0; \"_EJ0\"",
                    "100": "BL              acpi_has_method",
                    "101": "TST             W0, #0xFF",
                    "102": "B.NE            loc_1264",
                    "103": "LDR             W0, [X20,#0x74]",
                    "104": "TBZ             W0, #3, loc_1254",
                    "105": "ADRL            X22, acpi_data_node_ktype",
                    "106": "ADD             X1, X22, #0x178",
                    "107": "MOV             X0, X21",
                    "108": "BL              device_create_file",
                    "109": "MOV             W19, W0",
                    "110": "CBNZ            W0, loc_10E8",
                    "111": "LDR             W0, [X20,#0xF4]",
                    "112": "TBNZ            W0, #1, loc_12EC",
                    "113": "ADD             X1, X20, #0x208",
                    "114": "MOV             X0, X21",
                    "115": "BL              acpi_expose_nondev_subnodes",
                    "116": "B               loc_10E8",
                    "117": "ADRL            X1, acpi_data_node_ktype",
                    "118": "ADD             X1, X1, #0x158",
                    "119": "MOV             X0, X21",
                    "120": "BL              device_create_file",
                    "121": "MOV             W19, W0",
                    "122": "CBZ             W0, loc_1228",
                    "123": "B               loc_10E8",
                    "124": "LDR             X0, [X20,#8]",
                    "125": "MOV             X1, X19",
                    "126": "ADD             X3, SP, #0x50+var_18",
                    "127": "MOV             X2, #0",
                    "128": "BL              acpi_evaluate_object",
                    "129": "CBNZ            W0, loc_12E0",
                    "130": "LDR             X0, [SP,#0x50+var_10]",
                    "131": "STR             X0, [X20,#0xE8]",
                    "132": "ADRL            X1, acpi_data_node_ktype",
                    "133": "ADD             X1, X1, #0x98",
                    "134": "MOV             X0, X21",
                    "135": "BL              device_create_file",
                    "136": "MOV             W19, W0",
                    "137": "CBZ             W0, loc_1148",
                    "138": "B               loc_10E8",
                    "139": "ADRL            X1, acpi_data_node_ktype",
                    "140": "ADD             X1, X1, #0xB8",
                    "141": "MOV             X0, X21",
                    "142": "BL              device_create_file",
                    "143": "MOV             W19, W0",
                    "144": "B               loc_1154",
                    "145": "MOV             X0, #0",
                    "146": "STR             XZR, [SP,#0x50+var_10]",
                    "147": "B               loc_12A0",
                    "148": "ADD             X1, X22, #0x198",
                    "149": "MOV             X0, X21",
                    "150": "BL              device_create_file",
                    "151": "MOV             W19, W0",
                    "152": "B               loc_1254",
                    "153": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    rbx",
                    "5": "sub     rsp, 18h",
                    "6": "mov     r15, rdi",
                    "7": "mov     rax, gs:28h",
                    "8": "mov     [rsp+38h+var_28], rax",
                    "9": "mov     rax, cs:_L__const_acpi_object_path_path+8",
                    "10": "mov     [rsp+38h+var_30], rax",
                    "11": "mov     rax, cs:_L__const_acpi_object_path_path",
                    "12": "mov     [rsp+38h+var_38], rax",
                    "13": "cmp     qword ptr [rdi+8], 0",
                    "14": "jz      short INSTR21",
                    "15": "lea     rdi, [r15+260h]",
                    "16": "mov     rsi, offset dev_attr_path",
                    "17": "call    device_create_file; PIC mode",
                    "18": "mov     ebp, eax",
                    "19": "test    eax, eax",
                    "20": "jnz     INSTR136",
                    "21": "lea     rax, [r15+98h]",
                    "22": "mov     rcx, [r15+98h]",
                    "23": "cmp     rcx, rax",
                    "24": "jz      short INSTR38",
                    "25": "lea     rbx, [r15+260h]",
                    "26": "mov     rdi, rbx",
                    "27": "mov     rsi, offset dev_attr_hid",
                    "28": "call    device_create_file; PIC mode",
                    "29": "mov     ebp, eax",
                    "30": "test    eax, eax",
                    "31": "jnz     INSTR136",
                    "32": "mov     rdi, rbx",
                    "33": "mov     rsi, offset dev_attr_modalias",
                    "34": "call    device_create_file; PIC mode",
                    "35": "mov     ebp, eax",
                    "36": "test    eax, eax",
                    "37": "jnz     INSTR136",
                    "38": "mov     rdi, [r15+8]",
                    "39": "mov     rsi, offset aStr; \"_STR\"",
                    "40": "call    acpi_has_method; PIC mode",
                    "41": "test    al, al",
                    "42": "jz      short INSTR61",
                    "43": "mov     rdi, [r15+8]",
                    "44": "mov     rcx, rsp",
                    "45": "mov     rsi, offset aStr; \"_STR\"",
                    "46": "xor     edx, edx",
                    "47": "call    acpi_evaluate_object; PIC mode",
                    "48": "test    eax, eax",
                    "49": "jz      short INSTR53",
                    "50": "mov     [rsp+38h+var_30], 0",
                    "51": "xor     eax, eax",
                    "52": "jmp     short INSTR54",
                    "53": "mov     rax, [rsp+38h+var_30]",
                    "54": "mov     [r15+0E8h], rax",
                    "55": "lea     rdi, [r15+260h]",
                    "56": "mov     rsi, offset dev_attr_description",
                    "57": "call    device_create_file; PIC mode",
                    "58": "mov     ebp, eax",
                    "59": "test    eax, eax",
                    "60": "jnz     INSTR136",
                    "61": "xor     ebp, ebp",
                    "62": "test    byte ptr [r15+84h], 2",
                    "63": "jz      short INSTR68",
                    "64": "lea     rdi, [r15+260h]",
                    "65": "mov     rsi, offset dev_attr_adr",
                    "66": "call    device_create_file; PIC mode",
                    "67": "mov     ebp, eax",
                    "68": "cmp     qword ptr [r15+90h], 0",
                    "69": "jz      short INSTR74",
                    "70": "lea     rdi, [r15+260h]",
                    "71": "mov     rsi, offset dev_attr_uid",
                    "72": "call    device_create_file; PIC mode",
                    "73": "mov     ebp, eax",
                    "74": "mov     rdi, [r15+8]",
                    "75": "mov     rsi, offset aSun; \"_SUN\"",
                    "76": "call    acpi_has_method; PIC mode",
                    "77": "test    al, al",
                    "78": "jz      short INSTR86",
                    "79": "lea     rdi, [r15+260h]",
                    "80": "mov     rsi, offset dev_attr_sun",
                    "81": "call    device_create_file; PIC mode",
                    "82": "mov     ebp, eax",
                    "83": "test    eax, eax",
                    "84": "jnz     INSTR136",
                    "85": "xor     ebp, ebp",
                    "86": "mov     rdi, [r15+8]",
                    "87": "mov     rsi, offset aHrv; \"_HRV\"",
                    "88": "call    acpi_has_method; PIC mode",
                    "89": "test    al, al",
                    "90": "jz      short INSTR98",
                    "91": "lea     rdi, [r15+260h]",
                    "92": "mov     rsi, offset dev_attr_hrv",
                    "93": "call    device_create_file; PIC mode",
                    "94": "mov     ebp, eax",
                    "95": "test    eax, eax",
                    "96": "jnz     INSTR136",
                    "97": "xor     ebp, ebp",
                    "98": "mov     rdi, [r15+8]",
                    "99": "mov     rsi, offset aSta; \"_STA\"",
                    "100": "call    acpi_has_method; PIC mode",
                    "101": "test    al, al",
                    "102": "jz      short INSTR110",
                    "103": "lea     rdi, [r15+260h]",
                    "104": "mov     rsi, offset dev_attr_status",
                    "105": "call    device_create_file; PIC mode",
                    "106": "mov     ebp, eax",
                    "107": "test    eax, eax",
                    "108": "jnz     short INSTR136",
                    "109": "xor     ebp, ebp",
                    "110": "mov     rdi, [r15+8]",
                    "111": "mov     rsi, offset aEj0; \"_EJ0\"",
                    "112": "call    acpi_has_method; PIC mode",
                    "113": "test    al, al",
                    "114": "jz      short INSTR122",
                    "115": "lea     rdi, [r15+260h]",
                    "116": "mov     rsi, offset dev_attr_eject",
                    "117": "call    device_create_file; PIC mode",
                    "118": "mov     ebp, eax",
                    "119": "test    eax, eax",
                    "120": "jnz     short INSTR136",
                    "121": "xor     ebp, ebp",
                    "122": "test    byte ptr [r15+74h], 8",
                    "123": "jnz     short INSTR129",
                    "124": "lea     rdi, [r15+260h]",
                    "125": "add     r15, 208h",
                    "126": "mov     rsi, r15",
                    "127": "call    acpi_expose_nondev_subnodes",
                    "128": "jmp     short INSTR136",
                    "129": "lea     r14, [r15+260h]",
                    "130": "mov     rdi, r14",
                    "131": "mov     rsi, offset dev_attr_power_state",
                    "132": "call    device_create_file; PIC mode",
                    "133": "mov     ebp, eax",
                    "134": "test    eax, eax",
                    "135": "jz      short INSTR146",
                    "136": "mov     rax, gs:28h",
                    "137": "cmp     rax, [rsp+38h+var_28]",
                    "138": "jnz     short INSTR154",
                    "139": "mov     eax, ebp",
                    "140": "add     rsp, 18h",
                    "141": "pop     rbx",
                    "142": "pop     r14",
                    "143": "pop     r15",
                    "144": "pop     rbp",
                    "145": "retn",
                    "146": "xor     ebp, ebp",
                    "147": "test    byte ptr [r15+0F4h], 2",
                    "148": "jz      short INSTR124",
                    "149": "mov     rdi, r14",
                    "150": "mov     rsi, offset dev_attr_real_power_state",
                    "151": "call    device_create_file; PIC mode",
                    "152": "mov     ebp, eax",
                    "153": "jmp     short INSTR124",
                    "154": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r12",
                    "2": "push    rbp",
                    "3": "lea     rbp, [rdi+260h]",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "sub     rsp, 18h",
                    "7": "mov     rax, gs:28h",
                    "8": "mov     [rsp+30h+var_20], rax",
                    "9": "xor     eax, eax",
                    "10": "cmp     qword ptr [rdi+8], 0",
                    "11": "mov     [rsp+30h+var_30], 0FFFFFFFFFFFFFFFFh",
                    "12": "mov     [rsp+30h+var_28], 0",
                    "13": "jz      short INSTR20",
                    "14": "mov     rsi, offset dev_attr_path",
                    "15": "mov     rdi, rbp",
                    "16": "call    device_create_file; PIC mode",
                    "17": "mov     r12d, eax",
                    "18": "test    eax, eax",
                    "19": "jnz     short INSTR30",
                    "20": "mov     rdx, [rbx+98h]",
                    "21": "lea     rax, [rbx+98h]",
                    "22": "cmp     rdx, rax",
                    "23": "jz      short INSTR45",
                    "24": "mov     rsi, offset dev_attr_hid",
                    "25": "mov     rdi, rbp",
                    "26": "call    device_create_file; PIC mode",
                    "27": "mov     r12d, eax",
                    "28": "test    eax, eax",
                    "29": "jz      short INSTR39",
                    "30": "mov     rax, [rsp+30h+var_20]",
                    "31": "sub     rax, gs:28h",
                    "32": "jnz     INSTR147",
                    "33": "add     rsp, 18h",
                    "34": "mov     eax, r12d",
                    "35": "pop     rbx",
                    "36": "pop     rbp",
                    "37": "pop     r12",
                    "38": "jmp     __x86_return_thunk; PIC mode",
                    "39": "mov     rsi, offset dev_attr_modalias",
                    "40": "mov     rdi, rbp",
                    "41": "call    device_create_file; PIC mode",
                    "42": "mov     r12d, eax",
                    "43": "test    eax, eax",
                    "44": "jnz     short INSTR30",
                    "45": "mov     rdi, [rbx+8]",
                    "46": "mov     rsi, offset aStr; \"_STR\"",
                    "47": "call    acpi_has_method; PIC mode",
                    "48": "test    al, al",
                    "49": "jnz     INSTR118",
                    "50": "xor     r12d, r12d",
                    "51": "test    byte ptr [rbx+84h], 2",
                    "52": "jnz     INSTR134",
                    "53": "cmp     qword ptr [rbx+90h], 0",
                    "54": "jz      short INSTR59",
                    "55": "mov     rsi, offset dev_attr_uid",
                    "56": "mov     rdi, rbp",
                    "57": "call    device_create_file; PIC mode",
                    "58": "mov     r12d, eax",
                    "59": "mov     rdi, [rbx+8]",
                    "60": "mov     rsi, offset aSun; \"_SUN\"",
                    "61": "call    acpi_has_method; PIC mode",
                    "62": "test    al, al",
                    "63": "jz      short INSTR70",
                    "64": "mov     rsi, offset dev_attr_sun",
                    "65": "mov     rdi, rbp",
                    "66": "call    device_create_file; PIC mode",
                    "67": "mov     r12d, eax",
                    "68": "test    eax, eax",
                    "69": "jnz     INSTR30",
                    "70": "mov     rdi, [rbx+8]",
                    "71": "mov     rsi, offset aHrv; \"_HRV\"",
                    "72": "call    acpi_has_method; PIC mode",
                    "73": "test    al, al",
                    "74": "jz      short INSTR81",
                    "75": "mov     rsi, offset dev_attr_hrv",
                    "76": "mov     rdi, rbp",
                    "77": "call    device_create_file; PIC mode",
                    "78": "mov     r12d, eax",
                    "79": "test    eax, eax",
                    "80": "jnz     INSTR30",
                    "81": "mov     rdi, [rbx+8]",
                    "82": "mov     rsi, offset aSta; \"_STA\"",
                    "83": "call    acpi_has_method; PIC mode",
                    "84": "test    al, al",
                    "85": "jz      short INSTR92",
                    "86": "mov     rsi, offset dev_attr_status",
                    "87": "mov     rdi, rbp",
                    "88": "call    device_create_file; PIC mode",
                    "89": "mov     r12d, eax",
                    "90": "test    eax, eax",
                    "91": "jnz     INSTR30",
                    "92": "mov     rdi, [rbx+8]",
                    "93": "mov     rsi, offset aEj0; \"_EJ0\"",
                    "94": "call    acpi_has_method; PIC mode",
                    "95": "test    al, al",
                    "96": "jnz     short INSTR111",
                    "97": "test    byte ptr [rbx+74h], 8",
                    "98": "jz      short INSTR107",
                    "99": "mov     rsi, offset dev_attr_power_state",
                    "100": "mov     rdi, rbp",
                    "101": "call    device_create_file; PIC mode",
                    "102": "mov     r12d, eax",
                    "103": "test    eax, eax",
                    "104": "jnz     INSTR30",
                    "105": "test    byte ptr [rbx+0F4h], 2",
                    "106": "jnz     INSTR142",
                    "107": "lea     rsi, [rbx+208h]",
                    "108": "mov     rdi, rbp",
                    "109": "call    acpi_expose_nondev_subnodes",
                    "110": "jmp     INSTR30",
                    "111": "mov     rsi, offset dev_attr_eject",
                    "112": "mov     rdi, rbp",
                    "113": "call    device_create_file; PIC mode",
                    "114": "mov     r12d, eax",
                    "115": "test    eax, eax",
                    "116": "jz      short INSTR97",
                    "117": "jmp     INSTR30",
                    "118": "mov     rdi, [rbx+8]",
                    "119": "xor     edx, edx",
                    "120": "mov     rcx, rsp",
                    "121": "mov     rsi, offset aStr; \"_STR\"",
                    "122": "call    acpi_evaluate_object; PIC mode",
                    "123": "test    eax, eax",
                    "124": "jnz     short INSTR139",
                    "125": "mov     rax, [rsp+30h+var_28]",
                    "126": "mov     [rbx+0E8h], rax",
                    "127": "mov     rsi, offset dev_attr_description",
                    "128": "mov     rdi, rbp",
                    "129": "call    device_create_file; PIC mode",
                    "130": "mov     r12d, eax",
                    "131": "test    eax, eax",
                    "132": "jz      INSTR50",
                    "133": "jmp     INSTR30",
                    "134": "mov     rsi, offset dev_attr_adr",
                    "135": "mov     rdi, rbp",
                    "136": "call    device_create_file; PIC mode",
                    "137": "mov     r12d, eax",
                    "138": "jmp     INSTR53",
                    "139": "mov     [rsp+30h+var_28], 0",
                    "140": "xor     eax, eax",
                    "141": "jmp     short INSTR126",
                    "142": "mov     rsi, offset dev_attr_real_power_state",
                    "143": "mov     rdi, rbp",
                    "144": "call    device_create_file; PIC mode",
                    "145": "mov     r12d, eax",
                    "146": "jmp     INSTR107",
                    "147": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "device_sysfs.acpi_device_setup_files.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r12",
                    "2": "push    rbp",
                    "3": "lea     rbp, [rdi+260h]",
                    "4": "push    rbx",
                    "5": "mov     rbx, rdi",
                    "6": "sub     rsp, 18h",
                    "7": "mov     rax, gs:28h",
                    "8": "mov     [rsp+30h+var_20], rax",
                    "9": "xor     eax, eax",
                    "10": "cmp     qword ptr [rdi+8], 0",
                    "11": "mov     [rsp+30h+var_30], 0FFFFFFFFFFFFFFFFh",
                    "12": "mov     [rsp+30h+var_28], 0",
                    "13": "jnz     short INSTR19",
                    "14": "mov     rdx, [rbx+98h]",
                    "15": "lea     rax, [rbx+98h]",
                    "16": "cmp     rdx, rax",
                    "17": "jnz     short INSTR26",
                    "18": "jmp     short INSTR38",
                    "19": "mov     rsi, offset dev_attr_path",
                    "20": "mov     rdi, rbp",
                    "21": "call    device_create_file; PIC mode",
                    "22": "mov     r12d, eax",
                    "23": "test    eax, eax",
                    "24": "jz      short INSTR14",
                    "25": "jmp     INSTR133",
                    "26": "mov     rsi, offset dev_attr_hid",
                    "27": "mov     rdi, rbp",
                    "28": "call    device_create_file; PIC mode",
                    "29": "mov     r12d, eax",
                    "30": "test    eax, eax",
                    "31": "jnz     INSTR133",
                    "32": "mov     rsi, offset dev_attr_modalias",
                    "33": "mov     rdi, rbp",
                    "34": "call    device_create_file; PIC mode",
                    "35": "mov     r12d, eax",
                    "36": "test    eax, eax",
                    "37": "jnz     INSTR133",
                    "38": "mov     rdi, [rbx+8]",
                    "39": "mov     rsi, offset aStr; \"_STR\"",
                    "40": "call    acpi_has_method; PIC mode",
                    "41": "test    al, al",
                    "42": "jz      short INSTR59",
                    "43": "mov     rdi, [rbx+8]",
                    "44": "xor     edx, edx",
                    "45": "mov     rcx, rsp",
                    "46": "mov     rsi, offset aStr; \"_STR\"",
                    "47": "call    acpi_evaluate_object; PIC mode",
                    "48": "test    eax, eax",
                    "49": "jz      short INSTR51",
                    "50": "mov     [rsp+30h+var_28], 0",
                    "51": "mov     rax, [rsp+30h+var_28]",
                    "52": "mov     rsi, offset dev_attr_description",
                    "53": "mov     rdi, rbp",
                    "54": "mov     [rbx+0E8h], rax",
                    "55": "call    device_create_file; PIC mode",
                    "56": "mov     r12d, eax",
                    "57": "test    eax, eax",
                    "58": "jnz     INSTR133",
                    "59": "xor     r12d, r12d",
                    "60": "test    byte ptr [rbx+84h], 2",
                    "61": "jz      short INSTR66",
                    "62": "mov     rsi, offset dev_attr_adr",
                    "63": "mov     rdi, rbp",
                    "64": "call    device_create_file; PIC mode",
                    "65": "mov     r12d, eax",
                    "66": "cmp     qword ptr [rbx+90h], 0",
                    "67": "jz      short INSTR72",
                    "68": "mov     rsi, offset dev_attr_uid",
                    "69": "mov     rdi, rbp",
                    "70": "call    device_create_file; PIC mode",
                    "71": "mov     r12d, eax",
                    "72": "mov     rdi, [rbx+8]",
                    "73": "mov     rsi, offset aSun; \"_SUN\"",
                    "74": "call    acpi_has_method; PIC mode",
                    "75": "test    al, al",
                    "76": "jz      short INSTR83",
                    "77": "mov     rsi, offset dev_attr_sun",
                    "78": "mov     rdi, rbp",
                    "79": "call    device_create_file; PIC mode",
                    "80": "mov     r12d, eax",
                    "81": "test    eax, eax",
                    "82": "jnz     INSTR133",
                    "83": "mov     rdi, [rbx+8]",
                    "84": "mov     rsi, offset aHrv; \"_HRV\"",
                    "85": "call    acpi_has_method; PIC mode",
                    "86": "test    al, al",
                    "87": "jz      short INSTR94",
                    "88": "mov     rsi, offset dev_attr_hrv",
                    "89": "mov     rdi, rbp",
                    "90": "call    device_create_file; PIC mode",
                    "91": "mov     r12d, eax",
                    "92": "test    eax, eax",
                    "93": "jnz     INSTR133",
                    "94": "mov     rdi, [rbx+8]",
                    "95": "mov     rsi, offset aSta; \"_STA\"",
                    "96": "call    acpi_has_method; PIC mode",
                    "97": "test    al, al",
                    "98": "jz      short INSTR105",
                    "99": "mov     rsi, offset dev_attr_status",
                    "100": "mov     rdi, rbp",
                    "101": "call    device_create_file; PIC mode",
                    "102": "mov     r12d, eax",
                    "103": "test    eax, eax",
                    "104": "jnz     short INSTR133",
                    "105": "mov     rdi, [rbx+8]",
                    "106": "mov     rsi, offset aEj0; \"_EJ0\"",
                    "107": "call    acpi_has_method; PIC mode",
                    "108": "test    al, al",
                    "109": "jz      short INSTR116",
                    "110": "mov     rsi, offset dev_attr_eject",
                    "111": "mov     rdi, rbp",
                    "112": "call    device_create_file; PIC mode",
                    "113": "mov     r12d, eax",
                    "114": "test    eax, eax",
                    "115": "jnz     short INSTR133",
                    "116": "test    byte ptr [rbx+74h], 8",
                    "117": "jz      short INSTR130",
                    "118": "mov     rsi, offset dev_attr_power_state",
                    "119": "mov     rdi, rbp",
                    "120": "call    device_create_file; PIC mode",
                    "121": "mov     r12d, eax",
                    "122": "test    eax, eax",
                    "123": "jnz     short INSTR133",
                    "124": "test    byte ptr [rbx+0F4h], 2",
                    "125": "jz      short INSTR130",
                    "126": "mov     rsi, offset dev_attr_real_power_state",
                    "127": "mov     rdi, rbp",
                    "128": "call    device_create_file; PIC mode",
                    "129": "mov     r12d, eax",
                    "130": "lea     rsi, [rbx+208h]",
                    "131": "mov     rdi, rbp",
                    "132": "call    acpi_expose_nondev_subnodes",
                    "133": "mov     rax, [rsp+30h+var_20]",
                    "134": "sub     rax, gs:28h",
                    "135": "jz      short INSTR137",
                    "136": "call    __stack_chk_fail; PIC mode",
                    "137": "add     rsp, 18h",
                    "138": "mov     eax, r12d",
                    "139": "pop     rbx",
                    "140": "pop     rbp",
                    "141": "pop     r12",
                    "142": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-49868",
        "files": [
            {
                "filename": "relocation.btrfs_update_reloc_root.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "sub     esp, 24h",
                    "7": "mov     [ebp+var_14], eax",
                    "8": "mov     eax, [edx+1DCh]",
                    "9": "mov     [ebp+var_10], eax",
                    "10": "mov     eax, [edx+10h]",
                    "11": "test    ah, 4",
                    "12": "jnz     INSTR104",
                    "13": "mov     edi, [edx+0Ch]",
                    "14": "mov     ebx, edx",
                    "15": "test    edi, edi",
                    "16": "jz      INSTR104",
                    "17": "mov     esi, [edi+328h]",
                    "18": "lea     eax, [edi+14h]",
                    "19": "mov     [ebp+var_18], eax",
                    "20": "lea     ecx, [edi+328h]",
                    "21": "test    esi, esi",
                    "22": "jz      short INSTR29",
                    "23": "lea     edx, [esi+1]",
                    "24": "mov     eax, esi",
                    "25": "lock cmpxchg [ecx], edx",
                    "26": "jnz     INSTR171",
                    "27": "or      edx, esi",
                    "28": "js      INSTR167",
                    "29": "mov     eax, [ebp+var_10]",
                    "30": "mov     eax, [eax+458h]",
                    "31": "test    eax, eax",
                    "32": "jz      short INSTR43",
                    "33": "test    byte ptr [eax+525h], 2",
                    "34": "jz      short INSTR43",
                    "35": "mov     eax, [edi+0ECh]",
                    "36": "test    eax, eax",
                    "37": "jnz     short INSTR43",
                    "38": "lock or byte ptr [ebx+11h], 4",
                    "39": "mov     eax, edi",
                    "40": "call    __del_reloc_root",
                    "41": "lea     esi, [esi+0]",
                    "42": "xchg    ax, ax",
                    "43": "mov     eax, [edi]",
                    "44": "cmp     [edi+4], eax",
                    "45": "jz      INSTR87",
                    "46": "mov     eax, [edi+1DCh]",
                    "47": "mov     [ebp+var_2C], eax",
                    "48": "mov     ebx, [eax+458h]",
                    "49": "mov     [ebp+var_1C], ebx",
                    "50": "lea     eax, [ebx+4E8h]",
                    "51": "mov     [ebp+var_24], eax",
                    "52": "call    _raw_spin_lock",
                    "53": "mov     ebx, [ebx+4E4h]",
                    "54": "mov     eax, [edi+4]",
                    "55": "test    ebx, ebx",
                    "56": "mov     esi, [eax]",
                    "57": "mov     ecx, [eax+4]",
                    "58": "jz      short INSTR77",
                    "59": "mov     [ebp+var_20], edi",
                    "60": "jmp     short INSTR64",
                    "61": "mov     ebx, [ebx+8]",
                    "62": "test    ebx, ebx",
                    "63": "jz      short INSTR76",
                    "64": "mov     edx, [ebx+0Ch]",
                    "65": "mov     edi, ecx",
                    "66": "mov     eax, [ebx+10h]",
                    "67": "cmp     esi, edx",
                    "68": "sbb     edi, eax",
                    "69": "jb      short INSTR61",
                    "70": "cmp     edx, esi",
                    "71": "sbb     eax, ecx",
                    "72": "jnb     short INSTR112",
                    "73": "mov     ebx, [ebx+4]",
                    "74": "test    ebx, ebx",
                    "75": "jnz     short INSTR64",
                    "76": "mov     edi, [ebp+var_20]",
                    "77": "mov     eax, [ebp+var_1C]",
                    "78": "mov     byte ptr [eax+4E8h], 0",
                    "79": "mov     edx, [edi]",
                    "80": "mov     eax, [ebp+var_18]",
                    "81": "call    btrfs_set_root_node",
                    "82": "mov     eax, [edi+4]",
                    "83": "call    free_extent_buffer",
                    "84": "mov     eax, edi",
                    "85": "call    btrfs_root_node",
                    "86": "mov     [edi+4], eax",
                    "87": "mov     eax, [ebp+var_10]",
                    "88": "lea     ecx, [edi+1CBh]",
                    "89": "mov     edx, [eax+18h]",
                    "90": "mov     eax, [ebp+var_18]",
                    "91": "mov     [esp], eax",
                    "92": "mov     eax, [ebp+var_14]",
                    "93": "call    btrfs_update_root",
                    "94": "mov     ebx, eax",
                    "95": "mov     eax, edi",
                    "96": "call    btrfs_put_root",
                    "97": "mov     eax, ebx",
                    "98": "add     esp, 24h",
                    "99": "pop     ebx",
                    "100": "pop     esi",
                    "101": "pop     edi",
                    "102": "pop     ebp",
                    "103": "retn",
                    "104": "add     esp, 24h",
                    "105": "xor     ebx, ebx",
                    "106": "mov     eax, ebx",
                    "107": "pop     ebx",
                    "108": "pop     esi",
                    "109": "pop     edi",
                    "110": "pop     ebp",
                    "111": "retn",
                    "112": "mov     esi, [ebp+var_1C]",
                    "113": "mov     edi, [ebp+var_20]",
                    "114": "lea     eax, [esi+4E4h]",
                    "115": "mov     [ebp+var_20], eax",
                    "116": "mov     edx, eax",
                    "117": "mov     eax, ebx",
                    "118": "call    rb_erase",
                    "119": "mov     byte ptr [esi+4E8h], 0",
                    "120": "cmp     edi, [ebx+14h]",
                    "121": "jnz     INSTR173",
                    "122": "mov     eax, [ebp+var_24]",
                    "123": "call    _raw_spin_lock",
                    "124": "mov     eax, [edi]",
                    "125": "mov     ecx, [eax]",
                    "126": "mov     esi, [eax+4]",
                    "127": "mov     eax, [ebp+var_1C]",
                    "128": "mov     [ebx+0Ch], ecx",
                    "129": "mov     [ebx+10h], esi",
                    "130": "mov     eax, [eax+4E4h]",
                    "131": "test    eax, eax",
                    "132": "jz      INSTR174",
                    "133": "mov     [ebp+var_24], ebx",
                    "134": "mov     ebx, ecx",
                    "135": "mov     [ebp+var_28], edi",
                    "136": "jmp     short INSTR142",
                    "137": "mov     edx, [eax+8]",
                    "138": "lea     ecx, [eax+8]",
                    "139": "test    edx, edx",
                    "140": "jz      short INSTR155",
                    "141": "mov     eax, edx",
                    "142": "mov     ecx, [eax+0Ch]",
                    "143": "mov     edi, esi",
                    "144": "mov     edx, [eax+10h]",
                    "145": "cmp     ebx, ecx",
                    "146": "sbb     edi, edx",
                    "147": "jb      short INSTR137",
                    "148": "cmp     ecx, ebx",
                    "149": "sbb     edx, esi",
                    "150": "jnb     btrfs_update_reloc_root_cold",
                    "151": "mov     edx, [eax+4]",
                    "152": "lea     ecx, [eax+4]",
                    "153": "test    edx, edx",
                    "154": "jnz     short INSTR141",
                    "155": "mov     edi, [ebp+var_28]",
                    "156": "mov     ebx, [ebp+var_24]",
                    "157": "mov     [ebx], eax",
                    "158": "mov     edx, [ebp+var_20]",
                    "159": "mov     eax, ebx",
                    "160": "mov     dword ptr [ebx+4], 0",
                    "161": "mov     dword ptr [ebx+8], 0",
                    "162": "mov     [ecx], ebx",
                    "163": "call    rb_insert_color",
                    "164": "mov     eax, [ebp+var_1C]",
                    "165": "mov     byte ptr [eax+4E8h], 0",
                    "166": "jmp     INSTR79",
                    "167": "xor     edx, edx",
                    "168": "mov     eax, ecx",
                    "169": "call    refcount_warn_saturate",
                    "170": "jmp     INSTR29",
                    "171": "mov     esi, eax",
                    "172": "jmp     INSTR21",
                    "173": "ud2",
                    "174": "mov     ecx, [ebp+var_20]",
                    "175": "xor     eax, eax",
                    "176": "xchg    ax, ax",
                    "177": "jmp     short INSTR157"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_60]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#0x60+var_50]",
                    "5": "MOV             X19, X1",
                    "6": "STP             X21, X22, [SP,#0x60+var_40]",
                    "7": "LDR             X22, [X1,#0x1F0]",
                    "8": "DMB             ISHLD",
                    "9": "LDR             X1, [X1,#0x20]",
                    "10": "UBFX            W21, W1, #0xA, #1",
                    "11": "TST             W1, #0x400",
                    "12": "B.NE            loc_5674",
                    "13": "LDR             X20, [X19,#0x18]",
                    "14": "CBZ             X20, loc_565C",
                    "15": "STP             X23, X24, [SP,#0x60+var_30]",
                    "16": "ADD             X4, X20, #0x3E8",
                    "17": "MOV             X23, X0",
                    "18": "LDR             W1, [X20,#0x3E8]",
                    "19": "ADD             X24, X20, #0x28 ; '('",
                    "20": "CBZ             W1, loc_5490",
                    "21": "ADD             W2, W1, #1",
                    "22": "B               loc_5690",
                    "23": "B               loc_5690",
                    "24": "MOV             X0, X4",
                    "25": "MOV             W3, W1",
                    "26": "CAS             W3, W2, [X4]",
                    "27": "MOV             W0, W3",
                    "28": "CMP             W1, W0",
                    "29": "B.NE            loc_571C",
                    "30": "ORR             W1, W1, W2",
                    "31": "TBNZ            W1, #0x1F, loc_56D8",
                    "32": "LDR             X0, [X22,#0x6B8]",
                    "33": "CBZ             X0, loc_54E8",
                    "34": "LDRH            W0, [X0,#0x5F0]",
                    "35": "TBZ             W0, #9, loc_54E8",
                    "36": "LDR             W0, [X20,#0x100]",
                    "37": "CBNZ            W0, loc_54E8",
                    "38": "ADD             X0, X19, #0x20 ; ' '",
                    "39": "B               loc_54C0",
                    "40": "B               loc_54C0",
                    "41": "MOV             X1, #0x400",
                    "42": "STSET           X1, [X0]",
                    "43": "B               loc_54D8",
                    "44": "ADD             X2, X19, #0x20 ; ' '",
                    "45": "PRFM            #0x11, [X2]",
                    "46": "LDXR            X0, [X2]",
                    "47": "ORR             X0, X0, #0x400",
                    "48": "STXR            W1, X0, [X2]",
                    "49": "CBNZ            W1, loc_54C8",
                    "50": "DMB             ISHST",
                    "51": "MOV             X0, X20",
                    "52": "BL              __del_reloc_root",
                    "53": "NOP",
                    "54": "LDP             X0, X1, [X20]",
                    "55": "CMP             X1, X0",
                    "56": "B.EQ            loc_5638",
                    "57": "STP             X25, X26, [SP,#0x60+var_20]",
                    "58": "STR             X27, [SP,#0x60+var_10]",
                    "59": "LDR             X27, [X20,#0x1F0]",
                    "60": "LDR             X21, [X27,#0x6B8]",
                    "61": "ADD             X26, X21, #0x5A0",
                    "62": "B               loc_56B0",
                    "63": "B               loc_56B0",
                    "64": "MOV             W1, #0",
                    "65": "MOV             X0, X26",
                    "66": "MOV             W2, #1",
                    "67": "MOV             W4, W1",
                    "68": "CASA            W4, W2, [X26]",
                    "69": "MOV             W0, W4",
                    "70": "CBNZ            W0, loc_5728",
                    "71": "LDR             X0, [X20,#8]",
                    "72": "LDR             X19, [X21,#0x598]",
                    "73": "LDR             X2, [X0]",
                    "74": "CBZ             X19, loc_5550",
                    "75": "LDR             X1, [X19,#0x18]",
                    "76": "CMP             X2, X1",
                    "77": "B.CS            loc_56E8",
                    "78": "LDR             X19, [X19,#0x10]",
                    "79": "CBNZ            X19, loc_553C",
                    "80": "ADD             X1, X21, #0x5A0",
                    "81": "MOV             W0, #0",
                    "82": "STLRB           W0, [X1]",
                    "83": "B               loc_5610",
                    "84": "ADD             X25, X21, #0x598",
                    "85": "MOV             X0, X19",
                    "86": "MOV             X1, X25",
                    "87": "BL              rb_erase",
                    "88": "ADD             X1, X21, #0x5A0",
                    "89": "MOV             W0, #0",
                    "90": "STLRB           W0, [X1]",
                    "91": "LDR             X0, [X19,#0x20]",
                    "92": "CMP             X20, X0",
                    "93": "B.NE            loc_5738",
                    "94": "B               loc_56F4",
                    "95": "B               loc_56F4",
                    "96": "MOV             W1, #0",
                    "97": "MOV             X0, X26",
                    "98": "MOV             W2, #1",
                    "99": "ADD             X3, X21, #0x5A0",
                    "100": "MOV             W4, W1",
                    "101": "CASA            W4, W2, [X3]",
                    "102": "MOV             W0, W4",
                    "103": "CBNZ            W0, loc_573C",
                    "104": "LDR             X0, [X20]",
                    "105": "LDR             X5, [X0]",
                    "106": "STR             X5, [X19,#0x18]",
                    "107": "LDR             X1, [X21,#0x598]",
                    "108": "CBNZ            X1, loc_55CC",
                    "109": "B               loc_574C",
                    "110": "MOV             X1, X2",
                    "111": "LDR             X2, [X1,#0x18]",
                    "112": "ADD             X4, X1, #0x10",
                    "113": "CMP             X5, X2",
                    "114": "B.CC            loc_55E4",
                    "115": "B.LS            loc_5758",
                    "116": "ADD             X4, X1, #8",
                    "117": "LDR             X2, [X4]",
                    "118": "CBNZ            X2, loc_55C8",
                    "119": "STP             X1, XZR, [X19]",
                    "120": "MOV             X0, X19",
                    "121": "MOV             X1, X25",
                    "122": "STR             XZR, [X19,#0x10]",
                    "123": "STR             X19, [X4]",
                    "124": "BL              rb_insert_color",
                    "125": "MOV             W0, #0",
                    "126": "ADD             X1, X21, #0x5A0",
                    "127": "STLRB           W0, [X1]",
                    "128": "LDR             X1, [X20]",
                    "129": "MOV             X0, X24",
                    "130": "BL              btrfs_set_root_node",
                    "131": "LDR             X0, [X20,#8]",
                    "132": "BL              free_extent_buffer",
                    "133": "MOV             X0, X20",
                    "134": "BL              btrfs_root_node",
                    "135": "STR             X0, [X20,#8]",
                    "136": "LDP             X25, X26, [SP,#0x60+var_20]",
                    "137": "LDR             X27, [SP,#0x60+var_10]",
                    "138": "MOV             X3, X24",
                    "139": "LDR             X1, [X22,#0x20]",
                    "140": "ADD             X2, X20, #0x1DF",
                    "141": "MOV             X0, X23",
                    "142": "BL              btrfs_update_root",
                    "143": "MOV             W21, W0",
                    "144": "MOV             X0, X20",
                    "145": "BL              btrfs_put_root",
                    "146": "LDP             X23, X24, [SP,#0x60+var_30]",
                    "147": "MOV             W0, W21",
                    "148": "LDP             X19, X20, [SP,#0x60+var_50]",
                    "149": "LDP             X21, X22, [SP,#0x60+var_40]",
                    "150": "LDP             X29, X30, [SP+0x60+var_60],#0x60",
                    "151": "AUTIASP",
                    "152": "RET",
                    "153": "MOV             W21, #0",
                    "154": "MOV             W0, W21",
                    "155": "LDP             X19, X20, [SP,#0x60+var_50]",
                    "156": "LDP             X21, X22, [SP,#0x60+var_40]",
                    "157": "LDP             X29, X30, [SP+0x60+var_60],#0x60",
                    "158": "AUTIASP",
                    "159": "RET",
                    "160": "MOV             W3, W1",
                    "161": "PRFM            #0x11, [X4]",
                    "162": "LDXR            W0, [X4]",
                    "163": "EOR             W5, W0, W3",
                    "164": "CBNZ            W5, loc_56AC",
                    "165": "STXR            W5, W2, [X4]",
                    "166": "CBNZ            W5, loc_5698",
                    "167": "B               loc_5480",
                    "168": "ADD             X4, X21, #0x5A0",
                    "169": "MOV             X1, #0",
                    "170": "MOV             W2, #1",
                    "171": "PRFM            #0x11, [X4]",
                    "172": "LDAXR           W0, [X4]",
                    "173": "EOR             W3, W0, W1",
                    "174": "CBNZ            W3, loc_56D4",
                    "175": "STXR            W3, W2, [X4]",
                    "176": "CBNZ            W3, loc_56C0",
                    "177": "B               loc_5528",
                    "178": "MOV             X0, X4",
                    "179": "MOV             W1, #0",
                    "180": "BL              refcount_warn_saturate",
                    "181": "B               loc_5490",
                    "182": "B.LS            loc_5560",
                    "183": "LDR             X19, [X19,#8]",
                    "184": "B               loc_5538",
                    "185": "ADD             X4, X21, #0x5A0",
                    "186": "MOV             X1, #0",
                    "187": "MOV             W2, #1",
                    "188": "PRFM            #0x11, [X4]",
                    "189": "LDAXR           W0, [X4]",
                    "190": "EOR             W3, W0, W1",
                    "191": "CBNZ            W3, loc_5718",
                    "192": "STXR            W3, W2, [X4]",
                    "193": "CBNZ            W3, loc_5704",
                    "194": "B               loc_55AC",
                    "195": "MOV             W1, W0",
                    "196": "CBNZ            W1, loc_5464",
                    "197": "B               loc_5490",
                    "198": "MOV             W1, W0",
                    "199": "MOV             X0, X26",
                    "200": "BL              queued_spin_lock_slowpath",
                    "201": "B               loc_552C",
                    "202": "BRK             #0x800",
                    "203": "MOV             W1, W0",
                    "204": "MOV             X0, X26",
                    "205": "BL              queued_spin_lock_slowpath",
                    "206": "B               loc_55B0",
                    "207": "MOV             X4, X25",
                    "208": "MOV             X1, #0",
                    "209": "B               loc_55EC",
                    "210": "ADD             X1, X21, #0x5A0",
                    "211": "MOV             W0, #0",
                    "212": "STLRB           W0, [X1]",
                    "213": "LDR             X1, [X19,#0x18]",
                    "214": "MOV             X0, X27",
                    "215": "BL              btrfs_backref_panic.constprop.0"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 18h",
                    "8": "mov     r15, [rsi+1F0h]",
                    "9": "test    qword ptr [rsi+20h], 400h",
                    "10": "jnz     INSTR70",
                    "11": "mov     rbp, rsi",
                    "12": "mov     rbx, [rsi+18h]",
                    "13": "test    rbx, rbx",
                    "14": "jz      INSTR70",
                    "15": "mov     r14, rdi",
                    "16": "lea     rdi, [rbx+3E8h]",
                    "17": "mov     ecx, [rbx+3E8h]",
                    "18": "test    ecx, ecx",
                    "19": "jz      short INSTR27",
                    "20": "lea     edx, [rcx+1]",
                    "21": "mov     eax, ecx",
                    "22": "lock cmpxchg [rdi], edx",
                    "23": "jz      short INSTR28",
                    "24": "mov     ecx, eax",
                    "25": "test    eax, eax",
                    "26": "jnz     short INSTR20",
                    "27": "xor     ecx, ecx",
                    "28": "lea     eax, [rcx+1]",
                    "29": "or      eax, ecx",
                    "30": "js      INSTR140",
                    "31": "mov     rax, [r15+6B8h]",
                    "32": "test    rax, rax",
                    "33": "jz      short INSTR41",
                    "34": "test    byte ptr [rax+5F1h], 2",
                    "35": "jz      short INSTR41",
                    "36": "cmp     dword ptr [rbx+100h], 0",
                    "37": "jnz     short INSTR41",
                    "38": "lock or byte ptr [rbp+21h], 4",
                    "39": "mov     rdi, rbx",
                    "40": "call    __del_reloc_root",
                    "41": "lea     rbp, [rbx+28h]",
                    "42": "mov     rax, [rbx+8]",
                    "43": "cmp     rax, [rbx]",
                    "44": "jz      INSTR113",
                    "45": "mov     [rsp+48h+var_38], rbp",
                    "46": "mov     rax, [rbx+1F0h]",
                    "47": "mov     [rsp+48h+var_40], rax",
                    "48": "mov     rbp, [rax+6B8h]",
                    "49": "lea     rax, [rbp+598h]",
                    "50": "mov     [rsp+48h+var_48], rax",
                    "51": "lea     r13, [rbp+5A0h]",
                    "52": "mov     rdi, r13",
                    "53": "call    _raw_spin_lock; PIC mode",
                    "54": "mov     r12, [rbp+598h]",
                    "55": "test    r12, r12",
                    "56": "jz      short INSTR72",
                    "57": "mov     rax, [rbx+8]",
                    "58": "mov     rax, [rax]",
                    "59": "xor     ebp, ebp",
                    "60": "jmp     short INSTR65",
                    "61": "add     r12, 10h",
                    "62": "mov     r12, [r12]",
                    "63": "test    r12, r12",
                    "64": "jz      short INSTR78",
                    "65": "cmp     [r12+18h], rax",
                    "66": "ja      short INSTR61",
                    "67": "jnb     short INSTR74",
                    "68": "add     r12, 8",
                    "69": "jmp     short INSTR62",
                    "70": "xor     eax, eax",
                    "71": "jmp     INSTR122",
                    "72": "xor     ebp, ebp",
                    "73": "jmp     short INSTR78",
                    "74": "mov     rdi, r12",
                    "75": "mov     rsi, [rsp+48h+var_48]",
                    "76": "call    rb_erase; PIC mode",
                    "77": "mov     rbp, r12",
                    "78": "mov     byte ptr [r13+0], 0",
                    "79": "test    rbp, rbp",
                    "80": "jz      short INSTR104",
                    "81": "cmp     [rbp+20h], rbx",
                    "82": "jnz     INSTR143",
                    "83": "mov     rdi, r13",
                    "84": "call    _raw_spin_lock; PIC mode",
                    "85": "mov     rax, [rbx]",
                    "86": "mov     rcx, [rax]",
                    "87": "mov     [rbp+18h], rcx",
                    "88": "mov     rsi, [rsp+48h+var_48]",
                    "89": "mov     rdi, [rsi]",
                    "90": "test    rdi, rdi",
                    "91": "jnz     INSTR134",
                    "92": "xor     eax, eax",
                    "93": "mov     rdx, rsi",
                    "94": "mov     [rbp+0], rax",
                    "95": "mov     qword ptr [rbp+8], 0",
                    "96": "mov     qword ptr [rbp+10h], 0",
                    "97": "mov     [rdx], rbp",
                    "98": "mov     rdi, rbp",
                    "99": "call    rb_insert_color; PIC mode",
                    "100": "xor     eax, eax",
                    "101": "mov     byte ptr [r13+0], 0",
                    "102": "test    rax, rax",
                    "103": "jnz     INSTR144",
                    "104": "mov     rsi, [rbx]",
                    "105": "mov     rbp, [rsp+48h+var_38]",
                    "106": "mov     rdi, rbp",
                    "107": "call    btrfs_set_root_node; PIC mode",
                    "108": "mov     rdi, [rbx+8]",
                    "109": "call    free_extent_buffer; PIC mode",
                    "110": "mov     rdi, rbx",
                    "111": "call    btrfs_root_node; PIC mode",
                    "112": "mov     [rbx+8], rax",
                    "113": "mov     rsi, [r15+20h]",
                    "114": "lea     rdx, [rbx+1DFh]",
                    "115": "mov     rdi, r14",
                    "116": "mov     rcx, rbp",
                    "117": "call    btrfs_update_root; PIC mode",
                    "118": "mov     ebp, eax",
                    "119": "mov     rdi, rbx",
                    "120": "call    btrfs_put_root; PIC mode",
                    "121": "mov     eax, ebp",
                    "122": "add     rsp, 18h",
                    "123": "pop     rbx",
                    "124": "pop     r12",
                    "125": "pop     r13",
                    "126": "pop     r14",
                    "127": "pop     r15",
                    "128": "pop     rbp",
                    "129": "retn",
                    "130": "lea     rdx, [rax+10h]",
                    "131": "mov     rdi, [rdx]",
                    "132": "test    rdi, rdi",
                    "133": "jz      INSTR94",
                    "134": "mov     rax, rdi",
                    "135": "cmp     [rdi+18h], rcx",
                    "136": "ja      short INSTR130",
                    "137": "jnb     short INSTR101",
                    "138": "lea     rdx, [rax+8]",
                    "139": "jmp     short INSTR131",
                    "140": "xor     esi, esi",
                    "141": "call    refcount_warn_saturate; PIC mode",
                    "142": "jmp     INSTR31",
                    "143": "ud2",
                    "144": "mov     r9, [rbp+18h]",
                    "145": "mov     rdi, [rsp+48h+var_40]",
                    "146": "mov     rsi, offset aBtrfsBackrefPa; \"btrfs_backref_panic\"",
                    "147": "mov     edx, 16Dh",
                    "148": "mov     ecx, 0FFFFFFEFh",
                    "149": "mov     r8, offset aInconsistencyI; \"Inconsistency in backref cache found at\"...",
                    "150": "call    __btrfs_panic; PIC mode",
                    "151": "ud2"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "sub     rsp, 18h",
                    "8": "mov     rbx, [rsi+1F0h]",
                    "9": "mov     rax, [rsi+20h]",
                    "10": "test    ah, 4",
                    "11": "jnz     INSTR102",
                    "12": "mov     r15, [rsi+18h]",
                    "13": "mov     rbp, rsi",
                    "14": "test    r15, r15",
                    "15": "jz      INSTR102",
                    "16": "mov     edx, [r15+3E8h]",
                    "17": "mov     r12, rdi",
                    "18": "lea     r13, [r15+28h]",
                    "19": "lea     rdi, [r15+3E8h]",
                    "20": "test    edx, edx",
                    "21": "jz      short INSTR28",
                    "22": "lea     ecx, [rdx+1]",
                    "23": "mov     eax, edx",
                    "24": "lock cmpxchg [rdi], ecx",
                    "25": "jnz     INSTR136",
                    "26": "or      edx, ecx",
                    "27": "js      INSTR133",
                    "28": "mov     rax, [rbx+6B8h]",
                    "29": "test    rax, rax",
                    "30": "jz      short INSTR39",
                    "31": "test    byte ptr [rax+5F1h], 2",
                    "32": "jz      short INSTR39",
                    "33": "mov     eax, [r15+100h]",
                    "34": "test    eax, eax",
                    "35": "jnz     short INSTR39",
                    "36": "lock or byte ptr [rbp+21h], 4",
                    "37": "mov     rdi, r15",
                    "38": "call    __del_reloc_root",
                    "39": "mov     rax, [r15]",
                    "40": "cmp     [r15+8], rax",
                    "41": "jz      INSTR85",
                    "42": "mov     rax, [r15+1F0h]",
                    "43": "mov     r14, [rax+6B8h]",
                    "44": "mov     [rsp+48h+var_38], rax",
                    "45": "lea     r10, [r14+5A0h]",
                    "46": "mov     rdi, r10",
                    "47": "mov     [rsp+48h+var_48], r10",
                    "48": "call    _raw_spin_lock; PIC mode",
                    "49": "mov     rbp, [r14+598h]",
                    "50": "mov     rax, [r15+8]",
                    "51": "mov     r10, [rsp+48h+var_48]",
                    "52": "test    rbp, rbp",
                    "53": "mov     rax, [rax]",
                    "54": "jnz     short INSTR59",
                    "55": "jmp     short INSTR65",
                    "56": "mov     rbp, [rbp+10h]",
                    "57": "test    rbp, rbp",
                    "58": "jz      short INSTR65",
                    "59": "cmp     rax, [rbp+18h]",
                    "60": "jb      short INSTR56",
                    "61": "jbe     INSTR104",
                    "62": "mov     rbp, [rbp+8]",
                    "63": "test    rbp, rbp",
                    "64": "jnz     short INSTR59",
                    "65": "mov     byte ptr [r14+5A0h], 0",
                    "66": "jmp     short INSTR77",
                    "67": "mov     rcx, [rsp+48h+var_40]",
                    "68": "xor     eax, eax",
                    "69": "mov     [rbp+0], rax",
                    "70": "mov     rsi, [rsp+48h+var_40]",
                    "71": "mov     rdi, rbp",
                    "72": "mov     qword ptr [rbp+8], 0",
                    "73": "mov     qword ptr [rbp+10h], 0",
                    "74": "mov     [rcx], rbp",
                    "75": "call    rb_insert_color; PIC mode",
                    "76": "mov     byte ptr [r14+5A0h], 0",
                    "77": "mov     rsi, [r15]",
                    "78": "mov     rdi, r13",
                    "79": "call    btrfs_set_root_node; PIC mode",
                    "80": "mov     rdi, [r15+8]",
                    "81": "call    free_extent_buffer; PIC mode",
                    "82": "mov     rdi, r15",
                    "83": "call    btrfs_root_node; PIC mode",
                    "84": "mov     [r15+8], rax",
                    "85": "mov     rsi, [rbx+20h]",
                    "86": "mov     rdi, r12",
                    "87": "lea     rdx, [r15+1DFh]",
                    "88": "mov     rcx, r13",
                    "89": "call    btrfs_update_root; PIC mode",
                    "90": "mov     rdi, r15",
                    "91": "mov     r12d, eax",
                    "92": "call    btrfs_put_root; PIC mode",
                    "93": "add     rsp, 18h",
                    "94": "mov     eax, r12d",
                    "95": "pop     rbx",
                    "96": "pop     rbp",
                    "97": "pop     r12",
                    "98": "pop     r13",
                    "99": "pop     r14",
                    "100": "pop     r15",
                    "101": "jmp     __x86_return_thunk; PIC mode",
                    "102": "xor     r12d, r12d",
                    "103": "jmp     short INSTR93",
                    "104": "lea     rax, [r14+598h]",
                    "105": "mov     rdi, rbp",
                    "106": "mov     [rsp+48h+var_48], r10",
                    "107": "mov     rsi, rax",
                    "108": "mov     [rsp+48h+var_40], rax",
                    "109": "call    rb_erase; PIC mode",
                    "110": "mov     byte ptr [r14+5A0h], 0",
                    "111": "cmp     r15, [rbp+20h]",
                    "112": "mov     r10, [rsp+48h+var_48]",
                    "113": "jnz     short INSTR138",
                    "114": "mov     rdi, r10",
                    "115": "call    _raw_spin_lock; PIC mode",
                    "116": "mov     rax, [r15]",
                    "117": "mov     rsi, [rax]",
                    "118": "mov     [rbp+18h], rsi",
                    "119": "mov     rax, [r14+598h]",
                    "120": "test    rax, rax",
                    "121": "jnz     short INSTR128",
                    "122": "jmp     INSTR67",
                    "123": "lea     rcx, [rax+10h]",
                    "124": "mov     rdx, [rcx]",
                    "125": "test    rdx, rdx",
                    "126": "jz      INSTR69",
                    "127": "mov     rax, rdx",
                    "128": "cmp     rsi, [rax+18h]",
                    "129": "jb      short INSTR123",
                    "130": "jbe     btrfs_update_reloc_root_cold",
                    "131": "lea     rcx, [rax+8]",
                    "132": "jmp     short INSTR124",
                    "133": "xor     esi, esi",
                    "134": "call    refcount_warn_saturate; PIC mode",
                    "135": "jmp     INSTR28",
                    "136": "mov     edx, eax",
                    "137": "jmp     INSTR20",
                    "138": "ud2"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "xor     r13d, r13d",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "sub     rsp, 10h",
                    "9": "mov     rax, [rsi+1F0h]",
                    "10": "mov     [rsp+40h+var_38], rdi",
                    "11": "mov     rdi, rsi",
                    "12": "mov     [rsp+40h+var_40], rax",
                    "13": "call    have_reloc_root",
                    "14": "test    al, al",
                    "15": "jz      INSTR89",
                    "16": "mov     rbp, [rsi+18h]",
                    "17": "mov     r12, rsi",
                    "18": "mov     rdi, rbp",
                    "19": "lea     r13, [rbp+28h]",
                    "20": "call    btrfs_grab_root",
                    "21": "mov     rax, [rsp+40h+var_40]",
                    "22": "mov     rax, [rax+6B8h]",
                    "23": "test    rax, rax",
                    "24": "jz      short INSTR32",
                    "25": "test    byte ptr [rax+5F1h], 2",
                    "26": "jz      short INSTR32",
                    "27": "cmp     dword ptr [rbp+100h], 0",
                    "28": "jnz     short INSTR32",
                    "29": "lock or byte ptr [r12+21h], 4",
                    "30": "mov     rdi, rbp",
                    "31": "call    __del_reloc_root",
                    "32": "mov     rax, [rbp+0]",
                    "33": "cmp     [rbp+8], rax",
                    "34": "jz      INSTR80",
                    "35": "mov     r14, [rbp+1F0h]",
                    "36": "mov     rbx, [r14+6B8h]",
                    "37": "lea     r12, [rbx+5A0h]",
                    "38": "lea     r15, [rbx+598h]",
                    "39": "mov     rdi, r12",
                    "40": "call    _raw_spin_lock; PIC mode",
                    "41": "mov     rdx, [rbp+8]",
                    "42": "mov     rdi, [rbx+598h]",
                    "43": "mov     rsi, [rdx]",
                    "44": "call    rb_simple_search_isra_0",
                    "45": "mov     rbx, rax",
                    "46": "test    rax, rax",
                    "47": "jz      short INSTR51",
                    "48": "mov     rsi, r15",
                    "49": "mov     rdi, rax",
                    "50": "call    rb_erase; PIC mode",
                    "51": "mov     rdi, r12",
                    "52": "call    __raw_write_unlock",
                    "53": "test    rbx, rbx",
                    "54": "jz      short INSTR72",
                    "55": "cmp     rbp, [rbx+20h]",
                    "56": "jz      short INSTR58",
                    "57": "ud2",
                    "58": "call    _raw_spin_lock; PIC mode",
                    "59": "mov     rax, [rbp+0]",
                    "60": "mov     rdi, r15",
                    "61": "mov     rdx, rbx",
                    "62": "mov     rsi, [rax]",
                    "63": "mov     [rbx+18h], rsi",
                    "64": "call    rb_simple_insert",
                    "65": "mov     rdi, r12",
                    "66": "call    __raw_write_unlock",
                    "67": "test    rax, rax",
                    "68": "jz      short INSTR72",
                    "69": "mov     rsi, [rbx+18h]",
                    "70": "mov     rdi, r14",
                    "71": "call    btrfs_backref_panic_constprop_0",
                    "72": "mov     rsi, [rbp+0]",
                    "73": "mov     rdi, r13",
                    "74": "call    btrfs_set_root_node; PIC mode",
                    "75": "mov     rdi, [rbp+8]",
                    "76": "call    free_extent_buffer; PIC mode",
                    "77": "mov     rdi, rbp",
                    "78": "call    btrfs_root_node; PIC mode",
                    "79": "mov     [rbp+8], rax",
                    "80": "mov     rax, [rsp+40h+var_40]",
                    "81": "mov     rdi, [rsp+40h+var_38]",
                    "82": "mov     rcx, r13",
                    "83": "lea     rdx, [rbp+1DFh]",
                    "84": "mov     rsi, [rax+20h]",
                    "85": "call    btrfs_update_root; PIC mode",
                    "86": "mov     rdi, rbp",
                    "87": "mov     r13d, eax",
                    "88": "call    btrfs_put_root; PIC mode",
                    "89": "add     rsp, 10h",
                    "90": "mov     eax, r13d",
                    "91": "pop     rbx",
                    "92": "pop     rbp",
                    "93": "pop     r12",
                    "94": "pop     r13",
                    "95": "pop     r14",
                    "96": "pop     r15",
                    "97": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "sub     esp, 24h",
                    "7": "mov     [ebp+var_14], eax",
                    "8": "mov     eax, [edx+1DCh]",
                    "9": "mov     [ebp+var_10], eax",
                    "10": "mov     eax, [edx+10h]",
                    "11": "test    ah, 4",
                    "12": "jnz     INSTR97",
                    "13": "mov     edi, [edx+0Ch]",
                    "14": "mov     ebx, edx",
                    "15": "test    edi, edi",
                    "16": "jz      INSTR97",
                    "17": "mov     esi, [edi+328h]",
                    "18": "lea     eax, [edi+14h]",
                    "19": "mov     [ebp+var_18], eax",
                    "20": "lea     ecx, [edi+328h]",
                    "21": "test    esi, esi",
                    "22": "jz      short INSTR29",
                    "23": "lea     edx, [esi+1]",
                    "24": "mov     eax, esi",
                    "25": "lock cmpxchg [ecx], edx",
                    "26": "jnz     INSTR168",
                    "27": "or      edx, esi",
                    "28": "js      INSTR164",
                    "29": "mov     eax, [ebp+var_10]",
                    "30": "mov     eax, [eax+458h]",
                    "31": "test    byte ptr [eax+525h], 2",
                    "32": "jz      short INSTR36",
                    "33": "mov     eax, [edi+0ECh]",
                    "34": "test    eax, eax",
                    "35": "jz      INSTR160",
                    "36": "mov     eax, [edi]",
                    "37": "cmp     [edi+4], eax",
                    "38": "jz      INSTR80",
                    "39": "mov     eax, [edi+1DCh]",
                    "40": "mov     [ebp+var_2C], eax",
                    "41": "mov     ebx, [eax+458h]",
                    "42": "mov     [ebp+var_1C], ebx",
                    "43": "lea     eax, [ebx+4E8h]",
                    "44": "mov     [ebp+var_24], eax",
                    "45": "call    _raw_spin_lock",
                    "46": "mov     ebx, [ebx+4E4h]",
                    "47": "mov     eax, [edi+4]",
                    "48": "test    ebx, ebx",
                    "49": "mov     esi, [eax]",
                    "50": "mov     ecx, [eax+4]",
                    "51": "jz      short INSTR70",
                    "52": "mov     [ebp+var_20], edi",
                    "53": "jmp     short INSTR57",
                    "54": "mov     ebx, [ebx+8]",
                    "55": "test    ebx, ebx",
                    "56": "jz      short INSTR69",
                    "57": "mov     edx, [ebx+0Ch]",
                    "58": "mov     edi, ecx",
                    "59": "mov     eax, [ebx+10h]",
                    "60": "cmp     esi, edx",
                    "61": "sbb     edi, eax",
                    "62": "jb      short INSTR54",
                    "63": "cmp     edx, esi",
                    "64": "sbb     eax, ecx",
                    "65": "jnb     short INSTR105",
                    "66": "mov     ebx, [ebx+4]",
                    "67": "test    ebx, ebx",
                    "68": "jnz     short INSTR57",
                    "69": "mov     edi, [ebp+var_20]",
                    "70": "mov     eax, [ebp+var_1C]",
                    "71": "mov     byte ptr [eax+4E8h], 0",
                    "72": "mov     edx, [edi]",
                    "73": "mov     eax, [ebp+var_18]",
                    "74": "call    btrfs_set_root_node",
                    "75": "mov     eax, [edi+4]",
                    "76": "call    free_extent_buffer",
                    "77": "mov     eax, edi",
                    "78": "call    btrfs_root_node",
                    "79": "mov     [edi+4], eax",
                    "80": "mov     eax, [ebp+var_10]",
                    "81": "lea     ecx, [edi+1CBh]",
                    "82": "mov     edx, [eax+18h]",
                    "83": "mov     eax, [ebp+var_18]",
                    "84": "mov     [esp], eax",
                    "85": "mov     eax, [ebp+var_14]",
                    "86": "call    btrfs_update_root",
                    "87": "mov     ebx, eax",
                    "88": "mov     eax, edi",
                    "89": "call    btrfs_put_root",
                    "90": "mov     eax, ebx",
                    "91": "add     esp, 24h",
                    "92": "pop     ebx",
                    "93": "pop     esi",
                    "94": "pop     edi",
                    "95": "pop     ebp",
                    "96": "retn",
                    "97": "add     esp, 24h",
                    "98": "xor     ebx, ebx",
                    "99": "mov     eax, ebx",
                    "100": "pop     ebx",
                    "101": "pop     esi",
                    "102": "pop     edi",
                    "103": "pop     ebp",
                    "104": "retn",
                    "105": "mov     esi, [ebp+var_1C]",
                    "106": "mov     edi, [ebp+var_20]",
                    "107": "lea     eax, [esi+4E4h]",
                    "108": "mov     [ebp+var_20], eax",
                    "109": "mov     edx, eax",
                    "110": "mov     eax, ebx",
                    "111": "call    rb_erase",
                    "112": "mov     byte ptr [esi+4E8h], 0",
                    "113": "cmp     edi, [ebx+14h]",
                    "114": "jnz     INSTR170",
                    "115": "mov     eax, [ebp+var_24]",
                    "116": "call    _raw_spin_lock",
                    "117": "mov     eax, [edi]",
                    "118": "mov     ecx, [eax]",
                    "119": "mov     esi, [eax+4]",
                    "120": "mov     eax, [ebp+var_1C]",
                    "121": "mov     [ebx+0Ch], ecx",
                    "122": "mov     [ebx+10h], esi",
                    "123": "mov     eax, [eax+4E4h]",
                    "124": "test    eax, eax",
                    "125": "jz      INSTR171",
                    "126": "mov     [ebp+var_24], ebx",
                    "127": "mov     ebx, ecx",
                    "128": "mov     [ebp+var_28], edi",
                    "129": "jmp     short INSTR135",
                    "130": "mov     edx, [eax+8]",
                    "131": "lea     ecx, [eax+8]",
                    "132": "test    edx, edx",
                    "133": "jz      short INSTR148",
                    "134": "mov     eax, edx",
                    "135": "mov     ecx, [eax+0Ch]",
                    "136": "mov     edi, esi",
                    "137": "mov     edx, [eax+10h]",
                    "138": "cmp     ebx, ecx",
                    "139": "sbb     edi, edx",
                    "140": "jb      short INSTR130",
                    "141": "cmp     ecx, ebx",
                    "142": "sbb     edx, esi",
                    "143": "jnb     btrfs_update_reloc_root_cold",
                    "144": "mov     edx, [eax+4]",
                    "145": "lea     ecx, [eax+4]",
                    "146": "test    edx, edx",
                    "147": "jnz     short INSTR134",
                    "148": "mov     edi, [ebp+var_28]",
                    "149": "mov     ebx, [ebp+var_24]",
                    "150": "mov     [ebx], eax",
                    "151": "mov     edx, [ebp+var_20]",
                    "152": "mov     eax, ebx",
                    "153": "mov     dword ptr [ebx+4], 0",
                    "154": "mov     dword ptr [ebx+8], 0",
                    "155": "mov     [ecx], ebx",
                    "156": "call    rb_insert_color",
                    "157": "mov     eax, [ebp+var_1C]",
                    "158": "mov     byte ptr [eax+4E8h], 0",
                    "159": "jmp     INSTR72",
                    "160": "lock or byte ptr [ebx+11h], 4",
                    "161": "mov     eax, edi",
                    "162": "call    __del_reloc_root",
                    "163": "jmp     INSTR36",
                    "164": "xor     edx, edx",
                    "165": "mov     eax, ecx",
                    "166": "call    refcount_warn_saturate",
                    "167": "jmp     INSTR29",
                    "168": "mov     esi, eax",
                    "169": "jmp     INSTR21",
                    "170": "ud2",
                    "171": "mov     ecx, [ebp+var_20]",
                    "172": "xor     eax, eax",
                    "173": "xchg    ax, ax",
                    "174": "jmp     short INSTR150"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_60]!",
                    "3": "MOV             X29, SP",
                    "4": "STP             X19, X20, [SP,#0x60+var_50]",
                    "5": "MOV             X19, X1",
                    "6": "STP             X21, X22, [SP,#0x60+var_40]",
                    "7": "LDR             X22, [X1,#0x1F0]",
                    "8": "DMB             ISHLD",
                    "9": "LDR             X1, [X1,#0x20]",
                    "10": "UBFX            W21, W1, #0xA, #1",
                    "11": "TST             W1, #0x400",
                    "12": "B.NE            loc_5634",
                    "13": "LDR             X20, [X19,#0x18]",
                    "14": "CBZ             X20, loc_561C",
                    "15": "STP             X23, X24, [SP,#0x60+var_30]",
                    "16": "ADD             X4, X20, #0x3E8",
                    "17": "MOV             X23, X0",
                    "18": "LDR             W1, [X20,#0x3E8]",
                    "19": "ADD             X24, X20, #0x28 ; '('",
                    "20": "CBZ             W1, loc_5490",
                    "21": "ADD             W2, W1, #1",
                    "22": "B               loc_5650",
                    "23": "B               loc_5650",
                    "24": "MOV             X0, X4",
                    "25": "MOV             W3, W1",
                    "26": "CAS             W3, W2, [X4]",
                    "27": "MOV             W0, W3",
                    "28": "CMP             W1, W0",
                    "29": "B.NE            loc_571C",
                    "30": "ORR             W1, W1, W2",
                    "31": "TBNZ            W1, #0x1F, loc_56B0",
                    "32": "LDR             X0, [X22,#0x6B8]",
                    "33": "LDRH            W0, [X0,#0x5F0]",
                    "34": "TBZ             W0, #9, loc_54A4",
                    "35": "LDR             W0, [X20,#0x100]",
                    "36": "CBZ             W0, loc_5698",
                    "37": "LDP             X0, X1, [X20]",
                    "38": "CMP             X1, X0",
                    "39": "B.EQ            loc_55F8",
                    "40": "STP             X25, X26, [SP,#0x60+var_20]",
                    "41": "STR             X27, [SP,#0x60+var_10]",
                    "42": "LDR             X27, [X20,#0x1F0]",
                    "43": "LDR             X21, [X27,#0x6B8]",
                    "44": "ADD             X26, X21, #0x5A0",
                    "45": "B               loc_5670",
                    "46": "B               loc_5670",
                    "47": "MOV             W1, #0",
                    "48": "MOV             X0, X26",
                    "49": "MOV             W2, #1",
                    "50": "MOV             W4, W1",
                    "51": "CASA            W4, W2, [X26]",
                    "52": "MOV             W0, W4",
                    "53": "CBNZ            W0, loc_5728",
                    "54": "LDR             X0, [X20,#8]",
                    "55": "LDR             X19, [X21,#0x598]",
                    "56": "LDR             X2, [X0]",
                    "57": "NOP",
                    "58": "CBZ             X19, loc_5510",
                    "59": "LDR             X1, [X19,#0x18]",
                    "60": "CMP             X2, X1",
                    "61": "B.CS            loc_56C0",
                    "62": "LDR             X19, [X19,#0x10]",
                    "63": "CBNZ            X19, loc_54FC",
                    "64": "ADD             X1, X21, #0x5A0",
                    "65": "MOV             W0, #0",
                    "66": "STLRB           W0, [X1]",
                    "67": "B               loc_55D0",
                    "68": "ADD             X25, X21, #0x598",
                    "69": "MOV             X0, X19",
                    "70": "MOV             X1, X25",
                    "71": "BL              rb_erase",
                    "72": "ADD             X1, X21, #0x5A0",
                    "73": "MOV             W0, #0",
                    "74": "STLRB           W0, [X1]",
                    "75": "LDR             X0, [X19,#0x20]",
                    "76": "CMP             X20, X0",
                    "77": "B.NE            loc_5738",
                    "78": "B               loc_56CC",
                    "79": "B               loc_56CC",
                    "80": "MOV             W1, #0",
                    "81": "MOV             X0, X26",
                    "82": "MOV             W2, #1",
                    "83": "ADD             X3, X21, #0x5A0",
                    "84": "MOV             W4, W1",
                    "85": "CASA            W4, W2, [X3]",
                    "86": "MOV             W0, W4",
                    "87": "CBNZ            W0, loc_573C",
                    "88": "LDR             X0, [X20]",
                    "89": "LDR             X5, [X0]",
                    "90": "STR             X5, [X19,#0x18]",
                    "91": "LDR             X1, [X21,#0x598]",
                    "92": "CBNZ            X1, loc_558C",
                    "93": "B               loc_574C",
                    "94": "MOV             X1, X2",
                    "95": "LDR             X2, [X1,#0x18]",
                    "96": "ADD             X4, X1, #0x10",
                    "97": "CMP             X5, X2",
                    "98": "B.CC            loc_55A4",
                    "99": "B.LS            loc_5758",
                    "100": "ADD             X4, X1, #8",
                    "101": "LDR             X2, [X4]",
                    "102": "CBNZ            X2, loc_5588",
                    "103": "STP             X1, XZR, [X19]",
                    "104": "MOV             X0, X19",
                    "105": "MOV             X1, X25",
                    "106": "STR             XZR, [X19,#0x10]",
                    "107": "STR             X19, [X4]",
                    "108": "BL              rb_insert_color",
                    "109": "MOV             W0, #0",
                    "110": "ADD             X1, X21, #0x5A0",
                    "111": "STLRB           W0, [X1]",
                    "112": "LDR             X1, [X20]",
                    "113": "MOV             X0, X24",
                    "114": "BL              btrfs_set_root_node",
                    "115": "LDR             X0, [X20,#8]",
                    "116": "BL              free_extent_buffer",
                    "117": "MOV             X0, X20",
                    "118": "BL              btrfs_root_node",
                    "119": "STR             X0, [X20,#8]",
                    "120": "LDP             X25, X26, [SP,#0x60+var_20]",
                    "121": "LDR             X27, [SP,#0x60+var_10]",
                    "122": "MOV             X3, X24",
                    "123": "LDR             X1, [X22,#0x20]",
                    "124": "ADD             X2, X20, #0x1DF",
                    "125": "MOV             X0, X23",
                    "126": "BL              btrfs_update_root",
                    "127": "MOV             W21, W0",
                    "128": "MOV             X0, X20",
                    "129": "BL              btrfs_put_root",
                    "130": "LDP             X23, X24, [SP,#0x60+var_30]",
                    "131": "MOV             W0, W21",
                    "132": "LDP             X19, X20, [SP,#0x60+var_50]",
                    "133": "LDP             X21, X22, [SP,#0x60+var_40]",
                    "134": "LDP             X29, X30, [SP+0x60+var_60],#0x60",
                    "135": "AUTIASP",
                    "136": "RET",
                    "137": "MOV             W21, #0",
                    "138": "MOV             W0, W21",
                    "139": "LDP             X19, X20, [SP,#0x60+var_50]",
                    "140": "LDP             X21, X22, [SP,#0x60+var_40]",
                    "141": "LDP             X29, X30, [SP+0x60+var_60],#0x60",
                    "142": "AUTIASP",
                    "143": "RET",
                    "144": "MOV             W3, W1",
                    "145": "PRFM            #0x11, [X4]",
                    "146": "LDXR            W0, [X4]",
                    "147": "EOR             W5, W0, W3",
                    "148": "CBNZ            W5, loc_566C",
                    "149": "STXR            W5, W2, [X4]",
                    "150": "CBNZ            W5, loc_5658",
                    "151": "B               loc_5480",
                    "152": "ADD             X4, X21, #0x5A0",
                    "153": "MOV             X1, #0",
                    "154": "MOV             W2, #1",
                    "155": "PRFM            #0x11, [X4]",
                    "156": "LDAXR           W0, [X4]",
                    "157": "EOR             W3, W0, W1",
                    "158": "CBNZ            W3, loc_5694",
                    "159": "STXR            W3, W2, [X4]",
                    "160": "CBNZ            W3, loc_5680",
                    "161": "B               loc_54E4",
                    "162": "ADD             X0, X19, #0x20 ; ' '",
                    "163": "B               loc_56F4",
                    "164": "B               loc_56F4",
                    "165": "MOV             X1, #0x400",
                    "166": "STSET           X1, [X0]",
                    "167": "B               loc_570C",
                    "168": "MOV             X0, X4",
                    "169": "MOV             W1, #0",
                    "170": "BL              refcount_warn_saturate",
                    "171": "B               loc_5490",
                    "172": "B.LS            loc_5520",
                    "173": "LDR             X19, [X19,#8]",
                    "174": "B               loc_54F8",
                    "175": "ADD             X4, X21, #0x5A0",
                    "176": "MOV             X1, #0",
                    "177": "MOV             W2, #1",
                    "178": "PRFM            #0x11, [X4]",
                    "179": "LDAXR           W0, [X4]",
                    "180": "EOR             W3, W0, W1",
                    "181": "CBNZ            W3, loc_56F0",
                    "182": "STXR            W3, W2, [X4]",
                    "183": "CBNZ            W3, loc_56DC",
                    "184": "B               loc_556C",
                    "185": "ADD             X2, X19, #0x20 ; ' '",
                    "186": "PRFM            #0x11, [X2]",
                    "187": "LDXR            X0, [X2]",
                    "188": "ORR             X0, X0, #0x400",
                    "189": "STXR            W1, X0, [X2]",
                    "190": "CBNZ            W1, loc_56FC",
                    "191": "DMB             ISHST",
                    "192": "MOV             X0, X20",
                    "193": "BL              __del_reloc_root",
                    "194": "B               loc_54A4",
                    "195": "MOV             W1, W0",
                    "196": "CBNZ            W1, loc_5464",
                    "197": "B               loc_5490",
                    "198": "MOV             W1, W0",
                    "199": "MOV             X0, X26",
                    "200": "BL              queued_spin_lock_slowpath",
                    "201": "B               loc_54E8",
                    "202": "BRK             #0x800",
                    "203": "MOV             W1, W0",
                    "204": "MOV             X0, X26",
                    "205": "BL              queued_spin_lock_slowpath",
                    "206": "B               loc_5570",
                    "207": "MOV             X4, X25",
                    "208": "MOV             X1, #0",
                    "209": "B               loc_55AC",
                    "210": "ADD             X1, X21, #0x5A0",
                    "211": "MOV             W0, #0",
                    "212": "STLRB           W0, [X1]",
                    "213": "LDR             X1, [X19,#0x18]",
                    "214": "MOV             X0, X27",
                    "215": "BL              btrfs_backref_panic.constprop.0"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 18h",
                    "8": "mov     r15, [rsi+1F0h]",
                    "9": "test    qword ptr [rsi+20h], 400h",
                    "10": "jnz     INSTR68",
                    "11": "mov     rbp, rsi",
                    "12": "mov     rbx, [rsi+18h]",
                    "13": "test    rbx, rbx",
                    "14": "jz      INSTR68",
                    "15": "mov     r14, rdi",
                    "16": "lea     rdi, [rbx+3E8h]",
                    "17": "mov     ecx, [rbx+3E8h]",
                    "18": "test    ecx, ecx",
                    "19": "jz      short INSTR27",
                    "20": "lea     edx, [rcx+1]",
                    "21": "mov     eax, ecx",
                    "22": "lock cmpxchg [rdi], edx",
                    "23": "jz      short INSTR28",
                    "24": "mov     ecx, eax",
                    "25": "test    eax, eax",
                    "26": "jnz     short INSTR20",
                    "27": "xor     ecx, ecx",
                    "28": "lea     eax, [rcx+1]",
                    "29": "or      eax, ecx",
                    "30": "js      INSTR138",
                    "31": "mov     rax, [r15+6B8h]",
                    "32": "test    byte ptr [rax+5F1h], 2",
                    "33": "jz      short INSTR39",
                    "34": "cmp     dword ptr [rbx+100h], 0",
                    "35": "jnz     short INSTR39",
                    "36": "lock or byte ptr [rbp+21h], 4",
                    "37": "mov     rdi, rbx",
                    "38": "call    __del_reloc_root",
                    "39": "lea     rbp, [rbx+28h]",
                    "40": "mov     rax, [rbx+8]",
                    "41": "cmp     rax, [rbx]",
                    "42": "jz      INSTR111",
                    "43": "mov     [rsp+48h+var_38], rbp",
                    "44": "mov     rax, [rbx+1F0h]",
                    "45": "mov     [rsp+48h+var_40], rax",
                    "46": "mov     rbp, [rax+6B8h]",
                    "47": "lea     rax, [rbp+598h]",
                    "48": "mov     [rsp+48h+var_48], rax",
                    "49": "lea     r13, [rbp+5A0h]",
                    "50": "mov     rdi, r13",
                    "51": "call    _raw_spin_lock; PIC mode",
                    "52": "mov     r12, [rbp+598h]",
                    "53": "test    r12, r12",
                    "54": "jz      short INSTR70",
                    "55": "mov     rax, [rbx+8]",
                    "56": "mov     rax, [rax]",
                    "57": "xor     ebp, ebp",
                    "58": "jmp     short INSTR63",
                    "59": "add     r12, 10h",
                    "60": "mov     r12, [r12]",
                    "61": "test    r12, r12",
                    "62": "jz      short INSTR76",
                    "63": "cmp     [r12+18h], rax",
                    "64": "ja      short INSTR59",
                    "65": "jnb     short INSTR72",
                    "66": "add     r12, 8",
                    "67": "jmp     short INSTR60",
                    "68": "xor     eax, eax",
                    "69": "jmp     INSTR120",
                    "70": "xor     ebp, ebp",
                    "71": "jmp     short INSTR76",
                    "72": "mov     rdi, r12",
                    "73": "mov     rsi, [rsp+48h+var_48]",
                    "74": "call    rb_erase; PIC mode",
                    "75": "mov     rbp, r12",
                    "76": "mov     byte ptr [r13+0], 0",
                    "77": "test    rbp, rbp",
                    "78": "jz      short INSTR102",
                    "79": "cmp     [rbp+20h], rbx",
                    "80": "jnz     INSTR141",
                    "81": "mov     rdi, r13",
                    "82": "call    _raw_spin_lock; PIC mode",
                    "83": "mov     rax, [rbx]",
                    "84": "mov     rcx, [rax]",
                    "85": "mov     [rbp+18h], rcx",
                    "86": "mov     rsi, [rsp+48h+var_48]",
                    "87": "mov     rdi, [rsi]",
                    "88": "test    rdi, rdi",
                    "89": "jnz     INSTR132",
                    "90": "xor     eax, eax",
                    "91": "mov     rdx, rsi",
                    "92": "mov     [rbp+0], rax",
                    "93": "mov     qword ptr [rbp+8], 0",
                    "94": "mov     qword ptr [rbp+10h], 0",
                    "95": "mov     [rdx], rbp",
                    "96": "mov     rdi, rbp",
                    "97": "call    rb_insert_color; PIC mode",
                    "98": "xor     eax, eax",
                    "99": "mov     byte ptr [r13+0], 0",
                    "100": "test    rax, rax",
                    "101": "jnz     INSTR142",
                    "102": "mov     rsi, [rbx]",
                    "103": "mov     rbp, [rsp+48h+var_38]",
                    "104": "mov     rdi, rbp",
                    "105": "call    btrfs_set_root_node; PIC mode",
                    "106": "mov     rdi, [rbx+8]",
                    "107": "call    free_extent_buffer; PIC mode",
                    "108": "mov     rdi, rbx",
                    "109": "call    btrfs_root_node; PIC mode",
                    "110": "mov     [rbx+8], rax",
                    "111": "mov     rsi, [r15+20h]",
                    "112": "lea     rdx, [rbx+1DFh]",
                    "113": "mov     rdi, r14",
                    "114": "mov     rcx, rbp",
                    "115": "call    btrfs_update_root; PIC mode",
                    "116": "mov     ebp, eax",
                    "117": "mov     rdi, rbx",
                    "118": "call    btrfs_put_root; PIC mode",
                    "119": "mov     eax, ebp",
                    "120": "add     rsp, 18h",
                    "121": "pop     rbx",
                    "122": "pop     r12",
                    "123": "pop     r13",
                    "124": "pop     r14",
                    "125": "pop     r15",
                    "126": "pop     rbp",
                    "127": "retn",
                    "128": "lea     rdx, [rax+10h]",
                    "129": "mov     rdi, [rdx]",
                    "130": "test    rdi, rdi",
                    "131": "jz      INSTR92",
                    "132": "mov     rax, rdi",
                    "133": "cmp     [rdi+18h], rcx",
                    "134": "ja      short INSTR128",
                    "135": "jnb     short INSTR99",
                    "136": "lea     rdx, [rax+8]",
                    "137": "jmp     short INSTR129",
                    "138": "xor     esi, esi",
                    "139": "call    refcount_warn_saturate; PIC mode",
                    "140": "jmp     INSTR31",
                    "141": "ud2",
                    "142": "mov     r9, [rbp+18h]",
                    "143": "mov     rdi, [rsp+48h+var_40]",
                    "144": "mov     rsi, offset aBtrfsBackrefPa; \"btrfs_backref_panic\"",
                    "145": "mov     edx, 16Dh",
                    "146": "mov     ecx, 0FFFFFFEFh",
                    "147": "mov     r8, offset aInconsistencyI; \"Inconsistency in backref cache found at\"...",
                    "148": "call    __btrfs_panic; PIC mode",
                    "149": "ud2"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "sub     rsp, 18h",
                    "8": "mov     rbx, [rsi+1F0h]",
                    "9": "mov     rax, [rsi+20h]",
                    "10": "test    ah, 4",
                    "11": "jnz     INSTR97",
                    "12": "mov     r14, [rsi+18h]",
                    "13": "mov     rbp, rsi",
                    "14": "test    r14, r14",
                    "15": "jz      INSTR97",
                    "16": "mov     edx, [r14+3E8h]",
                    "17": "mov     r12, rdi",
                    "18": "lea     r13, [r14+28h]",
                    "19": "lea     rdi, [r14+3E8h]",
                    "20": "test    edx, edx",
                    "21": "jz      short INSTR28",
                    "22": "lea     ecx, [rdx+1]",
                    "23": "mov     eax, edx",
                    "24": "lock cmpxchg [rdi], ecx",
                    "25": "jnz     INSTR135",
                    "26": "or      edx, ecx",
                    "27": "js      INSTR132",
                    "28": "mov     rax, [rbx+6B8h]",
                    "29": "test    byte ptr [rax+5F1h], 2",
                    "30": "jz      short INSTR34",
                    "31": "mov     eax, [r14+100h]",
                    "32": "test    eax, eax",
                    "33": "jz      INSTR128",
                    "34": "mov     rax, [r14]",
                    "35": "cmp     [r14+8], rax",
                    "36": "jz      INSTR80",
                    "37": "mov     rax, [r14+1F0h]",
                    "38": "mov     r15, [rax+6B8h]",
                    "39": "mov     [rsp+48h+var_38], rax",
                    "40": "lea     r10, [r15+5A0h]",
                    "41": "mov     rdi, r10",
                    "42": "mov     [rsp+48h+var_48], r10",
                    "43": "call    _raw_spin_lock; PIC mode",
                    "44": "mov     rbp, [r15+598h]",
                    "45": "mov     rax, [r14+8]",
                    "46": "mov     r10, [rsp+48h+var_48]",
                    "47": "test    rbp, rbp",
                    "48": "mov     rax, [rax]",
                    "49": "jnz     short INSTR54",
                    "50": "jmp     short INSTR60",
                    "51": "mov     rbp, [rbp+10h]",
                    "52": "test    rbp, rbp",
                    "53": "jz      short INSTR60",
                    "54": "cmp     rax, [rbp+18h]",
                    "55": "jb      short INSTR51",
                    "56": "jbe     INSTR99",
                    "57": "mov     rbp, [rbp+8]",
                    "58": "test    rbp, rbp",
                    "59": "jnz     short INSTR54",
                    "60": "mov     byte ptr [r15+5A0h], 0",
                    "61": "jmp     short INSTR72",
                    "62": "mov     rcx, [rsp+48h+var_40]",
                    "63": "xor     eax, eax",
                    "64": "mov     [rbp+0], rax",
                    "65": "mov     rsi, [rsp+48h+var_40]",
                    "66": "mov     rdi, rbp",
                    "67": "mov     qword ptr [rbp+8], 0",
                    "68": "mov     qword ptr [rbp+10h], 0",
                    "69": "mov     [rcx], rbp",
                    "70": "call    rb_insert_color; PIC mode",
                    "71": "mov     byte ptr [r15+5A0h], 0",
                    "72": "mov     rsi, [r14]",
                    "73": "mov     rdi, r13",
                    "74": "call    btrfs_set_root_node; PIC mode",
                    "75": "mov     rdi, [r14+8]",
                    "76": "call    free_extent_buffer; PIC mode",
                    "77": "mov     rdi, r14",
                    "78": "call    btrfs_root_node; PIC mode",
                    "79": "mov     [r14+8], rax",
                    "80": "mov     rsi, [rbx+20h]",
                    "81": "mov     rdi, r12",
                    "82": "lea     rdx, [r14+1DFh]",
                    "83": "mov     rcx, r13",
                    "84": "call    btrfs_update_root; PIC mode",
                    "85": "mov     rdi, r14",
                    "86": "mov     r12d, eax",
                    "87": "call    btrfs_put_root; PIC mode",
                    "88": "add     rsp, 18h",
                    "89": "mov     eax, r12d",
                    "90": "pop     rbx",
                    "91": "pop     rbp",
                    "92": "pop     r12",
                    "93": "pop     r13",
                    "94": "pop     r14",
                    "95": "pop     r15",
                    "96": "jmp     __x86_return_thunk; PIC mode",
                    "97": "xor     r12d, r12d",
                    "98": "jmp     short INSTR88",
                    "99": "lea     rax, [r15+598h]",
                    "100": "mov     rdi, rbp",
                    "101": "mov     [rsp+48h+var_48], r10",
                    "102": "mov     rsi, rax",
                    "103": "mov     [rsp+48h+var_40], rax",
                    "104": "call    rb_erase; PIC mode",
                    "105": "mov     byte ptr [r15+5A0h], 0",
                    "106": "cmp     r14, [rbp+20h]",
                    "107": "mov     r10, [rsp+48h+var_48]",
                    "108": "jnz     short INSTR137",
                    "109": "mov     rdi, r10",
                    "110": "call    _raw_spin_lock; PIC mode",
                    "111": "mov     rax, [r14]",
                    "112": "mov     rsi, [rax]",
                    "113": "mov     [rbp+18h], rsi",
                    "114": "mov     rax, [r15+598h]",
                    "115": "test    rax, rax",
                    "116": "jnz     short INSTR123",
                    "117": "jmp     INSTR62",
                    "118": "lea     rcx, [rax+10h]",
                    "119": "mov     rdx, [rcx]",
                    "120": "test    rdx, rdx",
                    "121": "jz      INSTR64",
                    "122": "mov     rax, rdx",
                    "123": "cmp     rsi, [rax+18h]",
                    "124": "jb      short INSTR118",
                    "125": "jbe     btrfs_update_reloc_root_cold",
                    "126": "lea     rcx, [rax+8]",
                    "127": "jmp     short INSTR119",
                    "128": "lock or byte ptr [rbp+21h], 4",
                    "129": "mov     rdi, r14",
                    "130": "call    __del_reloc_root",
                    "131": "jmp     INSTR34",
                    "132": "xor     esi, esi",
                    "133": "call    refcount_warn_saturate; PIC mode",
                    "134": "jmp     INSTR28",
                    "135": "mov     edx, eax",
                    "136": "jmp     INSTR20",
                    "137": "ud2"
                }
            },
            {
                "filename": "relocation.btrfs_update_reloc_root.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "xor     r13d, r13d",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "sub     rsp, 10h",
                    "9": "mov     rbx, [rsi+1F0h]",
                    "10": "mov     [rsp+40h+var_38], rdi",
                    "11": "mov     rdi, rsi",
                    "12": "call    have_reloc_root",
                    "13": "test    al, al",
                    "14": "jz      INSTR85",
                    "15": "mov     rbp, [rsi+18h]",
                    "16": "mov     r12, rsi",
                    "17": "lea     rax, [rbp+28h]",
                    "18": "mov     rdi, rbp",
                    "19": "mov     [rsp+40h+var_40], rax",
                    "20": "call    btrfs_grab_root",
                    "21": "mov     rax, [rbx+6B8h]",
                    "22": "test    byte ptr [rax+5F1h], 2",
                    "23": "jz      short INSTR29",
                    "24": "cmp     dword ptr [rbp+100h], 0",
                    "25": "jnz     short INSTR29",
                    "26": "lock or byte ptr [r12+21h], 4",
                    "27": "mov     rdi, rbp",
                    "28": "call    __del_reloc_root",
                    "29": "mov     rax, [rbp+0]",
                    "30": "cmp     [rbp+8], rax",
                    "31": "jz      INSTR77",
                    "32": "mov     r14, [rbp+1F0h]",
                    "33": "mov     r13, [r14+6B8h]",
                    "34": "lea     r12, [r13+5A0h]",
                    "35": "lea     r15, [r13+598h]",
                    "36": "mov     rdi, r12",
                    "37": "call    _raw_spin_lock; PIC mode",
                    "38": "mov     rdx, [rbp+8]",
                    "39": "mov     rdi, [r13+598h]",
                    "40": "mov     rsi, [rdx]",
                    "41": "call    rb_simple_search_isra_0",
                    "42": "mov     r13, rax",
                    "43": "test    rax, rax",
                    "44": "jz      short INSTR48",
                    "45": "mov     rsi, r15",
                    "46": "mov     rdi, rax",
                    "47": "call    rb_erase; PIC mode",
                    "48": "mov     rdi, r12",
                    "49": "call    __raw_write_unlock",
                    "50": "test    r13, r13",
                    "51": "jz      short INSTR69",
                    "52": "cmp     rbp, [r13+20h]",
                    "53": "jz      short INSTR55",
                    "54": "ud2",
                    "55": "call    _raw_spin_lock; PIC mode",
                    "56": "mov     rax, [rbp+0]",
                    "57": "mov     rdi, r15",
                    "58": "mov     rdx, r13",
                    "59": "mov     rsi, [rax]",
                    "60": "mov     [r13+18h], rsi",
                    "61": "call    rb_simple_insert",
                    "62": "mov     rdi, r12",
                    "63": "call    __raw_write_unlock",
                    "64": "test    rax, rax",
                    "65": "jz      short INSTR69",
                    "66": "mov     rsi, [r13+18h]",
                    "67": "mov     rdi, r14",
                    "68": "call    btrfs_backref_panic_constprop_0",
                    "69": "mov     rsi, [rbp+0]",
                    "70": "mov     rdi, [rsp+40h+var_40]",
                    "71": "call    btrfs_set_root_node; PIC mode",
                    "72": "mov     rdi, [rbp+8]",
                    "73": "call    free_extent_buffer; PIC mode",
                    "74": "mov     rdi, rbp",
                    "75": "call    btrfs_root_node; PIC mode",
                    "76": "mov     [rbp+8], rax",
                    "77": "mov     rdi, [rsp+40h+var_38]",
                    "78": "mov     rsi, [rbx+20h]",
                    "79": "lea     rdx, [rbp+1DFh]",
                    "80": "mov     rcx, [rsp+40h+var_40]",
                    "81": "call    btrfs_update_root; PIC mode",
                    "82": "mov     rdi, rbp",
                    "83": "mov     r13d, eax",
                    "84": "call    btrfs_put_root; PIC mode",
                    "85": "add     rsp, 10h",
                    "86": "mov     eax, r13d",
                    "87": "pop     rbx",
                    "88": "pop     rbp",
                    "89": "pop     r12",
                    "90": "pop     r13",
                    "91": "pop     r14",
                    "92": "pop     r15",
                    "93": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    },
    {
        "folder_name": "CVE-2024-49872",
        "files": [
            {
                "filename": "gup.memfd_pin_folios.after.32.o.json",
                "state": "after",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "sub     esp, 0B8h",
                    "7": "mov     [ebp+var_AC], eax",
                    "8": "mov     eax, edx",
                    "9": "mov     edx, ecx",
                    "10": "mov     ebx, edx",
                    "11": "mov     ecx, eax",
                    "12": "mov     esi, [ebp+arg_0]",
                    "13": "mov     [ebp+var_98], edx",
                    "14": "mov     edx, [ebp+arg_8]",
                    "15": "mov     [ebp+var_9C], eax",
                    "16": "mov     edi, [ebp+arg_4]",
                    "17": "mov     [ebp+var_A0], edx",
                    "18": "mov     edx, [ebp+arg_10]",
                    "19": "mov     [ebp+var_A4], edx",
                    "20": "mov     edx, [ebp+var_AC]",
                    "21": "mov     eax, fs:__stack_chk_guard",
                    "22": "mov     [ebp+var_10], eax",
                    "23": "xor     eax, eax",
                    "24": "mov     eax, [ebp+arg_C]",
                    "25": "test    eax, eax",
                    "26": "setz    al",
                    "27": "test    edx, edx",
                    "28": "setz    dl",
                    "29": "or      al, dl",
                    "30": "mov     edx, ebx",
                    "31": "shr     edx, 1Fh",
                    "32": "or      al, dl",
                    "33": "jnz     INSTR291",
                    "34": "cmp     esi, ecx",
                    "35": "mov     eax, edi",
                    "36": "sbb     eax, ebx",
                    "37": "jl      INSTR291",
                    "38": "mov     edx, [ebp+var_AC]",
                    "39": "mov     eax, [edx+94h]",
                    "40": "test    eax, eax",
                    "41": "jz      short INSTR45",
                    "42": "call    shmem_mapping",
                    "43": "test    al, al",
                    "44": "jnz     short INSTR49",
                    "45": "mov     eax, [ebp+var_AC]",
                    "46": "mov     eax, [eax+7Ch]",
                    "47": "test    byte ptr [eax+4], 10h",
                    "48": "jz      INSTR291",
                    "49": "mov     [ebp+arg_0], esi",
                    "50": "mov     eax, [ebp+var_AC]",
                    "51": "mov     [ebp+arg_4], edi",
                    "52": "mov     edx, [eax+78h]",
                    "53": "jmp     short INSTR55",
                    "54": "pause",
                    "55": "mov     eax, [edx+74h]",
                    "56": "test    al, 1",
                    "57": "jnz     short INSTR54",
                    "58": "mov     edi, [edx+34h]",
                    "59": "mov     ebx, [edx+38h]",
                    "60": "mov     ecx, [edx+74h]",
                    "61": "cmp     eax, ecx",
                    "62": "jnz     short INSTR55",
                    "63": "mov     eax, edi",
                    "64": "mov     esi, [ebp+arg_0]",
                    "65": "mov     edi, [ebp+arg_4]",
                    "66": "cmp     esi, eax",
                    "67": "mov     eax, edi",
                    "68": "sbb     eax, ebx",
                    "69": "jge     INSTR291",
                    "70": "mov     ecx, [ebp+var_AC]",
                    "71": "mov     eax, [ecx+7Ch]",
                    "72": "test    byte ptr [eax+4], 10h",
                    "73": "jz      INSTR263",
                    "74": "mov     eax, [ecx+78h]",
                    "75": "mov     eax, [eax+1Ch]",
                    "76": "mov     eax, [eax+1FCh]",
                    "77": "mov     eax, [eax+0Ch]",
                    "78": "mov     [ebp+var_B4], eax",
                    "79": "mov     eax, [eax+1Ch]",
                    "80": "mov     [ebp+var_A8], eax",
                    "81": "lea     ecx, [eax+0Ch]",
                    "82": "mov     eax, fs:const_pcpu_hot",
                    "83": "mov     edx, fs:const_pcpu_hot",
                    "84": "mov     eax, [eax+20h]",
                    "85": "mov     [ebp+var_C0], eax",
                    "86": "or      eax, 10000000h",
                    "87": "mov     [edx+20h], eax",
                    "88": "mov     edx, [ebp+var_98]",
                    "89": "mov     eax, [ebp+var_9C]",
                    "90": "shrd    eax, edx, cl",
                    "91": "sar     edx, cl",
                    "92": "test    cl, 20h",
                    "93": "cmovnz  eax, edx",
                    "94": "mov     [ebp+var_B8], eax",
                    "95": "mov     eax, [ebp+var_9C]",
                    "96": "shrd    esi, edi, cl",
                    "97": "sar     edi, cl",
                    "98": "test    cl, 20h",
                    "99": "cmovnz  esi, edi",
                    "100": "mov     [ebp+var_BC], esi",
                    "101": "xor     esi, esi",
                    "102": "mov     [ebp+var_A8], eax",
                    "103": "mov     eax, [ebp+var_AC]",
                    "104": "mov     edi, [ebp+var_B8]",
                    "105": "mov     eax, [eax+7Ch]",
                    "106": "mov     [ebp+var_94], edi",
                    "107": "test    byte ptr [eax+4], 10h",
                    "108": "jz      INSTR259",
                    "109": "mov     eax, [ebp+var_B4]",
                    "110": "mov     ecx, [eax+1Ch]",
                    "111": "mov     eax, edi",
                    "112": "mov     edi, [ebp+var_BC]",
                    "113": "shl     eax, cl",
                    "114": "mov     [ebp+var_94], eax",
                    "115": "shl     edi, cl",
                    "116": "mov     [ebp+var_B0], edi",
                    "117": "mov     [ebp+var_8E], 0",
                    "118": "xor     edx, edx",
                    "119": "xor     edi, edi",
                    "120": "cmp     [ebp+var_B0], eax",
                    "121": "mov     [ebp+var_90], dx",
                    "122": "jb      INSTR221",
                    "123": "mov     eax, [ebp+var_AC]",
                    "124": "lea     ecx, [ebp+var_90]",
                    "125": "lea     edx, [ebp+var_94]",
                    "126": "mov     eax, [eax+94h]",
                    "127": "mov     [esp], ecx",
                    "128": "mov     ecx, [ebp+var_B0]",
                    "129": "call    filemap_get_folios_contig",
                    "130": "test    esi, esi",
                    "131": "mov     [ebp+var_9C], eax",
                    "132": "jz      short INSTR141",
                    "133": "lea     ebx, [esi+1Ch]",
                    "134": "lock dec dword ptr [esi+1Ch]",
                    "135": "jz      INSTR256",
                    "136": "mov     eax, [ebp+var_B4]",
                    "137": "test    eax, eax",
                    "138": "jz      short INSTR141",
                    "139": "lock dec dword ptr [ebx]",
                    "140": "jz      INSTR270",
                    "141": "mov     ecx, [ebp+var_9C]",
                    "142": "test    ecx, ecx",
                    "143": "jz      INSTR275",
                    "144": "xor     ebx, ebx",
                    "145": "xor     esi, esi",
                    "146": "jmp     INSTR186",
                    "147": "mov     ebx, [ebp+esi*4+var_8C]",
                    "148": "mov     eax, [ebx+4]",
                    "149": "test    al, 1",
                    "150": "jnz     INSTR202",
                    "151": "mov     ecx, 80000h",
                    "152": "mov     edx, 1",
                    "153": "mov     eax, ebx",
                    "154": "call    try_grab_folio",
                    "155": "test    eax, eax",
                    "156": "jnz     INSTR236",
                    "157": "test    edi, edi",
                    "158": "jnz     short INSTR170",
                    "159": "mov     eax, [ebx]",
                    "160": "test    al, 40h",
                    "161": "jz      INSTR234",
                    "162": "movzx   ecx, byte ptr [ebx+20h]",
                    "163": "mov     eax, 1000h",
                    "164": "shl     eax, cl",
                    "165": "dec     eax",
                    "166": "mov     edx, [ebp+var_A8]",
                    "167": "mov     ecx, [ebp+var_A4]",
                    "168": "and     eax, edx",
                    "169": "mov     [ecx], eax",
                    "170": "mov     eax, [ebp+var_A0]",
                    "171": "mov     [eax+edi*4], ebx",
                    "172": "mov     edx, [ebx]",
                    "173": "mov     eax, [ebx+10h]",
                    "174": "test    dl, 40h",
                    "175": "jz      short INSTR206",
                    "176": "movzx   ecx, byte ptr [ebx+20h]",
                    "177": "mov     ebx, 1",
                    "178": "inc     edi",
                    "179": "shl     ebx, cl",
                    "180": "add     ebx, eax",
                    "181": "cmp     [ebp+arg_C], edi",
                    "182": "jz      short INSTR213",
                    "183": "inc     esi",
                    "184": "cmp     [ebp+var_9C], esi",
                    "185": "jz      short INSTR213",
                    "186": "test    ebx, ebx",
                    "187": "mov     eax, [ebp+esi*4+var_8C]",
                    "188": "jz      INSTR147",
                    "189": "mov     edx, [eax]",
                    "190": "and     edx, 40000h",
                    "191": "jz      short INSTR204",
                    "192": "mov     edx, [eax]",
                    "193": "test    dh, 8",
                    "194": "jz      short INSTR204",
                    "195": "call    __folio_swap_cache_index",
                    "196": "cmp     eax, ebx",
                    "197": "jnz     short INSTR183",
                    "198": "mov     ebx, [ebp+esi*4+var_8C]",
                    "199": "mov     eax, [ebx+4]",
                    "200": "test    al, 1",
                    "201": "jz      INSTR151",
                    "202": "lea     ebx, [eax-1]",
                    "203": "jmp     INSTR151",
                    "204": "mov     eax, [eax+10h]",
                    "205": "jmp     short INSTR196",
                    "206": "mov     ebx, 1",
                    "207": "inc     edi",
                    "208": "add     ebx, eax",
                    "209": "cmp     [ebp+arg_C], edi",
                    "210": "jnz     short INSTR183",
                    "211": "lea     esi, [esi+0]",
                    "212": "lea     esi, [esi+0]",
                    "213": "cmp     byte ptr [ebp+var_90], 0",
                    "214": "jnz     INSTR287",
                    "215": "xor     esi, esi",
                    "216": "mov     eax, [ebp+var_B0]",
                    "217": "cmp     [ebp+var_94], eax",
                    "218": "ja      short INSTR221",
                    "219": "cmp     edi, [ebp+arg_C]",
                    "220": "jb      INSTR123",
                    "221": "mov     edx, [ebp+var_A0]",
                    "222": "mov     eax, edi",
                    "223": "call    check_and_migrate_movable_folios",
                    "224": "cmp     eax, 0FFFFFFF5h",
                    "225": "mov     ebx, eax",
                    "226": "jz      INSTR103",
                    "227": "mov     eax, [ebp+var_C0]",
                    "228": "mov     ecx, fs:const_pcpu_hot",
                    "229": "or      eax, 0EFFFFFFFh",
                    "230": "and     [ecx+20h], eax",
                    "231": "test    ebx, ebx",
                    "232": "cmovz   ebx, edi",
                    "233": "jmp     short INSTR246",
                    "234": "mov     eax, 0FFFh",
                    "235": "jmp     INSTR166",
                    "236": "cmp     byte ptr [ebp+var_90], 0",
                    "237": "mov     ebx, 0FFFFFFEAh",
                    "238": "jnz     INSTR267",
                    "239": "mov     eax, [ebp+var_C0]",
                    "240": "mov     edx, edi",
                    "241": "mov     ecx, fs:const_pcpu_hot",
                    "242": "or      eax, 0EFFFFFFFh",
                    "243": "and     [ecx+20h], eax",
                    "244": "mov     eax, [ebp+var_A0]",
                    "245": "call    unpin_folios",
                    "246": "mov     eax, [ebp+var_10]",
                    "247": "sub     eax, fs:__stack_chk_guard",
                    "248": "jnz     INSTR296",
                    "249": "add     esp, 0B8h",
                    "250": "mov     eax, ebx",
                    "251": "pop     ebx",
                    "252": "pop     esi",
                    "253": "pop     edi",
                    "254": "pop     ebp",
                    "255": "retn",
                    "256": "mov     eax, esi",
                    "257": "call    __folio_put",
                    "258": "jmp     INSTR136",
                    "259": "mov     edi, [ebp+var_BC]",
                    "260": "mov     eax, [ebp+var_B8]",
                    "261": "mov     [ebp+var_B0], edi",
                    "262": "jmp     INSTR117",
                    "263": "xor     eax, eax",
                    "264": "mov     ecx, 0Ch",
                    "265": "mov     [ebp+var_B4], eax",
                    "266": "jmp     INSTR82",
                    "267": "lea     eax, [ebp+var_90]",
                    "268": "call    __folio_batch_release",
                    "269": "jmp     INSTR239",
                    "270": "mov     eax, esi",
                    "271": "call    __folio_put",
                    "272": "mov     ecx, [ebp+var_9C]",
                    "273": "test    ecx, ecx",
                    "274": "jnz     INSTR144",
                    "275": "cmp     byte ptr [ebp+var_90], 0",
                    "276": "jnz     short INSTR293",
                    "277": "mov     edx, [ebp+var_94]",
                    "278": "mov     eax, [ebp+var_AC]",
                    "279": "call    memfd_alloc_folio",
                    "280": "cmp     eax, 0FFFFF000h",
                    "281": "mov     esi, eax",
                    "282": "jbe     INSTR216",
                    "283": "cmp     eax, 0FFFFFFEFh",
                    "284": "jz      INSTR215",
                    "285": "mov     ebx, eax",
                    "286": "jmp     INSTR239",
                    "287": "lea     eax, [ebp+var_90]",
                    "288": "xor     esi, esi",
                    "289": "call    __folio_batch_release",
                    "290": "jmp     INSTR216",
                    "291": "mov     ebx, 0FFFFFFEAh",
                    "292": "jmp     INSTR246",
                    "293": "lea     eax, [ebp+var_90]",
                    "294": "call    __folio_batch_release",
                    "295": "jmp     short INSTR277",
                    "296": "call    __stack_chk_fail"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.after.arch64.o.json",
                "state": "after",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_1A0]!",
                    "3": "CMP             W4, #0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x1A0+var_190]",
                    "6": "MOV             X19, X2",
                    "7": "STP             X21, X22, [SP,#0x1A0+var_180]",
                    "8": "MOV             X22, X1",
                    "9": "STP             X23, X24, [SP,#0x1A0+var_170]",
                    "10": "MOV             X24, X0",
                    "11": "CCMP            X24, #0, #4, NE",
                    "12": "MRS             X0, SP_EL0",
                    "13": "CSET            W1, EQ",
                    "14": "LDR             X2, [X0,#0x550]",
                    "15": "STR             X2, [SP,#0x1A0+var_8]",
                    "16": "MOV             X2, #0",
                    "17": "CMP             X22, #0",
                    "18": "CCMP            X22, X19, #0, GE",
                    "19": "CSET            W0, GT",
                    "20": "ORR             W1, W1, W0",
                    "21": "CBNZ            W1, loc_1E24",
                    "22": "STP             X25, X26, [SP,#0x1A0+var_160]",
                    "23": "MOV             W20, W4",
                    "24": "MOV             X21, X3",
                    "25": "STP             X27, X28, [SP,#0x1A0+var_150]",
                    "26": "MOV             X23, X5",
                    "27": "LDR             X0, [X24,#0xD8]",
                    "28": "CBZ             X0, loc_1E10",
                    "29": "BL              shmem_mapping",
                    "30": "TST             W0, #0xFF",
                    "31": "B.EQ            loc_1E10",
                    "32": "LDR             X0, [X24,#0xA8]",
                    "33": "ADD             X0, X0, #0x50 ; 'P'",
                    "34": "LDAR            X0, [X0]",
                    "35": "CMP             X0, X19",
                    "36": "B.LE            loc_1E1C",
                    "37": "LDR             X0, [X24,#0xB0]",
                    "38": "LDR             W0, [X0,#8]",
                    "39": "TBNZ            W0, #4, loc_1C90",
                    "40": "MOV             W27, #0xC",
                    "41": "STR             XZR, [SP,#0x1A0+var_138]",
                    "42": "MRS             X0, SP_EL0",
                    "43": "LDR             W1, [X0,#0x2C]",
                    "44": "ASR             X2, X19, X27",
                    "45": "MOV             X25, #0",
                    "46": "STR             X2, [SP,#0x1A0+var_120]",
                    "47": "ASR             X2, X22, X27",
                    "48": "STR             X2, [SP,#0x1A0+var_130]",
                    "49": "STR             W1, [SP,#0x1A0+var_114]",
                    "50": "ORR             W1, W1, #0x10000000",
                    "51": "STR             W1, [X0,#0x2C]",
                    "52": "LDR             X0, [X24,#0xB0]",
                    "53": "LDR             X1, [SP,#0x1A0+var_130]",
                    "54": "STR             X1, [SP,#0x1A0+var_110]",
                    "55": "LDR             W0, [X0,#8]",
                    "56": "TBZ             W0, #4, loc_1E00",
                    "57": "LDR             X0, [SP,#0x1A0+var_138]",
                    "58": "LDR             W26, [X0,#0x28]",
                    "59": "LSL             X0, X1, X26",
                    "60": "STR             X0, [SP,#0x1A0+var_110]",
                    "61": "LDR             X1, [SP,#0x1A0+var_120]",
                    "62": "LSL             X1, X1, X26",
                    "63": "STR             X1, [SP,#0x1A0+var_140]",
                    "64": "LDR             X1, [SP,#0x1A0+var_140]",
                    "65": "STRH            WZR, [SP,#0x1A0+var_108]",
                    "66": "STRB            WZR, [SP,#0x1A0+var_106]",
                    "67": "CMP             X1, X0",
                    "68": "B.CC            loc_1E64",
                    "69": "MOV             W27, #0",
                    "70": "LDR             X2, [SP,#0x1A0+var_140]",
                    "71": "ADD             X3, SP, #0x1A0+var_108",
                    "72": "LDR             X0, [X24,#0xD8]",
                    "73": "ADD             X1, SP, #0x1A0+var_110",
                    "74": "BL              filemap_get_folios_contig",
                    "75": "MOV             W19, W0",
                    "76": "CBZ             X25, loc_1BB0",
                    "77": "ADD             X28, X25, #0x34 ; '4'",
                    "78": "B               loc_1DD0",
                    "79": "ADD             X0, X25, #0x34 ; '4'",
                    "80": "MOV             W1, #0xFFFFFFFF",
                    "81": "LDADDAL         W1, W0, [X0]",
                    "82": "ADD             W0, W0, W1",
                    "83": "CBZ             W0, loc_1DF4",
                    "84": "LDR             X0, [SP,#0x1A0+var_138]",
                    "85": "CBZ             X0, loc_1BB0",
                    "86": "B               loc_1E2C",
                    "87": "MOV             W0, #0xFFFFFFFF",
                    "88": "LDADDAL         W0, W0, [X28]",
                    "89": "SUB             W0, W0, #1",
                    "90": "CBZ             W0, loc_1CB0",
                    "91": "NOP",
                    "92": "CBZ             W19, loc_1CBC",
                    "93": "SUB             W19, W19, #1",
                    "94": "ADD             X0, SP, #0x1A0+var_100",
                    "95": "ADD             X28, SP, #0x1A0+var_108",
                    "96": "MOV             X1, #0",
                    "97": "ADD             X19, X0, W19,UXTW#3",
                    "98": "MOV             X25, #0x1000",
                    "99": "B               loc_1C54",
                    "100": "LDR             X6, [X0,#8]",
                    "101": "MOV             W2, #0x80000",
                    "102": "MOV             W1, #1",
                    "103": "SUB             X3, X6, #1",
                    "104": "TST             X6, #1",
                    "105": "CSEL            X26, X3, X0, NE",
                    "106": "MOV             X0, X26",
                    "107": "BL              try_grab_folio",
                    "108": "CBNZ            W0, loc_1D64",
                    "109": "CBNZ            W27, loc_1C1C",
                    "110": "LDR             X1, [X26]",
                    "111": "MOV             X0, #0xFFF",
                    "112": "TST             W1, #0x40",
                    "113": "B.EQ            loc_1C14",
                    "114": "LDRB            W0, [X26,#0x40]",
                    "115": "LSL             X0, X25, X0",
                    "116": "SUB             X0, X0, #1",
                    "117": "AND             X0, X22, X0",
                    "118": "STR             X0, [X23]",
                    "119": "STR             X26, [X21,W27,UXTW#3]",
                    "120": "MOV             X1, #1",
                    "121": "LDR             X2, [X26]",
                    "122": "LDR             X0, [X26,#0x20]",
                    "123": "TST             W2, #0x40",
                    "124": "B.EQ            loc_1C38",
                    "125": "LDR             W1, [X26,#0x60]",
                    "126": "ADD             W27, W27, #1",
                    "127": "ADD             X1, X1, X0",
                    "128": "CMP             W20, W27",
                    "129": "B.EQ            loc_1D4C",
                    "130": "ADD             X28, X28, #8",
                    "131": "CMP             X19, X28",
                    "132": "B.EQ            loc_1D4C",
                    "133": "LDR             X0, [X28,#8]",
                    "134": "CBZ             X1, loc_1BD0",
                    "135": "LDR             X2, [X0]",
                    "136": "TST             W2, #0x40000",
                    "137": "B.EQ            loc_1D44",
                    "138": "LDR             X2, [X0]",
                    "139": "TST             W2, #0x800",
                    "140": "B.EQ            loc_1D44",
                    "141": "STR             X1, [SP,#0x1A0+var_128]",
                    "142": "BL              __folio_swap_cache_index",
                    "143": "LDR             X1, [SP,#0x1A0+var_128]",
                    "144": "CMP             X1, X0",
                    "145": "B.NE            loc_1C48",
                    "146": "LDR             X0, [X28,#8]",
                    "147": "B               loc_1BD0",
                    "148": "LDR             X0, [X24,#0xA8]",
                    "149": "LDR             X0, [X0,#0x28]",
                    "150": "LDR             X0, [X0,#0x368]",
                    "151": "LDR             X0, [X0,#0x18]",
                    "152": "STR             X0, [SP,#0x1A0+var_138]",
                    "153": "LDR             W27, [X0,#0x28]",
                    "154": "ADD             W27, W27, #0xC",
                    "155": "B               loc_1AE8",
                    "156": "MOV             X0, X25",
                    "157": "BL              __folio_put",
                    "158": "CBNZ            W19, loc_1BB4",
                    "159": "LDRB            W0, [SP,#0x1A0+var_108]",
                    "160": "CBNZ            W0, loc_1E70",
                    "161": "LDR             X1, [SP,#0x1A0+var_110]",
                    "162": "MOV             X0, X24",
                    "163": "BL              memfd_alloc_folio",
                    "164": "MOV             X25, X0",
                    "165": "CMN             X0, #1,LSL#12",
                    "166": "B.LS            loc_1CEC",
                    "167": "CMN             X0, #0x11",
                    "168": "B.NE            loc_1E5C",
                    "169": "NOP",
                    "170": "MOV             X25, #0",
                    "171": "LDR             X1, [SP,#0x1A0+var_140]",
                    "172": "LDR             X0, [SP,#0x1A0+var_110]",
                    "173": "CMP             X0, X1",
                    "174": "CCMP            W20, W27, #0, LS",
                    "175": "B.HI            loc_1B58",
                    "176": "MOV             W0, W27",
                    "177": "MOV             X1, X21",
                    "178": "BL              check_and_migrate_movable_folios",
                    "179": "CMN             X0, #0xB",
                    "180": "B.EQ            loc_1B10",
                    "181": "MOV             W4, W27",
                    "182": "CMP             X0, #0",
                    "183": "LDR             W2, [SP,#0x1A0+var_114]",
                    "184": "CSEL            X19, X4, X0, EQ",
                    "185": "MRS             X1, SP_EL0",
                    "186": "LDR             W0, [X1,#0x2C]",
                    "187": "ORR             W2, W2, #0xEFFFFFFF",
                    "188": "AND             W0, W0, W2",
                    "189": "STR             W0, [X1,#0x2C]",
                    "190": "LDP             X25, X26, [SP,#0x1A0+var_160]",
                    "191": "LDP             X27, X28, [SP,#0x1A0+var_150]",
                    "192": "B               loc_1D9C",
                    "193": "LDR             X0, [X0,#0x20]",
                    "194": "B               loc_1C80",
                    "195": "LDRB            W0, [SP,#0x1A0+var_108]",
                    "196": "CBZ             W0, loc_1CE8",
                    "197": "ADD             X0, SP, #0x1A0+var_108",
                    "198": "MOV             X25, #0",
                    "199": "BL              __folio_batch_release",
                    "200": "B               loc_1CEC",
                    "201": "LDRB            W0, [SP,#0x1A0+var_108]",
                    "202": "MOV             X19, #0xFFFFFFFFFFFFFFEA",
                    "203": "CBNZ            W0, loc_1E50",
                    "204": "LDR             W0, [SP,#0x1A0+var_114]",
                    "205": "MOV             W1, W27",
                    "206": "MRS             X5, SP_EL0",
                    "207": "LDR             W3, [X5,#0x2C]",
                    "208": "ORR             W2, W0, #0xEFFFFFFF",
                    "209": "MOV             X0, X21",
                    "210": "AND             W2, W3, W2",
                    "211": "STR             W2, [X5,#0x2C]",
                    "212": "BL              unpin_folios",
                    "213": "LDP             X25, X26, [SP,#0x1A0+var_160]",
                    "214": "LDP             X27, X28, [SP,#0x1A0+var_150]",
                    "215": "MRS             X0, SP_EL0",
                    "216": "LDR             X2, [SP,#0x1A0+var_8]",
                    "217": "LDR             X1, [X0,#0x550]",
                    "218": "SUBS            X2, X2, X1",
                    "219": "MOV             X1, #0",
                    "220": "B.NE            loc_1E7C",
                    "221": "MOV             X0, X19",
                    "222": "LDP             X19, X20, [SP,#0x1A0+var_190]",
                    "223": "LDP             X21, X22, [SP,#0x1A0+var_180]",
                    "224": "LDP             X23, X24, [SP,#0x1A0+var_170]",
                    "225": "LDP             X29, X30, [SP+0x1A0+var_1A0],#0x1A0",
                    "226": "AUTIASP",
                    "227": "RET",
                    "228": "ADD             X1, X25, #0x34 ; '4'",
                    "229": "MOV             W2, #1",
                    "230": "PRFM            #0x11, [X1]",
                    "231": "LDXR            W0, [X1]",
                    "232": "SUB             W0, W0, W2",
                    "233": "STLXR           W3, W0, [X1]",
                    "234": "CBNZ            W3, loc_1DDC",
                    "235": "DMB             ISH",
                    "236": "CBNZ            W0, loc_1B90",
                    "237": "MOV             X0, X25",
                    "238": "BL              __folio_put",
                    "239": "B               loc_1B90",
                    "240": "LDR             X1, [SP,#0x1A0+var_120]",
                    "241": "STR             X1, [SP,#0x1A0+var_140]",
                    "242": "LDR             X0, [SP,#0x1A0+var_130]",
                    "243": "B               loc_1B40",
                    "244": "LDR             X0, [X24,#0xB0]",
                    "245": "LDR             W0, [X0,#8]",
                    "246": "TBNZ            W0, #4, loc_1AC0",
                    "247": "LDP             X25, X26, [SP,#0x1A0+var_160]",
                    "248": "LDP             X27, X28, [SP,#0x1A0+var_150]",
                    "249": "MOV             X19, #0xFFFFFFFFFFFFFFEA",
                    "250": "B               loc_1D9C",
                    "251": "MOV             W2, #1",
                    "252": "PRFM            #0x11, [X28]",
                    "253": "LDXR            W0, [X28]",
                    "254": "SUB             W0, W0, W2",
                    "255": "STLXR           W3, W0, [X28]",
                    "256": "CBNZ            W3, loc_1E34",
                    "257": "DMB             ISH",
                    "258": "CBNZ            W0, loc_1BB0",
                    "259": "B               loc_1CB0",
                    "260": "ADD             X0, SP, #0x1A0+var_108",
                    "261": "BL              __folio_batch_release",
                    "262": "B               loc_1D70",
                    "263": "MOV             X19, X0",
                    "264": "B               loc_1D70",
                    "265": "MOV             X0, #0",
                    "266": "MOV             W27, #0",
                    "267": "B               loc_1D04",
                    "268": "ADD             X0, SP, #0x1A0+var_108",
                    "269": "BL              __folio_batch_release",
                    "270": "B               loc_1CC4",
                    "271": "STP             X25, X26, [SP,#0x1A0+var_160]",
                    "272": "STP             X27, X28, [SP,#0x1A0+var_150]",
                    "273": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.after.clang.o.json",
                "state": "after",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 160h",
                    "8": "mov     [rsp+190h+var_148], r9",
                    "9": "mov     [rsp+190h+var_170], rcx",
                    "10": "mov     rax, gs:28h",
                    "11": "mov     [rsp+190h+var_38], rax",
                    "12": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "13": "mov     [rsp+190h+var_178], rsi",
                    "14": "test    rsi, rsi",
                    "15": "js      INSTR235",
                    "16": "mov     r12, rdi",
                    "17": "test    rdi, rdi",
                    "18": "jz      INSTR235",
                    "19": "mov     rbp, rdx",
                    "20": "cmp     [rsp+190h+var_178], rdx",
                    "21": "jg      INSTR235",
                    "22": "mov     r14d, r8d",
                    "23": "test    r8d, r8d",
                    "24": "jz      INSTR235",
                    "25": "mov     rdi, [r12+0D8h]",
                    "26": "test    rdi, rdi",
                    "27": "jz      short INSTR31",
                    "28": "call    shmem_mapping; PIC mode",
                    "29": "test    al, al",
                    "30": "jnz     short INSTR34",
                    "31": "mov     rax, [r12+0B0h]",
                    "32": "test    byte ptr [rax+8], 10h",
                    "33": "jz      INSTR235",
                    "34": "mov     rax, [r12+0A8h]",
                    "35": "mov     rax, [rax+50h]",
                    "36": "cmp     rax, rbp",
                    "37": "jle     INSTR235",
                    "38": "mov     rax, [r12+0B0h]",
                    "39": "test    byte ptr [rax+8], 10h",
                    "40": "jnz     short INSTR45",
                    "41": "mov     ecx, 0Ch",
                    "42": "xor     eax, eax",
                    "43": "mov     [rsp+190h+var_180], rax",
                    "44": "jmp     short INSTR53",
                    "45": "mov     rax, [r12+0A8h]",
                    "46": "mov     rax, [rax+28h]",
                    "47": "mov     rax, [rax+368h]",
                    "48": "mov     rcx, [rax+18h]",
                    "49": "mov     rax, rcx",
                    "50": "mov     [rsp+190h+var_180], rcx",
                    "51": "mov     ecx, [rcx+28h]",
                    "52": "add     ecx, 0Ch",
                    "53": "mov     rdx, gs:pcpu_hot",
                    "54": "mov     eax, [rdx+2Ch]",
                    "55": "mov     [rsp+190h+var_190], eax",
                    "56": "mov     rsi, [rsp+190h+var_178]",
                    "57": "shr     rsi, cl",
                    "58": "mov     [rsp+190h+var_168], rsi",
                    "59": "or      eax, 10000000h",
                    "60": "sar     rbp, cl",
                    "61": "mov     [rsp+190h+var_188], rdx",
                    "62": "mov     [rdx+2Ch], eax",
                    "63": "xor     r15d, r15d",
                    "64": "mov     [rsp+190h+var_160], rbp",
                    "65": "mov     [rsp+190h+var_158], r12",
                    "66": "jmp     short INSTR74",
                    "67": "mov     r13d, ebp",
                    "68": "mov     rdi, r13",
                    "69": "mov     rsi, [rsp+190h+var_170]",
                    "70": "call    check_and_migrate_movable_folios",
                    "71": "cmp     rax, 0FFFFFFFFFFFFFFF5h",
                    "72": "mov     rbp, [rsp+190h+var_160]",
                    "73": "jnz     INSTR247",
                    "74": "mov     rcx, [rsp+190h+var_168]",
                    "75": "mov     [rsp+190h+var_140], rcx",
                    "76": "mov     rax, [r12+0B0h]",
                    "77": "test    byte ptr [rax+8], 10h",
                    "78": "mov     rax, rcx",
                    "79": "mov     rbx, rbp",
                    "80": "jz      short INSTR88",
                    "81": "mov     rax, [rsp+190h+var_180]",
                    "82": "mov     cl, [rax+28h]",
                    "83": "mov     rax, [rsp+190h+var_168]",
                    "84": "shl     rax, cl",
                    "85": "mov     [rsp+190h+var_140], rax",
                    "86": "mov     rbx, rbp",
                    "87": "shl     rbx, cl",
                    "88": "mov     [rsp+190h+var_138], 0",
                    "89": "mov     [rsp+190h+var_136], 0",
                    "90": "xor     ebp, ebp",
                    "91": "cmp     rax, rbx",
                    "92": "ja      short INSTR67",
                    "93": "xor     ebp, ebp",
                    "94": "mov     [rsp+190h+var_150], rbx",
                    "95": "mov     rdi, [r12+0D8h]",
                    "96": "lea     rsi, [rsp+190h+var_140]",
                    "97": "mov     rdx, rbx",
                    "98": "lea     rcx, [rsp+190h+var_138]",
                    "99": "call    filemap_get_folios_contig; PIC mode",
                    "100": "mov     [rsp+190h+var_18C], eax",
                    "101": "test    r15, r15",
                    "102": "jz      short INSTR113",
                    "103": "lock dec dword ptr [r15+34h]",
                    "104": "jnz     short INSTR107",
                    "105": "mov     rdi, r15",
                    "106": "call    __folio_put; PIC mode",
                    "107": "cmp     [rsp+190h+var_180], 0",
                    "108": "jz      short INSTR113",
                    "109": "lock dec dword ptr [r15+34h]",
                    "110": "jnz     short INSTR113",
                    "111": "mov     rdi, r15",
                    "112": "call    __folio_put; PIC mode",
                    "113": "mov     eax, [rsp+190h+var_18C]",
                    "114": "test    eax, eax",
                    "115": "jz      INSTR198",
                    "116": "mov     r15d, eax",
                    "117": "xor     ebx, ebx",
                    "118": "xor     r12d, r12d",
                    "119": "jmp     short INSTR123",
                    "120": "add     rbx, 1",
                    "121": "cmp     r15, rbx",
                    "122": "jz      INSTR198",
                    "123": "test    r12, r12",
                    "124": "jz      short INSTR133",
                    "125": "mov     rdi, [rsp+rbx*8+190h+var_130]",
                    "126": "test    qword ptr [rdi], 40000h",
                    "127": "jz      short INSTR130",
                    "128": "test    qword ptr [rdi], 800h",
                    "129": "jnz     INSTR183",
                    "130": "mov     rax, [rdi+20h]",
                    "131": "cmp     r12, rax",
                    "132": "jnz     short INSTR120",
                    "133": "mov     r13, [rsp+rbx*8+190h+var_130]",
                    "134": "mov     rax, [r13+8]",
                    "135": "test    al, 1",
                    "136": "jnz     INSTR194",
                    "137": "nop     dword ptr [rax+rax+00h]",
                    "138": "cmp     dword ptr [r13+34h], 0",
                    "139": "jle     INSTR222",
                    "140": "mov     rax, r13",
                    "141": "sub     rax, cs:vmemmap_base",
                    "142": "sar     rax, 6",
                    "143": "cmp     cs:zero_pfn, rax",
                    "144": "jz      short INSTR157",
                    "145": "test    qword ptr [r13+0], 40h",
                    "146": "jnz     short INSTR149",
                    "147": "lock add dword ptr [r13+34h], 400h",
                    "148": "jmp     short INSTR151",
                    "149": "lock add dword ptr [r13+34h], 1",
                    "150": "lock add dword ptr [r13+5Ch], 1",
                    "151": "mov     rax, [r13+0]",
                    "152": "shr     rax, 3Ah",
                    "153": "mov     rdi, ds:node_data[rax*8]",
                    "154": "mov     edx, 1",
                    "155": "mov     esi, 23h ; '#'",
                    "156": "call    mod_node_page_state; PIC mode",
                    "157": "test    ebp, ebp",
                    "158": "jnz     short INSTR170",
                    "159": "test    qword ptr [r13+0], 40h",
                    "160": "jnz     short INSTR163",
                    "161": "xor     ecx, ecx",
                    "162": "jmp     short INSTR164",
                    "163": "movzx   ecx, byte ptr [r13+40h]",
                    "164": "mov     eax, 1000h",
                    "165": "shl     rax, cl",
                    "166": "add     rax, 0FFFFFFFFFFFFFFFFh",
                    "167": "and     rax, [rsp+190h+var_178]",
                    "168": "mov     rcx, [rsp+190h+var_148]",
                    "169": "mov     [rcx], rax",
                    "170": "mov     eax, ebp",
                    "171": "mov     rcx, [rsp+190h+var_170]",
                    "172": "mov     [rcx+rax*8], r13",
                    "173": "mov     rax, [r13+20h]",
                    "174": "mov     r12d, 1",
                    "175": "test    qword ptr [r13+0], 40h",
                    "176": "jz      short INSTR178",
                    "177": "mov     r12d, [r13+60h]",
                    "178": "add     ebp, 1",
                    "179": "cmp     ebp, r14d",
                    "180": "jz      short INSTR197",
                    "181": "add     r12, rax",
                    "182": "jmp     INSTR120",
                    "183": "call    __folio_swap_cache_index; PIC mode",
                    "184": "cmp     r12, rax",
                    "185": "jnz     INSTR120",
                    "186": "jmp     INSTR133",
                    "187": "test    r13d, 0FFFh",
                    "188": "jnz     INSTR138",
                    "189": "test    qword ptr [r13+0], 40h",
                    "190": "jz      INSTR138",
                    "191": "mov     rax, [r13+48h]",
                    "192": "test    al, 1",
                    "193": "jz      INSTR138",
                    "194": "add     rax, 0FFFFFFFFFFFFFFFFh",
                    "195": "mov     r13, rax",
                    "196": "jmp     INSTR138",
                    "197": "mov     ebp, r14d",
                    "198": "cmp     byte ptr [rsp+190h+var_138], 0",
                    "199": "mov     r12, [rsp+190h+var_158]",
                    "200": "jz      short INSTR203",
                    "201": "lea     rdi, [rsp+190h+var_138]",
                    "202": "call    __folio_batch_release; PIC mode",
                    "203": "cmp     [rsp+190h+var_18C], 0",
                    "204": "mov     rbx, [rsp+190h+var_150]",
                    "205": "jnz     short INSTR214",
                    "206": "mov     rsi, [rsp+190h+var_140]",
                    "207": "mov     rdi, r12",
                    "208": "call    memfd_alloc_folio; PIC mode",
                    "209": "mov     r15, rax",
                    "210": "cmp     rax, 0FFFFFFFFFFFFF001h",
                    "211": "jb      short INSTR215",
                    "212": "cmp     r15, 0FFFFFFFFFFFFFFEFh",
                    "213": "jnz     short INSTR220",
                    "214": "xor     r15d, r15d",
                    "215": "cmp     [rsp+190h+var_140], rbx",
                    "216": "ja      INSTR67",
                    "217": "cmp     ebp, r14d",
                    "218": "jb      INSTR95",
                    "219": "jmp     INSTR67",
                    "220": "mov     r13, r15",
                    "221": "jmp     short INSTR228",
                    "222": "ud2",
                    "223": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "224": "cmp     byte ptr [rsp+190h+var_138], 0",
                    "225": "jz      short INSTR228",
                    "226": "lea     rdi, [rsp+190h+var_138]",
                    "227": "call    __folio_batch_release; PIC mode",
                    "228": "mov     rax, [rsp+190h+var_188]",
                    "229": "mov     ecx, [rsp+190h+var_190]",
                    "230": "or      ecx, 0EFFFFFFFh",
                    "231": "and     [rax+2Ch], ecx",
                    "232": "mov     esi, ebp",
                    "233": "mov     rdi, [rsp+190h+var_170]",
                    "234": "call    unpin_folios; PIC mode",
                    "235": "mov     rax, gs:28h",
                    "236": "cmp     rax, [rsp+190h+var_38]",
                    "237": "jnz     short INSTR254",
                    "238": "mov     rax, r13",
                    "239": "add     rsp, 160h",
                    "240": "pop     rbx",
                    "241": "pop     r12",
                    "242": "pop     r13",
                    "243": "pop     r14",
                    "244": "pop     r15",
                    "245": "pop     rbp",
                    "246": "retn",
                    "247": "mov     edx, [rsp+190h+var_190]",
                    "248": "or      edx, 0EFFFFFFFh",
                    "249": "mov     rcx, [rsp+190h+var_188]",
                    "250": "and     [rcx+2Ch], edx",
                    "251": "test    rax, rax",
                    "252": "cmovnz  r13, rax",
                    "253": "jmp     short INSTR235",
                    "254": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.after.o.json",
                "state": "after",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rbx, rdx",
                    "8": "sub     rsp, 150h",
                    "9": "mov     [rsp+180h+var_170], rdi",
                    "10": "mov     [rsp+180h+var_180], rsi",
                    "11": "mov     [rsp+180h+var_178], r9",
                    "12": "mov     rax, gs:28h",
                    "13": "mov     [rsp+180h+var_38], rax",
                    "14": "xor     eax, eax",
                    "15": "test    r8d, r8d",
                    "16": "setz    al",
                    "17": "test    rdi, rdi",
                    "18": "setz    dl",
                    "19": "or      eax, edx",
                    "20": "mov     rdx, rsi",
                    "21": "shr     rdx, 3Fh",
                    "22": "or      al, dl",
                    "23": "jnz     INSTR236",
                    "24": "cmp     rsi, rbx",
                    "25": "jg      INSTR236",
                    "26": "mov     rax, [rsp+180h+var_170]",
                    "27": "mov     r12, rcx",
                    "28": "mov     ebp, r8d",
                    "29": "mov     rdi, [rax+0D8h]",
                    "30": "test    rdi, rdi",
                    "31": "jz      INSTR232",
                    "32": "call    shmem_mapping; PIC mode",
                    "33": "test    al, al",
                    "34": "jz      INSTR232",
                    "35": "mov     rsi, [rsp+180h+var_170]",
                    "36": "mov     rax, [rsi+0A8h]",
                    "37": "mov     rax, [rax+50h]",
                    "38": "cmp     rbx, rax",
                    "39": "jge     INSTR236",
                    "40": "mov     rax, [rsi+0B0h]",
                    "41": "test    byte ptr [rax+8], 10h",
                    "42": "jnz     INSTR156",
                    "43": "mov     [rsp+180h+var_160], 0",
                    "44": "mov     ecx, 0Ch",
                    "45": "mov     rax, gs:const_pcpu_hot",
                    "46": "mov     rsi, gs:const_pcpu_hot",
                    "47": "sar     rbx, cl",
                    "48": "mov     [rsp+180h+var_150], rbx",
                    "49": "xor     ebx, ebx",
                    "50": "mov     eax, [rax+2Ch]",
                    "51": "mov     [rsp+180h+var_148], eax",
                    "52": "or      eax, 10000000h",
                    "53": "mov     [rsi+2Ch], eax",
                    "54": "mov     rax, [rsp+180h+var_180]",
                    "55": "sar     rax, cl",
                    "56": "mov     [rsp+180h+var_158], rax",
                    "57": "mov     rax, [rsp+180h+var_170]",
                    "58": "mov     rsi, [rsp+180h+var_158]",
                    "59": "mov     rax, [rax+0B0h]",
                    "60": "mov     [rsp+180h+var_140], rsi",
                    "61": "test    byte ptr [rax+8], 10h",
                    "62": "jz      INSTR228",
                    "63": "mov     rax, [rsp+180h+var_160]",
                    "64": "mov     ecx, [rax+28h]",
                    "65": "mov     rax, rsi",
                    "66": "mov     rsi, [rsp+180h+var_150]",
                    "67": "shl     rax, cl",
                    "68": "shl     rsi, cl",
                    "69": "mov     [rsp+180h+var_140], rax",
                    "70": "mov     [rsp+180h+var_168], rsi",
                    "71": "xor     edx, edx",
                    "72": "mov     [rsp+180h+var_136], 0",
                    "73": "mov     [rsp+180h+var_138], dx",
                    "74": "cmp     [rsp+180h+var_168], rax",
                    "75": "jb      INSTR262",
                    "76": "xor     r15d, r15d",
                    "77": "mov     rax, [rsp+180h+var_170]",
                    "78": "mov     rdx, [rsp+180h+var_168]",
                    "79": "lea     rcx, [rsp+180h+var_138]",
                    "80": "lea     rsi, [rsp+180h+var_140]",
                    "81": "mov     rdi, [rax+0D8h]",
                    "82": "call    filemap_get_folios_contig; PIC mode",
                    "83": "test    rbx, rbx",
                    "84": "jz      short INSTR92",
                    "85": "lea     r13, [rbx+34h]",
                    "86": "lock dec dword ptr [rbx+34h]",
                    "87": "jz      INSTR223",
                    "88": "cmp     [rsp+180h+var_160], 0",
                    "89": "jz      short INSTR92",
                    "90": "lock dec dword ptr [r13+0]",
                    "91": "jz      INSTR241",
                    "92": "test    eax, eax",
                    "93": "jz      INSTR247",
                    "94": "lea     r13, [rsp+180h+var_130]",
                    "95": "sub     eax, 1",
                    "96": "xor     r14d, r14d",
                    "97": "lea     rbx, [rsp+rax*8+180h+var_128]",
                    "98": "mov     rax, r13",
                    "99": "mov     r13d, r15d",
                    "100": "mov     r15, rax",
                    "101": "jmp     INSTR148",
                    "102": "mov     rax, [rdi]",
                    "103": "test    ah, 8",
                    "104": "jz      INSTR154",
                    "105": "call    __folio_swap_cache_index; PIC mode",
                    "106": "cmp     rax, r14",
                    "107": "jnz     INSTR145",
                    "108": "mov     rdi, [r15]",
                    "109": "mov     rax, [rdi+8]",
                    "110": "mov     r14, rdi",
                    "111": "test    al, 1",
                    "112": "jnz     INSTR175",
                    "113": "nop     dword ptr [rax+rax+00h]",
                    "114": "mov     edx, 80000h",
                    "115": "mov     esi, 1",
                    "116": "mov     rdi, r14",
                    "117": "call    try_grab_folio; PIC mode",
                    "118": "test    eax, eax",
                    "119": "jnz     INSTR200",
                    "120": "test    r13d, r13d",
                    "121": "jnz     short INSTR133",
                    "122": "mov     rdx, [r14]",
                    "123": "mov     eax, 0FFFh",
                    "124": "and     edx, 40h",
                    "125": "jz      short INSTR130",
                    "126": "movzx   ecx, byte ptr [r14+40h]",
                    "127": "mov     eax, 1000h",
                    "128": "shl     rax, cl",
                    "129": "sub     rax, 1",
                    "130": "mov     rsi, [rsp+180h+var_178]",
                    "131": "and     rax, [rsp+180h+var_180]",
                    "132": "mov     [rsi], rax",
                    "133": "mov     eax, r13d",
                    "134": "mov     [r12+rax*8], r14",
                    "135": "mov     rcx, [r14]",
                    "136": "mov     eax, 1",
                    "137": "mov     rdx, [r14+20h]",
                    "138": "and     ecx, 40h",
                    "139": "jz      short INSTR141",
                    "140": "mov     eax, [r14+60h]",
                    "141": "add     r13d, 1",
                    "142": "lea     r14, [rax+rdx]",
                    "143": "cmp     ebp, r13d",
                    "144": "jz      INSTR177",
                    "145": "add     r15, 8",
                    "146": "cmp     rbx, r15",
                    "147": "jz      INSTR177",
                    "148": "mov     rdi, [r15]",
                    "149": "test    r14, r14",
                    "150": "jz      INSTR109",
                    "151": "mov     rax, [rdi]",
                    "152": "test    eax, 40000h",
                    "153": "jnz     INSTR102",
                    "154": "mov     rax, [rdi+20h]",
                    "155": "jmp     INSTR106",
                    "156": "mov     rax, [rsi+0A8h]",
                    "157": "mov     rax, [rax+28h]",
                    "158": "mov     rax, [rax+368h]",
                    "159": "mov     rax, [rax+18h]",
                    "160": "mov     [rsp+180h+var_160], rax",
                    "161": "mov     eax, [rax+28h]",
                    "162": "mov     dword ptr [rsp+180h+var_168], eax",
                    "163": "lea     ecx, [rax+0Ch]",
                    "164": "jmp     INSTR45",
                    "165": "test    edi, 0FFFh",
                    "166": "jnz     INSTR114",
                    "167": "mov     rax, [rdi]",
                    "168": "test    al, 40h",
                    "169": "jz      INSTR114",
                    "170": "mov     rax, [rdi+48h]",
                    "171": "lea     r14, [rax-1]",
                    "172": "test    al, 1",
                    "173": "cmovz   r14, rdi",
                    "174": "jmp     INSTR114",
                    "175": "lea     r14, [rax-1]",
                    "176": "jmp     INSTR114",
                    "177": "xor     ebx, ebx",
                    "178": "cmp     byte ptr [rsp+180h+var_138], 0",
                    "179": "mov     r15d, r13d",
                    "180": "jnz     INSTR259",
                    "181": "mov     rax, [rsp+180h+var_168]",
                    "182": "cmp     [rsp+180h+var_140], rax",
                    "183": "ja      short INSTR186",
                    "184": "cmp     r15d, ebp",
                    "185": "jb      INSTR77",
                    "186": "mov     edi, r15d",
                    "187": "mov     rsi, r12",
                    "188": "call    check_and_migrate_movable_folios",
                    "189": "cmp     rax, 0FFFFFFFFFFFFFFF5h",
                    "190": "jz      INSTR57",
                    "191": "mov     r13, rax",
                    "192": "mov     rbx, gs:const_pcpu_hot",
                    "193": "mov     eax, [rsp+180h+var_148]",
                    "194": "mov     r10d, r15d",
                    "195": "or      eax, 0EFFFFFFFh",
                    "196": "and     [rbx+2Ch], eax",
                    "197": "test    r13, r13",
                    "198": "cmovz   r13, r10",
                    "199": "jmp     short INSTR211",
                    "200": "cmp     byte ptr [rsp+180h+var_138], 0",
                    "201": "mov     r15d, r13d",
                    "202": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "203": "jnz     INSTR238",
                    "204": "mov     eax, [rsp+180h+var_148]",
                    "205": "mov     rbx, gs:const_pcpu_hot",
                    "206": "mov     esi, r15d",
                    "207": "mov     rdi, r12",
                    "208": "or      eax, 0EFFFFFFFh",
                    "209": "and     [rbx+2Ch], eax",
                    "210": "call    unpin_folios; PIC mode",
                    "211": "mov     rax, [rsp+180h+var_38]",
                    "212": "sub     rax, gs:28h",
                    "213": "jnz     INSTR270",
                    "214": "add     rsp, 150h",
                    "215": "mov     rax, r13",
                    "216": "pop     rbx",
                    "217": "pop     rbp",
                    "218": "pop     r12",
                    "219": "pop     r13",
                    "220": "pop     r14",
                    "221": "pop     r15",
                    "222": "jmp     __imp___x86_return_thunk; PIC mode",
                    "223": "mov     rdi, rbx",
                    "224": "mov     [rsp+180h+var_144], eax",
                    "225": "call    __folio_put; PIC mode",
                    "226": "mov     eax, [rsp+180h+var_144]",
                    "227": "jmp     INSTR88",
                    "228": "mov     rcx, [rsp+180h+var_150]",
                    "229": "mov     rax, [rsp+180h+var_158]",
                    "230": "mov     [rsp+180h+var_168], rcx",
                    "231": "jmp     INSTR71",
                    "232": "mov     rax, [rsp+180h+var_170]",
                    "233": "mov     rax, [rax+0B0h]",
                    "234": "test    byte ptr [rax+8], 10h",
                    "235": "jnz     INSTR35",
                    "236": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "237": "jmp     short INSTR211",
                    "238": "lea     rdi, [rsp+180h+var_138]",
                    "239": "call    __folio_batch_release; PIC mode",
                    "240": "jmp     INSTR204",
                    "241": "mov     rdi, rbx",
                    "242": "mov     [rsp+180h+var_144], eax",
                    "243": "call    __folio_put; PIC mode",
                    "244": "mov     eax, [rsp+180h+var_144]",
                    "245": "test    eax, eax",
                    "246": "jnz     INSTR94",
                    "247": "cmp     byte ptr [rsp+180h+var_138], 0",
                    "248": "jnz     short INSTR265",
                    "249": "mov     rsi, [rsp+180h+var_140]",
                    "250": "mov     rdi, [rsp+180h+var_170]",
                    "251": "call    memfd_alloc_folio; PIC mode",
                    "252": "mov     rbx, rax",
                    "253": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "254": "jbe     INSTR181",
                    "255": "cmp     rax, 0FFFFFFFFFFFFFFEFh",
                    "256": "jnz     short INSTR268",
                    "257": "xor     ebx, ebx",
                    "258": "jmp     INSTR181",
                    "259": "lea     rdi, [rsp+180h+var_138]",
                    "260": "call    __folio_batch_release; PIC mode",
                    "261": "jmp     INSTR181",
                    "262": "xor     edi, edi",
                    "263": "xor     r15d, r15d",
                    "264": "jmp     INSTR187",
                    "265": "lea     rdi, [rsp+180h+var_138]",
                    "266": "call    __folio_batch_release; PIC mode",
                    "267": "jmp     short INSTR249",
                    "268": "mov     r13, rax",
                    "269": "jmp     INSTR204",
                    "270": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.after.Os.o.json",
                "state": "after",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rbx, rdx",
                    "9": "sub     rsp, 148h",
                    "10": "mov     [rsp+178h+var_178], rsi",
                    "11": "mov     [rsp+178h+var_16C], r8d",
                    "12": "mov     [rsp+178h+var_150], r9",
                    "13": "mov     rax, gs:28h",
                    "14": "mov     [rsp+178h+var_38], rax",
                    "15": "xor     eax, eax",
                    "16": "test    rdi, rdi",
                    "17": "setz    al",
                    "18": "test    r8d, r8d",
                    "19": "setz    dl",
                    "20": "or      eax, edx",
                    "21": "mov     rdx, rsi",
                    "22": "shr     rdx, 3Fh",
                    "23": "or      al, dl",
                    "24": "jnz     short INSTR27",
                    "25": "cmp     rsi, rbx",
                    "26": "jle     short INSTR29",
                    "27": "mov     r15, 0FFFFFFFFFFFFFFEAh",
                    "28": "jmp     INSTR202",
                    "29": "mov     rbp, rdi",
                    "30": "mov     rdi, [rdi+0D8h]",
                    "31": "mov     r13, rcx",
                    "32": "test    rdi, rdi",
                    "33": "jnz     short INSTR38",
                    "34": "mov     rax, [rbp+0B0h]",
                    "35": "test    byte ptr [rax+8], 10h",
                    "36": "jnz     short INSTR41",
                    "37": "jmp     short INSTR27",
                    "38": "call    shmem_mapping; PIC mode",
                    "39": "test    al, al",
                    "40": "jz      short INSTR34",
                    "41": "mov     rax, [rbp+0A8h]",
                    "42": "mov     rax, [rax+50h]",
                    "43": "cmp     rbx, rax",
                    "44": "jge     short INSTR27",
                    "45": "mov     rax, [rbp+0B0h]",
                    "46": "test    byte ptr [rax+8], 10h",
                    "47": "jz      short INSTR55",
                    "48": "mov     rax, [rbp+0A8h]",
                    "49": "mov     rax, [rax+28h]",
                    "50": "mov     rax, [rax+368h]",
                    "51": "mov     r14, [rax+18h]",
                    "52": "mov     eax, [r14+28h]",
                    "53": "lea     ecx, [rax+0Ch]",
                    "54": "jmp     short INSTR57",
                    "55": "xor     r14d, r14d",
                    "56": "mov     ecx, 0Ch",
                    "57": "mov     rdx, gs:const_pcpu_hot",
                    "58": "sar     rbx, cl",
                    "59": "xor     r12d, r12d",
                    "60": "mov     [rsp+178h+var_160], rbx",
                    "61": "mov     eax, [rdx+2Ch]",
                    "62": "mov     esi, eax",
                    "63": "or      eax, 10000000h",
                    "64": "mov     [rdx+2Ch], eax",
                    "65": "mov     rax, [rsp+178h+var_178]",
                    "66": "not     esi",
                    "67": "and     esi, 10000000h",
                    "68": "sar     rax, cl",
                    "69": "mov     [rsp+178h+var_154], esi",
                    "70": "mov     [rsp+178h+var_168], rax",
                    "71": "mov     rax, [rsp+178h+var_168]",
                    "72": "mov     r15, [rsp+178h+var_160]",
                    "73": "mov     [rsp+178h+var_140], rax",
                    "74": "mov     rax, [rbp+0B0h]",
                    "75": "test    byte ptr [rax+8], 10h",
                    "76": "jz      short INSTR82",
                    "77": "mov     ecx, [r14+28h]",
                    "78": "mov     rax, [rsp+178h+var_168]",
                    "79": "shl     rax, cl",
                    "80": "shl     r15, cl",
                    "81": "mov     [rsp+178h+var_140], rax",
                    "82": "mov     [rsp+178h+var_138], 0",
                    "83": "xor     ebx, ebx",
                    "84": "mov     [rsp+178h+var_136], 0",
                    "85": "cmp     [rsp+178h+var_140], r15",
                    "86": "ja      INSTR186",
                    "87": "cmp     ebx, [rsp+178h+var_16C]",
                    "88": "jnb     INSTR186",
                    "89": "mov     rdi, [rbp+0D8h]",
                    "90": "lea     rcx, [rsp+178h+var_138]",
                    "91": "mov     rdx, r15",
                    "92": "lea     rsi, [rsp+178h+var_140]",
                    "93": "call    filemap_get_folios_contig; PIC mode",
                    "94": "mov     [rsp+178h+var_158], eax",
                    "95": "test    r12, r12",
                    "96": "jz      short INSTR103",
                    "97": "mov     rdi, r12",
                    "98": "call    folio_put",
                    "99": "test    r14, r14",
                    "100": "jz      short INSTR103",
                    "101": "mov     rdi, r12",
                    "102": "call    folio_put",
                    "103": "xor     r12d, r12d",
                    "104": "xor     edx, edx",
                    "105": "cmp     [rsp+178h+var_158], r12d",
                    "106": "jbe     INSTR168",
                    "107": "mov     rdi, [rsp+r12*8+178h+var_130]",
                    "108": "test    rdx, rdx",
                    "109": "jnz     short INSTR121",
                    "110": "mov     rdi, [rsp+r12*8+178h+var_130]",
                    "111": "call    _compound_head",
                    "112": "mov     edx, 80000h",
                    "113": "mov     esi, 1",
                    "114": "mov     rdi, rax",
                    "115": "mov     [rsp+178h+var_148], rax",
                    "116": "call    try_grab_folio; PIC mode",
                    "117": "mov     rdi, [rsp+178h+var_148]",
                    "118": "test    eax, eax",
                    "119": "jz      short INSTR141",
                    "120": "jmp     short INSTR135",
                    "121": "mov     rax, [rdi]",
                    "122": "bt      eax, 12h",
                    "123": "jnb     short INSTR131",
                    "124": "mov     rax, [rdi]",
                    "125": "bt      eax, 0Bh",
                    "126": "jnb     short INSTR131",
                    "127": "mov     [rsp+178h+var_148], rdx",
                    "128": "call    __folio_swap_cache_index; PIC mode",
                    "129": "mov     rdx, [rsp+178h+var_148]",
                    "130": "jmp     short INSTR132",
                    "131": "mov     rax, [rdi+20h]",
                    "132": "cmp     rdx, rax",
                    "133": "jz      short INSTR110",
                    "134": "jmp     short INSTR166",
                    "135": "cmp     byte ptr [rsp+178h+var_138], 0",
                    "136": "mov     r15, 0FFFFFFFFFFFFFFEAh",
                    "137": "jz      INSTR197",
                    "138": "lea     rdi, [rsp+178h+var_138]",
                    "139": "call    __folio_batch_release; PIC mode",
                    "140": "jmp     INSTR197",
                    "141": "test    ebx, ebx",
                    "142": "jnz     short INSTR154",
                    "143": "mov     rax, [rdi]",
                    "144": "xor     ecx, ecx",
                    "145": "test    al, 40h",
                    "146": "jz      short INSTR148",
                    "147": "movzx   ecx, byte ptr [rdi+40h]",
                    "148": "mov     eax, 1000h",
                    "149": "shl     rax, cl",
                    "150": "mov     rcx, [rsp+178h+var_150]",
                    "151": "dec     rax",
                    "152": "and     rax, [rsp+178h+var_178]",
                    "153": "mov     [rcx], rax",
                    "154": "mov     eax, ebx",
                    "155": "mov     edx, 1",
                    "156": "mov     [r13+rax*8+0], rdi",
                    "157": "mov     rcx, [rdi]",
                    "158": "mov     rax, [rdi+20h]",
                    "159": "and     cl, 40h",
                    "160": "jz      short INSTR162",
                    "161": "mov     edx, [rdi+60h]",
                    "162": "add     rdx, rax",
                    "163": "inc     ebx",
                    "164": "cmp     [rsp+178h+var_16C], ebx",
                    "165": "jz      short INSTR168",
                    "166": "inc     r12",
                    "167": "jmp     INSTR105",
                    "168": "cmp     byte ptr [rsp+178h+var_138], 0",
                    "169": "jz      short INSTR172",
                    "170": "lea     rdi, [rsp+178h+var_138]",
                    "171": "call    __folio_batch_release; PIC mode",
                    "172": "cmp     [rsp+178h+var_158], 0",
                    "173": "mov     rsi, [rsp+178h+var_140]",
                    "174": "jz      short INSTR177",
                    "175": "xor     r12d, r12d",
                    "176": "jmp     INSTR85",
                    "177": "mov     rdi, rbp",
                    "178": "call    memfd_alloc_folio; PIC mode",
                    "179": "mov     r12, rax",
                    "180": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "181": "jbe     INSTR85",
                    "182": "cmp     rax, 0FFFFFFFFFFFFFFEFh",
                    "183": "jz      short INSTR175",
                    "184": "mov     r15, rax",
                    "185": "jmp     short INSTR197",
                    "186": "mov     rsi, r13",
                    "187": "mov     rdi, rbx",
                    "188": "call    check_and_migrate_movable_folios",
                    "189": "mov     r15, rax",
                    "190": "cmp     rax, 0FFFFFFFFFFFFFFF5h",
                    "191": "jz      INSTR71",
                    "192": "mov     edi, [rsp+178h+var_154]",
                    "193": "call    memalloc_flags_restore",
                    "194": "test    r15, r15",
                    "195": "cmovz   r15, rbx",
                    "196": "jmp     short INSTR202",
                    "197": "mov     edi, [rsp+178h+var_154]",
                    "198": "call    memalloc_flags_restore",
                    "199": "mov     esi, ebx",
                    "200": "mov     rdi, r13",
                    "201": "call    unpin_folios; PIC mode",
                    "202": "mov     rax, [rsp+178h+var_38]",
                    "203": "sub     rax, gs:28h",
                    "204": "jz      short INSTR206",
                    "205": "call    __stack_chk_fail; PIC mode",
                    "206": "add     rsp, 148h",
                    "207": "mov     rax, r15",
                    "208": "pop     rbx",
                    "209": "pop     rbp",
                    "210": "pop     r12",
                    "211": "pop     r13",
                    "212": "pop     r14",
                    "213": "pop     r15",
                    "214": "jmp     __x86_return_thunk; PIC mode"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.before.32.o.json",
                "state": "before",
                "interference": "32",
                "asm": {
                    "1": "push    ebp",
                    "2": "mov     ebp, esp",
                    "3": "push    edi",
                    "4": "push    esi",
                    "5": "push    ebx",
                    "6": "sub     esp, 0B8h",
                    "7": "mov     [ebp+var_AC], eax",
                    "8": "mov     eax, edx",
                    "9": "mov     edx, ecx",
                    "10": "mov     ebx, edx",
                    "11": "mov     ecx, eax",
                    "12": "mov     esi, [ebp+arg_0]",
                    "13": "mov     [ebp+var_98], edx",
                    "14": "mov     edx, [ebp+arg_8]",
                    "15": "mov     [ebp+var_9C], eax",
                    "16": "mov     edi, [ebp+arg_4]",
                    "17": "mov     [ebp+var_A0], edx",
                    "18": "mov     edx, [ebp+arg_10]",
                    "19": "mov     [ebp+var_A4], edx",
                    "20": "mov     edx, [ebp+var_AC]",
                    "21": "mov     eax, fs:__stack_chk_guard",
                    "22": "mov     [ebp+var_10], eax",
                    "23": "xor     eax, eax",
                    "24": "mov     eax, [ebp+arg_C]",
                    "25": "test    eax, eax",
                    "26": "setz    al",
                    "27": "test    edx, edx",
                    "28": "setz    dl",
                    "29": "or      al, dl",
                    "30": "mov     edx, ebx",
                    "31": "shr     edx, 1Fh",
                    "32": "or      al, dl",
                    "33": "jnz     INSTR290",
                    "34": "cmp     esi, ecx",
                    "35": "mov     eax, edi",
                    "36": "sbb     eax, ebx",
                    "37": "jl      INSTR290",
                    "38": "mov     edx, [ebp+var_AC]",
                    "39": "mov     eax, [edx+94h]",
                    "40": "test    eax, eax",
                    "41": "jz      short INSTR45",
                    "42": "call    shmem_mapping",
                    "43": "test    al, al",
                    "44": "jnz     short INSTR49",
                    "45": "mov     eax, [ebp+var_AC]",
                    "46": "mov     eax, [eax+7Ch]",
                    "47": "test    byte ptr [eax+4], 10h",
                    "48": "jz      INSTR290",
                    "49": "mov     [ebp+arg_0], esi",
                    "50": "mov     eax, [ebp+var_AC]",
                    "51": "mov     [ebp+arg_4], edi",
                    "52": "mov     edx, [eax+78h]",
                    "53": "jmp     short INSTR55",
                    "54": "pause",
                    "55": "mov     eax, [edx+74h]",
                    "56": "test    al, 1",
                    "57": "jnz     short INSTR54",
                    "58": "mov     edi, [edx+34h]",
                    "59": "mov     ebx, [edx+38h]",
                    "60": "mov     ecx, [edx+74h]",
                    "61": "cmp     eax, ecx",
                    "62": "jnz     short INSTR55",
                    "63": "mov     eax, edi",
                    "64": "mov     esi, [ebp+arg_0]",
                    "65": "mov     edi, [ebp+arg_4]",
                    "66": "cmp     esi, eax",
                    "67": "mov     eax, edi",
                    "68": "sbb     eax, ebx",
                    "69": "jge     INSTR290",
                    "70": "mov     ecx, [ebp+var_AC]",
                    "71": "mov     eax, [ecx+7Ch]",
                    "72": "test    byte ptr [eax+4], 10h",
                    "73": "jz      INSTR263",
                    "74": "mov     eax, [ecx+78h]",
                    "75": "mov     eax, [eax+1Ch]",
                    "76": "mov     eax, [eax+1FCh]",
                    "77": "mov     eax, [eax+0Ch]",
                    "78": "mov     [ebp+var_B4], eax",
                    "79": "mov     eax, [eax+1Ch]",
                    "80": "mov     [ebp+var_A8], eax",
                    "81": "lea     ecx, [eax+0Ch]",
                    "82": "mov     eax, fs:const_pcpu_hot",
                    "83": "mov     edx, fs:const_pcpu_hot",
                    "84": "mov     eax, [eax+20h]",
                    "85": "mov     [ebp+var_C0], eax",
                    "86": "or      eax, 10000000h",
                    "87": "mov     [edx+20h], eax",
                    "88": "mov     edx, [ebp+var_98]",
                    "89": "mov     eax, [ebp+var_9C]",
                    "90": "shrd    eax, edx, cl",
                    "91": "sar     edx, cl",
                    "92": "test    cl, 20h",
                    "93": "cmovnz  eax, edx",
                    "94": "mov     [ebp+var_B8], eax",
                    "95": "mov     eax, [ebp+var_9C]",
                    "96": "shrd    esi, edi, cl",
                    "97": "sar     edi, cl",
                    "98": "test    cl, 20h",
                    "99": "cmovnz  esi, edi",
                    "100": "mov     [ebp+var_BC], esi",
                    "101": "xor     esi, esi",
                    "102": "mov     [ebp+var_A8], eax",
                    "103": "mov     eax, [ebp+var_AC]",
                    "104": "mov     edi, [ebp+var_B8]",
                    "105": "mov     eax, [eax+7Ch]",
                    "106": "mov     [ebp+var_94], edi",
                    "107": "test    byte ptr [eax+4], 10h",
                    "108": "jz      INSTR259",
                    "109": "mov     eax, [ebp+var_B4]",
                    "110": "mov     ecx, [eax+1Ch]",
                    "111": "mov     eax, edi",
                    "112": "mov     edi, [ebp+var_BC]",
                    "113": "shl     eax, cl",
                    "114": "mov     [ebp+var_94], eax",
                    "115": "shl     edi, cl",
                    "116": "mov     [ebp+var_B0], edi",
                    "117": "mov     [ebp+var_8E], 0",
                    "118": "xor     edx, edx",
                    "119": "xor     edi, edi",
                    "120": "cmp     [ebp+var_B0], eax",
                    "121": "mov     [ebp+var_90], dx",
                    "122": "jb      INSTR221",
                    "123": "mov     eax, [ebp+var_AC]",
                    "124": "lea     ecx, [ebp+var_90]",
                    "125": "lea     edx, [ebp+var_94]",
                    "126": "mov     eax, [eax+94h]",
                    "127": "mov     [esp], ecx",
                    "128": "mov     ecx, [ebp+var_B0]",
                    "129": "call    filemap_get_folios_contig",
                    "130": "test    esi, esi",
                    "131": "mov     [ebp+var_9C], eax",
                    "132": "jz      short INSTR141",
                    "133": "lea     ebx, [esi+1Ch]",
                    "134": "lock dec dword ptr [esi+1Ch]",
                    "135": "jz      INSTR256",
                    "136": "mov     eax, [ebp+var_B4]",
                    "137": "test    eax, eax",
                    "138": "jz      short INSTR141",
                    "139": "lock dec dword ptr [ebx]",
                    "140": "jz      INSTR270",
                    "141": "mov     ecx, [ebp+var_9C]",
                    "142": "test    ecx, ecx",
                    "143": "jz      INSTR275",
                    "144": "xor     ebx, ebx",
                    "145": "xor     esi, esi",
                    "146": "jmp     INSTR186",
                    "147": "mov     ebx, [ebp+esi*4+var_8C]",
                    "148": "mov     eax, [ebx+4]",
                    "149": "test    al, 1",
                    "150": "jnz     INSTR202",
                    "151": "mov     ecx, 80000h",
                    "152": "mov     edx, 1",
                    "153": "mov     eax, ebx",
                    "154": "call    try_grab_folio",
                    "155": "test    eax, eax",
                    "156": "jnz     INSTR236",
                    "157": "test    edi, edi",
                    "158": "jnz     short INSTR170",
                    "159": "mov     eax, [ebx]",
                    "160": "test    al, 40h",
                    "161": "jz      INSTR234",
                    "162": "movzx   ecx, byte ptr [ebx+20h]",
                    "163": "mov     eax, 1000h",
                    "164": "shl     eax, cl",
                    "165": "dec     eax",
                    "166": "mov     edx, [ebp+var_A8]",
                    "167": "mov     ecx, [ebp+var_A4]",
                    "168": "and     eax, edx",
                    "169": "mov     [ecx], eax",
                    "170": "mov     eax, [ebp+var_A0]",
                    "171": "mov     [eax+edi*4], ebx",
                    "172": "mov     edx, [ebx]",
                    "173": "mov     eax, [ebx+10h]",
                    "174": "test    dl, 40h",
                    "175": "jz      short INSTR206",
                    "176": "movzx   ecx, byte ptr [ebx+20h]",
                    "177": "mov     ebx, 1",
                    "178": "inc     edi",
                    "179": "shl     ebx, cl",
                    "180": "add     ebx, eax",
                    "181": "cmp     [ebp+arg_C], edi",
                    "182": "jz      short INSTR213",
                    "183": "inc     esi",
                    "184": "cmp     [ebp+var_9C], esi",
                    "185": "jz      short INSTR213",
                    "186": "test    ebx, ebx",
                    "187": "mov     eax, [ebp+esi*4+var_8C]",
                    "188": "jz      INSTR147",
                    "189": "mov     edx, [eax]",
                    "190": "and     edx, 40000h",
                    "191": "jz      short INSTR204",
                    "192": "mov     edx, [eax]",
                    "193": "test    dh, 8",
                    "194": "jz      short INSTR204",
                    "195": "call    __folio_swap_cache_index",
                    "196": "cmp     eax, ebx",
                    "197": "jnz     short INSTR183",
                    "198": "mov     ebx, [ebp+esi*4+var_8C]",
                    "199": "mov     eax, [ebx+4]",
                    "200": "test    al, 1",
                    "201": "jz      INSTR151",
                    "202": "lea     ebx, [eax-1]",
                    "203": "jmp     INSTR151",
                    "204": "mov     eax, [eax+10h]",
                    "205": "jmp     short INSTR196",
                    "206": "mov     ebx, 1",
                    "207": "inc     edi",
                    "208": "add     ebx, eax",
                    "209": "cmp     [ebp+arg_C], edi",
                    "210": "jnz     short INSTR183",
                    "211": "lea     esi, [esi+0]",
                    "212": "lea     esi, [esi+0]",
                    "213": "cmp     byte ptr [ebp+var_90], 0",
                    "214": "jnz     INSTR287",
                    "215": "xor     esi, esi",
                    "216": "mov     eax, [ebp+var_B0]",
                    "217": "cmp     [ebp+var_94], eax",
                    "218": "ja      short INSTR221",
                    "219": "cmp     edi, [ebp+arg_C]",
                    "220": "jb      INSTR123",
                    "221": "mov     edx, [ebp+var_A0]",
                    "222": "mov     eax, edi",
                    "223": "call    check_and_migrate_movable_folios",
                    "224": "cmp     eax, 0FFFFFFF5h",
                    "225": "mov     ebx, eax",
                    "226": "jz      INSTR103",
                    "227": "mov     eax, [ebp+var_C0]",
                    "228": "mov     ecx, fs:const_pcpu_hot",
                    "229": "or      eax, 0EFFFFFFFh",
                    "230": "and     [ecx+20h], eax",
                    "231": "test    ebx, ebx",
                    "232": "cmovz   ebx, edi",
                    "233": "jmp     short INSTR246",
                    "234": "mov     eax, 0FFFh",
                    "235": "jmp     INSTR166",
                    "236": "cmp     byte ptr [ebp+var_90], 0",
                    "237": "mov     ebx, 0FFFFFFEAh",
                    "238": "jnz     INSTR267",
                    "239": "mov     eax, [ebp+var_C0]",
                    "240": "mov     edx, edi",
                    "241": "mov     ecx, fs:const_pcpu_hot",
                    "242": "or      eax, 0EFFFFFFFh",
                    "243": "and     [ecx+20h], eax",
                    "244": "mov     eax, [ebp+var_A0]",
                    "245": "call    unpin_folios",
                    "246": "mov     eax, [ebp+var_10]",
                    "247": "sub     eax, fs:__stack_chk_guard",
                    "248": "jnz     INSTR295",
                    "249": "add     esp, 0B8h",
                    "250": "mov     eax, ebx",
                    "251": "pop     ebx",
                    "252": "pop     esi",
                    "253": "pop     edi",
                    "254": "pop     ebp",
                    "255": "retn",
                    "256": "mov     eax, esi",
                    "257": "call    __folio_put",
                    "258": "jmp     INSTR136",
                    "259": "mov     edi, [ebp+var_BC]",
                    "260": "mov     eax, [ebp+var_B8]",
                    "261": "mov     [ebp+var_B0], edi",
                    "262": "jmp     INSTR117",
                    "263": "xor     eax, eax",
                    "264": "mov     ecx, 0Ch",
                    "265": "mov     [ebp+var_B4], eax",
                    "266": "jmp     INSTR82",
                    "267": "lea     eax, [ebp+var_90]",
                    "268": "call    __folio_batch_release",
                    "269": "jmp     INSTR239",
                    "270": "mov     eax, esi",
                    "271": "call    __folio_put",
                    "272": "mov     ecx, [ebp+var_9C]",
                    "273": "test    ecx, ecx",
                    "274": "jnz     INSTR144",
                    "275": "cmp     byte ptr [ebp+var_90], 0",
                    "276": "jnz     short INSTR292",
                    "277": "mov     edx, [ebp+var_94]",
                    "278": "mov     eax, [ebp+var_AC]",
                    "279": "call    memfd_alloc_folio",
                    "280": "cmp     eax, 0FFFFF000h",
                    "281": "mov     esi, eax",
                    "282": "jbe     INSTR216",
                    "283": "cmp     eax, 0FFFFFFEFh",
                    "284": "jz      INSTR216",
                    "285": "mov     ebx, eax",
                    "286": "jmp     INSTR239",
                    "287": "lea     eax, [ebp+var_90]",
                    "288": "call    __folio_batch_release",
                    "289": "jmp     INSTR215",
                    "290": "mov     ebx, 0FFFFFFEAh",
                    "291": "jmp     INSTR246",
                    "292": "lea     eax, [ebp+var_90]",
                    "293": "call    __folio_batch_release",
                    "294": "jmp     short INSTR277",
                    "295": "call    __stack_chk_fail"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.before.arch64.o.json",
                "state": "before",
                "interference": "arch64",
                "asm": {
                    "1": "PACIASP",
                    "2": "STP             X29, X30, [SP,#var_1A0]!",
                    "3": "CMP             W4, #0",
                    "4": "MOV             X29, SP",
                    "5": "STP             X19, X20, [SP,#0x1A0+var_190]",
                    "6": "MOV             X19, X2",
                    "7": "STP             X21, X22, [SP,#0x1A0+var_180]",
                    "8": "MOV             X22, X1",
                    "9": "STP             X23, X24, [SP,#0x1A0+var_170]",
                    "10": "MOV             X24, X0",
                    "11": "CCMP            X24, #0, #4, NE",
                    "12": "MRS             X0, SP_EL0",
                    "13": "CSET            W1, EQ",
                    "14": "LDR             X2, [X0,#0x550]",
                    "15": "STR             X2, [SP,#0x1A0+var_8]",
                    "16": "MOV             X2, #0",
                    "17": "CMP             X22, #0",
                    "18": "CCMP            X22, X19, #0, GE",
                    "19": "CSET            W0, GT",
                    "20": "ORR             W1, W1, W0",
                    "21": "CBNZ            W1, loc_1E18",
                    "22": "STP             X25, X26, [SP,#0x1A0+var_160]",
                    "23": "MOV             W20, W4",
                    "24": "MOV             X21, X3",
                    "25": "STP             X27, X28, [SP,#0x1A0+var_150]",
                    "26": "MOV             X23, X5",
                    "27": "LDR             X0, [X24,#0xD8]",
                    "28": "CBZ             X0, loc_1E04",
                    "29": "BL              shmem_mapping",
                    "30": "TST             W0, #0xFF",
                    "31": "B.EQ            loc_1E04",
                    "32": "LDR             X0, [X24,#0xA8]",
                    "33": "ADD             X0, X0, #0x50 ; 'P'",
                    "34": "LDAR            X0, [X0]",
                    "35": "CMP             X0, X19",
                    "36": "B.LE            loc_1E10",
                    "37": "LDR             X0, [X24,#0xB0]",
                    "38": "LDR             W0, [X0,#8]",
                    "39": "TBNZ            W0, #4, loc_1C90",
                    "40": "MOV             W27, #0xC",
                    "41": "STR             XZR, [SP,#0x1A0+var_138]",
                    "42": "MRS             X0, SP_EL0",
                    "43": "LDR             W1, [X0,#0x2C]",
                    "44": "ASR             X2, X19, X27",
                    "45": "MOV             X25, #0",
                    "46": "STR             X2, [SP,#0x1A0+var_120]",
                    "47": "ASR             X2, X22, X27",
                    "48": "STR             X2, [SP,#0x1A0+var_130]",
                    "49": "STR             W1, [SP,#0x1A0+var_114]",
                    "50": "ORR             W1, W1, #0x10000000",
                    "51": "STR             W1, [X0,#0x2C]",
                    "52": "LDR             X0, [X24,#0xB0]",
                    "53": "LDR             X1, [SP,#0x1A0+var_130]",
                    "54": "STR             X1, [SP,#0x1A0+var_110]",
                    "55": "LDR             W0, [X0,#8]",
                    "56": "TBZ             W0, #4, loc_1DF4",
                    "57": "LDR             X0, [SP,#0x1A0+var_138]",
                    "58": "LDR             W26, [X0,#0x28]",
                    "59": "LSL             X0, X1, X26",
                    "60": "STR             X0, [SP,#0x1A0+var_110]",
                    "61": "LDR             X1, [SP,#0x1A0+var_120]",
                    "62": "LSL             X1, X1, X26",
                    "63": "STR             X1, [SP,#0x1A0+var_140]",
                    "64": "LDR             X1, [SP,#0x1A0+var_140]",
                    "65": "STRH            WZR, [SP,#0x1A0+var_108]",
                    "66": "STRB            WZR, [SP,#0x1A0+var_106]",
                    "67": "CMP             X1, X0",
                    "68": "B.CC            loc_1E60",
                    "69": "MOV             W27, #0",
                    "70": "LDR             X2, [SP,#0x1A0+var_140]",
                    "71": "ADD             X3, SP, #0x1A0+var_108",
                    "72": "LDR             X0, [X24,#0xD8]",
                    "73": "ADD             X1, SP, #0x1A0+var_110",
                    "74": "BL              filemap_get_folios_contig",
                    "75": "MOV             W19, W0",
                    "76": "CBZ             X25, loc_1BB0",
                    "77": "ADD             X28, X25, #0x34 ; '4'",
                    "78": "B               loc_1DC4",
                    "79": "ADD             X0, X25, #0x34 ; '4'",
                    "80": "MOV             W1, #0xFFFFFFFF",
                    "81": "LDADDAL         W1, W0, [X0]",
                    "82": "ADD             W0, W0, W1",
                    "83": "CBZ             W0, loc_1DE8",
                    "84": "LDR             X0, [SP,#0x1A0+var_138]",
                    "85": "CBZ             X0, loc_1BB0",
                    "86": "B               loc_1E20",
                    "87": "MOV             W0, #0xFFFFFFFF",
                    "88": "LDADDAL         W0, W0, [X28]",
                    "89": "SUB             W0, W0, #1",
                    "90": "CBZ             W0, loc_1CB0",
                    "91": "NOP",
                    "92": "CBZ             W19, loc_1CBC",
                    "93": "SUB             W19, W19, #1",
                    "94": "ADD             X0, SP, #0x1A0+var_100",
                    "95": "ADD             X28, SP, #0x1A0+var_108",
                    "96": "MOV             X1, #0",
                    "97": "ADD             X19, X0, W19,UXTW#3",
                    "98": "MOV             X25, #0x1000",
                    "99": "B               loc_1C54",
                    "100": "LDR             X6, [X0,#8]",
                    "101": "MOV             W2, #0x80000",
                    "102": "MOV             W1, #1",
                    "103": "SUB             X3, X6, #1",
                    "104": "TST             X6, #1",
                    "105": "CSEL            X26, X3, X0, NE",
                    "106": "MOV             X0, X26",
                    "107": "BL              try_grab_folio",
                    "108": "CBNZ            W0, loc_1D58",
                    "109": "CBNZ            W27, loc_1C1C",
                    "110": "LDR             X1, [X26]",
                    "111": "MOV             X0, #0xFFF",
                    "112": "TST             W1, #0x40",
                    "113": "B.EQ            loc_1C14",
                    "114": "LDRB            W0, [X26,#0x40]",
                    "115": "LSL             X0, X25, X0",
                    "116": "SUB             X0, X0, #1",
                    "117": "AND             X0, X22, X0",
                    "118": "STR             X0, [X23]",
                    "119": "STR             X26, [X21,W27,UXTW#3]",
                    "120": "MOV             X1, #1",
                    "121": "LDR             X2, [X26]",
                    "122": "LDR             X0, [X26,#0x20]",
                    "123": "TST             W2, #0x40",
                    "124": "B.EQ            loc_1C38",
                    "125": "LDR             W1, [X26,#0x60]",
                    "126": "ADD             W27, W27, #1",
                    "127": "ADD             X1, X1, X0",
                    "128": "CMP             W20, W27",
                    "129": "B.EQ            loc_1CF4",
                    "130": "ADD             X28, X28, #8",
                    "131": "CMP             X19, X28",
                    "132": "B.EQ            loc_1CF4",
                    "133": "LDR             X0, [X28,#8]",
                    "134": "CBZ             X1, loc_1BD0",
                    "135": "LDR             X2, [X0]",
                    "136": "TST             W2, #0x40000",
                    "137": "B.EQ            loc_1CEC",
                    "138": "LDR             X2, [X0]",
                    "139": "TST             W2, #0x800",
                    "140": "B.EQ            loc_1CEC",
                    "141": "STR             X1, [SP,#0x1A0+var_128]",
                    "142": "BL              __folio_swap_cache_index",
                    "143": "LDR             X1, [SP,#0x1A0+var_128]",
                    "144": "CMP             X1, X0",
                    "145": "B.NE            loc_1C48",
                    "146": "LDR             X0, [X28,#8]",
                    "147": "B               loc_1BD0",
                    "148": "LDR             X0, [X24,#0xA8]",
                    "149": "LDR             X0, [X0,#0x28]",
                    "150": "LDR             X0, [X0,#0x368]",
                    "151": "LDR             X0, [X0,#0x18]",
                    "152": "STR             X0, [SP,#0x1A0+var_138]",
                    "153": "LDR             W27, [X0,#0x28]",
                    "154": "ADD             W27, W27, #0xC",
                    "155": "B               loc_1AE8",
                    "156": "MOV             X0, X25",
                    "157": "BL              __folio_put",
                    "158": "CBNZ            W19, loc_1BB4",
                    "159": "LDRB            W0, [SP,#0x1A0+var_108]",
                    "160": "CBNZ            W0, loc_1E6C",
                    "161": "LDR             X1, [SP,#0x1A0+var_110]",
                    "162": "MOV             X0, X24",
                    "163": "BL              memfd_alloc_folio",
                    "164": "MOV             X25, X0",
                    "165": "CMN             X0, #1,LSL#12",
                    "166": "B.LS            loc_1D00",
                    "167": "CMN             X0, #0x11",
                    "168": "B.EQ            loc_1D00",
                    "169": "MOV             X19, X0",
                    "170": "B               loc_1D64",
                    "171": "LDR             X0, [X0,#0x20]",
                    "172": "B               loc_1C80",
                    "173": "LDRB            W0, [SP,#0x1A0+var_108]",
                    "174": "MOV             X25, #0",
                    "175": "CBNZ            W0, loc_1E50",
                    "176": "LDR             X1, [SP,#0x1A0+var_140]",
                    "177": "LDR             X0, [SP,#0x1A0+var_110]",
                    "178": "CMP             X0, X1",
                    "179": "CCMP            W20, W27, #0, LS",
                    "180": "B.HI            loc_1B58",
                    "181": "MOV             W0, W27",
                    "182": "MOV             X1, X21",
                    "183": "BL              check_and_migrate_movable_folios",
                    "184": "CMN             X0, #0xB",
                    "185": "B.EQ            loc_1B10",
                    "186": "MOV             W4, W27",
                    "187": "CMP             X0, #0",
                    "188": "LDR             W2, [SP,#0x1A0+var_114]",
                    "189": "CSEL            X19, X4, X0, EQ",
                    "190": "MRS             X1, SP_EL0",
                    "191": "LDR             W0, [X1,#0x2C]",
                    "192": "ORR             W2, W2, #0xEFFFFFFF",
                    "193": "AND             W0, W0, W2",
                    "194": "STR             W0, [X1,#0x2C]",
                    "195": "LDP             X25, X26, [SP,#0x1A0+var_160]",
                    "196": "LDP             X27, X28, [SP,#0x1A0+var_150]",
                    "197": "B               loc_1D90",
                    "198": "LDRB            W0, [SP,#0x1A0+var_108]",
                    "199": "MOV             X19, #0xFFFFFFFFFFFFFFEA",
                    "200": "CBNZ            W0, loc_1E44",
                    "201": "LDR             W0, [SP,#0x1A0+var_114]",
                    "202": "MOV             W1, W27",
                    "203": "MRS             X5, SP_EL0",
                    "204": "LDR             W3, [X5,#0x2C]",
                    "205": "ORR             W2, W0, #0xEFFFFFFF",
                    "206": "MOV             X0, X21",
                    "207": "AND             W2, W3, W2",
                    "208": "STR             W2, [X5,#0x2C]",
                    "209": "BL              unpin_folios",
                    "210": "LDP             X25, X26, [SP,#0x1A0+var_160]",
                    "211": "LDP             X27, X28, [SP,#0x1A0+var_150]",
                    "212": "MRS             X0, SP_EL0",
                    "213": "LDR             X2, [SP,#0x1A0+var_8]",
                    "214": "LDR             X1, [X0,#0x550]",
                    "215": "SUBS            X2, X2, X1",
                    "216": "MOV             X1, #0",
                    "217": "B.NE            loc_1E78",
                    "218": "MOV             X0, X19",
                    "219": "LDP             X19, X20, [SP,#0x1A0+var_190]",
                    "220": "LDP             X21, X22, [SP,#0x1A0+var_180]",
                    "221": "LDP             X23, X24, [SP,#0x1A0+var_170]",
                    "222": "LDP             X29, X30, [SP+0x1A0+var_1A0],#0x1A0",
                    "223": "AUTIASP",
                    "224": "RET",
                    "225": "ADD             X1, X25, #0x34 ; '4'",
                    "226": "MOV             W2, #1",
                    "227": "PRFM            #0x11, [X1]",
                    "228": "LDXR            W0, [X1]",
                    "229": "SUB             W0, W0, W2",
                    "230": "STLXR           W3, W0, [X1]",
                    "231": "CBNZ            W3, loc_1DD0",
                    "232": "DMB             ISH",
                    "233": "CBNZ            W0, loc_1B90",
                    "234": "MOV             X0, X25",
                    "235": "BL              __folio_put",
                    "236": "B               loc_1B90",
                    "237": "LDR             X1, [SP,#0x1A0+var_120]",
                    "238": "STR             X1, [SP,#0x1A0+var_140]",
                    "239": "LDR             X0, [SP,#0x1A0+var_130]",
                    "240": "B               loc_1B40",
                    "241": "LDR             X0, [X24,#0xB0]",
                    "242": "LDR             W0, [X0,#8]",
                    "243": "TBNZ            W0, #4, loc_1AC0",
                    "244": "LDP             X25, X26, [SP,#0x1A0+var_160]",
                    "245": "LDP             X27, X28, [SP,#0x1A0+var_150]",
                    "246": "MOV             X19, #0xFFFFFFFFFFFFFFEA",
                    "247": "B               loc_1D90",
                    "248": "MOV             W2, #1",
                    "249": "PRFM            #0x11, [X28]",
                    "250": "LDXR            W0, [X28]",
                    "251": "SUB             W0, W0, W2",
                    "252": "STLXR           W3, W0, [X28]",
                    "253": "CBNZ            W3, loc_1E28",
                    "254": "DMB             ISH",
                    "255": "CBNZ            W0, loc_1BB0",
                    "256": "B               loc_1CB0",
                    "257": "ADD             X0, SP, #0x1A0+var_108",
                    "258": "BL              __folio_batch_release",
                    "259": "B               loc_1D64",
                    "260": "ADD             X0, SP, #0x1A0+var_108",
                    "261": "MOV             X25, #0",
                    "262": "BL              __folio_batch_release",
                    "263": "B               loc_1D00",
                    "264": "MOV             X0, #0",
                    "265": "MOV             W27, #0",
                    "266": "B               loc_1D18",
                    "267": "ADD             X0, SP, #0x1A0+var_108",
                    "268": "BL              __folio_batch_release",
                    "269": "B               loc_1CC4",
                    "270": "STP             X25, X26, [SP,#0x1A0+var_160]",
                    "271": "STP             X27, X28, [SP,#0x1A0+var_150]",
                    "272": "BL              __stack_chk_fail"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.before.clang.o.json",
                "state": "before",
                "interference": "clang",
                "asm": {
                    "1": "push    rbp",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbx",
                    "7": "sub     rsp, 160h",
                    "8": "mov     [rsp+190h+var_148], r9",
                    "9": "mov     [rsp+190h+var_170], rcx",
                    "10": "mov     rax, gs:28h",
                    "11": "mov     [rsp+190h+var_38], rax",
                    "12": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "13": "mov     [rsp+190h+var_178], rsi",
                    "14": "test    rsi, rsi",
                    "15": "js      INSTR229",
                    "16": "mov     r12, rdi",
                    "17": "test    rdi, rdi",
                    "18": "jz      INSTR229",
                    "19": "mov     rbp, rdx",
                    "20": "cmp     [rsp+190h+var_178], rdx",
                    "21": "jg      INSTR229",
                    "22": "mov     r14d, r8d",
                    "23": "test    r8d, r8d",
                    "24": "jz      INSTR229",
                    "25": "mov     rdi, [r12+0D8h]",
                    "26": "test    rdi, rdi",
                    "27": "jz      short INSTR31",
                    "28": "call    shmem_mapping; PIC mode",
                    "29": "test    al, al",
                    "30": "jnz     short INSTR34",
                    "31": "mov     rax, [r12+0B0h]",
                    "32": "test    byte ptr [rax+8], 10h",
                    "33": "jz      INSTR229",
                    "34": "mov     rax, [r12+0A8h]",
                    "35": "mov     rax, [rax+50h]",
                    "36": "cmp     rax, rbp",
                    "37": "jle     INSTR229",
                    "38": "mov     rax, [r12+0B0h]",
                    "39": "test    byte ptr [rax+8], 10h",
                    "40": "jnz     short INSTR45",
                    "41": "mov     ecx, 0Ch",
                    "42": "xor     eax, eax",
                    "43": "mov     [rsp+190h+var_180], rax",
                    "44": "jmp     short INSTR53",
                    "45": "mov     rax, [r12+0A8h]",
                    "46": "mov     rax, [rax+28h]",
                    "47": "mov     rax, [rax+368h]",
                    "48": "mov     rcx, [rax+18h]",
                    "49": "mov     rax, rcx",
                    "50": "mov     [rsp+190h+var_180], rcx",
                    "51": "mov     ecx, [rcx+28h]",
                    "52": "add     ecx, 0Ch",
                    "53": "mov     rdx, gs:pcpu_hot",
                    "54": "mov     eax, [rdx+2Ch]",
                    "55": "mov     [rsp+190h+var_190], eax",
                    "56": "mov     rsi, [rsp+190h+var_178]",
                    "57": "shr     rsi, cl",
                    "58": "mov     [rsp+190h+var_168], rsi",
                    "59": "or      eax, 10000000h",
                    "60": "sar     rbp, cl",
                    "61": "mov     [rsp+190h+var_188], rdx",
                    "62": "mov     [rdx+2Ch], eax",
                    "63": "xor     r15d, r15d",
                    "64": "mov     [rsp+190h+var_160], rbp",
                    "65": "mov     [rsp+190h+var_158], r12",
                    "66": "jmp     short INSTR74",
                    "67": "mov     r13d, ebp",
                    "68": "mov     rdi, r13",
                    "69": "mov     rsi, [rsp+190h+var_170]",
                    "70": "call    check_and_migrate_movable_folios",
                    "71": "cmp     rax, 0FFFFFFFFFFFFFFF5h",
                    "72": "mov     rbp, [rsp+190h+var_160]",
                    "73": "jnz     INSTR248",
                    "74": "mov     rcx, [rsp+190h+var_168]",
                    "75": "mov     [rsp+190h+var_140], rcx",
                    "76": "mov     rax, [r12+0B0h]",
                    "77": "test    byte ptr [rax+8], 10h",
                    "78": "mov     rax, rcx",
                    "79": "mov     rbx, rbp",
                    "80": "jz      short INSTR88",
                    "81": "mov     rax, [rsp+190h+var_180]",
                    "82": "mov     cl, [rax+28h]",
                    "83": "mov     rax, [rsp+190h+var_168]",
                    "84": "shl     rax, cl",
                    "85": "mov     [rsp+190h+var_140], rax",
                    "86": "mov     rbx, rbp",
                    "87": "shl     rbx, cl",
                    "88": "mov     [rsp+190h+var_138], 0",
                    "89": "mov     [rsp+190h+var_136], 0",
                    "90": "xor     ebp, ebp",
                    "91": "cmp     rax, rbx",
                    "92": "ja      short INSTR67",
                    "93": "xor     ebp, ebp",
                    "94": "mov     [rsp+190h+var_150], rbx",
                    "95": "mov     rdi, [r12+0D8h]",
                    "96": "lea     rsi, [rsp+190h+var_140]",
                    "97": "mov     rdx, rbx",
                    "98": "lea     rcx, [rsp+190h+var_138]",
                    "99": "call    filemap_get_folios_contig; PIC mode",
                    "100": "mov     [rsp+190h+var_18C], eax",
                    "101": "test    r15, r15",
                    "102": "jz      short INSTR113",
                    "103": "lock dec dword ptr [r15+34h]",
                    "104": "jnz     short INSTR107",
                    "105": "mov     rdi, r15",
                    "106": "call    __folio_put; PIC mode",
                    "107": "cmp     [rsp+190h+var_180], 0",
                    "108": "jz      short INSTR113",
                    "109": "lock dec dword ptr [r15+34h]",
                    "110": "jnz     short INSTR113",
                    "111": "mov     rdi, r15",
                    "112": "call    __folio_put; PIC mode",
                    "113": "mov     eax, [rsp+190h+var_18C]",
                    "114": "test    eax, eax",
                    "115": "jz      INSTR198",
                    "116": "mov     r15d, eax",
                    "117": "xor     ebx, ebx",
                    "118": "xor     r12d, r12d",
                    "119": "jmp     short INSTR123",
                    "120": "add     rbx, 1",
                    "121": "cmp     r15, rbx",
                    "122": "jz      INSTR198",
                    "123": "test    r12, r12",
                    "124": "jz      short INSTR133",
                    "125": "mov     rdi, [rsp+rbx*8+190h+var_130]",
                    "126": "test    qword ptr [rdi], 40000h",
                    "127": "jz      short INSTR130",
                    "128": "test    qword ptr [rdi], 800h",
                    "129": "jnz     INSTR183",
                    "130": "mov     rax, [rdi+20h]",
                    "131": "cmp     r12, rax",
                    "132": "jnz     short INSTR120",
                    "133": "mov     r13, [rsp+rbx*8+190h+var_130]",
                    "134": "mov     rax, [r13+8]",
                    "135": "test    al, 1",
                    "136": "jnz     INSTR194",
                    "137": "nop     dword ptr [rax+rax+00h]",
                    "138": "cmp     dword ptr [r13+34h], 0",
                    "139": "jle     INSTR241",
                    "140": "mov     rax, r13",
                    "141": "sub     rax, cs:vmemmap_base",
                    "142": "sar     rax, 6",
                    "143": "cmp     cs:zero_pfn, rax",
                    "144": "jz      short INSTR157",
                    "145": "test    qword ptr [r13+0], 40h",
                    "146": "jnz     short INSTR149",
                    "147": "lock add dword ptr [r13+34h], 400h",
                    "148": "jmp     short INSTR151",
                    "149": "lock add dword ptr [r13+34h], 1",
                    "150": "lock add dword ptr [r13+5Ch], 1",
                    "151": "mov     rax, [r13+0]",
                    "152": "shr     rax, 3Ah",
                    "153": "mov     rdi, ds:node_data[rax*8]",
                    "154": "mov     edx, 1",
                    "155": "mov     esi, 23h ; '#'",
                    "156": "call    mod_node_page_state; PIC mode",
                    "157": "test    ebp, ebp",
                    "158": "jnz     short INSTR170",
                    "159": "test    qword ptr [r13+0], 40h",
                    "160": "jnz     short INSTR163",
                    "161": "xor     ecx, ecx",
                    "162": "jmp     short INSTR164",
                    "163": "movzx   ecx, byte ptr [r13+40h]",
                    "164": "mov     eax, 1000h",
                    "165": "shl     rax, cl",
                    "166": "add     rax, 0FFFFFFFFFFFFFFFFh",
                    "167": "and     rax, [rsp+190h+var_178]",
                    "168": "mov     rcx, [rsp+190h+var_148]",
                    "169": "mov     [rcx], rax",
                    "170": "mov     eax, ebp",
                    "171": "mov     rcx, [rsp+190h+var_170]",
                    "172": "mov     [rcx+rax*8], r13",
                    "173": "mov     rax, [r13+20h]",
                    "174": "mov     r12d, 1",
                    "175": "test    qword ptr [r13+0], 40h",
                    "176": "jz      short INSTR178",
                    "177": "mov     r12d, [r13+60h]",
                    "178": "add     ebp, 1",
                    "179": "cmp     ebp, r14d",
                    "180": "jz      short INSTR197",
                    "181": "add     r12, rax",
                    "182": "jmp     INSTR120",
                    "183": "call    __folio_swap_cache_index; PIC mode",
                    "184": "cmp     r12, rax",
                    "185": "jnz     INSTR120",
                    "186": "jmp     INSTR133",
                    "187": "test    r13d, 0FFFh",
                    "188": "jnz     INSTR138",
                    "189": "test    qword ptr [r13+0], 40h",
                    "190": "jz      INSTR138",
                    "191": "mov     rax, [r13+48h]",
                    "192": "test    al, 1",
                    "193": "jz      INSTR138",
                    "194": "add     rax, 0FFFFFFFFFFFFFFFFh",
                    "195": "mov     r13, rax",
                    "196": "jmp     INSTR138",
                    "197": "mov     ebp, r14d",
                    "198": "cmp     byte ptr [rsp+190h+var_138], 0",
                    "199": "mov     r12, [rsp+190h+var_158]",
                    "200": "jz      short INSTR203",
                    "201": "lea     rdi, [rsp+190h+var_138]",
                    "202": "call    __folio_batch_release; PIC mode",
                    "203": "cmp     [rsp+190h+var_18C], 0",
                    "204": "mov     rbx, [rsp+190h+var_150]",
                    "205": "jz      short INSTR208",
                    "206": "xor     r15d, r15d",
                    "207": "jmp     short INSTR216",
                    "208": "mov     rsi, [rsp+190h+var_140]",
                    "209": "mov     rdi, r12",
                    "210": "call    memfd_alloc_folio; PIC mode",
                    "211": "mov     r15, rax",
                    "212": "cmp     rax, 0FFFFFFFFFFFFF001h",
                    "213": "jb      short INSTR216",
                    "214": "cmp     r15, 0FFFFFFFFFFFFFFEFh",
                    "215": "jnz     short INSTR221",
                    "216": "cmp     [rsp+190h+var_140], rbx",
                    "217": "ja      INSTR67",
                    "218": "cmp     ebp, r14d",
                    "219": "jb      INSTR95",
                    "220": "jmp     INSTR67",
                    "221": "mov     r13, r15",
                    "222": "mov     rax, [rsp+190h+var_188]",
                    "223": "mov     ecx, [rsp+190h+var_190]",
                    "224": "or      ecx, 0EFFFFFFFh",
                    "225": "and     [rax+2Ch], ecx",
                    "226": "mov     esi, ebp",
                    "227": "mov     rdi, [rsp+190h+var_170]",
                    "228": "call    unpin_folios; PIC mode",
                    "229": "mov     rax, gs:28h",
                    "230": "cmp     rax, [rsp+190h+var_38]",
                    "231": "jnz     short INSTR255",
                    "232": "mov     rax, r13",
                    "233": "add     rsp, 160h",
                    "234": "pop     rbx",
                    "235": "pop     r12",
                    "236": "pop     r13",
                    "237": "pop     r14",
                    "238": "pop     r15",
                    "239": "pop     rbp",
                    "240": "retn",
                    "241": "ud2",
                    "242": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "243": "cmp     byte ptr [rsp+190h+var_138], 0",
                    "244": "jz      short INSTR222",
                    "245": "lea     rdi, [rsp+190h+var_138]",
                    "246": "call    __folio_batch_release; PIC mode",
                    "247": "jmp     short INSTR222",
                    "248": "mov     edx, [rsp+190h+var_190]",
                    "249": "or      edx, 0EFFFFFFFh",
                    "250": "mov     rcx, [rsp+190h+var_188]",
                    "251": "and     [rcx+2Ch], edx",
                    "252": "test    rax, rax",
                    "253": "cmovnz  r13, rax",
                    "254": "jmp     short INSTR229",
                    "255": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.before.o.json",
                "state": "before",
                "interference": "none",
                "asm": {
                    "1": "push    r15",
                    "2": "push    r14",
                    "3": "push    r13",
                    "4": "push    r12",
                    "5": "push    rbp",
                    "6": "push    rbx",
                    "7": "mov     rbx, rdx",
                    "8": "sub     rsp, 150h",
                    "9": "mov     [rsp+180h+var_170], rdi",
                    "10": "mov     [rsp+180h+var_180], rsi",
                    "11": "mov     [rsp+180h+var_178], r9",
                    "12": "mov     rax, gs:28h",
                    "13": "mov     [rsp+180h+var_38], rax",
                    "14": "xor     eax, eax",
                    "15": "test    r8d, r8d",
                    "16": "setz    al",
                    "17": "test    rdi, rdi",
                    "18": "setz    dl",
                    "19": "or      eax, edx",
                    "20": "mov     rdx, rsi",
                    "21": "shr     rdx, 3Fh",
                    "22": "or      al, dl",
                    "23": "jnz     INSTR236",
                    "24": "cmp     rsi, rbx",
                    "25": "jg      INSTR236",
                    "26": "mov     rax, [rsp+180h+var_170]",
                    "27": "mov     r12, rcx",
                    "28": "mov     ebp, r8d",
                    "29": "mov     rdi, [rax+0D8h]",
                    "30": "test    rdi, rdi",
                    "31": "jz      INSTR232",
                    "32": "call    shmem_mapping; PIC mode",
                    "33": "test    al, al",
                    "34": "jz      INSTR232",
                    "35": "mov     rsi, [rsp+180h+var_170]",
                    "36": "mov     rax, [rsi+0A8h]",
                    "37": "mov     rax, [rax+50h]",
                    "38": "cmp     rbx, rax",
                    "39": "jge     INSTR236",
                    "40": "mov     rax, [rsi+0B0h]",
                    "41": "test    byte ptr [rax+8], 10h",
                    "42": "jnz     INSTR156",
                    "43": "mov     [rsp+180h+var_160], 0",
                    "44": "mov     ecx, 0Ch",
                    "45": "mov     rax, gs:const_pcpu_hot",
                    "46": "mov     rsi, gs:const_pcpu_hot",
                    "47": "sar     rbx, cl",
                    "48": "mov     [rsp+180h+var_150], rbx",
                    "49": "xor     ebx, ebx",
                    "50": "mov     eax, [rax+2Ch]",
                    "51": "mov     [rsp+180h+var_148], eax",
                    "52": "or      eax, 10000000h",
                    "53": "mov     [rsi+2Ch], eax",
                    "54": "mov     rax, [rsp+180h+var_180]",
                    "55": "sar     rax, cl",
                    "56": "mov     [rsp+180h+var_158], rax",
                    "57": "mov     rax, [rsp+180h+var_170]",
                    "58": "mov     rsi, [rsp+180h+var_158]",
                    "59": "mov     rax, [rax+0B0h]",
                    "60": "mov     [rsp+180h+var_140], rsi",
                    "61": "test    byte ptr [rax+8], 10h",
                    "62": "jz      INSTR228",
                    "63": "mov     rax, [rsp+180h+var_160]",
                    "64": "mov     ecx, [rax+28h]",
                    "65": "mov     rax, rsi",
                    "66": "mov     rsi, [rsp+180h+var_150]",
                    "67": "shl     rax, cl",
                    "68": "shl     rsi, cl",
                    "69": "mov     [rsp+180h+var_140], rax",
                    "70": "mov     [rsp+180h+var_168], rsi",
                    "71": "xor     edx, edx",
                    "72": "mov     [rsp+180h+var_136], 0",
                    "73": "mov     [rsp+180h+var_138], dx",
                    "74": "cmp     [rsp+180h+var_168], rax",
                    "75": "jb      INSTR265",
                    "76": "xor     r15d, r15d",
                    "77": "mov     rax, [rsp+180h+var_170]",
                    "78": "mov     rdx, [rsp+180h+var_168]",
                    "79": "lea     rcx, [rsp+180h+var_138]",
                    "80": "lea     rsi, [rsp+180h+var_140]",
                    "81": "mov     rdi, [rax+0D8h]",
                    "82": "call    filemap_get_folios_contig; PIC mode",
                    "83": "test    rbx, rbx",
                    "84": "jz      short INSTR92",
                    "85": "lea     r13, [rbx+34h]",
                    "86": "lock dec dword ptr [rbx+34h]",
                    "87": "jz      INSTR223",
                    "88": "cmp     [rsp+180h+var_160], 0",
                    "89": "jz      short INSTR92",
                    "90": "lock dec dword ptr [r13+0]",
                    "91": "jz      INSTR241",
                    "92": "test    eax, eax",
                    "93": "jz      INSTR247",
                    "94": "lea     r13, [rsp+180h+var_130]",
                    "95": "sub     eax, 1",
                    "96": "xor     r14d, r14d",
                    "97": "lea     rbx, [rsp+rax*8+180h+var_128]",
                    "98": "mov     rax, r13",
                    "99": "mov     r13d, r15d",
                    "100": "mov     r15, rax",
                    "101": "jmp     INSTR148",
                    "102": "mov     rax, [rdi]",
                    "103": "test    ah, 8",
                    "104": "jz      INSTR154",
                    "105": "call    __folio_swap_cache_index; PIC mode",
                    "106": "cmp     rax, r14",
                    "107": "jnz     INSTR145",
                    "108": "mov     rdi, [r15]",
                    "109": "mov     rax, [rdi+8]",
                    "110": "mov     r14, rdi",
                    "111": "test    al, 1",
                    "112": "jnz     INSTR175",
                    "113": "nop     dword ptr [rax+rax+00h]",
                    "114": "mov     edx, 80000h",
                    "115": "mov     esi, 1",
                    "116": "mov     rdi, r14",
                    "117": "call    try_grab_folio; PIC mode",
                    "118": "test    eax, eax",
                    "119": "jnz     INSTR200",
                    "120": "test    r13d, r13d",
                    "121": "jnz     short INSTR133",
                    "122": "mov     rdx, [r14]",
                    "123": "mov     eax, 0FFFh",
                    "124": "and     edx, 40h",
                    "125": "jz      short INSTR130",
                    "126": "movzx   ecx, byte ptr [r14+40h]",
                    "127": "mov     eax, 1000h",
                    "128": "shl     rax, cl",
                    "129": "sub     rax, 1",
                    "130": "mov     rsi, [rsp+180h+var_178]",
                    "131": "and     rax, [rsp+180h+var_180]",
                    "132": "mov     [rsi], rax",
                    "133": "mov     eax, r13d",
                    "134": "mov     [r12+rax*8], r14",
                    "135": "mov     rcx, [r14]",
                    "136": "mov     eax, 1",
                    "137": "mov     rdx, [r14+20h]",
                    "138": "and     ecx, 40h",
                    "139": "jz      short INSTR141",
                    "140": "mov     eax, [r14+60h]",
                    "141": "add     r13d, 1",
                    "142": "lea     r14, [rax+rdx]",
                    "143": "cmp     ebp, r13d",
                    "144": "jz      INSTR177",
                    "145": "add     r15, 8",
                    "146": "cmp     rbx, r15",
                    "147": "jz      INSTR177",
                    "148": "mov     rdi, [r15]",
                    "149": "test    r14, r14",
                    "150": "jz      INSTR109",
                    "151": "mov     rax, [rdi]",
                    "152": "test    eax, 40000h",
                    "153": "jnz     INSTR102",
                    "154": "mov     rax, [rdi+20h]",
                    "155": "jmp     INSTR106",
                    "156": "mov     rax, [rsi+0A8h]",
                    "157": "mov     rax, [rax+28h]",
                    "158": "mov     rax, [rax+368h]",
                    "159": "mov     rax, [rax+18h]",
                    "160": "mov     [rsp+180h+var_160], rax",
                    "161": "mov     eax, [rax+28h]",
                    "162": "mov     dword ptr [rsp+180h+var_168], eax",
                    "163": "lea     ecx, [rax+0Ch]",
                    "164": "jmp     INSTR45",
                    "165": "test    edi, 0FFFh",
                    "166": "jnz     INSTR114",
                    "167": "mov     rax, [rdi]",
                    "168": "test    al, 40h",
                    "169": "jz      INSTR114",
                    "170": "mov     rax, [rdi+48h]",
                    "171": "lea     r14, [rax-1]",
                    "172": "test    al, 1",
                    "173": "cmovz   r14, rdi",
                    "174": "jmp     INSTR114",
                    "175": "lea     r14, [rax-1]",
                    "176": "jmp     INSTR114",
                    "177": "xor     ebx, ebx",
                    "178": "cmp     byte ptr [rsp+180h+var_138], 0",
                    "179": "mov     r15d, r13d",
                    "180": "jnz     INSTR259",
                    "181": "mov     rax, [rsp+180h+var_168]",
                    "182": "cmp     [rsp+180h+var_140], rax",
                    "183": "ja      short INSTR186",
                    "184": "cmp     r15d, ebp",
                    "185": "jb      INSTR77",
                    "186": "mov     edi, r15d",
                    "187": "mov     rsi, r12",
                    "188": "call    check_and_migrate_movable_folios",
                    "189": "cmp     rax, 0FFFFFFFFFFFFFFF5h",
                    "190": "jz      INSTR57",
                    "191": "mov     r13, rax",
                    "192": "mov     rbx, gs:const_pcpu_hot",
                    "193": "mov     eax, [rsp+180h+var_148]",
                    "194": "mov     r10d, r15d",
                    "195": "or      eax, 0EFFFFFFFh",
                    "196": "and     [rbx+2Ch], eax",
                    "197": "test    r13, r13",
                    "198": "cmovz   r13, r10",
                    "199": "jmp     short INSTR211",
                    "200": "cmp     byte ptr [rsp+180h+var_138], 0",
                    "201": "mov     r15d, r13d",
                    "202": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "203": "jnz     INSTR238",
                    "204": "mov     eax, [rsp+180h+var_148]",
                    "205": "mov     rbx, gs:const_pcpu_hot",
                    "206": "mov     esi, r15d",
                    "207": "mov     rdi, r12",
                    "208": "or      eax, 0EFFFFFFFh",
                    "209": "and     [rbx+2Ch], eax",
                    "210": "call    unpin_folios; PIC mode",
                    "211": "mov     rax, [rsp+180h+var_38]",
                    "212": "sub     rax, gs:28h",
                    "213": "jnz     INSTR268",
                    "214": "add     rsp, 150h",
                    "215": "mov     rax, r13",
                    "216": "pop     rbx",
                    "217": "pop     rbp",
                    "218": "pop     r12",
                    "219": "pop     r13",
                    "220": "pop     r14",
                    "221": "pop     r15",
                    "222": "jmp     __imp___x86_return_thunk; PIC mode",
                    "223": "mov     rdi, rbx",
                    "224": "mov     [rsp+180h+var_144], eax",
                    "225": "call    __folio_put; PIC mode",
                    "226": "mov     eax, [rsp+180h+var_144]",
                    "227": "jmp     INSTR88",
                    "228": "mov     rcx, [rsp+180h+var_150]",
                    "229": "mov     rax, [rsp+180h+var_158]",
                    "230": "mov     [rsp+180h+var_168], rcx",
                    "231": "jmp     INSTR71",
                    "232": "mov     rax, [rsp+180h+var_170]",
                    "233": "mov     rax, [rax+0B0h]",
                    "234": "test    byte ptr [rax+8], 10h",
                    "235": "jnz     INSTR35",
                    "236": "mov     r13, 0FFFFFFFFFFFFFFEAh",
                    "237": "jmp     short INSTR211",
                    "238": "lea     rdi, [rsp+180h+var_138]",
                    "239": "call    __folio_batch_release; PIC mode",
                    "240": "jmp     INSTR204",
                    "241": "mov     rdi, rbx",
                    "242": "mov     [rsp+180h+var_144], eax",
                    "243": "call    __folio_put; PIC mode",
                    "244": "mov     eax, [rsp+180h+var_144]",
                    "245": "test    eax, eax",
                    "246": "jnz     INSTR94",
                    "247": "cmp     byte ptr [rsp+180h+var_138], 0",
                    "248": "jnz     short INSTR262",
                    "249": "mov     rsi, [rsp+180h+var_140]",
                    "250": "mov     rdi, [rsp+180h+var_170]",
                    "251": "call    memfd_alloc_folio; PIC mode",
                    "252": "mov     rbx, rax",
                    "253": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "254": "jbe     INSTR181",
                    "255": "cmp     rax, 0FFFFFFFFFFFFFFEFh",
                    "256": "jz      INSTR181",
                    "257": "mov     r13, rax",
                    "258": "jmp     INSTR204",
                    "259": "lea     rdi, [rsp+180h+var_138]",
                    "260": "call    __folio_batch_release; PIC mode",
                    "261": "jmp     INSTR181",
                    "262": "lea     rdi, [rsp+180h+var_138]",
                    "263": "call    __folio_batch_release; PIC mode",
                    "264": "jmp     short INSTR249",
                    "265": "xor     edi, edi",
                    "266": "xor     r15d, r15d",
                    "267": "jmp     INSTR187",
                    "268": "call    __stack_chk_fail; PIC mode"
                }
            },
            {
                "filename": "gup.memfd_pin_folios.before.Os.o.json",
                "state": "before",
                "interference": "Os",
                "asm": {
                    "1": "endbr64",
                    "2": "push    r15",
                    "3": "push    r14",
                    "4": "push    r13",
                    "5": "push    r12",
                    "6": "push    rbp",
                    "7": "push    rbx",
                    "8": "mov     rbx, rdx",
                    "9": "sub     rsp, 148h",
                    "10": "mov     [rsp+178h+var_178], rsi",
                    "11": "mov     [rsp+178h+var_16C], r8d",
                    "12": "mov     [rsp+178h+var_150], r9",
                    "13": "mov     rax, gs:28h",
                    "14": "mov     [rsp+178h+var_38], rax",
                    "15": "xor     eax, eax",
                    "16": "test    rdi, rdi",
                    "17": "setz    al",
                    "18": "test    r8d, r8d",
                    "19": "setz    dl",
                    "20": "or      eax, edx",
                    "21": "mov     rdx, rsi",
                    "22": "shr     rdx, 3Fh",
                    "23": "or      al, dl",
                    "24": "jnz     short INSTR27",
                    "25": "cmp     rsi, rbx",
                    "26": "jle     short INSTR29",
                    "27": "mov     r15, 0FFFFFFFFFFFFFFEAh",
                    "28": "jmp     INSTR201",
                    "29": "mov     rbp, rdi",
                    "30": "mov     rdi, [rdi+0D8h]",
                    "31": "mov     r13, rcx",
                    "32": "test    rdi, rdi",
                    "33": "jnz     short INSTR38",
                    "34": "mov     rax, [rbp+0B0h]",
                    "35": "test    byte ptr [rax+8], 10h",
                    "36": "jnz     short INSTR41",
                    "37": "jmp     short INSTR27",
                    "38": "call    shmem_mapping; PIC mode",
                    "39": "test    al, al",
                    "40": "jz      short INSTR34",
                    "41": "mov     rax, [rbp+0A8h]",
                    "42": "mov     rax, [rax+50h]",
                    "43": "cmp     rbx, rax",
                    "44": "jge     short INSTR27",
                    "45": "mov     rax, [rbp+0B0h]",
                    "46": "test    byte ptr [rax+8], 10h",
                    "47": "jz      short INSTR55",
                    "48": "mov     rax, [rbp+0A8h]",
                    "49": "mov     rax, [rax+28h]",
                    "50": "mov     rax, [rax+368h]",
                    "51": "mov     r14, [rax+18h]",
                    "52": "mov     eax, [r14+28h]",
                    "53": "lea     ecx, [rax+0Ch]",
                    "54": "jmp     short INSTR57",
                    "55": "xor     r14d, r14d",
                    "56": "mov     ecx, 0Ch",
                    "57": "mov     rdx, gs:const_pcpu_hot",
                    "58": "sar     rbx, cl",
                    "59": "xor     r12d, r12d",
                    "60": "mov     [rsp+178h+var_160], rbx",
                    "61": "mov     eax, [rdx+2Ch]",
                    "62": "mov     esi, eax",
                    "63": "or      eax, 10000000h",
                    "64": "mov     [rdx+2Ch], eax",
                    "65": "mov     rax, [rsp+178h+var_178]",
                    "66": "not     esi",
                    "67": "and     esi, 10000000h",
                    "68": "sar     rax, cl",
                    "69": "mov     [rsp+178h+var_154], esi",
                    "70": "mov     [rsp+178h+var_168], rax",
                    "71": "mov     rax, [rsp+178h+var_168]",
                    "72": "mov     r15, [rsp+178h+var_160]",
                    "73": "mov     [rsp+178h+var_140], rax",
                    "74": "mov     rax, [rbp+0B0h]",
                    "75": "test    byte ptr [rax+8], 10h",
                    "76": "jz      short INSTR82",
                    "77": "mov     ecx, [r14+28h]",
                    "78": "mov     rax, [rsp+178h+var_168]",
                    "79": "shl     rax, cl",
                    "80": "shl     r15, cl",
                    "81": "mov     [rsp+178h+var_140], rax",
                    "82": "mov     [rsp+178h+var_138], 0",
                    "83": "xor     ebx, ebx",
                    "84": "mov     [rsp+178h+var_136], 0",
                    "85": "cmp     [rsp+178h+var_140], r15",
                    "86": "ja      INSTR185",
                    "87": "cmp     ebx, [rsp+178h+var_16C]",
                    "88": "jnb     INSTR185",
                    "89": "mov     rdi, [rbp+0D8h]",
                    "90": "lea     rcx, [rsp+178h+var_138]",
                    "91": "mov     rdx, r15",
                    "92": "lea     rsi, [rsp+178h+var_140]",
                    "93": "call    filemap_get_folios_contig; PIC mode",
                    "94": "mov     [rsp+178h+var_158], eax",
                    "95": "test    r12, r12",
                    "96": "jz      short INSTR103",
                    "97": "mov     rdi, r12",
                    "98": "call    folio_put",
                    "99": "test    r14, r14",
                    "100": "jz      short INSTR103",
                    "101": "mov     rdi, r12",
                    "102": "call    folio_put",
                    "103": "xor     r12d, r12d",
                    "104": "xor     edx, edx",
                    "105": "cmp     [rsp+178h+var_158], r12d",
                    "106": "jbe     INSTR168",
                    "107": "mov     rdi, [rsp+r12*8+178h+var_130]",
                    "108": "test    rdx, rdx",
                    "109": "jnz     short INSTR121",
                    "110": "mov     rdi, [rsp+r12*8+178h+var_130]",
                    "111": "call    _compound_head",
                    "112": "mov     edx, 80000h",
                    "113": "mov     esi, 1",
                    "114": "mov     rdi, rax",
                    "115": "mov     [rsp+178h+var_148], rax",
                    "116": "call    try_grab_folio; PIC mode",
                    "117": "mov     rdi, [rsp+178h+var_148]",
                    "118": "test    eax, eax",
                    "119": "jz      short INSTR141",
                    "120": "jmp     short INSTR135",
                    "121": "mov     rax, [rdi]",
                    "122": "bt      eax, 12h",
                    "123": "jnb     short INSTR131",
                    "124": "mov     rax, [rdi]",
                    "125": "bt      eax, 0Bh",
                    "126": "jnb     short INSTR131",
                    "127": "mov     [rsp+178h+var_148], rdx",
                    "128": "call    __folio_swap_cache_index; PIC mode",
                    "129": "mov     rdx, [rsp+178h+var_148]",
                    "130": "jmp     short INSTR132",
                    "131": "mov     rax, [rdi+20h]",
                    "132": "cmp     rdx, rax",
                    "133": "jz      short INSTR110",
                    "134": "jmp     short INSTR166",
                    "135": "cmp     byte ptr [rsp+178h+var_138], 0",
                    "136": "mov     r15, 0FFFFFFFFFFFFFFEAh",
                    "137": "jz      INSTR196",
                    "138": "lea     rdi, [rsp+178h+var_138]",
                    "139": "call    __folio_batch_release; PIC mode",
                    "140": "jmp     INSTR196",
                    "141": "test    ebx, ebx",
                    "142": "jnz     short INSTR154",
                    "143": "mov     rax, [rdi]",
                    "144": "xor     ecx, ecx",
                    "145": "test    al, 40h",
                    "146": "jz      short INSTR148",
                    "147": "movzx   ecx, byte ptr [rdi+40h]",
                    "148": "mov     eax, 1000h",
                    "149": "shl     rax, cl",
                    "150": "mov     rcx, [rsp+178h+var_150]",
                    "151": "dec     rax",
                    "152": "and     rax, [rsp+178h+var_178]",
                    "153": "mov     [rcx], rax",
                    "154": "mov     eax, ebx",
                    "155": "mov     edx, 1",
                    "156": "mov     [r13+rax*8+0], rdi",
                    "157": "mov     rcx, [rdi]",
                    "158": "mov     rax, [rdi+20h]",
                    "159": "and     cl, 40h",
                    "160": "jz      short INSTR162",
                    "161": "mov     edx, [rdi+60h]",
                    "162": "add     rdx, rax",
                    "163": "inc     ebx",
                    "164": "cmp     [rsp+178h+var_16C], ebx",
                    "165": "jz      short INSTR168",
                    "166": "inc     r12",
                    "167": "jmp     INSTR105",
                    "168": "cmp     byte ptr [rsp+178h+var_138], 0",
                    "169": "jz      short INSTR172",
                    "170": "lea     rdi, [rsp+178h+var_138]",
                    "171": "call    __folio_batch_release; PIC mode",
                    "172": "xor     r12d, r12d",
                    "173": "cmp     [rsp+178h+var_158], 0",
                    "174": "mov     rsi, [rsp+178h+var_140]",
                    "175": "jnz     INSTR85",
                    "176": "mov     rdi, rbp",
                    "177": "call    memfd_alloc_folio; PIC mode",
                    "178": "mov     r12, rax",
                    "179": "cmp     rax, 0FFFFFFFFFFFFF000h",
                    "180": "jbe     INSTR85",
                    "181": "cmp     rax, 0FFFFFFFFFFFFFFEFh",
                    "182": "jz      INSTR85",
                    "183": "mov     r15, rax",
                    "184": "jmp     short INSTR196",
                    "185": "mov     rsi, r13",
                    "186": "mov     rdi, rbx",
                    "187": "call    check_and_migrate_movable_folios",
                    "188": "mov     r15, rax",
                    "189": "cmp     rax, 0FFFFFFFFFFFFFFF5h",
                    "190": "jz      INSTR71",
                    "191": "mov     edi, [rsp+178h+var_154]",
                    "192": "call    memalloc_flags_restore",
                    "193": "test    r15, r15",
                    "194": "cmovz   r15, rbx",
                    "195": "jmp     short INSTR201",
                    "196": "mov     edi, [rsp+178h+var_154]",
                    "197": "call    memalloc_flags_restore",
                    "198": "mov     esi, ebx",
                    "199": "mov     rdi, r13",
                    "200": "call    unpin_folios; PIC mode",
                    "201": "mov     rax, [rsp+178h+var_38]",
                    "202": "sub     rax, gs:28h",
                    "203": "jz      short INSTR205",
                    "204": "call    __stack_chk_fail; PIC mode",
                    "205": "add     rsp, 148h",
                    "206": "mov     rax, r15",
                    "207": "pop     rbx",
                    "208": "pop     rbp",
                    "209": "pop     r12",
                    "210": "pop     r13",
                    "211": "pop     r14",
                    "212": "pop     r15",
                    "213": "jmp     __x86_return_thunk; PIC mode"
                }
            }
        ]
    }
]